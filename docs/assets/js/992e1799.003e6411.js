"use strict";(self.webpackChunk_buidlerlabs_hedera_strato_js=self.webpackChunk_buidlerlabs_hedera_strato_js||[]).push([[900],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=i,y=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(y,o(o({ref:t},u),{},{components:n})):r.createElement(y,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2417:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>c,contentTitle:()=>s,metadata:()=>l,toc:()=>u,default:()=>d});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o=["components"],c={id:"account",title:"Account"},s=void 0,l={unversionedId:"markdown/guides/entities/account",id:"markdown/guides/entities/account",title:"Account",description:"Creating an account",source:"@site/markdown/guides/entities/account.md",sourceDirName:"markdown/guides/entities",slug:"/markdown/guides/entities/account",permalink:"/markdown/guides/entities/account",editUrl:"https://github.com/buidler-labs/hedera-strato-js/edit/main/markdown/guides/entities/account.md",tags:[],version:"current",lastUpdatedBy:"Victor ADASCALITEI",lastUpdatedAt:1645465246,formattedLastUpdatedAt:"2/21/2022",frontMatter:{id:"account",title:"Account"},sidebar:"docs",previous:{title:"The Session",permalink:"/markdown/guides/session"},next:{title:"Contract",permalink:"/markdown/guides/entities/contract"}},u=[{value:"Creating an account",id:"creating-an-account",children:[{value:"Using it",id:"using-it",children:[],level:3}],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"creating-an-account"},"Creating an account"),(0,a.kt)("p",null,"If you want to create such entities, it's as simple as:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"live=true containerKey=creating_an_account",live:"true",containerKey:"creating_an_account"},"const { session } = await ApiSession.default();\nconst liveAccount = await session.create(new Account());\n\nconsole.log(liveAccount.id.toString());\n")),(0,a.kt)("p",null,"If you want more control over the resulting account, you can give it some constructor args such as:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export type AccountFeatures = {\n  keyType?: KeyType;\n  key?: Key;\n  initialBalance?: string | number | Long.Long | BigNumber | Hbar;\n  receiverSignatureRequired?: boolean;\n  proxyAccountId?: AccountId;\n  autoRenewPeriod?: number | Long.Long | Duration;\n  accountMemo?: string;\n  maxAutomaticTokenAssociations?: number | Long.Long;\n}\n")),(0,a.kt)("p",null,"Be default, if you don't specify it a ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," / ",(0,a.kt)("inlineCode",{parentName:"p"},"keyType"),", it defaults to generating a private ",(0,a.kt)("inlineCode",{parentName:"p"},"ED25519")," PrivateKey. Here is how you would create an ",(0,a.kt)("inlineCode",{parentName:"p"},"ECDSA")," one:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"live=true containerKey=key_or_keyType",live:"true",containerKey:"key_or_keyType"},"const { session } = await ApiSession.default();\nconst liveAccount = await session.create(new Account({ keyType: KeyType.ECDSA }));\n\nconsole.log(liveAccount.id.toString());\n")),(0,a.kt)("h3",{id:"using-it"},"Using it"),(0,a.kt)("p",null,"Upon success, the returned ",(0,a.kt)("inlineCode",{parentName:"p"},"liveAccount")," will be an instance of ",(0,a.kt)("inlineCode",{parentName:"p"},"LiveAccountWithPrivateKey")," which is a special type of ",(0,a.kt)("inlineCode",{parentName:"p"},"LiveAccount")," that also allows for manual transaction signing via the ",(0,a.kt)("inlineCode",{parentName:"p"},"tryToSign"),". This is helpful, for instance, in multi-sign scenarios."),(0,a.kt)("p",null,"Since it's a ",(0,a.kt)("inlineCode",{parentName:"p"},"LiveEntity")," type (which implements the ",(0,a.kt)("inlineCode",{parentName:"p"},"SolidityAddressable")," interface) , it can also be passed as arguments to ",(0,a.kt)("inlineCode",{parentName:"p"},"LiveContract")," methods where ",(0,a.kt)("inlineCode",{parentName:"p"},"address"),"es are required. In this case, it will resolve to using the ",(0,a.kt)("inlineCode",{parentName:"p"},"liveAccount.id.toSolidityAddress()"),"."))}d.isMDXComponent=!0}}]);