import BigNumber$1 from"https://unpkg.com/bignumber.js@9.0.2/bignumber.mjs";function _defineProperty(t,e,Q){return e in t?Object.defineProperty(t,e,{value:Q,enumerable:!0,configurable:!0,writable:!0}):t[e]=Q,t}function asyncGeneratorStep(t,e,Q,B,s,F,U){try{var n=t[F](U),c=n.value}catch(t){return void Q(t)}n.done?e(c):Promise.resolve(c).then(B,s)}function _asyncToGenerator(t){return function(){var e=this,Q=arguments;return new Promise((function(B,s){var F=t.apply(e,Q);function U(t){asyncGeneratorStep(F,B,s,U,n,"next",t)}function n(t){asyncGeneratorStep(F,B,s,U,n,"throw",t)}U(void 0)}))}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var Q=0;Q<e.length;Q++){var B=e[Q];B.enumerable=B.enumerable||!1,B.configurable=!0,"value"in B&&(B.writable=!0),Object.defineProperty(t,B.key,B)}}function _createClass(t,e,Q){return e&&_defineProperties(t.prototype,e),Q&&_defineProperties(t,Q),Object.defineProperty(t,"prototype",{writable:!1}),t}var commonjsGlobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function getDefaultExportFromNamespaceIfPresent(t){return t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function commonjsRequire(t){throw new Error('Could not dynamically require "'+t+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var runtime={exports:{}};!function(t){var e=function(t){var e,Q=Object.prototype,B=Q.hasOwnProperty,s="function"==typeof Symbol?Symbol:{},F=s.iterator||"@@iterator",U=s.asyncIterator||"@@asyncIterator",n=s.toStringTag||"@@toStringTag";function c(t,e,Q){return Object.defineProperty(t,e,{value:Q,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{c({},"")}catch(t){c=function(t,e,Q){return t[e]=Q}}function o(t,e,Q,B){var s=e&&e.prototype instanceof d?e:d,F=Object.create(s.prototype),U=new Z(B||[]);return F._invoke=function(t,e,Q){var B=l;return function(s,F){if(B===i)throw new Error("Generator is already running");if(B===r){if("throw"===s)throw F;return N()}for(Q.method=s,Q.arg=F;;){var U=Q.delegate;if(U){var n=L(U,Q);if(n){if(n===a)continue;return n}}if("next"===Q.method)Q.sent=Q._sent=Q.arg;else if("throw"===Q.method){if(B===l)throw B=r,Q.arg;Q.dispatchException(Q.arg)}else"return"===Q.method&&Q.abrupt("return",Q.arg);B=i;var c=g(t,e,Q);if("normal"===c.type){if(B=Q.done?r:I,c.arg===a)continue;return{value:c.arg,done:Q.done}}"throw"===c.type&&(B=r,Q.method="throw",Q.arg=c.arg)}}}(t,Q,U),F}function g(t,e,Q){try{return{type:"normal",arg:t.call(e,Q)}}catch(t){return{type:"throw",arg:t}}}t.wrap=o;var l="suspendedStart",I="suspendedYield",i="executing",r="completed",a={};function d(){}function u(){}function C(){}var y={};c(y,F,(function(){return this}));var S=Object.getPrototypeOf,b=S&&S(S(R([])));b&&b!==Q&&B.call(b,F)&&(y=b);var m=C.prototype=d.prototype=Object.create(y);function G(t){["next","throw","return"].forEach((function(e){c(t,e,(function(t){return this._invoke(e,t)}))}))}function x(t,e){function Q(s,F,U,n){var c=g(t[s],t,F);if("throw"!==c.type){var o=c.arg,l=o.value;return l&&"object"==typeof l&&B.call(l,"__await")?e.resolve(l.__await).then((function(t){Q("next",t,U,n)}),(function(t){Q("throw",t,U,n)})):e.resolve(l).then((function(t){o.value=t,U(o)}),(function(t){return Q("throw",t,U,n)}))}n(c.arg)}var s;this._invoke=function(t,B){function F(){return new e((function(e,s){Q(t,B,e,s)}))}return s=s?s.then(F,F):F()}}function L(t,Q){var B=t.iterator[Q.method];if(B===e){if(Q.delegate=null,"throw"===Q.method){if(t.iterator.return&&(Q.method="return",Q.arg=e,L(t,Q),"throw"===Q.method))return a;Q.method="throw",Q.arg=new TypeError("The iterator does not provide a 'throw' method")}return a}var s=g(B,t.iterator,Q.arg);if("throw"===s.type)return Q.method="throw",Q.arg=s.arg,Q.delegate=null,a;var F=s.arg;return F?F.done?(Q[t.resultName]=F.value,Q.next=t.nextLoc,"return"!==Q.method&&(Q.method="next",Q.arg=e),Q.delegate=null,a):F:(Q.method="throw",Q.arg=new TypeError("iterator result is not an object"),Q.delegate=null,a)}function h(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function A(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function Z(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(h,this),this.reset(!0)}function R(t){if(t){var Q=t[F];if(Q)return Q.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var s=-1,U=function Q(){for(;++s<t.length;)if(B.call(t,s))return Q.value=t[s],Q.done=!1,Q;return Q.value=e,Q.done=!0,Q};return U.next=U}}return{next:N}}function N(){return{value:e,done:!0}}return u.prototype=C,c(m,"constructor",C),c(C,"constructor",u),u.displayName=c(C,n,"GeneratorFunction"),t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===u||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,C):(t.__proto__=C,c(t,n,"GeneratorFunction")),t.prototype=Object.create(m),t},t.awrap=function(t){return{__await:t}},G(x.prototype),c(x.prototype,U,(function(){return this})),t.AsyncIterator=x,t.async=function(e,Q,B,s,F){void 0===F&&(F=Promise);var U=new x(o(e,Q,B,s),F);return t.isGeneratorFunction(Q)?U:U.next().then((function(t){return t.done?t.value:U.next()}))},G(m),c(m,n,"Generator"),c(m,F,(function(){return this})),c(m,"toString",(function(){return"[object Generator]"})),t.keys=function(t){var e=[];for(var Q in t)e.push(Q);return e.reverse(),function Q(){for(;e.length;){var B=e.pop();if(B in t)return Q.value=B,Q.done=!1,Q}return Q.done=!0,Q}},t.values=R,Z.prototype={constructor:Z,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(A),!t)for(var Q in this)"t"===Q.charAt(0)&&B.call(this,Q)&&!isNaN(+Q.slice(1))&&(this[Q]=e)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var Q=this;function s(B,s){return n.type="throw",n.arg=t,Q.next=B,s&&(Q.method="next",Q.arg=e),!!s}for(var F=this.tryEntries.length-1;F>=0;--F){var U=this.tryEntries[F],n=U.completion;if("root"===U.tryLoc)return s("end");if(U.tryLoc<=this.prev){var c=B.call(U,"catchLoc"),o=B.call(U,"finallyLoc");if(c&&o){if(this.prev<U.catchLoc)return s(U.catchLoc,!0);if(this.prev<U.finallyLoc)return s(U.finallyLoc)}else if(c){if(this.prev<U.catchLoc)return s(U.catchLoc,!0)}else{if(!o)throw new Error("try statement without catch or finally");if(this.prev<U.finallyLoc)return s(U.finallyLoc)}}}},abrupt:function(t,e){for(var Q=this.tryEntries.length-1;Q>=0;--Q){var s=this.tryEntries[Q];if(s.tryLoc<=this.prev&&B.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var F=s;break}}F&&("break"===t||"continue"===t)&&F.tryLoc<=e&&e<=F.finallyLoc&&(F=null);var U=F?F.completion:{};return U.type=t,U.arg=e,F?(this.method="next",this.next=F.finallyLoc,a):this.complete(U)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),a},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var Q=this.tryEntries[e];if(Q.finallyLoc===t)return this.complete(Q.completion,Q.afterLoc),A(Q),a}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var Q=this.tryEntries[e];if(Q.tryLoc===t){var B=Q.completion;if("throw"===B.type){var s=B.arg;A(Q)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(t,Q,B){return this.delegate={iterator:R(t),resultName:Q,nextLoc:B},"next"===this.method&&(this.arg=e),a}},t}(t.exports);try{regeneratorRuntime=e}catch(t){"object"==typeof globalThis?globalThis.regeneratorRuntime=e:Function("r","regeneratorRuntime = r")(e)}}(runtime);var regenerator=runtime.exports,events={exports:{}},R="object"==typeof Reflect?Reflect:null,ReflectApply=R&&"function"==typeof R.apply?R.apply:function(t,e,Q){return Function.prototype.apply.call(t,e,Q)},ReflectOwnKeys;function ProcessEmitWarning(t){console&&console.warn&&console.warn(t)}ReflectOwnKeys=R&&"function"==typeof R.ownKeys?R.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)};var NumberIsNaN=Number.isNaN||function(t){return t!=t};function EventEmitter$1(){EventEmitter$1.init.call(this)}events.exports=EventEmitter$1,events.exports.once=once$1,EventEmitter$1.EventEmitter=EventEmitter$1,EventEmitter$1.prototype._events=void 0,EventEmitter$1.prototype._eventsCount=0,EventEmitter$1.prototype._maxListeners=void 0;var defaultMaxListeners=10;function checkListener(t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t)}function _getMaxListeners(t){return void 0===t._maxListeners?EventEmitter$1.defaultMaxListeners:t._maxListeners}function _addListener(t,e,Q,B){var s,F,U;if(checkListener(Q),void 0===(F=t._events)?(F=t._events=Object.create(null),t._eventsCount=0):(void 0!==F.newListener&&(t.emit("newListener",e,Q.listener?Q.listener:Q),F=t._events),U=F[e]),void 0===U)U=F[e]=Q,++t._eventsCount;else if("function"==typeof U?U=F[e]=B?[Q,U]:[U,Q]:B?U.unshift(Q):U.push(Q),(s=_getMaxListeners(t))>0&&U.length>s&&!U.warned){U.warned=!0;var n=new Error("Possible EventEmitter memory leak detected. "+U.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");n.name="MaxListenersExceededWarning",n.emitter=t,n.type=e,n.count=U.length,ProcessEmitWarning(n)}return t}function onceWrapper(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function _onceWrap(t,e,Q){var B={fired:!1,wrapFn:void 0,target:t,type:e,listener:Q},s=onceWrapper.bind(B);return s.listener=Q,B.wrapFn=s,s}function _listeners(t,e,Q){var B=t._events;if(void 0===B)return[];var s=B[e];return void 0===s?[]:"function"==typeof s?Q?[s.listener||s]:[s]:Q?unwrapListeners(s):arrayClone(s,s.length)}function listenerCount(t){var e=this._events;if(void 0!==e){var Q=e[t];if("function"==typeof Q)return 1;if(void 0!==Q)return Q.length}return 0}function arrayClone(t,e){for(var Q=new Array(e),B=0;B<e;++B)Q[B]=t[B];return Q}function spliceOne(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}function unwrapListeners(t){for(var e=new Array(t.length),Q=0;Q<e.length;++Q)e[Q]=t[Q].listener||t[Q];return e}function once$1(t,e){return new Promise((function(Q,B){function s(Q){t.removeListener(e,F),B(Q)}function F(){"function"==typeof t.removeListener&&t.removeListener("error",s),Q([].slice.call(arguments))}eventTargetAgnosticAddListener(t,e,F,{once:!0}),"error"!==e&&addErrorHandlerIfEventEmitter(t,s,{once:!0})}))}function addErrorHandlerIfEventEmitter(t,e,Q){"function"==typeof t.on&&eventTargetAgnosticAddListener(t,"error",e,Q)}function eventTargetAgnosticAddListener(t,e,Q,B){if("function"==typeof t.on)B.once?t.once(e,Q):t.on(e,Q);else{if("function"!=typeof t.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof t);t.addEventListener(e,(function s(F){B.once&&t.removeEventListener(e,s),Q(F)}))}}Object.defineProperty(EventEmitter$1,"defaultMaxListeners",{enumerable:!0,get:function(){return defaultMaxListeners},set:function(t){if("number"!=typeof t||t<0||NumberIsNaN(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");defaultMaxListeners=t}}),EventEmitter$1.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},EventEmitter$1.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||NumberIsNaN(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this._maxListeners=t,this},EventEmitter$1.prototype.getMaxListeners=function(){return _getMaxListeners(this)},EventEmitter$1.prototype.emit=function(t){for(var e=[],Q=1;Q<arguments.length;Q++)e.push(arguments[Q]);var B="error"===t,s=this._events;if(void 0!==s)B=B&&void 0===s.error;else if(!B)return!1;if(B){var F;if(e.length>0&&(F=e[0]),F instanceof Error)throw F;var U=new Error("Unhandled error."+(F?" ("+F.message+")":""));throw U.context=F,U}var n=s[t];if(void 0===n)return!1;if("function"==typeof n)ReflectApply(n,this,e);else{var c=n.length,o=arrayClone(n,c);for(Q=0;Q<c;++Q)ReflectApply(o[Q],this,e)}return!0},EventEmitter$1.prototype.addListener=function(t,e){return _addListener(this,t,e,!1)},EventEmitter$1.prototype.on=EventEmitter$1.prototype.addListener,EventEmitter$1.prototype.prependListener=function(t,e){return _addListener(this,t,e,!0)},EventEmitter$1.prototype.once=function(t,e){return checkListener(e),this.on(t,_onceWrap(this,t,e)),this},EventEmitter$1.prototype.prependOnceListener=function(t,e){return checkListener(e),this.prependListener(t,_onceWrap(this,t,e)),this},EventEmitter$1.prototype.removeListener=function(t,e){var Q,B,s,F,U;if(checkListener(e),void 0===(B=this._events))return this;if(void 0===(Q=B[t]))return this;if(Q===e||Q.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete B[t],B.removeListener&&this.emit("removeListener",t,Q.listener||e));else if("function"!=typeof Q){for(s=-1,F=Q.length-1;F>=0;F--)if(Q[F]===e||Q[F].listener===e){U=Q[F].listener,s=F;break}if(s<0)return this;0===s?Q.shift():spliceOne(Q,s),1===Q.length&&(B[t]=Q[0]),void 0!==B.removeListener&&this.emit("removeListener",t,U||e)}return this},EventEmitter$1.prototype.off=EventEmitter$1.prototype.removeListener,EventEmitter$1.prototype.removeAllListeners=function(t){var e,Q,B;if(void 0===(Q=this._events))return this;if(void 0===Q.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==Q[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete Q[t]),this;if(0===arguments.length){var s,F=Object.keys(Q);for(B=0;B<F.length;++B)"removeListener"!==(s=F[B])&&this.removeAllListeners(s);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(e=Q[t]))this.removeListener(t,e);else if(void 0!==e)for(B=e.length-1;B>=0;B--)this.removeListener(t,e[B]);return this},EventEmitter$1.prototype.listeners=function(t){return _listeners(this,t,!0)},EventEmitter$1.prototype.rawListeners=function(t){return _listeners(this,t,!1)},EventEmitter$1.listenerCount=function(t,e){return"function"==typeof t.listenerCount?t.listenerCount(e):listenerCount.call(t,e)},EventEmitter$1.prototype.listenerCount=listenerCount,EventEmitter$1.prototype.eventNames=function(){return this._eventsCount>0?ReflectOwnKeys(this._events):[]};var EventEmitter$2=events.exports,bn$1={exports:{}};!function(t,e){function Q(t,e){if(!t)throw new Error(e||"Assertion failed")}function B(t,e){t.super_=e;var Q=function(){};Q.prototype=e.prototype,t.prototype=new Q,t.prototype.constructor=t}function s(t,e,Q){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(Q=e,e=10),this._init(t||0,e||10,Q||"be"))}var F;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{F="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:require("buffer").Buffer}catch(t){}function U(t,e){var Q=t.charCodeAt(e);return Q>=65&&Q<=70?Q-55:Q>=97&&Q<=102?Q-87:Q-48&15}function n(t,e,Q){var B=U(t,Q);return Q-1>=e&&(B|=U(t,Q-1)<<4),B}function c(t,e,Q,B){for(var s=0,F=Math.min(t.length,Q),U=e;U<F;U++){var n=t.charCodeAt(U)-48;s*=B,s+=n>=49?n-49+10:n>=17?n-17+10:n}return s}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,B){if("number"==typeof t)return this._initNumber(t,e,B);if("object"==typeof t)return this._initArray(t,e,B);"hex"===e&&(e=16),Q(e===(0|e)&&e>=2&&e<=36);var s=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(s++,this.negative=1),s<t.length&&(16===e?this._parseHex(t,s,B):(this._parseBase(t,e,s),"le"===B&&this._initArray(this.toArray(),e,B)))},s.prototype._initNumber=function(t,e,B){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(Q(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===B&&this._initArray(this.toArray(),e,B)},s.prototype._initArray=function(t,e,B){if(Q("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var s=0;s<this.length;s++)this.words[s]=0;var F,U,n=0;if("be"===B)for(s=t.length-1,F=0;s>=0;s-=3)U=t[s]|t[s-1]<<8|t[s-2]<<16,this.words[F]|=U<<n&67108863,this.words[F+1]=U>>>26-n&67108863,(n+=24)>=26&&(n-=26,F++);else if("le"===B)for(s=0,F=0;s<t.length;s+=3)U=t[s]|t[s+1]<<8|t[s+2]<<16,this.words[F]|=U<<n&67108863,this.words[F+1]=U>>>26-n&67108863,(n+=24)>=26&&(n-=26,F++);return this.strip()},s.prototype._parseHex=function(t,e,Q){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var B=0;B<this.length;B++)this.words[B]=0;var s,F=0,U=0;if("be"===Q)for(B=t.length-1;B>=e;B-=2)s=n(t,e,B)<<F,this.words[U]|=67108863&s,F>=18?(F-=18,U+=1,this.words[U]|=s>>>26):F+=8;else for(B=(t.length-e)%2==0?e+1:e;B<t.length;B+=2)s=n(t,e,B)<<F,this.words[U]|=67108863&s,F>=18?(F-=18,U+=1,this.words[U]|=s>>>26):F+=8;this.strip()},s.prototype._parseBase=function(t,e,Q){this.words=[0],this.length=1;for(var B=0,s=1;s<=67108863;s*=e)B++;B--,s=s/e|0;for(var F=t.length-Q,U=F%B,n=Math.min(F,F-U)+Q,o=0,g=Q;g<n;g+=B)o=c(t,g,g+B,e),this.imuln(s),this.words[0]+o<67108864?this.words[0]+=o:this._iaddn(o);if(0!==U){var l=1;for(o=c(t,g,t.length,e),g=0;g<U;g++)l*=e;this.imuln(l),this.words[0]+o<67108864?this.words[0]+=o:this._iaddn(o)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var o=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],g=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],l=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function I(t,e,Q){Q.negative=e.negative^t.negative;var B=t.length+e.length|0;Q.length=B,B=B-1|0;var s=0|t.words[0],F=0|e.words[0],U=s*F,n=67108863&U,c=U/67108864|0;Q.words[0]=n;for(var o=1;o<B;o++){for(var g=c>>>26,l=67108863&c,I=Math.min(o,e.length-1),i=Math.max(0,o-t.length+1);i<=I;i++){var r=o-i|0;g+=(U=(s=0|t.words[r])*(F=0|e.words[i])+l)/67108864|0,l=67108863&U}Q.words[o]=0|l,c=0|g}return 0!==c?Q.words[o]=0|c:Q.length--,Q.strip()}s.prototype.toString=function(t,e){var B;if(e=0|e||1,16===(t=t||10)||"hex"===t){B="";for(var s=0,F=0,U=0;U<this.length;U++){var n=this.words[U],c=(16777215&(n<<s|F)).toString(16);B=0!=(F=n>>>24-s&16777215)||U!==this.length-1?o[6-c.length]+c+B:c+B,(s+=2)>=26&&(s-=26,U--)}for(0!==F&&(B=F.toString(16)+B);B.length%e!=0;)B="0"+B;return 0!==this.negative&&(B="-"+B),B}if(t===(0|t)&&t>=2&&t<=36){var I=g[t],i=l[t];B="";var r=this.clone();for(r.negative=0;!r.isZero();){var a=r.modn(i).toString(t);B=(r=r.idivn(i)).isZero()?a+B:o[I-a.length]+a+B}for(this.isZero()&&(B="0"+B);B.length%e!=0;)B="0"+B;return 0!==this.negative&&(B="-"+B),B}Q(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&Q(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return Q(void 0!==F),this.toArrayLike(F,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,B){var s=this.byteLength(),F=B||Math.max(1,s);Q(s<=F,"byte array longer than desired length"),Q(F>0,"Requested array length <= 0"),this.strip();var U,n,c="le"===e,o=new t(F),g=this.clone();if(c){for(n=0;!g.isZero();n++)U=g.andln(255),g.iushrn(8),o[n]=U;for(;n<F;n++)o[n]=0}else{for(n=0;n<F-s;n++)o[n]=0;for(n=0;!g.isZero();n++)U=g.andln(255),g.iushrn(8),o[F-n-1]=U}return o},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,Q=0;return e>=4096&&(Q+=13,e>>>=13),e>=64&&(Q+=7,e>>>=7),e>=8&&(Q+=4,e>>>=4),e>=2&&(Q+=2,e>>>=2),Q+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,Q=0;return 0==(8191&e)&&(Q+=13,e>>>=13),0==(127&e)&&(Q+=7,e>>>=7),0==(15&e)&&(Q+=4,e>>>=4),0==(3&e)&&(Q+=2,e>>>=2),0==(1&e)&&Q++,Q},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var Q=this._zeroBits(this.words[e]);if(t+=Q,26!==Q)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return Q(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var Q=0;Q<e.length;Q++)this.words[Q]=this.words[Q]&t.words[Q];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return Q(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,Q;this.length>t.length?(e=this,Q=t):(e=t,Q=this);for(var B=0;B<Q.length;B++)this.words[B]=e.words[B]^Q.words[B];if(this!==e)for(;B<e.length;B++)this.words[B]=e.words[B];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return Q(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){Q("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),B=t%26;this._expand(e),B>0&&e--;for(var s=0;s<e;s++)this.words[s]=67108863&~this.words[s];return B>0&&(this.words[s]=~this.words[s]&67108863>>26-B),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){Q("number"==typeof t&&t>=0);var B=t/26|0,s=t%26;return this._expand(B+1),this.words[B]=e?this.words[B]|1<<s:this.words[B]&~(1<<s),this.strip()},s.prototype.iadd=function(t){var e,Q,B;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(Q=this,B=t):(Q=t,B=this);for(var s=0,F=0;F<B.length;F++)e=(0|Q.words[F])+(0|B.words[F])+s,this.words[F]=67108863&e,s=e>>>26;for(;0!==s&&F<Q.length;F++)e=(0|Q.words[F])+s,this.words[F]=67108863&e,s=e>>>26;if(this.length=Q.length,0!==s)this.words[this.length]=s,this.length++;else if(Q!==this)for(;F<Q.length;F++)this.words[F]=Q.words[F];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var Q,B,s=this.cmp(t);if(0===s)return this.negative=0,this.length=1,this.words[0]=0,this;s>0?(Q=this,B=t):(Q=t,B=this);for(var F=0,U=0;U<B.length;U++)F=(e=(0|Q.words[U])-(0|B.words[U])+F)>>26,this.words[U]=67108863&e;for(;0!==F&&U<Q.length;U++)F=(e=(0|Q.words[U])+F)>>26,this.words[U]=67108863&e;if(0===F&&U<Q.length&&Q!==this)for(;U<Q.length;U++)this.words[U]=Q.words[U];return this.length=Math.max(this.length,U),Q!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var i=function(t,e,Q){var B,s,F,U=t.words,n=e.words,c=Q.words,o=0,g=0|U[0],l=8191&g,I=g>>>13,i=0|U[1],r=8191&i,a=i>>>13,d=0|U[2],u=8191&d,C=d>>>13,y=0|U[3],S=8191&y,b=y>>>13,m=0|U[4],G=8191&m,x=m>>>13,L=0|U[5],h=8191&L,A=L>>>13,Z=0|U[6],R=8191&Z,N=Z>>>13,V=0|U[7],D=8191&V,E=V>>>13,p=0|U[8],J=8191&p,X=p>>>13,H=0|U[9],k=8191&H,W=H>>>13,T=0|n[0],Y=8191&T,f=T>>>13,M=0|n[1],w=8191&M,v=M>>>13,z=0|n[2],K=8191&z,O=z>>>13,P=0|n[3],j=8191&P,_=P>>>13,$=0|n[4],q=8191&$,tt=$>>>13,et=0|n[5],Qt=8191&et,Bt=et>>>13,st=0|n[6],Ft=8191&st,Ut=st>>>13,nt=0|n[7],ct=8191&nt,ot=nt>>>13,gt=0|n[8],lt=8191&gt,It=gt>>>13,it=0|n[9],rt=8191&it,at=it>>>13;Q.negative=t.negative^e.negative,Q.length=19;var dt=(o+(B=Math.imul(l,Y))|0)+((8191&(s=(s=Math.imul(l,f))+Math.imul(I,Y)|0))<<13)|0;o=((F=Math.imul(I,f))+(s>>>13)|0)+(dt>>>26)|0,dt&=67108863,B=Math.imul(r,Y),s=(s=Math.imul(r,f))+Math.imul(a,Y)|0,F=Math.imul(a,f);var ut=(o+(B=B+Math.imul(l,w)|0)|0)+((8191&(s=(s=s+Math.imul(l,v)|0)+Math.imul(I,w)|0))<<13)|0;o=((F=F+Math.imul(I,v)|0)+(s>>>13)|0)+(ut>>>26)|0,ut&=67108863,B=Math.imul(u,Y),s=(s=Math.imul(u,f))+Math.imul(C,Y)|0,F=Math.imul(C,f),B=B+Math.imul(r,w)|0,s=(s=s+Math.imul(r,v)|0)+Math.imul(a,w)|0,F=F+Math.imul(a,v)|0;var Ct=(o+(B=B+Math.imul(l,K)|0)|0)+((8191&(s=(s=s+Math.imul(l,O)|0)+Math.imul(I,K)|0))<<13)|0;o=((F=F+Math.imul(I,O)|0)+(s>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,B=Math.imul(S,Y),s=(s=Math.imul(S,f))+Math.imul(b,Y)|0,F=Math.imul(b,f),B=B+Math.imul(u,w)|0,s=(s=s+Math.imul(u,v)|0)+Math.imul(C,w)|0,F=F+Math.imul(C,v)|0,B=B+Math.imul(r,K)|0,s=(s=s+Math.imul(r,O)|0)+Math.imul(a,K)|0,F=F+Math.imul(a,O)|0;var yt=(o+(B=B+Math.imul(l,j)|0)|0)+((8191&(s=(s=s+Math.imul(l,_)|0)+Math.imul(I,j)|0))<<13)|0;o=((F=F+Math.imul(I,_)|0)+(s>>>13)|0)+(yt>>>26)|0,yt&=67108863,B=Math.imul(G,Y),s=(s=Math.imul(G,f))+Math.imul(x,Y)|0,F=Math.imul(x,f),B=B+Math.imul(S,w)|0,s=(s=s+Math.imul(S,v)|0)+Math.imul(b,w)|0,F=F+Math.imul(b,v)|0,B=B+Math.imul(u,K)|0,s=(s=s+Math.imul(u,O)|0)+Math.imul(C,K)|0,F=F+Math.imul(C,O)|0,B=B+Math.imul(r,j)|0,s=(s=s+Math.imul(r,_)|0)+Math.imul(a,j)|0,F=F+Math.imul(a,_)|0;var St=(o+(B=B+Math.imul(l,q)|0)|0)+((8191&(s=(s=s+Math.imul(l,tt)|0)+Math.imul(I,q)|0))<<13)|0;o=((F=F+Math.imul(I,tt)|0)+(s>>>13)|0)+(St>>>26)|0,St&=67108863,B=Math.imul(h,Y),s=(s=Math.imul(h,f))+Math.imul(A,Y)|0,F=Math.imul(A,f),B=B+Math.imul(G,w)|0,s=(s=s+Math.imul(G,v)|0)+Math.imul(x,w)|0,F=F+Math.imul(x,v)|0,B=B+Math.imul(S,K)|0,s=(s=s+Math.imul(S,O)|0)+Math.imul(b,K)|0,F=F+Math.imul(b,O)|0,B=B+Math.imul(u,j)|0,s=(s=s+Math.imul(u,_)|0)+Math.imul(C,j)|0,F=F+Math.imul(C,_)|0,B=B+Math.imul(r,q)|0,s=(s=s+Math.imul(r,tt)|0)+Math.imul(a,q)|0,F=F+Math.imul(a,tt)|0;var bt=(o+(B=B+Math.imul(l,Qt)|0)|0)+((8191&(s=(s=s+Math.imul(l,Bt)|0)+Math.imul(I,Qt)|0))<<13)|0;o=((F=F+Math.imul(I,Bt)|0)+(s>>>13)|0)+(bt>>>26)|0,bt&=67108863,B=Math.imul(R,Y),s=(s=Math.imul(R,f))+Math.imul(N,Y)|0,F=Math.imul(N,f),B=B+Math.imul(h,w)|0,s=(s=s+Math.imul(h,v)|0)+Math.imul(A,w)|0,F=F+Math.imul(A,v)|0,B=B+Math.imul(G,K)|0,s=(s=s+Math.imul(G,O)|0)+Math.imul(x,K)|0,F=F+Math.imul(x,O)|0,B=B+Math.imul(S,j)|0,s=(s=s+Math.imul(S,_)|0)+Math.imul(b,j)|0,F=F+Math.imul(b,_)|0,B=B+Math.imul(u,q)|0,s=(s=s+Math.imul(u,tt)|0)+Math.imul(C,q)|0,F=F+Math.imul(C,tt)|0,B=B+Math.imul(r,Qt)|0,s=(s=s+Math.imul(r,Bt)|0)+Math.imul(a,Qt)|0,F=F+Math.imul(a,Bt)|0;var mt=(o+(B=B+Math.imul(l,Ft)|0)|0)+((8191&(s=(s=s+Math.imul(l,Ut)|0)+Math.imul(I,Ft)|0))<<13)|0;o=((F=F+Math.imul(I,Ut)|0)+(s>>>13)|0)+(mt>>>26)|0,mt&=67108863,B=Math.imul(D,Y),s=(s=Math.imul(D,f))+Math.imul(E,Y)|0,F=Math.imul(E,f),B=B+Math.imul(R,w)|0,s=(s=s+Math.imul(R,v)|0)+Math.imul(N,w)|0,F=F+Math.imul(N,v)|0,B=B+Math.imul(h,K)|0,s=(s=s+Math.imul(h,O)|0)+Math.imul(A,K)|0,F=F+Math.imul(A,O)|0,B=B+Math.imul(G,j)|0,s=(s=s+Math.imul(G,_)|0)+Math.imul(x,j)|0,F=F+Math.imul(x,_)|0,B=B+Math.imul(S,q)|0,s=(s=s+Math.imul(S,tt)|0)+Math.imul(b,q)|0,F=F+Math.imul(b,tt)|0,B=B+Math.imul(u,Qt)|0,s=(s=s+Math.imul(u,Bt)|0)+Math.imul(C,Qt)|0,F=F+Math.imul(C,Bt)|0,B=B+Math.imul(r,Ft)|0,s=(s=s+Math.imul(r,Ut)|0)+Math.imul(a,Ft)|0,F=F+Math.imul(a,Ut)|0;var Gt=(o+(B=B+Math.imul(l,ct)|0)|0)+((8191&(s=(s=s+Math.imul(l,ot)|0)+Math.imul(I,ct)|0))<<13)|0;o=((F=F+Math.imul(I,ot)|0)+(s>>>13)|0)+(Gt>>>26)|0,Gt&=67108863,B=Math.imul(J,Y),s=(s=Math.imul(J,f))+Math.imul(X,Y)|0,F=Math.imul(X,f),B=B+Math.imul(D,w)|0,s=(s=s+Math.imul(D,v)|0)+Math.imul(E,w)|0,F=F+Math.imul(E,v)|0,B=B+Math.imul(R,K)|0,s=(s=s+Math.imul(R,O)|0)+Math.imul(N,K)|0,F=F+Math.imul(N,O)|0,B=B+Math.imul(h,j)|0,s=(s=s+Math.imul(h,_)|0)+Math.imul(A,j)|0,F=F+Math.imul(A,_)|0,B=B+Math.imul(G,q)|0,s=(s=s+Math.imul(G,tt)|0)+Math.imul(x,q)|0,F=F+Math.imul(x,tt)|0,B=B+Math.imul(S,Qt)|0,s=(s=s+Math.imul(S,Bt)|0)+Math.imul(b,Qt)|0,F=F+Math.imul(b,Bt)|0,B=B+Math.imul(u,Ft)|0,s=(s=s+Math.imul(u,Ut)|0)+Math.imul(C,Ft)|0,F=F+Math.imul(C,Ut)|0,B=B+Math.imul(r,ct)|0,s=(s=s+Math.imul(r,ot)|0)+Math.imul(a,ct)|0,F=F+Math.imul(a,ot)|0;var xt=(o+(B=B+Math.imul(l,lt)|0)|0)+((8191&(s=(s=s+Math.imul(l,It)|0)+Math.imul(I,lt)|0))<<13)|0;o=((F=F+Math.imul(I,It)|0)+(s>>>13)|0)+(xt>>>26)|0,xt&=67108863,B=Math.imul(k,Y),s=(s=Math.imul(k,f))+Math.imul(W,Y)|0,F=Math.imul(W,f),B=B+Math.imul(J,w)|0,s=(s=s+Math.imul(J,v)|0)+Math.imul(X,w)|0,F=F+Math.imul(X,v)|0,B=B+Math.imul(D,K)|0,s=(s=s+Math.imul(D,O)|0)+Math.imul(E,K)|0,F=F+Math.imul(E,O)|0,B=B+Math.imul(R,j)|0,s=(s=s+Math.imul(R,_)|0)+Math.imul(N,j)|0,F=F+Math.imul(N,_)|0,B=B+Math.imul(h,q)|0,s=(s=s+Math.imul(h,tt)|0)+Math.imul(A,q)|0,F=F+Math.imul(A,tt)|0,B=B+Math.imul(G,Qt)|0,s=(s=s+Math.imul(G,Bt)|0)+Math.imul(x,Qt)|0,F=F+Math.imul(x,Bt)|0,B=B+Math.imul(S,Ft)|0,s=(s=s+Math.imul(S,Ut)|0)+Math.imul(b,Ft)|0,F=F+Math.imul(b,Ut)|0,B=B+Math.imul(u,ct)|0,s=(s=s+Math.imul(u,ot)|0)+Math.imul(C,ct)|0,F=F+Math.imul(C,ot)|0,B=B+Math.imul(r,lt)|0,s=(s=s+Math.imul(r,It)|0)+Math.imul(a,lt)|0,F=F+Math.imul(a,It)|0;var Lt=(o+(B=B+Math.imul(l,rt)|0)|0)+((8191&(s=(s=s+Math.imul(l,at)|0)+Math.imul(I,rt)|0))<<13)|0;o=((F=F+Math.imul(I,at)|0)+(s>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,B=Math.imul(k,w),s=(s=Math.imul(k,v))+Math.imul(W,w)|0,F=Math.imul(W,v),B=B+Math.imul(J,K)|0,s=(s=s+Math.imul(J,O)|0)+Math.imul(X,K)|0,F=F+Math.imul(X,O)|0,B=B+Math.imul(D,j)|0,s=(s=s+Math.imul(D,_)|0)+Math.imul(E,j)|0,F=F+Math.imul(E,_)|0,B=B+Math.imul(R,q)|0,s=(s=s+Math.imul(R,tt)|0)+Math.imul(N,q)|0,F=F+Math.imul(N,tt)|0,B=B+Math.imul(h,Qt)|0,s=(s=s+Math.imul(h,Bt)|0)+Math.imul(A,Qt)|0,F=F+Math.imul(A,Bt)|0,B=B+Math.imul(G,Ft)|0,s=(s=s+Math.imul(G,Ut)|0)+Math.imul(x,Ft)|0,F=F+Math.imul(x,Ut)|0,B=B+Math.imul(S,ct)|0,s=(s=s+Math.imul(S,ot)|0)+Math.imul(b,ct)|0,F=F+Math.imul(b,ot)|0,B=B+Math.imul(u,lt)|0,s=(s=s+Math.imul(u,It)|0)+Math.imul(C,lt)|0,F=F+Math.imul(C,It)|0;var ht=(o+(B=B+Math.imul(r,rt)|0)|0)+((8191&(s=(s=s+Math.imul(r,at)|0)+Math.imul(a,rt)|0))<<13)|0;o=((F=F+Math.imul(a,at)|0)+(s>>>13)|0)+(ht>>>26)|0,ht&=67108863,B=Math.imul(k,K),s=(s=Math.imul(k,O))+Math.imul(W,K)|0,F=Math.imul(W,O),B=B+Math.imul(J,j)|0,s=(s=s+Math.imul(J,_)|0)+Math.imul(X,j)|0,F=F+Math.imul(X,_)|0,B=B+Math.imul(D,q)|0,s=(s=s+Math.imul(D,tt)|0)+Math.imul(E,q)|0,F=F+Math.imul(E,tt)|0,B=B+Math.imul(R,Qt)|0,s=(s=s+Math.imul(R,Bt)|0)+Math.imul(N,Qt)|0,F=F+Math.imul(N,Bt)|0,B=B+Math.imul(h,Ft)|0,s=(s=s+Math.imul(h,Ut)|0)+Math.imul(A,Ft)|0,F=F+Math.imul(A,Ut)|0,B=B+Math.imul(G,ct)|0,s=(s=s+Math.imul(G,ot)|0)+Math.imul(x,ct)|0,F=F+Math.imul(x,ot)|0,B=B+Math.imul(S,lt)|0,s=(s=s+Math.imul(S,It)|0)+Math.imul(b,lt)|0,F=F+Math.imul(b,It)|0;var At=(o+(B=B+Math.imul(u,rt)|0)|0)+((8191&(s=(s=s+Math.imul(u,at)|0)+Math.imul(C,rt)|0))<<13)|0;o=((F=F+Math.imul(C,at)|0)+(s>>>13)|0)+(At>>>26)|0,At&=67108863,B=Math.imul(k,j),s=(s=Math.imul(k,_))+Math.imul(W,j)|0,F=Math.imul(W,_),B=B+Math.imul(J,q)|0,s=(s=s+Math.imul(J,tt)|0)+Math.imul(X,q)|0,F=F+Math.imul(X,tt)|0,B=B+Math.imul(D,Qt)|0,s=(s=s+Math.imul(D,Bt)|0)+Math.imul(E,Qt)|0,F=F+Math.imul(E,Bt)|0,B=B+Math.imul(R,Ft)|0,s=(s=s+Math.imul(R,Ut)|0)+Math.imul(N,Ft)|0,F=F+Math.imul(N,Ut)|0,B=B+Math.imul(h,ct)|0,s=(s=s+Math.imul(h,ot)|0)+Math.imul(A,ct)|0,F=F+Math.imul(A,ot)|0,B=B+Math.imul(G,lt)|0,s=(s=s+Math.imul(G,It)|0)+Math.imul(x,lt)|0,F=F+Math.imul(x,It)|0;var Zt=(o+(B=B+Math.imul(S,rt)|0)|0)+((8191&(s=(s=s+Math.imul(S,at)|0)+Math.imul(b,rt)|0))<<13)|0;o=((F=F+Math.imul(b,at)|0)+(s>>>13)|0)+(Zt>>>26)|0,Zt&=67108863,B=Math.imul(k,q),s=(s=Math.imul(k,tt))+Math.imul(W,q)|0,F=Math.imul(W,tt),B=B+Math.imul(J,Qt)|0,s=(s=s+Math.imul(J,Bt)|0)+Math.imul(X,Qt)|0,F=F+Math.imul(X,Bt)|0,B=B+Math.imul(D,Ft)|0,s=(s=s+Math.imul(D,Ut)|0)+Math.imul(E,Ft)|0,F=F+Math.imul(E,Ut)|0,B=B+Math.imul(R,ct)|0,s=(s=s+Math.imul(R,ot)|0)+Math.imul(N,ct)|0,F=F+Math.imul(N,ot)|0,B=B+Math.imul(h,lt)|0,s=(s=s+Math.imul(h,It)|0)+Math.imul(A,lt)|0,F=F+Math.imul(A,It)|0;var Rt=(o+(B=B+Math.imul(G,rt)|0)|0)+((8191&(s=(s=s+Math.imul(G,at)|0)+Math.imul(x,rt)|0))<<13)|0;o=((F=F+Math.imul(x,at)|0)+(s>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,B=Math.imul(k,Qt),s=(s=Math.imul(k,Bt))+Math.imul(W,Qt)|0,F=Math.imul(W,Bt),B=B+Math.imul(J,Ft)|0,s=(s=s+Math.imul(J,Ut)|0)+Math.imul(X,Ft)|0,F=F+Math.imul(X,Ut)|0,B=B+Math.imul(D,ct)|0,s=(s=s+Math.imul(D,ot)|0)+Math.imul(E,ct)|0,F=F+Math.imul(E,ot)|0,B=B+Math.imul(R,lt)|0,s=(s=s+Math.imul(R,It)|0)+Math.imul(N,lt)|0,F=F+Math.imul(N,It)|0;var Nt=(o+(B=B+Math.imul(h,rt)|0)|0)+((8191&(s=(s=s+Math.imul(h,at)|0)+Math.imul(A,rt)|0))<<13)|0;o=((F=F+Math.imul(A,at)|0)+(s>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,B=Math.imul(k,Ft),s=(s=Math.imul(k,Ut))+Math.imul(W,Ft)|0,F=Math.imul(W,Ut),B=B+Math.imul(J,ct)|0,s=(s=s+Math.imul(J,ot)|0)+Math.imul(X,ct)|0,F=F+Math.imul(X,ot)|0,B=B+Math.imul(D,lt)|0,s=(s=s+Math.imul(D,It)|0)+Math.imul(E,lt)|0,F=F+Math.imul(E,It)|0;var Vt=(o+(B=B+Math.imul(R,rt)|0)|0)+((8191&(s=(s=s+Math.imul(R,at)|0)+Math.imul(N,rt)|0))<<13)|0;o=((F=F+Math.imul(N,at)|0)+(s>>>13)|0)+(Vt>>>26)|0,Vt&=67108863,B=Math.imul(k,ct),s=(s=Math.imul(k,ot))+Math.imul(W,ct)|0,F=Math.imul(W,ot),B=B+Math.imul(J,lt)|0,s=(s=s+Math.imul(J,It)|0)+Math.imul(X,lt)|0,F=F+Math.imul(X,It)|0;var Dt=(o+(B=B+Math.imul(D,rt)|0)|0)+((8191&(s=(s=s+Math.imul(D,at)|0)+Math.imul(E,rt)|0))<<13)|0;o=((F=F+Math.imul(E,at)|0)+(s>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,B=Math.imul(k,lt),s=(s=Math.imul(k,It))+Math.imul(W,lt)|0,F=Math.imul(W,It);var Et=(o+(B=B+Math.imul(J,rt)|0)|0)+((8191&(s=(s=s+Math.imul(J,at)|0)+Math.imul(X,rt)|0))<<13)|0;o=((F=F+Math.imul(X,at)|0)+(s>>>13)|0)+(Et>>>26)|0,Et&=67108863;var pt=(o+(B=Math.imul(k,rt))|0)+((8191&(s=(s=Math.imul(k,at))+Math.imul(W,rt)|0))<<13)|0;return o=((F=Math.imul(W,at))+(s>>>13)|0)+(pt>>>26)|0,pt&=67108863,c[0]=dt,c[1]=ut,c[2]=Ct,c[3]=yt,c[4]=St,c[5]=bt,c[6]=mt,c[7]=Gt,c[8]=xt,c[9]=Lt,c[10]=ht,c[11]=At,c[12]=Zt,c[13]=Rt,c[14]=Nt,c[15]=Vt,c[16]=Dt,c[17]=Et,c[18]=pt,0!==o&&(c[19]=o,Q.length++),Q};function r(t,e,Q){return(new a).mulp(t,e,Q)}function a(t,e){this.x=t,this.y=e}Math.imul||(i=I),s.prototype.mulTo=function(t,e){var Q,B=this.length+t.length;return Q=10===this.length&&10===t.length?i(this,t,e):B<63?I(this,t,e):B<1024?function(t,e,Q){Q.negative=e.negative^t.negative,Q.length=t.length+e.length;for(var B=0,s=0,F=0;F<Q.length-1;F++){var U=s;s=0;for(var n=67108863&B,c=Math.min(F,e.length-1),o=Math.max(0,F-t.length+1);o<=c;o++){var g=F-o,l=(0|t.words[g])*(0|e.words[o]),I=67108863&l;n=67108863&(I=I+n|0),s+=(U=(U=U+(l/67108864|0)|0)+(I>>>26)|0)>>>26,U&=67108863}Q.words[F]=n,B=U,U=s}return 0!==B?Q.words[F]=B:Q.length--,Q.strip()}(this,t,e):r(this,t,e),Q},a.prototype.makeRBT=function(t){for(var e=new Array(t),Q=s.prototype._countBits(t)-1,B=0;B<t;B++)e[B]=this.revBin(B,Q,t);return e},a.prototype.revBin=function(t,e,Q){if(0===t||t===Q-1)return t;for(var B=0,s=0;s<e;s++)B|=(1&t)<<e-s-1,t>>=1;return B},a.prototype.permute=function(t,e,Q,B,s,F){for(var U=0;U<F;U++)B[U]=e[t[U]],s[U]=Q[t[U]]},a.prototype.transform=function(t,e,Q,B,s,F){this.permute(F,t,e,Q,B,s);for(var U=1;U<s;U<<=1)for(var n=U<<1,c=Math.cos(2*Math.PI/n),o=Math.sin(2*Math.PI/n),g=0;g<s;g+=n)for(var l=c,I=o,i=0;i<U;i++){var r=Q[g+i],a=B[g+i],d=Q[g+i+U],u=B[g+i+U],C=l*d-I*u;u=l*u+I*d,d=C,Q[g+i]=r+d,B[g+i]=a+u,Q[g+i+U]=r-d,B[g+i+U]=a-u,i!==n&&(C=c*l-o*I,I=c*I+o*l,l=C)}},a.prototype.guessLen13b=function(t,e){var Q=1|Math.max(e,t),B=1&Q,s=0;for(Q=Q/2|0;Q;Q>>>=1)s++;return 1<<s+1+B},a.prototype.conjugate=function(t,e,Q){if(!(Q<=1))for(var B=0;B<Q/2;B++){var s=t[B];t[B]=t[Q-B-1],t[Q-B-1]=s,s=e[B],e[B]=-e[Q-B-1],e[Q-B-1]=-s}},a.prototype.normalize13b=function(t,e){for(var Q=0,B=0;B<e/2;B++){var s=8192*Math.round(t[2*B+1]/e)+Math.round(t[2*B]/e)+Q;t[B]=67108863&s,Q=s<67108864?0:s/67108864|0}return t},a.prototype.convert13b=function(t,e,B,s){for(var F=0,U=0;U<e;U++)F+=0|t[U],B[2*U]=8191&F,F>>>=13,B[2*U+1]=8191&F,F>>>=13;for(U=2*e;U<s;++U)B[U]=0;Q(0===F),Q(0==(-8192&F))},a.prototype.stub=function(t){for(var e=new Array(t),Q=0;Q<t;Q++)e[Q]=0;return e},a.prototype.mulp=function(t,e,Q){var B=2*this.guessLen13b(t.length,e.length),s=this.makeRBT(B),F=this.stub(B),U=new Array(B),n=new Array(B),c=new Array(B),o=new Array(B),g=new Array(B),l=new Array(B),I=Q.words;I.length=B,this.convert13b(t.words,t.length,U,B),this.convert13b(e.words,e.length,o,B),this.transform(U,F,n,c,B,s),this.transform(o,F,g,l,B,s);for(var i=0;i<B;i++){var r=n[i]*g[i]-c[i]*l[i];c[i]=n[i]*l[i]+c[i]*g[i],n[i]=r}return this.conjugate(n,c,B),this.transform(n,c,I,F,B,s),this.conjugate(I,F,B),this.normalize13b(I,B),Q.negative=t.negative^e.negative,Q.length=t.length+e.length,Q.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),r(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){Q("number"==typeof t),Q(t<67108864);for(var e=0,B=0;B<this.length;B++){var s=(0|this.words[B])*t,F=(67108863&s)+(67108863&e);e>>=26,e+=s/67108864|0,e+=F>>>26,this.words[B]=67108863&F}return 0!==e&&(this.words[B]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),Q=0;Q<e.length;Q++){var B=Q/26|0,s=Q%26;e[Q]=(t.words[B]&1<<s)>>>s}return e}(t);if(0===e.length)return new s(1);for(var Q=this,B=0;B<e.length&&0===e[B];B++,Q=Q.sqr());if(++B<e.length)for(var F=Q.sqr();B<e.length;B++,F=F.sqr())0!==e[B]&&(Q=Q.mul(F));return Q},s.prototype.iushln=function(t){Q("number"==typeof t&&t>=0);var e,B=t%26,s=(t-B)/26,F=67108863>>>26-B<<26-B;if(0!==B){var U=0;for(e=0;e<this.length;e++){var n=this.words[e]&F,c=(0|this.words[e])-n<<B;this.words[e]=c|U,U=n>>>26-B}U&&(this.words[e]=U,this.length++)}if(0!==s){for(e=this.length-1;e>=0;e--)this.words[e+s]=this.words[e];for(e=0;e<s;e++)this.words[e]=0;this.length+=s}return this.strip()},s.prototype.ishln=function(t){return Q(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,B){var s;Q("number"==typeof t&&t>=0),s=e?(e-e%26)/26:0;var F=t%26,U=Math.min((t-F)/26,this.length),n=67108863^67108863>>>F<<F,c=B;if(s-=U,s=Math.max(0,s),c){for(var o=0;o<U;o++)c.words[o]=this.words[o];c.length=U}if(0===U);else if(this.length>U)for(this.length-=U,o=0;o<this.length;o++)this.words[o]=this.words[o+U];else this.words[0]=0,this.length=1;var g=0;for(o=this.length-1;o>=0&&(0!==g||o>=s);o--){var l=0|this.words[o];this.words[o]=g<<26-F|l>>>F,g=l&n}return c&&0!==g&&(c.words[c.length++]=g),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,B){return Q(0===this.negative),this.iushrn(t,e,B)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){Q("number"==typeof t&&t>=0);var e=t%26,B=(t-e)/26,s=1<<e;return!(this.length<=B||!(this.words[B]&s))},s.prototype.imaskn=function(t){Q("number"==typeof t&&t>=0);var e=t%26,B=(t-e)/26;if(Q(0===this.negative,"imaskn works only with positive numbers"),this.length<=B)return this;if(0!==e&&B++,this.length=Math.min(B,this.length),0!==e){var s=67108863^67108863>>>e<<e;this.words[this.length-1]&=s}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return Q("number"==typeof t),Q(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(Q("number"==typeof t),Q(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,B){var s,F,U=t.length+B;this._expand(U);var n=0;for(s=0;s<t.length;s++){F=(0|this.words[s+B])+n;var c=(0|t.words[s])*e;n=((F-=67108863&c)>>26)-(c/67108864|0),this.words[s+B]=67108863&F}for(;s<this.length-B;s++)n=(F=(0|this.words[s+B])+n)>>26,this.words[s+B]=67108863&F;if(0===n)return this.strip();for(Q(-1===n),n=0,s=0;s<this.length;s++)n=(F=-(0|this.words[s])+n)>>26,this.words[s]=67108863&F;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var Q=(this.length,t.length),B=this.clone(),F=t,U=0|F.words[F.length-1];0!=(Q=26-this._countBits(U))&&(F=F.ushln(Q),B.iushln(Q),U=0|F.words[F.length-1]);var n,c=B.length-F.length;if("mod"!==e){(n=new s(null)).length=c+1,n.words=new Array(n.length);for(var o=0;o<n.length;o++)n.words[o]=0}var g=B.clone()._ishlnsubmul(F,1,c);0===g.negative&&(B=g,n&&(n.words[c]=1));for(var l=c-1;l>=0;l--){var I=67108864*(0|B.words[F.length+l])+(0|B.words[F.length+l-1]);for(I=Math.min(I/U|0,67108863),B._ishlnsubmul(F,I,l);0!==B.negative;)I--,B.negative=0,B._ishlnsubmul(F,1,l),B.isZero()||(B.negative^=1);n&&(n.words[l]=I)}return n&&n.strip(),B.strip(),"div"!==e&&0!==Q&&B.iushrn(Q),{div:n||null,mod:B}},s.prototype.divmod=function(t,e,B){return Q(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(n=this.neg().divmod(t,e),"mod"!==e&&(F=n.div.neg()),"div"!==e&&(U=n.mod.neg(),B&&0!==U.negative&&U.iadd(t)),{div:F,mod:U}):0===this.negative&&0!==t.negative?(n=this.divmod(t.neg(),e),"mod"!==e&&(F=n.div.neg()),{div:F,mod:n.mod}):0!=(this.negative&t.negative)?(n=this.neg().divmod(t.neg(),e),"div"!==e&&(U=n.mod.neg(),B&&0!==U.negative&&U.isub(t)),{div:n.div,mod:U}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var F,U,n},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var Q=0!==e.div.negative?e.mod.isub(t):e.mod,B=t.ushrn(1),s=t.andln(1),F=Q.cmp(B);return F<0||1===s&&0===F?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){Q(t<=67108863);for(var e=(1<<26)%t,B=0,s=this.length-1;s>=0;s--)B=(e*B+(0|this.words[s]))%t;return B},s.prototype.idivn=function(t){Q(t<=67108863);for(var e=0,B=this.length-1;B>=0;B--){var s=(0|this.words[B])+67108864*e;this.words[B]=s/t|0,e=s%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){Q(0===t.negative),Q(!t.isZero());var e=this,B=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var F=new s(1),U=new s(0),n=new s(0),c=new s(1),o=0;e.isEven()&&B.isEven();)e.iushrn(1),B.iushrn(1),++o;for(var g=B.clone(),l=e.clone();!e.isZero();){for(var I=0,i=1;0==(e.words[0]&i)&&I<26;++I,i<<=1);if(I>0)for(e.iushrn(I);I-- >0;)(F.isOdd()||U.isOdd())&&(F.iadd(g),U.isub(l)),F.iushrn(1),U.iushrn(1);for(var r=0,a=1;0==(B.words[0]&a)&&r<26;++r,a<<=1);if(r>0)for(B.iushrn(r);r-- >0;)(n.isOdd()||c.isOdd())&&(n.iadd(g),c.isub(l)),n.iushrn(1),c.iushrn(1);e.cmp(B)>=0?(e.isub(B),F.isub(n),U.isub(c)):(B.isub(e),n.isub(F),c.isub(U))}return{a:n,b:c,gcd:B.iushln(o)}},s.prototype._invmp=function(t){Q(0===t.negative),Q(!t.isZero());var e=this,B=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var F,U=new s(1),n=new s(0),c=B.clone();e.cmpn(1)>0&&B.cmpn(1)>0;){for(var o=0,g=1;0==(e.words[0]&g)&&o<26;++o,g<<=1);if(o>0)for(e.iushrn(o);o-- >0;)U.isOdd()&&U.iadd(c),U.iushrn(1);for(var l=0,I=1;0==(B.words[0]&I)&&l<26;++l,I<<=1);if(l>0)for(B.iushrn(l);l-- >0;)n.isOdd()&&n.iadd(c),n.iushrn(1);e.cmp(B)>=0?(e.isub(B),U.isub(n)):(B.isub(e),n.isub(U))}return(F=0===e.cmpn(1)?U:n).cmpn(0)<0&&F.iadd(t),F},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),Q=t.clone();e.negative=0,Q.negative=0;for(var B=0;e.isEven()&&Q.isEven();B++)e.iushrn(1),Q.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;Q.isEven();)Q.iushrn(1);var s=e.cmp(Q);if(s<0){var F=e;e=Q,Q=F}else if(0===s||0===Q.cmpn(1))break;e.isub(Q)}return Q.iushln(B)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){Q("number"==typeof t);var e=t%26,B=(t-e)/26,s=1<<e;if(this.length<=B)return this._expand(B+1),this.words[B]|=s,this;for(var F=s,U=B;0!==F&&U<this.length;U++){var n=0|this.words[U];F=(n+=F)>>>26,n&=67108863,this.words[U]=n}return 0!==F&&(this.words[U]=F,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,B=t<0;if(0!==this.negative&&!B)return-1;if(0===this.negative&&B)return 1;if(this.strip(),this.length>1)e=1;else{B&&(t=-t),Q(t<=67108863,"Number is too big");var s=0|this.words[0];e=s===t?0:s<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,Q=this.length-1;Q>=0;Q--){var B=0|this.words[Q],s=0|t.words[Q];if(B!==s){B<s?e=-1:B>s&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new m(t)},s.prototype.toRed=function(t){return Q(!this.red,"Already a number in reduction context"),Q(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return Q(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return Q(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return Q(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return Q(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return Q(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return Q(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return Q(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return Q(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return Q(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return Q(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return Q(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return Q(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return Q(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return Q(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return Q(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var d={k256:null,p224:null,p192:null,p25519:null};function u(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function C(){u.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function y(){u.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function S(){u.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function b(){u.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function m(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else Q(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function G(t){m.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}u.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},u.prototype.ireduce=function(t){var e,Q=t;do{this.split(Q,this.tmp),e=(Q=(Q=this.imulK(Q)).iadd(this.tmp)).bitLength()}while(e>this.n);var B=e<this.n?-1:Q.ucmp(this.p);return 0===B?(Q.words[0]=0,Q.length=1):B>0?Q.isub(this.p):void 0!==Q.strip?Q.strip():Q._strip(),Q},u.prototype.split=function(t,e){t.iushrn(this.n,0,e)},u.prototype.imulK=function(t){return t.imul(this.k)},B(C,u),C.prototype.split=function(t,e){for(var Q=4194303,B=Math.min(t.length,9),s=0;s<B;s++)e.words[s]=t.words[s];if(e.length=B,t.length<=9)return t.words[0]=0,void(t.length=1);var F=t.words[9];for(e.words[e.length++]=F&Q,s=10;s<t.length;s++){var U=0|t.words[s];t.words[s-10]=(U&Q)<<4|F>>>22,F=U}F>>>=22,t.words[s-10]=F,0===F&&t.length>10?t.length-=10:t.length-=9},C.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,Q=0;Q<t.length;Q++){var B=0|t.words[Q];e+=977*B,t.words[Q]=67108863&e,e=64*B+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},B(y,u),B(S,u),B(b,u),b.prototype.imulK=function(t){for(var e=0,Q=0;Q<t.length;Q++){var B=19*(0|t.words[Q])+e,s=67108863&B;B>>>=26,t.words[Q]=s,e=B}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(d[t])return d[t];var e;if("k256"===t)e=new C;else if("p224"===t)e=new y;else if("p192"===t)e=new S;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new b}return d[t]=e,e},m.prototype._verify1=function(t){Q(0===t.negative,"red works only with positives"),Q(t.red,"red works only with red numbers")},m.prototype._verify2=function(t,e){Q(0==(t.negative|e.negative),"red works only with positives"),Q(t.red&&t.red===e.red,"red works only with red numbers")},m.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},m.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},m.prototype.add=function(t,e){this._verify2(t,e);var Q=t.add(e);return Q.cmp(this.m)>=0&&Q.isub(this.m),Q._forceRed(this)},m.prototype.iadd=function(t,e){this._verify2(t,e);var Q=t.iadd(e);return Q.cmp(this.m)>=0&&Q.isub(this.m),Q},m.prototype.sub=function(t,e){this._verify2(t,e);var Q=t.sub(e);return Q.cmpn(0)<0&&Q.iadd(this.m),Q._forceRed(this)},m.prototype.isub=function(t,e){this._verify2(t,e);var Q=t.isub(e);return Q.cmpn(0)<0&&Q.iadd(this.m),Q},m.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},m.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},m.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},m.prototype.isqr=function(t){return this.imul(t,t.clone())},m.prototype.sqr=function(t){return this.mul(t,t)},m.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(Q(e%2==1),3===e){var B=this.m.add(new s(1)).iushrn(2);return this.pow(t,B)}for(var F=this.m.subn(1),U=0;!F.isZero()&&0===F.andln(1);)U++,F.iushrn(1);Q(!F.isZero());var n=new s(1).toRed(this),c=n.redNeg(),o=this.m.subn(1).iushrn(1),g=this.m.bitLength();for(g=new s(2*g*g).toRed(this);0!==this.pow(g,o).cmp(c);)g.redIAdd(c);for(var l=this.pow(g,F),I=this.pow(t,F.addn(1).iushrn(1)),i=this.pow(t,F),r=U;0!==i.cmp(n);){for(var a=i,d=0;0!==a.cmp(n);d++)a=a.redSqr();Q(d<r);var u=this.pow(l,new s(1).iushln(r-d-1));I=I.redMul(u),l=u.redSqr(),i=i.redMul(l),r=d}return I},m.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},m.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var Q=new Array(16);Q[0]=new s(1).toRed(this),Q[1]=t;for(var B=2;B<Q.length;B++)Q[B]=this.mul(Q[B-1],t);var F=Q[0],U=0,n=0,c=e.bitLength()%26;for(0===c&&(c=26),B=e.length-1;B>=0;B--){for(var o=e.words[B],g=c-1;g>=0;g--){var l=o>>g&1;F!==Q[0]&&(F=this.sqr(F)),0!==l||0!==U?(U<<=1,U|=l,(4==++n||0===B&&0===g)&&(F=this.mul(F,Q[U]),n=0,U=0)):n=0}c=26}return F},m.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},m.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new G(t)},B(G,m),G.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},G.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},G.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var Q=t.imul(e),B=Q.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),s=Q.isub(B).iushrn(this.shift),F=s;return s.cmp(this.m)>=0?F=s.isub(this.m):s.cmpn(0)<0&&(F=s.iadd(this.m)),F._forceRed(this)},G.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var Q=t.mul(e),B=Q.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),F=Q.isub(B).iushrn(this.shift),U=F;return F.cmp(this.m)>=0?U=F.isub(this.m):F.cmpn(0)<0&&(U=F.iadd(this.m)),U._forceRed(this)},G.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(bn$1,commonjsGlobal);var _BN=bn$1.exports;const version$8="logger/5.5.0";let _permanentCensorErrors=!1,_censorErrors=!1;const LogLevels={debug:1,default:2,info:2,warning:3,error:4,off:5};let _logLevel=LogLevels.default,_globalLogger=null;function _checkNormalize(){try{const t=[];if(["NFD","NFC","NFKD","NFKC"].forEach((e=>{try{if("test"!=="test".normalize(e))throw new Error("bad normalize")}catch(Q){t.push(e)}})),t.length)throw new Error("missing "+t.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(t){return t.message}return null}const _normalizeError=_checkNormalize();var LogLevel,ErrorCode;!function(t){t.DEBUG="DEBUG",t.INFO="INFO",t.WARNING="WARNING",t.ERROR="ERROR",t.OFF="OFF"}(LogLevel||(LogLevel={})),function(t){t.UNKNOWN_ERROR="UNKNOWN_ERROR",t.NOT_IMPLEMENTED="NOT_IMPLEMENTED",t.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",t.NETWORK_ERROR="NETWORK_ERROR",t.SERVER_ERROR="SERVER_ERROR",t.TIMEOUT="TIMEOUT",t.BUFFER_OVERRUN="BUFFER_OVERRUN",t.NUMERIC_FAULT="NUMERIC_FAULT",t.MISSING_NEW="MISSING_NEW",t.INVALID_ARGUMENT="INVALID_ARGUMENT",t.MISSING_ARGUMENT="MISSING_ARGUMENT",t.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",t.CALL_EXCEPTION="CALL_EXCEPTION",t.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",t.NONCE_EXPIRED="NONCE_EXPIRED",t.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",t.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",t.TRANSACTION_REPLACED="TRANSACTION_REPLACED"}(ErrorCode||(ErrorCode={}));const HEX="0123456789abcdef";class Logger{constructor(t){Object.defineProperty(this,"version",{enumerable:!0,value:t,writable:!1})}_log(t,e){const Q=t.toLowerCase();null==LogLevels[Q]&&this.throwArgumentError("invalid log level name","logLevel",t),_logLevel>LogLevels[Q]||console.log.apply(console,e)}debug(...t){this._log(Logger.levels.DEBUG,t)}info(...t){this._log(Logger.levels.INFO,t)}warn(...t){this._log(Logger.levels.WARNING,t)}makeError(t,e,Q){if(_censorErrors)return this.makeError("censored error",e,{});e||(e=Logger.errors.UNKNOWN_ERROR),Q||(Q={});const B=[];Object.keys(Q).forEach((t=>{const e=Q[t];try{if(e instanceof Uint8Array){let Q="";for(let t=0;t<e.length;t++)Q+=HEX[e[t]>>4],Q+=HEX[15&e[t]];B.push(t+"=Uint8Array(0x"+Q+")")}else B.push(t+"="+JSON.stringify(e))}catch(e){B.push(t+"="+JSON.stringify(Q[t].toString()))}})),B.push(`code=${e}`),B.push(`version=${this.version}`);const s=t;B.length&&(t+=" ("+B.join(", ")+")");const F=new Error(t);return F.reason=s,F.code=e,Object.keys(Q).forEach((function(t){F[t]=Q[t]})),F}throwError(t,e,Q){throw this.makeError(t,e,Q)}throwArgumentError(t,e,Q){return this.throwError(t,Logger.errors.INVALID_ARGUMENT,{argument:e,value:Q})}assert(t,e,Q,B){t||this.throwError(e,Q,B)}assertArgument(t,e,Q,B){t||this.throwArgumentError(e,Q,B)}checkNormalize(t){_normalizeError&&this.throwError("platform missing String.prototype.normalize",Logger.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:_normalizeError})}checkSafeUint53(t,e){"number"==typeof t&&(null==e&&(e="value not safe"),(t<0||t>=9007199254740991)&&this.throwError(e,Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:t}),t%1&&this.throwError(e,Logger.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:t}))}checkArgumentCount(t,e,Q){Q=Q?": "+Q:"",t<e&&this.throwError("missing argument"+Q,Logger.errors.MISSING_ARGUMENT,{count:t,expectedCount:e}),t>e&&this.throwError("too many arguments"+Q,Logger.errors.UNEXPECTED_ARGUMENT,{count:t,expectedCount:e})}checkNew(t,e){t!==Object&&null!=t||this.throwError("missing new",Logger.errors.MISSING_NEW,{name:e.name})}checkAbstract(t,e){t===e?this.throwError("cannot instantiate abstract class "+JSON.stringify(e.name)+" directly; use a sub-class",Logger.errors.UNSUPPORTED_OPERATION,{name:t.name,operation:"new"}):t!==Object&&null!=t||this.throwError("missing new",Logger.errors.MISSING_NEW,{name:e.name})}static globalLogger(){return _globalLogger||(_globalLogger=new Logger(version$8)),_globalLogger}static setCensorship(t,e){if(!t&&e&&this.globalLogger().throwError("cannot permanently disable censorship",Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),_permanentCensorErrors){if(!t)return;this.globalLogger().throwError("error censorship permanent",Logger.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}_censorErrors=!!t,_permanentCensorErrors=!!e}static setLogLevel(t){const e=LogLevels[t.toLowerCase()];null!=e?_logLevel=e:Logger.globalLogger().warn("invalid log level - "+t)}static from(t){return new Logger(t)}}Logger.errors=ErrorCode,Logger.levels=LogLevel;const version$7="bytes/5.5.0",logger$9=new Logger(version$7);function isHexable(t){return!!t.toHexString}function addSlice(t){return t.slice||(t.slice=function(){const e=Array.prototype.slice.call(arguments);return addSlice(new Uint8Array(Array.prototype.slice.apply(t,e)))}),t}function isInteger(t){return"number"==typeof t&&t==t&&t%1==0}function isBytes(t){if(null==t)return!1;if(t.constructor===Uint8Array)return!0;if("string"==typeof t)return!1;if(!isInteger(t.length)||t.length<0)return!1;for(let e=0;e<t.length;e++){const Q=t[e];if(!isInteger(Q)||Q<0||Q>=256)return!1}return!0}function arrayify(t,e){if(e||(e={}),"number"==typeof t){logger$9.checkSafeUint53(t,"invalid arrayify value");const e=[];for(;t;)e.unshift(255&t),t=parseInt(String(t/256));return 0===e.length&&e.push(0),addSlice(new Uint8Array(e))}if(e.allowMissingPrefix&&"string"==typeof t&&"0x"!==t.substring(0,2)&&(t="0x"+t),isHexable(t)&&(t=t.toHexString()),isHexString(t)){let Q=t.substring(2);Q.length%2&&("left"===e.hexPad?Q="0x0"+Q.substring(2):"right"===e.hexPad?Q+="0":logger$9.throwArgumentError("hex data is odd-length","value",t));const B=[];for(let t=0;t<Q.length;t+=2)B.push(parseInt(Q.substring(t,t+2),16));return addSlice(new Uint8Array(B))}return isBytes(t)?addSlice(new Uint8Array(t)):logger$9.throwArgumentError("invalid arrayify value","value",t)}function concat(t){const e=t.map((t=>arrayify(t))),Q=e.reduce(((t,e)=>t+e.length),0),B=new Uint8Array(Q);return e.reduce(((t,e)=>(B.set(e,t),t+e.length)),0),addSlice(B)}function isHexString(t,e){return!("string"!=typeof t||!t.match(/^0x[0-9A-Fa-f]*$/))&&(!e||t.length===2+2*e)}const HexCharacters="0123456789abcdef";function hexlify(t,e){if(e||(e={}),"number"==typeof t){logger$9.checkSafeUint53(t,"invalid hexlify value");let e="";for(;t;)e=HexCharacters[15&t]+e,t=Math.floor(t/16);return e.length?(e.length%2&&(e="0"+e),"0x"+e):"0x00"}if("bigint"==typeof t)return(t=t.toString(16)).length%2?"0x0"+t:"0x"+t;if(e.allowMissingPrefix&&"string"==typeof t&&"0x"!==t.substring(0,2)&&(t="0x"+t),isHexable(t))return t.toHexString();if(isHexString(t))return t.length%2&&("left"===e.hexPad?t="0x0"+t.substring(2):"right"===e.hexPad?t+="0":logger$9.throwArgumentError("hex data is odd-length","value",t)),t.toLowerCase();if(isBytes(t)){let e="0x";for(let Q=0;Q<t.length;Q++){let B=t[Q];e+=HexCharacters[(240&B)>>4]+HexCharacters[15&B]}return e}return logger$9.throwArgumentError("invalid hexlify value","value",t)}function hexDataSlice(t,e,Q){return"string"!=typeof t?t=hexlify(t):(!isHexString(t)||t.length%2)&&logger$9.throwArgumentError("invalid hexData","value",t),e=2+2*e,null!=Q?"0x"+t.substring(e,2+2*Q):"0x"+t.substring(e)}function hexConcat(t){let e="0x";return t.forEach((t=>{e+=hexlify(t).substring(2)})),e}function hexZeroPad(t,e){for("string"!=typeof t?t=hexlify(t):isHexString(t)||logger$9.throwArgumentError("invalid hex string","value",t),t.length>2*e+2&&logger$9.throwArgumentError("value out of range","value",arguments[1]);t.length<2*e+2;)t="0x0"+t.substring(2);return t}const version$6="bignumber/5.5.0";var BN$8=_BN.BN;const logger$8=new Logger(version$6),_constructorGuard$1={},MAX_SAFE=9007199254740991;let _warnedToStringRadix=!1;class BigNumber{constructor(t,e){logger$8.checkNew(new.target,BigNumber),t!==_constructorGuard$1&&logger$8.throwError("cannot call constructor directly; use BigNumber.from",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new (BigNumber)"}),this._hex=e,this._isBigNumber=!0,Object.freeze(this)}fromTwos(t){return toBigNumber(toBN(this).fromTwos(t))}toTwos(t){return toBigNumber(toBN(this).toTwos(t))}abs(){return"-"===this._hex[0]?BigNumber.from(this._hex.substring(1)):this}add(t){return toBigNumber(toBN(this).add(toBN(t)))}sub(t){return toBigNumber(toBN(this).sub(toBN(t)))}div(t){return BigNumber.from(t).isZero()&&throwFault("division by zero","div"),toBigNumber(toBN(this).div(toBN(t)))}mul(t){return toBigNumber(toBN(this).mul(toBN(t)))}mod(t){const e=toBN(t);return e.isNeg()&&throwFault("cannot modulo negative values","mod"),toBigNumber(toBN(this).umod(e))}pow(t){const e=toBN(t);return e.isNeg()&&throwFault("cannot raise to negative values","pow"),toBigNumber(toBN(this).pow(e))}and(t){const e=toBN(t);return(this.isNegative()||e.isNeg())&&throwFault("cannot 'and' negative values","and"),toBigNumber(toBN(this).and(e))}or(t){const e=toBN(t);return(this.isNegative()||e.isNeg())&&throwFault("cannot 'or' negative values","or"),toBigNumber(toBN(this).or(e))}xor(t){const e=toBN(t);return(this.isNegative()||e.isNeg())&&throwFault("cannot 'xor' negative values","xor"),toBigNumber(toBN(this).xor(e))}mask(t){return(this.isNegative()||t<0)&&throwFault("cannot mask negative values","mask"),toBigNumber(toBN(this).maskn(t))}shl(t){return(this.isNegative()||t<0)&&throwFault("cannot shift negative values","shl"),toBigNumber(toBN(this).shln(t))}shr(t){return(this.isNegative()||t<0)&&throwFault("cannot shift negative values","shr"),toBigNumber(toBN(this).shrn(t))}eq(t){return toBN(this).eq(toBN(t))}lt(t){return toBN(this).lt(toBN(t))}lte(t){return toBN(this).lte(toBN(t))}gt(t){return toBN(this).gt(toBN(t))}gte(t){return toBN(this).gte(toBN(t))}isNegative(){return"-"===this._hex[0]}isZero(){return toBN(this).isZero()}toNumber(){try{return toBN(this).toNumber()}catch(t){throwFault("overflow","toNumber",this.toString())}return null}toBigInt(){try{return BigInt(this.toString())}catch(t){}return logger$8.throwError("this platform does not support BigInt",Logger.errors.UNSUPPORTED_OPERATION,{value:this.toString()})}toString(){return arguments.length>0&&(10===arguments[0]?_warnedToStringRadix||(_warnedToStringRadix=!0,logger$8.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")):16===arguments[0]?logger$8.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()",Logger.errors.UNEXPECTED_ARGUMENT,{}):logger$8.throwError("BigNumber.toString does not accept parameters",Logger.errors.UNEXPECTED_ARGUMENT,{})),toBN(this).toString(10)}toHexString(){return this._hex}toJSON(t){return{type:"BigNumber",hex:this.toHexString()}}static from(t){if(t instanceof BigNumber)return t;if("string"==typeof t)return t.match(/^-?0x[0-9a-f]+$/i)?new BigNumber(_constructorGuard$1,toHex$1(t)):t.match(/^-?[0-9]+$/)?new BigNumber(_constructorGuard$1,toHex$1(new BN$8(t))):logger$8.throwArgumentError("invalid BigNumber string","value",t);if("number"==typeof t)return t%1&&throwFault("underflow","BigNumber.from",t),(t>=MAX_SAFE||t<=-MAX_SAFE)&&throwFault("overflow","BigNumber.from",t),BigNumber.from(String(t));const e=t;if("bigint"==typeof e)return BigNumber.from(e.toString());if(isBytes(e))return BigNumber.from(hexlify(e));if(e)if(e.toHexString){const t=e.toHexString();if("string"==typeof t)return BigNumber.from(t)}else{let t=e._hex;if(null==t&&"BigNumber"===e.type&&(t=e.hex),"string"==typeof t&&(isHexString(t)||"-"===t[0]&&isHexString(t.substring(1))))return BigNumber.from(t)}return logger$8.throwArgumentError("invalid BigNumber value","value",t)}static isBigNumber(t){return!(!t||!t._isBigNumber)}}function toHex$1(t){if("string"!=typeof t)return toHex$1(t.toString(16));if("-"===t[0])return"-"===(t=t.substring(1))[0]&&logger$8.throwArgumentError("invalid hex","value",t),"0x00"===(t=toHex$1(t))?t:"-"+t;if("0x"!==t.substring(0,2)&&(t="0x"+t),"0x"===t)return"0x00";for(t.length%2&&(t="0x0"+t.substring(2));t.length>4&&"0x00"===t.substring(0,4);)t="0x"+t.substring(4);return t}function toBigNumber(t){return BigNumber.from(toHex$1(t))}function toBN(t){const e=BigNumber.from(t).toHexString();return"-"===e[0]?new BN$8("-"+e.substring(3),16):new BN$8(e.substring(2),16)}function throwFault(t,e,Q){const B={fault:t,operation:e};return null!=Q&&(B.value=Q),logger$8.throwError(t,Logger.errors.NUMERIC_FAULT,B)}function _base36To16(t){return new BN$8(t,36).toString(16)}const version$5="properties/5.5.0";window&&window.__awaiter;const logger$7=new Logger(version$5);function defineReadOnly(t,e,Q){Object.defineProperty(t,e,{enumerable:!0,value:Q,writable:!1})}function getStatic(t,e){for(let Q=0;Q<32;Q++){if(t[e])return t[e];if(!t.prototype||"object"!=typeof t.prototype)break;t=Object.getPrototypeOf(t.prototype).constructor}return null}const opaque={bigint:!0,boolean:!0,function:!0,number:!0,string:!0};function _isFrozen(t){if(null==t||opaque[typeof t])return!0;if(Array.isArray(t)||"object"==typeof t){if(!Object.isFrozen(t))return!1;const e=Object.keys(t);for(let Q=0;Q<e.length;Q++){let B=null;try{B=t[e[Q]]}catch(t){continue}if(!_isFrozen(B))return!1}return!0}return logger$7.throwArgumentError("Cannot deepCopy "+typeof t,"object",t)}function _deepCopy(t){if(_isFrozen(t))return t;if(Array.isArray(t))return Object.freeze(t.map((t=>deepCopy(t))));if("object"==typeof t){const e={};for(const Q in t){const B=t[Q];void 0!==B&&defineReadOnly(e,Q,deepCopy(B))}return e}return logger$7.throwArgumentError("Cannot deepCopy "+typeof t,"object",t)}function deepCopy(t){return _deepCopy(t)}class Description{constructor(t){for(const e in t)this[e]=deepCopy(t[e])}}const version$4="abi/5.5.0",logger$6=new Logger(version$4),_constructorGuard={};let ModifiersBytes={calldata:!0,memory:!0,storage:!0},ModifiersNest={calldata:!0,memory:!0};function checkModifier(t,e){if("bytes"===t||"string"===t){if(ModifiersBytes[e])return!0}else if("address"===t){if("payable"===e)return!0}else if((t.indexOf("[")>=0||"tuple"===t)&&ModifiersNest[e])return!0;return(ModifiersBytes[e]||"payable"===e)&&logger$6.throwArgumentError("invalid modifier","name",e),!1}function parseParamType(t,e){let Q=t;function B(e){logger$6.throwArgumentError(`unexpected character at position ${e}`,"param",t)}function s(t){let Q={type:"",name:"",parent:t,state:{allowType:!0}};return e&&(Q.indexed=!1),Q}t=t.replace(/\s/g," ");let F={type:"",name:"",state:{allowType:!0}},U=F;for(let Q=0;Q<t.length;Q++){let F=t[Q];switch(F){case"(":U.state.allowType&&""===U.type?U.type="tuple":U.state.allowParams||B(Q),U.state.allowType=!1,U.type=verifyType(U.type),U.components=[s(U)],U=U.components[0];break;case")":delete U.state,"indexed"===U.name&&(e||B(Q),U.indexed=!0,U.name=""),checkModifier(U.type,U.name)&&(U.name=""),U.type=verifyType(U.type);let t=U;U=U.parent,U||B(Q),delete t.parent,U.state.allowParams=!1,U.state.allowName=!0,U.state.allowArray=!0;break;case",":delete U.state,"indexed"===U.name&&(e||B(Q),U.indexed=!0,U.name=""),checkModifier(U.type,U.name)&&(U.name=""),U.type=verifyType(U.type);let n=s(U.parent);U.parent.components.push(n),delete U.parent,U=n;break;case" ":U.state.allowType&&""!==U.type&&(U.type=verifyType(U.type),delete U.state.allowType,U.state.allowName=!0,U.state.allowParams=!0),U.state.allowName&&""!==U.name&&("indexed"===U.name?(e||B(Q),U.indexed&&B(Q),U.indexed=!0,U.name=""):checkModifier(U.type,U.name)?U.name="":U.state.allowName=!1);break;case"[":U.state.allowArray||B(Q),U.type+=F,U.state.allowArray=!1,U.state.allowName=!1,U.state.readArray=!0;break;case"]":U.state.readArray||B(Q),U.type+=F,U.state.readArray=!1,U.state.allowArray=!0,U.state.allowName=!0;break;default:U.state.allowType?(U.type+=F,U.state.allowParams=!0,U.state.allowArray=!0):U.state.allowName?(U.name+=F,delete U.state.allowArray):U.state.readArray?U.type+=F:B(Q)}}return U.parent&&logger$6.throwArgumentError("unexpected eof","param",t),delete F.state,"indexed"===U.name?(e||B(Q.length-7),U.indexed&&B(Q.length-7),U.indexed=!0,U.name=""):checkModifier(U.type,U.name)&&(U.name=""),F.type=verifyType(F.type),F}function populate(t,e){for(let Q in e)defineReadOnly(t,Q,e[Q])}const FormatTypes=Object.freeze({sighash:"sighash",minimal:"minimal",full:"full",json:"json"}),paramTypeArray=new RegExp(/^(.*)\[([0-9]*)\]$/);class ParamType{constructor(t,e){t!==_constructorGuard&&logger$6.throwError("use fromString",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new ParamType()"}),populate(this,e);let Q=this.type.match(paramTypeArray);populate(this,Q?{arrayLength:parseInt(Q[2]||"-1"),arrayChildren:ParamType.fromObject({type:Q[1],components:this.components}),baseType:"array"}:{arrayLength:null,arrayChildren:null,baseType:null!=this.components?"tuple":this.type}),this._isParamType=!0,Object.freeze(this)}format(t){if(t||(t=FormatTypes.sighash),FormatTypes[t]||logger$6.throwArgumentError("invalid format type","format",t),t===FormatTypes.json){let e={type:"tuple"===this.baseType?"tuple":this.type,name:this.name||void 0};return"boolean"==typeof this.indexed&&(e.indexed=this.indexed),this.components&&(e.components=this.components.map((e=>JSON.parse(e.format(t))))),JSON.stringify(e)}let e="";return"array"===this.baseType?(e+=this.arrayChildren.format(t),e+="["+(this.arrayLength<0?"":String(this.arrayLength))+"]"):"tuple"===this.baseType?(t!==FormatTypes.sighash&&(e+=this.type),e+="("+this.components.map((e=>e.format(t))).join(t===FormatTypes.full?", ":",")+")"):e+=this.type,t!==FormatTypes.sighash&&(!0===this.indexed&&(e+=" indexed"),t===FormatTypes.full&&this.name&&(e+=" "+this.name)),e}static from(t,e){return"string"==typeof t?ParamType.fromString(t,e):ParamType.fromObject(t)}static fromObject(t){return ParamType.isParamType(t)?t:new ParamType(_constructorGuard,{name:t.name||null,type:verifyType(t.type),indexed:null==t.indexed?null:!!t.indexed,components:t.components?t.components.map(ParamType.fromObject):null})}static fromString(t,e){return Q=parseParamType(t,!!e),ParamType.fromObject({name:Q.name,type:Q.type,indexed:Q.indexed,components:Q.components});var Q}static isParamType(t){return!(null==t||!t._isParamType)}}function parseParams(t,e){return splitNesting(t).map((t=>ParamType.fromString(t,e)))}class Fragment{constructor(t,e){t!==_constructorGuard&&logger$6.throwError("use a static from method",Logger.errors.UNSUPPORTED_OPERATION,{operation:"new Fragment()"}),populate(this,e),this._isFragment=!0,Object.freeze(this)}static from(t){return Fragment.isFragment(t)?t:"string"==typeof t?Fragment.fromString(t):Fragment.fromObject(t)}static fromObject(t){if(Fragment.isFragment(t))return t;switch(t.type){case"function":return FunctionFragment.fromObject(t);case"event":return EventFragment.fromObject(t);case"constructor":return ConstructorFragment.fromObject(t);case"error":return ErrorFragment.fromObject(t);case"fallback":case"receive":return null}return logger$6.throwArgumentError("invalid fragment object","value",t)}static fromString(t){return"event"===(t=(t=(t=t.replace(/\s/g," ")).replace(/\(/g," (").replace(/\)/g,") ").replace(/\s+/g," ")).trim()).split(" ")[0]?EventFragment.fromString(t.substring(5).trim()):"function"===t.split(" ")[0]?FunctionFragment.fromString(t.substring(8).trim()):"constructor"===t.split("(")[0].trim()?ConstructorFragment.fromString(t.trim()):"error"===t.split(" ")[0]?ErrorFragment.fromString(t.substring(5).trim()):logger$6.throwArgumentError("unsupported fragment","value",t)}static isFragment(t){return!(!t||!t._isFragment)}}class EventFragment extends Fragment{format(t){if(t||(t=FormatTypes.sighash),FormatTypes[t]||logger$6.throwArgumentError("invalid format type","format",t),t===FormatTypes.json)return JSON.stringify({type:"event",anonymous:this.anonymous,name:this.name,inputs:this.inputs.map((e=>JSON.parse(e.format(t))))});let e="";return t!==FormatTypes.sighash&&(e+="event "),e+=this.name+"("+this.inputs.map((e=>e.format(t))).join(t===FormatTypes.full?", ":",")+") ",t!==FormatTypes.sighash&&this.anonymous&&(e+="anonymous "),e.trim()}static from(t){return"string"==typeof t?EventFragment.fromString(t):EventFragment.fromObject(t)}static fromObject(t){if(EventFragment.isEventFragment(t))return t;"event"!==t.type&&logger$6.throwArgumentError("invalid event object","value",t);const e={name:verifyIdentifier(t.name),anonymous:t.anonymous,inputs:t.inputs?t.inputs.map(ParamType.fromObject):[],type:"event"};return new EventFragment(_constructorGuard,e)}static fromString(t){let e=t.match(regexParen);e||logger$6.throwArgumentError("invalid event string","value",t);let Q=!1;return e[3].split(" ").forEach((t=>{switch(t.trim()){case"anonymous":Q=!0;break;case"":break;default:logger$6.warn("unknown modifier: "+t)}})),EventFragment.fromObject({name:e[1].trim(),anonymous:Q,inputs:parseParams(e[2],!0),type:"event"})}static isEventFragment(t){return t&&t._isFragment&&"event"===t.type}}function parseGas(t,e){e.gas=null;let Q=t.split("@");return 1!==Q.length?(Q.length>2&&logger$6.throwArgumentError("invalid human-readable ABI signature","value",t),Q[1].match(/^[0-9]+$/)||logger$6.throwArgumentError("invalid human-readable ABI signature gas","value",t),e.gas=BigNumber.from(Q[1]),Q[0]):t}function parseModifiers(t,e){e.constant=!1,e.payable=!1,e.stateMutability="nonpayable",t.split(" ").forEach((t=>{switch(t.trim()){case"constant":e.constant=!0;break;case"payable":e.payable=!0,e.stateMutability="payable";break;case"nonpayable":e.payable=!1,e.stateMutability="nonpayable";break;case"pure":e.constant=!0,e.stateMutability="pure";break;case"view":e.constant=!0,e.stateMutability="view";break;case"external":case"public":case"":break;default:console.log("unknown modifier: "+t)}}))}function verifyState(t){let e={constant:!1,payable:!0,stateMutability:"payable"};return null!=t.stateMutability?(e.stateMutability=t.stateMutability,e.constant="view"===e.stateMutability||"pure"===e.stateMutability,null!=t.constant&&!!t.constant!==e.constant&&logger$6.throwArgumentError("cannot have constant function with mutability "+e.stateMutability,"value",t),e.payable="payable"===e.stateMutability,null!=t.payable&&!!t.payable!==e.payable&&logger$6.throwArgumentError("cannot have payable function with mutability "+e.stateMutability,"value",t)):null!=t.payable?(e.payable=!!t.payable,null!=t.constant||e.payable||"constructor"===t.type||logger$6.throwArgumentError("unable to determine stateMutability","value",t),e.constant=!!t.constant,e.constant?e.stateMutability="view":e.stateMutability=e.payable?"payable":"nonpayable",e.payable&&e.constant&&logger$6.throwArgumentError("cannot have constant payable function","value",t)):null!=t.constant?(e.constant=!!t.constant,e.payable=!e.constant,e.stateMutability=e.constant?"view":"payable"):"constructor"!==t.type&&logger$6.throwArgumentError("unable to determine stateMutability","value",t),e}class ConstructorFragment extends Fragment{format(t){if(t||(t=FormatTypes.sighash),FormatTypes[t]||logger$6.throwArgumentError("invalid format type","format",t),t===FormatTypes.json)return JSON.stringify({type:"constructor",stateMutability:"nonpayable"!==this.stateMutability?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map((e=>JSON.parse(e.format(t))))});t===FormatTypes.sighash&&logger$6.throwError("cannot format a constructor for sighash",Logger.errors.UNSUPPORTED_OPERATION,{operation:"format(sighash)"});let e="constructor("+this.inputs.map((e=>e.format(t))).join(t===FormatTypes.full?", ":",")+") ";return this.stateMutability&&"nonpayable"!==this.stateMutability&&(e+=this.stateMutability+" "),e.trim()}static from(t){return"string"==typeof t?ConstructorFragment.fromString(t):ConstructorFragment.fromObject(t)}static fromObject(t){if(ConstructorFragment.isConstructorFragment(t))return t;"constructor"!==t.type&&logger$6.throwArgumentError("invalid constructor object","value",t);let e=verifyState(t);e.constant&&logger$6.throwArgumentError("constructor cannot be constant","value",t);const Q={name:null,type:t.type,inputs:t.inputs?t.inputs.map(ParamType.fromObject):[],payable:e.payable,stateMutability:e.stateMutability,gas:t.gas?BigNumber.from(t.gas):null};return new ConstructorFragment(_constructorGuard,Q)}static fromString(t){let e={type:"constructor"},Q=(t=parseGas(t,e)).match(regexParen);return Q&&"constructor"===Q[1].trim()||logger$6.throwArgumentError("invalid constructor string","value",t),e.inputs=parseParams(Q[2].trim(),!1),parseModifiers(Q[3].trim(),e),ConstructorFragment.fromObject(e)}static isConstructorFragment(t){return t&&t._isFragment&&"constructor"===t.type}}class FunctionFragment extends ConstructorFragment{format(t){if(t||(t=FormatTypes.sighash),FormatTypes[t]||logger$6.throwArgumentError("invalid format type","format",t),t===FormatTypes.json)return JSON.stringify({type:"function",name:this.name,constant:this.constant,stateMutability:"nonpayable"!==this.stateMutability?this.stateMutability:void 0,payable:this.payable,gas:this.gas?this.gas.toNumber():void 0,inputs:this.inputs.map((e=>JSON.parse(e.format(t)))),outputs:this.outputs.map((e=>JSON.parse(e.format(t))))});let e="";return t!==FormatTypes.sighash&&(e+="function "),e+=this.name+"("+this.inputs.map((e=>e.format(t))).join(t===FormatTypes.full?", ":",")+") ",t!==FormatTypes.sighash&&(this.stateMutability?"nonpayable"!==this.stateMutability&&(e+=this.stateMutability+" "):this.constant&&(e+="view "),this.outputs&&this.outputs.length&&(e+="returns ("+this.outputs.map((e=>e.format(t))).join(", ")+") "),null!=this.gas&&(e+="@"+this.gas.toString()+" ")),e.trim()}static from(t){return"string"==typeof t?FunctionFragment.fromString(t):FunctionFragment.fromObject(t)}static fromObject(t){if(FunctionFragment.isFunctionFragment(t))return t;"function"!==t.type&&logger$6.throwArgumentError("invalid function object","value",t);let e=verifyState(t);const Q={type:t.type,name:verifyIdentifier(t.name),constant:e.constant,inputs:t.inputs?t.inputs.map(ParamType.fromObject):[],outputs:t.outputs?t.outputs.map(ParamType.fromObject):[],payable:e.payable,stateMutability:e.stateMutability,gas:t.gas?BigNumber.from(t.gas):null};return new FunctionFragment(_constructorGuard,Q)}static fromString(t){let e={type:"function"},Q=(t=parseGas(t,e)).split(" returns ");Q.length>2&&logger$6.throwArgumentError("invalid function string","value",t);let B=Q[0].match(regexParen);if(B||logger$6.throwArgumentError("invalid function signature","value",t),e.name=B[1].trim(),e.name&&verifyIdentifier(e.name),e.inputs=parseParams(B[2],!1),parseModifiers(B[3].trim(),e),Q.length>1){let B=Q[1].match(regexParen);""==B[1].trim()&&""==B[3].trim()||logger$6.throwArgumentError("unexpected tokens","value",t),e.outputs=parseParams(B[2],!1)}else e.outputs=[];return FunctionFragment.fromObject(e)}static isFunctionFragment(t){return t&&t._isFragment&&"function"===t.type}}function checkForbidden(t){const e=t.format();return"Error(string)"!==e&&"Panic(uint256)"!==e||logger$6.throwArgumentError(`cannot specify user defined ${e} error`,"fragment",t),t}class ErrorFragment extends Fragment{format(t){if(t||(t=FormatTypes.sighash),FormatTypes[t]||logger$6.throwArgumentError("invalid format type","format",t),t===FormatTypes.json)return JSON.stringify({type:"error",name:this.name,inputs:this.inputs.map((e=>JSON.parse(e.format(t))))});let e="";return t!==FormatTypes.sighash&&(e+="error "),e+=this.name+"("+this.inputs.map((e=>e.format(t))).join(t===FormatTypes.full?", ":",")+") ",e.trim()}static from(t){return"string"==typeof t?ErrorFragment.fromString(t):ErrorFragment.fromObject(t)}static fromObject(t){if(ErrorFragment.isErrorFragment(t))return t;"error"!==t.type&&logger$6.throwArgumentError("invalid error object","value",t);const e={type:t.type,name:verifyIdentifier(t.name),inputs:t.inputs?t.inputs.map(ParamType.fromObject):[]};return checkForbidden(new ErrorFragment(_constructorGuard,e))}static fromString(t){let e={type:"error"},Q=t.match(regexParen);return Q||logger$6.throwArgumentError("invalid error signature","value",t),e.name=Q[1].trim(),e.name&&verifyIdentifier(e.name),e.inputs=parseParams(Q[2],!1),checkForbidden(ErrorFragment.fromObject(e))}static isErrorFragment(t){return t&&t._isFragment&&"error"===t.type}}function verifyType(t){return t.match(/^uint($|[^1-9])/)?t="uint256"+t.substring(4):t.match(/^int($|[^1-9])/)&&(t="int256"+t.substring(3)),t}const regexIdentifier=new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");function verifyIdentifier(t){return t&&t.match(regexIdentifier)||logger$6.throwArgumentError(`invalid identifier "${t}"`,"value",t),t}const regexParen=new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");function splitNesting(t){t=t.trim();let e=[],Q="",B=0;for(let s=0;s<t.length;s++){let F=t[s];","===F&&0===B?(e.push(Q),Q=""):(Q+=F,"("===F?B++:")"===F&&(B--,-1===B&&logger$6.throwArgumentError("unbalanced parenthesis","value",t)))}return Q&&e.push(Q),e}const logger$5=new Logger(version$4);class Coder{constructor(t,e,Q,B){this.name=t,this.type=e,this.localName=Q,this.dynamic=B}_throwError(t,e){logger$5.throwArgumentError(t,this.localName,e)}}class Writer$2{constructor(t){defineReadOnly(this,"wordSize",t||32),this._data=[],this._dataLength=0,this._padding=new Uint8Array(t)}get data(){return hexConcat(this._data)}get length(){return this._dataLength}_writeData(t){return this._data.push(t),this._dataLength+=t.length,t.length}appendWriter(t){return this._writeData(concat(t._data))}writeBytes(t){let e=arrayify(t);const Q=e.length%this.wordSize;return Q&&(e=concat([e,this._padding.slice(Q)])),this._writeData(e)}_getValue(t){let e=arrayify(BigNumber.from(t));return e.length>this.wordSize&&logger$5.throwError("value out-of-bounds",Logger.errors.BUFFER_OVERRUN,{length:this.wordSize,offset:e.length}),e.length%this.wordSize&&(e=concat([this._padding.slice(e.length%this.wordSize),e])),e}writeValue(t){return this._writeData(this._getValue(t))}writeUpdatableValue(){const t=this._data.length;return this._data.push(this._padding),this._dataLength+=this.wordSize,e=>{this._data[t]=this._getValue(e)}}}class Reader$2{constructor(t,e,Q,B){defineReadOnly(this,"_data",arrayify(t)),defineReadOnly(this,"wordSize",e||32),defineReadOnly(this,"_coerceFunc",Q),defineReadOnly(this,"allowLoose",B),this._offset=0}get data(){return hexlify(this._data)}get consumed(){return this._offset}static coerce(t,e){let Q=t.match("^u?int([0-9]+)$");return Q&&parseInt(Q[1])<=48&&(e=e.toNumber()),e}coerce(t,e){return this._coerceFunc?this._coerceFunc(t,e):Reader$2.coerce(t,e)}_peekBytes(t,e,Q){let B=Math.ceil(e/this.wordSize)*this.wordSize;return this._offset+B>this._data.length&&(this.allowLoose&&Q&&this._offset+e<=this._data.length?B=e:logger$5.throwError("data out-of-bounds",Logger.errors.BUFFER_OVERRUN,{length:this._data.length,offset:this._offset+B})),this._data.slice(this._offset,this._offset+B)}subReader(t){return new Reader$2(this._data.slice(this._offset+t),this.wordSize,this._coerceFunc,this.allowLoose)}readBytes(t,e){let Q=this._peekBytes(0,t,!!e);return this._offset+=Q.length,Q.slice(0,t)}readValue(){return BigNumber.from(this.readBytes(this.wordSize))}}var global$1="undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{};function defaultSetTimout(){throw new Error("setTimeout has not been defined")}function defaultClearTimeout(){throw new Error("clearTimeout has not been defined")}var cachedSetTimeout=defaultSetTimout,cachedClearTimeout=defaultClearTimeout;function runTimeout(t){if(cachedSetTimeout===setTimeout)return setTimeout(t,0);if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout)return cachedSetTimeout=setTimeout,setTimeout(t,0);try{return cachedSetTimeout(t,0)}catch(e){try{return cachedSetTimeout.call(null,t,0)}catch(e){return cachedSetTimeout.call(this,t,0)}}}function runClearTimeout(t){if(cachedClearTimeout===clearTimeout)return clearTimeout(t);if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout)return cachedClearTimeout=clearTimeout,clearTimeout(t);try{return cachedClearTimeout(t)}catch(e){try{return cachedClearTimeout.call(null,t)}catch(e){return cachedClearTimeout.call(this,t)}}}"function"==typeof global$1.setTimeout&&(cachedSetTimeout=setTimeout),"function"==typeof global$1.clearTimeout&&(cachedClearTimeout=clearTimeout);var queue=[],draining=!1,currentQueue,queueIndex=-1;function cleanUpNextTick(){draining&&currentQueue&&(draining=!1,currentQueue.length?queue=currentQueue.concat(queue):queueIndex=-1,queue.length&&drainQueue())}function drainQueue(){if(!draining){var t=runTimeout(cleanUpNextTick);draining=!0;for(var e=queue.length;e;){for(currentQueue=queue,queue=[];++queueIndex<e;)currentQueue&&currentQueue[queueIndex].run();queueIndex=-1,e=queue.length}currentQueue=null,draining=!1,runClearTimeout(t)}}function nextTick(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var Q=1;Q<arguments.length;Q++)e[Q-1]=arguments[Q];queue.push(new Item(t,e)),1!==queue.length||draining||runTimeout(drainQueue)}function Item(t,e){this.fun=t,this.array=e}Item.prototype.run=function(){this.fun.apply(null,this.array)};var title="browser",platform="browser",browser=!0,env={},argv=[],version$3="",versions={},release={},config$1={};function noop$1(){}var on=noop$1,addListener=noop$1,once=noop$1,off=noop$1,removeListener=noop$1,removeAllListeners=noop$1,emit=noop$1;function binding(t){throw new Error("process.binding is not supported")}function cwd(){return"/"}function chdir(t){throw new Error("process.chdir is not supported")}function umask(){return 0}var performance=global$1.performance||{},performanceNow=performance.now||performance.mozNow||performance.msNow||performance.oNow||performance.webkitNow||function(){return(new Date).getTime()};function hrtime(t){var e=.001*performanceNow.call(performance),Q=Math.floor(e),B=Math.floor(e%1*1e9);return t&&(Q-=t[0],(B-=t[1])<0&&(Q--,B+=1e9)),[Q,B]}var startTime=new Date;function uptime(){return(new Date-startTime)/1e3}var browser$1={nextTick:nextTick,title:title,browser:browser,env:env,argv:argv,version:version$3,versions:versions,on:on,addListener:addListener,once:once,off:off,removeListener:removeListener,removeAllListeners:removeAllListeners,emit:emit,binding:binding,cwd:cwd,chdir:chdir,umask:umask,hrtime:hrtime,platform:platform,release:release,config:config$1,uptime:uptime},process$1=browser$1,sha3$1={exports:{}};!function(t){!function(){var e="input is invalid type",Q="object"==typeof window,B=Q?window:{};B.JS_SHA3_NO_WINDOW&&(Q=!1);var s=!Q&&"object"==typeof self;!B.JS_SHA3_NO_NODE_JS&&"object"==typeof process$1&&process$1.versions&&process$1.versions.node?B=commonjsGlobal:s&&(B=self);var F=!B.JS_SHA3_NO_COMMON_JS&&t.exports,U=!B.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,n="0123456789abcdef".split(""),c=[4,1024,262144,67108864],o=[0,8,16,24],g=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],l=[224,256,384,512],I=[128,256],i=["hex","buffer","arrayBuffer","array","digest"],r={128:168,256:136};!B.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)}),!U||!B.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(t){return"object"==typeof t&&t.buffer&&t.buffer.constructor===ArrayBuffer});for(var a=function(t,e,Q){return function(B){return new N(t,e,t).update(B)[Q]()}},d=function(t,e,Q){return function(B,s){return new N(t,e,s).update(B)[Q]()}},u=function(t,e,Q){return function(e,B,s,F){return m["cshake"+t].update(e,B,s,F)[Q]()}},C=function(t,e,Q){return function(e,B,s,F){return m["kmac"+t].update(e,B,s,F)[Q]()}},y=function(t,e,Q,B){for(var s=0;s<i.length;++s){var F=i[s];t[F]=e(Q,B,F)}return t},S=function(t,e){var Q=a(t,e,"hex");return Q.create=function(){return new N(t,e,t)},Q.update=function(t){return Q.create().update(t)},y(Q,a,t,e)},b=[{name:"keccak",padding:[1,256,65536,16777216],bits:l,createMethod:S},{name:"sha3",padding:[6,1536,393216,100663296],bits:l,createMethod:S},{name:"shake",padding:[31,7936,2031616,520093696],bits:I,createMethod:function(t,e){var Q=d(t,e,"hex");return Q.create=function(Q){return new N(t,e,Q)},Q.update=function(t,e){return Q.create(e).update(t)},y(Q,d,t,e)}},{name:"cshake",padding:c,bits:I,createMethod:function(t,e){var Q=r[t],B=u(t,0,"hex");return B.create=function(B,s,F){return s||F?new N(t,e,B).bytepad([s,F],Q):m["shake"+t].create(B)},B.update=function(t,e,Q,s){return B.create(e,Q,s).update(t)},y(B,u,t,e)}},{name:"kmac",padding:c,bits:I,createMethod:function(t,e){var Q=r[t],B=C(t,0,"hex");return B.create=function(B,s,F){return new V(t,e,s).bytepad(["KMAC",F],Q).bytepad([B],Q)},B.update=function(t,e,Q,s){return B.create(t,Q,s).update(e)},y(B,C,t,e)}}],m={},G=[],x=0;x<b.length;++x)for(var L=b[x],h=L.bits,A=0;A<h.length;++A){var Z=L.name+"_"+h[A];if(G.push(Z),m[Z]=L.createMethod(h[A],L.padding),"sha3"!==L.name){var R=L.name+h[A];G.push(R),m[R]=m[Z]}}function N(t,e,Q){this.blocks=[],this.s=[],this.padding=e,this.outputBits=Q,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(t<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=Q>>5,this.extraBytes=(31&Q)>>3;for(var B=0;B<50;++B)this.s[B]=0}function V(t,e,Q){N.call(this,t,e,Q)}N.prototype.update=function(t){if(this.finalized)throw new Error("finalize already called");var Q,B=typeof t;if("string"!==B){if("object"!==B)throw new Error(e);if(null===t)throw new Error(e);if(U&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||U&&ArrayBuffer.isView(t)))throw new Error(e);Q=!0}for(var s,F,n=this.blocks,c=this.byteCount,g=t.length,l=this.blockCount,I=0,i=this.s;I<g;){if(this.reset)for(this.reset=!1,n[0]=this.block,s=1;s<l+1;++s)n[s]=0;if(Q)for(s=this.start;I<g&&s<c;++I)n[s>>2]|=t[I]<<o[3&s++];else for(s=this.start;I<g&&s<c;++I)(F=t.charCodeAt(I))<128?n[s>>2]|=F<<o[3&s++]:F<2048?(n[s>>2]|=(192|F>>6)<<o[3&s++],n[s>>2]|=(128|63&F)<<o[3&s++]):F<55296||F>=57344?(n[s>>2]|=(224|F>>12)<<o[3&s++],n[s>>2]|=(128|F>>6&63)<<o[3&s++],n[s>>2]|=(128|63&F)<<o[3&s++]):(F=65536+((1023&F)<<10|1023&t.charCodeAt(++I)),n[s>>2]|=(240|F>>18)<<o[3&s++],n[s>>2]|=(128|F>>12&63)<<o[3&s++],n[s>>2]|=(128|F>>6&63)<<o[3&s++],n[s>>2]|=(128|63&F)<<o[3&s++]);if(this.lastByteIndex=s,s>=c){for(this.start=s-c,this.block=n[l],s=0;s<l;++s)i[s]^=n[s];D(i),this.reset=!0}else this.start=s}return this},N.prototype.encode=function(t,e){var Q=255&t,B=1,s=[Q];for(Q=255&(t>>=8);Q>0;)s.unshift(Q),Q=255&(t>>=8),++B;return e?s.push(B):s.unshift(B),this.update(s),s.length},N.prototype.encodeString=function(t){var Q,B=typeof t;if("string"!==B){if("object"!==B)throw new Error(e);if(null===t)throw new Error(e);if(U&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||U&&ArrayBuffer.isView(t)))throw new Error(e);Q=!0}var s=0,F=t.length;if(Q)s=F;else for(var n=0;n<t.length;++n){var c=t.charCodeAt(n);c<128?s+=1:c<2048?s+=2:c<55296||c>=57344?s+=3:(c=65536+((1023&c)<<10|1023&t.charCodeAt(++n)),s+=4)}return s+=this.encode(8*s),this.update(t),s},N.prototype.bytepad=function(t,e){for(var Q=this.encode(e),B=0;B<t.length;++B)Q+=this.encodeString(t[B]);var s=e-Q%e,F=[];return F.length=s,this.update(F),this},N.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var t=this.blocks,e=this.lastByteIndex,Q=this.blockCount,B=this.s;if(t[e>>2]|=this.padding[3&e],this.lastByteIndex===this.byteCount)for(t[0]=t[Q],e=1;e<Q+1;++e)t[e]=0;for(t[Q-1]|=2147483648,e=0;e<Q;++e)B[e]^=t[e];D(B)}},N.prototype.toString=N.prototype.hex=function(){this.finalize();for(var t,e=this.blockCount,Q=this.s,B=this.outputBlocks,s=this.extraBytes,F=0,U=0,c="";U<B;){for(F=0;F<e&&U<B;++F,++U)t=Q[F],c+=n[t>>4&15]+n[15&t]+n[t>>12&15]+n[t>>8&15]+n[t>>20&15]+n[t>>16&15]+n[t>>28&15]+n[t>>24&15];U%e==0&&(D(Q),F=0)}return s&&(t=Q[F],c+=n[t>>4&15]+n[15&t],s>1&&(c+=n[t>>12&15]+n[t>>8&15]),s>2&&(c+=n[t>>20&15]+n[t>>16&15])),c},N.prototype.arrayBuffer=function(){this.finalize();var t,e=this.blockCount,Q=this.s,B=this.outputBlocks,s=this.extraBytes,F=0,U=0,n=this.outputBits>>3;t=s?new ArrayBuffer(B+1<<2):new ArrayBuffer(n);for(var c=new Uint32Array(t);U<B;){for(F=0;F<e&&U<B;++F,++U)c[U]=Q[F];U%e==0&&D(Q)}return s&&(c[F]=Q[F],t=t.slice(0,n)),t},N.prototype.buffer=N.prototype.arrayBuffer,N.prototype.digest=N.prototype.array=function(){this.finalize();for(var t,e,Q=this.blockCount,B=this.s,s=this.outputBlocks,F=this.extraBytes,U=0,n=0,c=[];n<s;){for(U=0;U<Q&&n<s;++U,++n)t=n<<2,e=B[U],c[t]=255&e,c[t+1]=e>>8&255,c[t+2]=e>>16&255,c[t+3]=e>>24&255;n%Q==0&&D(B)}return F&&(t=n<<2,e=B[U],c[t]=255&e,F>1&&(c[t+1]=e>>8&255),F>2&&(c[t+2]=e>>16&255)),c},V.prototype=new N,V.prototype.finalize=function(){return this.encode(this.outputBits,!0),N.prototype.finalize.call(this)};var D=function(t){var e,Q,B,s,F,U,n,c,o,l,I,i,r,a,d,u,C,y,S,b,m,G,x,L,h,A,Z,R,N,V,D,E,p,J,X,H,k,W,T,Y,f,M,w,v,z,K,O,P,j,_,$,q,tt,et,Qt,Bt,st,Ft,Ut,nt,ct,ot,gt;for(B=0;B<48;B+=2)s=t[0]^t[10]^t[20]^t[30]^t[40],F=t[1]^t[11]^t[21]^t[31]^t[41],U=t[2]^t[12]^t[22]^t[32]^t[42],n=t[3]^t[13]^t[23]^t[33]^t[43],c=t[4]^t[14]^t[24]^t[34]^t[44],o=t[5]^t[15]^t[25]^t[35]^t[45],l=t[6]^t[16]^t[26]^t[36]^t[46],I=t[7]^t[17]^t[27]^t[37]^t[47],e=(i=t[8]^t[18]^t[28]^t[38]^t[48])^(U<<1|n>>>31),Q=(r=t[9]^t[19]^t[29]^t[39]^t[49])^(n<<1|U>>>31),t[0]^=e,t[1]^=Q,t[10]^=e,t[11]^=Q,t[20]^=e,t[21]^=Q,t[30]^=e,t[31]^=Q,t[40]^=e,t[41]^=Q,e=s^(c<<1|o>>>31),Q=F^(o<<1|c>>>31),t[2]^=e,t[3]^=Q,t[12]^=e,t[13]^=Q,t[22]^=e,t[23]^=Q,t[32]^=e,t[33]^=Q,t[42]^=e,t[43]^=Q,e=U^(l<<1|I>>>31),Q=n^(I<<1|l>>>31),t[4]^=e,t[5]^=Q,t[14]^=e,t[15]^=Q,t[24]^=e,t[25]^=Q,t[34]^=e,t[35]^=Q,t[44]^=e,t[45]^=Q,e=c^(i<<1|r>>>31),Q=o^(r<<1|i>>>31),t[6]^=e,t[7]^=Q,t[16]^=e,t[17]^=Q,t[26]^=e,t[27]^=Q,t[36]^=e,t[37]^=Q,t[46]^=e,t[47]^=Q,e=l^(s<<1|F>>>31),Q=I^(F<<1|s>>>31),t[8]^=e,t[9]^=Q,t[18]^=e,t[19]^=Q,t[28]^=e,t[29]^=Q,t[38]^=e,t[39]^=Q,t[48]^=e,t[49]^=Q,a=t[0],d=t[1],K=t[11]<<4|t[10]>>>28,O=t[10]<<4|t[11]>>>28,R=t[20]<<3|t[21]>>>29,N=t[21]<<3|t[20]>>>29,nt=t[31]<<9|t[30]>>>23,ct=t[30]<<9|t[31]>>>23,M=t[40]<<18|t[41]>>>14,w=t[41]<<18|t[40]>>>14,J=t[2]<<1|t[3]>>>31,X=t[3]<<1|t[2]>>>31,u=t[13]<<12|t[12]>>>20,C=t[12]<<12|t[13]>>>20,P=t[22]<<10|t[23]>>>22,j=t[23]<<10|t[22]>>>22,V=t[33]<<13|t[32]>>>19,D=t[32]<<13|t[33]>>>19,ot=t[42]<<2|t[43]>>>30,gt=t[43]<<2|t[42]>>>30,et=t[5]<<30|t[4]>>>2,Qt=t[4]<<30|t[5]>>>2,H=t[14]<<6|t[15]>>>26,k=t[15]<<6|t[14]>>>26,y=t[25]<<11|t[24]>>>21,S=t[24]<<11|t[25]>>>21,_=t[34]<<15|t[35]>>>17,$=t[35]<<15|t[34]>>>17,E=t[45]<<29|t[44]>>>3,p=t[44]<<29|t[45]>>>3,L=t[6]<<28|t[7]>>>4,h=t[7]<<28|t[6]>>>4,Bt=t[17]<<23|t[16]>>>9,st=t[16]<<23|t[17]>>>9,W=t[26]<<25|t[27]>>>7,T=t[27]<<25|t[26]>>>7,b=t[36]<<21|t[37]>>>11,m=t[37]<<21|t[36]>>>11,q=t[47]<<24|t[46]>>>8,tt=t[46]<<24|t[47]>>>8,v=t[8]<<27|t[9]>>>5,z=t[9]<<27|t[8]>>>5,A=t[18]<<20|t[19]>>>12,Z=t[19]<<20|t[18]>>>12,Ft=t[29]<<7|t[28]>>>25,Ut=t[28]<<7|t[29]>>>25,Y=t[38]<<8|t[39]>>>24,f=t[39]<<8|t[38]>>>24,G=t[48]<<14|t[49]>>>18,x=t[49]<<14|t[48]>>>18,t[0]=a^~u&y,t[1]=d^~C&S,t[10]=L^~A&R,t[11]=h^~Z&N,t[20]=J^~H&W,t[21]=X^~k&T,t[30]=v^~K&P,t[31]=z^~O&j,t[40]=et^~Bt&Ft,t[41]=Qt^~st&Ut,t[2]=u^~y&b,t[3]=C^~S&m,t[12]=A^~R&V,t[13]=Z^~N&D,t[22]=H^~W&Y,t[23]=k^~T&f,t[32]=K^~P&_,t[33]=O^~j&$,t[42]=Bt^~Ft&nt,t[43]=st^~Ut&ct,t[4]=y^~b&G,t[5]=S^~m&x,t[14]=R^~V&E,t[15]=N^~D&p,t[24]=W^~Y&M,t[25]=T^~f&w,t[34]=P^~_&q,t[35]=j^~$&tt,t[44]=Ft^~nt&ot,t[45]=Ut^~ct&gt,t[6]=b^~G&a,t[7]=m^~x&d,t[16]=V^~E&L,t[17]=D^~p&h,t[26]=Y^~M&J,t[27]=f^~w&X,t[36]=_^~q&v,t[37]=$^~tt&z,t[46]=nt^~ot&et,t[47]=ct^~gt&Qt,t[8]=G^~a&u,t[9]=x^~d&C,t[18]=E^~L&A,t[19]=p^~h&Z,t[28]=M^~J&H,t[29]=w^~X&k,t[38]=q^~v&K,t[39]=tt^~z&O,t[48]=ot^~et&Bt,t[49]=gt^~Qt&st,t[0]^=g[B],t[1]^=g[B+1]};if(F)t.exports=m;else for(x=0;x<G.length;++x)B[G[x]]=m[G[x]]}()}(sha3$1);var sha3=sha3$1.exports;function keccak256$2(t){return"0x"+sha3.keccak_256(arrayify(t))}const version$2="address/5.5.0",logger$4=new Logger(version$2);function getChecksumAddress(t){isHexString(t,20)||logger$4.throwArgumentError("invalid address","address",t);const e=(t=t.toLowerCase()).substring(2).split(""),Q=new Uint8Array(40);for(let t=0;t<40;t++)Q[t]=e[t].charCodeAt(0);const B=arrayify(keccak256$2(Q));for(let t=0;t<40;t+=2)B[t>>1]>>4>=8&&(e[t]=e[t].toUpperCase()),(15&B[t>>1])>=8&&(e[t+1]=e[t+1].toUpperCase());return"0x"+e.join("")}const MAX_SAFE_INTEGER=9007199254740991;function log10(t){return Math.log10?Math.log10(t):Math.log(t)/Math.LN10}const ibanLookup={};for(let t=0;t<10;t++)ibanLookup[String(t)]=String(t);for(let t=0;t<26;t++)ibanLookup[String.fromCharCode(65+t)]=String(10+t);const safeDigits=Math.floor(log10(MAX_SAFE_INTEGER));function ibanChecksum(t){let e=(t=(t=t.toUpperCase()).substring(4)+t.substring(0,2)+"00").split("").map((t=>ibanLookup[t])).join("");for(;e.length>=safeDigits;){let t=e.substring(0,safeDigits);e=parseInt(t,10)%97+e.substring(t.length)}let Q=String(98-parseInt(e,10)%97);for(;Q.length<2;)Q="0"+Q;return Q}function getAddress(t){let e=null;if("string"!=typeof t&&logger$4.throwArgumentError("invalid address","address",t),t.match(/^(0x)?[0-9a-fA-F]{40}$/))"0x"!==t.substring(0,2)&&(t="0x"+t),e=getChecksumAddress(t),t.match(/([A-F].*[a-f])|([a-f].*[A-F])/)&&e!==t&&logger$4.throwArgumentError("bad address checksum","address",t);else if(t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)){for(t.substring(2,4)!==ibanChecksum(t)&&logger$4.throwArgumentError("bad icap checksum","address",t),e=_base36To16(t.substring(4));e.length<40;)e="0"+e;e=getChecksumAddress("0x"+e)}else logger$4.throwArgumentError("invalid address","address",t);return e}class AddressCoder extends Coder{constructor(t){super("address","address",t,!1)}defaultValue(){return"0x0000000000000000000000000000000000000000"}encode(t,e){try{e=getAddress(e)}catch(t){this._throwError(t.message,e)}return t.writeValue(e)}decode(t){return getAddress(hexZeroPad(t.readValue().toHexString(),20))}}class AnonymousCoder extends Coder{constructor(t){super(t.name,t.type,void 0,t.dynamic),this.coder=t}defaultValue(){return this.coder.defaultValue()}encode(t,e){return this.coder.encode(t,e)}decode(t){return this.coder.decode(t)}}const logger$3=new Logger(version$4);function pack(t,e,Q){let B=null;if(Array.isArray(Q))B=Q;else if(Q&&"object"==typeof Q){let t={};B=e.map((e=>{const B=e.localName;return B||logger$3.throwError("cannot encode object for signature with missing names",Logger.errors.INVALID_ARGUMENT,{argument:"values",coder:e,value:Q}),t[B]&&logger$3.throwError("cannot encode object for signature with duplicate names",Logger.errors.INVALID_ARGUMENT,{argument:"values",coder:e,value:Q}),t[B]=!0,Q[B]}))}else logger$3.throwArgumentError("invalid tuple value","tuple",Q);e.length!==B.length&&logger$3.throwArgumentError("types/value length mismatch","tuple",Q);let s=new Writer$2(t.wordSize),F=new Writer$2(t.wordSize),U=[];e.forEach(((t,e)=>{let Q=B[e];if(t.dynamic){let e=F.length;t.encode(F,Q);let B=s.writeUpdatableValue();U.push((t=>{B(t+e)}))}else t.encode(s,Q)})),U.forEach((t=>{t(s.length)}));let n=t.appendWriter(s);return n+=t.appendWriter(F),n}function unpack(t,e){let Q=[],B=t.subReader(0);e.forEach((e=>{let s=null;if(e.dynamic){let Q=t.readValue(),F=B.subReader(Q.toNumber());try{s=e.decode(F)}catch(t){if(t.code===Logger.errors.BUFFER_OVERRUN)throw t;s=t,s.baseType=e.name,s.name=e.localName,s.type=e.type}}else try{s=e.decode(t)}catch(t){if(t.code===Logger.errors.BUFFER_OVERRUN)throw t;s=t,s.baseType=e.name,s.name=e.localName,s.type=e.type}null!=s&&Q.push(s)}));const s=e.reduce(((t,e)=>{const Q=e.localName;return Q&&(t[Q]||(t[Q]=0),t[Q]++),t}),{});e.forEach(((t,e)=>{let B=t.localName;if(!B||1!==s[B])return;if("length"===B&&(B="_length"),null!=Q[B])return;const F=Q[e];F instanceof Error?Object.defineProperty(Q,B,{enumerable:!0,get:()=>{throw F}}):Q[B]=F}));for(let t=0;t<Q.length;t++){const e=Q[t];e instanceof Error&&Object.defineProperty(Q,t,{enumerable:!0,get:()=>{throw e}})}return Object.freeze(Q)}class ArrayCoder extends Coder{constructor(t,e,Q){super("array",t.type+"["+(e>=0?e:"")+"]",Q,-1===e||t.dynamic),this.coder=t,this.length=e}defaultValue(){const t=this.coder.defaultValue(),e=[];for(let Q=0;Q<this.length;Q++)e.push(t);return e}encode(t,e){Array.isArray(e)||this._throwError("expected array value",e);let Q=this.length;-1===Q&&(Q=e.length,t.writeValue(e.length)),logger$3.checkArgumentCount(e.length,Q,"coder array"+(this.localName?" "+this.localName:""));let B=[];for(let t=0;t<e.length;t++)B.push(this.coder);return pack(t,B,e)}decode(t){let e=this.length;-1===e&&(e=t.readValue().toNumber(),32*e>t._data.length&&logger$3.throwError("insufficient data length",Logger.errors.BUFFER_OVERRUN,{length:t._data.length,count:e}));let Q=[];for(let t=0;t<e;t++)Q.push(new AnonymousCoder(this.coder));return t.coerce(this.name,unpack(t,Q))}}class BooleanCoder extends Coder{constructor(t){super("bool","bool",t,!1)}defaultValue(){return!1}encode(t,e){return t.writeValue(e?1:0)}decode(t){return t.coerce(this.type,!t.readValue().isZero())}}class DynamicBytesCoder extends Coder{constructor(t,e){super(t,t,e,!0)}defaultValue(){return"0x"}encode(t,e){e=arrayify(e);let Q=t.writeValue(e.length);return Q+=t.writeBytes(e),Q}decode(t){return t.readBytes(t.readValue().toNumber(),!0)}}class BytesCoder extends DynamicBytesCoder{constructor(t){super("bytes",t)}decode(t){return t.coerce(this.name,hexlify(super.decode(t)))}}class FixedBytesCoder extends Coder{constructor(t,e){let Q="bytes"+String(t);super(Q,Q,e,!1),this.size=t}defaultValue(){return"0x0000000000000000000000000000000000000000000000000000000000000000".substring(0,2+2*this.size)}encode(t,e){let Q=arrayify(e);return Q.length!==this.size&&this._throwError("incorrect data length",e),t.writeBytes(Q)}decode(t){return t.coerce(this.name,hexlify(t.readBytes(this.size)))}}class NullCoder extends Coder{constructor(t){super("null","",t,!1)}defaultValue(){return null}encode(t,e){return null!=e&&this._throwError("not null",e),t.writeBytes([])}decode(t){return t.readBytes(0),t.coerce(this.name,null)}}const NegativeOne=BigNumber.from(-1),Zero=BigNumber.from(0),One=BigNumber.from(1),MaxUint256=BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");class NumberCoder extends Coder{constructor(t,e,Q){const B=(e?"int":"uint")+8*t;super(B,B,Q,!1),this.size=t,this.signed=e}defaultValue(){return 0}encode(t,e){let Q=BigNumber.from(e),B=MaxUint256.mask(8*t.wordSize);if(this.signed){let t=B.mask(8*this.size-1);(Q.gt(t)||Q.lt(t.add(One).mul(NegativeOne)))&&this._throwError("value out-of-bounds",e)}else(Q.lt(Zero)||Q.gt(B.mask(8*this.size)))&&this._throwError("value out-of-bounds",e);return Q=Q.toTwos(8*this.size).mask(8*this.size),this.signed&&(Q=Q.fromTwos(8*this.size).toTwos(8*t.wordSize)),t.writeValue(Q)}decode(t){let e=t.readValue().mask(8*this.size);return this.signed&&(e=e.fromTwos(8*this.size)),t.coerce(this.name,e)}}const version$1="strings/5.5.0",logger$2=new Logger(version$1);var UnicodeNormalizationForm,Utf8ErrorReason;function errorFunc(t,e,Q,B,s){return logger$2.throwArgumentError(`invalid codepoint at offset ${e}; ${t}`,"bytes",Q)}function ignoreFunc(t,e,Q,B,s){if(t===Utf8ErrorReason.BAD_PREFIX||t===Utf8ErrorReason.UNEXPECTED_CONTINUE){let t=0;for(let B=e+1;B<Q.length&&Q[B]>>6==2;B++)t++;return t}return t===Utf8ErrorReason.OVERRUN?Q.length-e-1:0}function replaceFunc(t,e,Q,B,s){return t===Utf8ErrorReason.OVERLONG?(B.push(s),0):(B.push(65533),ignoreFunc(t,e,Q))}!function(t){t.current="",t.NFC="NFC",t.NFD="NFD",t.NFKC="NFKC",t.NFKD="NFKD"}(UnicodeNormalizationForm||(UnicodeNormalizationForm={})),function(t){t.UNEXPECTED_CONTINUE="unexpected continuation byte",t.BAD_PREFIX="bad codepoint prefix",t.OVERRUN="string overrun",t.MISSING_CONTINUE="missing continuation byte",t.OUT_OF_RANGE="out of UTF-8 range",t.UTF16_SURROGATE="UTF-16 surrogate",t.OVERLONG="overlong representation"}(Utf8ErrorReason||(Utf8ErrorReason={}));const Utf8ErrorFuncs=Object.freeze({error:errorFunc,ignore:ignoreFunc,replace:replaceFunc});function getUtf8CodePoints(t,e){null==e&&(e=Utf8ErrorFuncs.error),t=arrayify(t);const Q=[];let B=0;for(;B<t.length;){const s=t[B++];if(s>>7==0){Q.push(s);continue}let F=null,U=null;if(192==(224&s))F=1,U=127;else if(224==(240&s))F=2,U=2047;else{if(240!=(248&s)){B+=e(128==(192&s)?Utf8ErrorReason.UNEXPECTED_CONTINUE:Utf8ErrorReason.BAD_PREFIX,B-1,t,Q);continue}F=3,U=65535}if(B-1+F>=t.length){B+=e(Utf8ErrorReason.OVERRUN,B-1,t,Q);continue}let n=s&(1<<8-F-1)-1;for(let s=0;s<F;s++){let s=t[B];if(128!=(192&s)){B+=e(Utf8ErrorReason.MISSING_CONTINUE,B,t,Q),n=null;break}n=n<<6|63&s,B++}null!==n&&(n>1114111?B+=e(Utf8ErrorReason.OUT_OF_RANGE,B-1-F,t,Q,n):n>=55296&&n<=57343?B+=e(Utf8ErrorReason.UTF16_SURROGATE,B-1-F,t,Q,n):n<=U?B+=e(Utf8ErrorReason.OVERLONG,B-1-F,t,Q,n):Q.push(n))}return Q}function toUtf8Bytes(t,e=UnicodeNormalizationForm.current){e!=UnicodeNormalizationForm.current&&(logger$2.checkNormalize(),t=t.normalize(e));let Q=[];for(let e=0;e<t.length;e++){const B=t.charCodeAt(e);if(B<128)Q.push(B);else if(B<2048)Q.push(B>>6|192),Q.push(63&B|128);else if(55296==(64512&B)){e++;const s=t.charCodeAt(e);if(e>=t.length||56320!=(64512&s))throw new Error("invalid utf-8 string");const F=65536+((1023&B)<<10)+(1023&s);Q.push(F>>18|240),Q.push(F>>12&63|128),Q.push(F>>6&63|128),Q.push(63&F|128)}else Q.push(B>>12|224),Q.push(B>>6&63|128),Q.push(63&B|128)}return arrayify(Q)}function _toUtf8String(t){return t.map((t=>t<=65535?String.fromCharCode(t):(t-=65536,String.fromCharCode(55296+(t>>10&1023),56320+(1023&t))))).join("")}function toUtf8String(t,e){return _toUtf8String(getUtf8CodePoints(t,e))}class StringCoder extends DynamicBytesCoder{constructor(t){super("string",t)}defaultValue(){return""}encode(t,e){return super.encode(t,toUtf8Bytes(e))}decode(t){return toUtf8String(super.decode(t))}}class TupleCoder extends Coder{constructor(t,e){let Q=!1;const B=[];t.forEach((t=>{t.dynamic&&(Q=!0),B.push(t.type)}));super("tuple","tuple("+B.join(",")+")",e,Q),this.coders=t}defaultValue(){const t=[];this.coders.forEach((e=>{t.push(e.defaultValue())}));const e=this.coders.reduce(((t,e)=>{const Q=e.localName;return Q&&(t[Q]||(t[Q]=0),t[Q]++),t}),{});return this.coders.forEach(((Q,B)=>{let s=Q.localName;s&&1===e[s]&&("length"===s&&(s="_length"),null==t[s]&&(t[s]=t[B]))})),Object.freeze(t)}encode(t,e){return pack(t,this.coders,e)}decode(t){return t.coerce(this.name,unpack(t,this.coders))}}const logger$1=new Logger(version$4),paramTypeBytes=new RegExp(/^bytes([0-9]*)$/),paramTypeNumber=new RegExp(/^(u?int)([0-9]*)$/);class AbiCoder{constructor(t){logger$1.checkNew(new.target,AbiCoder),defineReadOnly(this,"coerceFunc",t||null)}_getCoder(t){switch(t.baseType){case"address":return new AddressCoder(t.name);case"bool":return new BooleanCoder(t.name);case"string":return new StringCoder(t.name);case"bytes":return new BytesCoder(t.name);case"array":return new ArrayCoder(this._getCoder(t.arrayChildren),t.arrayLength,t.name);case"tuple":return new TupleCoder((t.components||[]).map((t=>this._getCoder(t))),t.name);case"":return new NullCoder(t.name)}let e=t.type.match(paramTypeNumber);if(e){let Q=parseInt(e[2]||"256");return(0===Q||Q>256||Q%8!=0)&&logger$1.throwArgumentError("invalid "+e[1]+" bit length","param",t),new NumberCoder(Q/8,"int"===e[1],t.name)}if(e=t.type.match(paramTypeBytes),e){let Q=parseInt(e[1]);return(0===Q||Q>32)&&logger$1.throwArgumentError("invalid bytes length","param",t),new FixedBytesCoder(Q,t.name)}return logger$1.throwArgumentError("invalid type","type",t.type)}_getWordSize(){return 32}_getReader(t,e){return new Reader$2(t,this._getWordSize(),this.coerceFunc,e)}_getWriter(){return new Writer$2(this._getWordSize())}getDefaultValue(t){const e=t.map((t=>this._getCoder(ParamType.from(t))));return new TupleCoder(e,"_").defaultValue()}encode(t,e){t.length!==e.length&&logger$1.throwError("types/values length mismatch",Logger.errors.INVALID_ARGUMENT,{count:{types:t.length,values:e.length},value:{types:t,values:e}});const Q=t.map((t=>this._getCoder(ParamType.from(t)))),B=new TupleCoder(Q,"_"),s=this._getWriter();return B.encode(s,e),s.data}decode(t,e,Q){const B=t.map((t=>this._getCoder(ParamType.from(t))));return new TupleCoder(B,"_").decode(this._getReader(arrayify(e),Q))}}const defaultAbiCoder=new AbiCoder;function id(t){return keccak256$2(toUtf8Bytes(t))}const logger=new Logger(version$4);class LogDescription extends Description{}class TransactionDescription extends Description{}class ErrorDescription extends Description{}class Indexed extends Description{static isIndexed(t){return!(!t||!t._isIndexed)}}const BuiltinErrors={"0x08c379a0":{signature:"Error(string)",name:"Error",inputs:["string"],reason:!0},"0x4e487b71":{signature:"Panic(uint256)",name:"Panic",inputs:["uint256"]}};function wrapAccessError(t,e){const Q=new Error(`deferred error during ABI decoding triggered accessing ${t}`);return Q.error=e,Q}class Interface{constructor(t){logger.checkNew(new.target,Interface);let e=[];e="string"==typeof t?JSON.parse(t):t,defineReadOnly(this,"fragments",e.map((t=>Fragment.from(t))).filter((t=>null!=t))),defineReadOnly(this,"_abiCoder",getStatic(new.target,"getAbiCoder")()),defineReadOnly(this,"functions",{}),defineReadOnly(this,"errors",{}),defineReadOnly(this,"events",{}),defineReadOnly(this,"structs",{}),this.fragments.forEach((t=>{let e=null;switch(t.type){case"constructor":return this.deploy?void logger.warn("duplicate definition - constructor"):void defineReadOnly(this,"deploy",t);case"function":e=this.functions;break;case"event":e=this.events;break;case"error":e=this.errors;break;default:return}let Q=t.format();e[Q]?logger.warn("duplicate definition - "+Q):e[Q]=t})),this.deploy||defineReadOnly(this,"deploy",ConstructorFragment.from({payable:!1,type:"constructor"})),defineReadOnly(this,"_isInterface",!0)}format(t){t||(t=FormatTypes.full),t===FormatTypes.sighash&&logger.throwArgumentError("interface does not support formatting sighash","format",t);const e=this.fragments.map((e=>e.format(t)));return t===FormatTypes.json?JSON.stringify(e.map((t=>JSON.parse(t)))):e}static getAbiCoder(){return defaultAbiCoder}static getAddress(t){return getAddress(t)}static getSighash(t){return hexDataSlice(id(t.format()),0,4)}static getEventTopic(t){return id(t.format())}getFunction(t){if(isHexString(t)){for(const e in this.functions)if(t===this.getSighash(e))return this.functions[e];logger.throwArgumentError("no matching function","sighash",t)}if(-1===t.indexOf("(")){const e=t.trim(),Q=Object.keys(this.functions).filter((t=>t.split("(")[0]===e));return 0===Q.length?logger.throwArgumentError("no matching function","name",e):Q.length>1&&logger.throwArgumentError("multiple matching functions","name",e),this.functions[Q[0]]}const e=this.functions[FunctionFragment.fromString(t).format()];return e||logger.throwArgumentError("no matching function","signature",t),e}getEvent(t){if(isHexString(t)){const e=t.toLowerCase();for(const t in this.events)if(e===this.getEventTopic(t))return this.events[t];logger.throwArgumentError("no matching event","topichash",e)}if(-1===t.indexOf("(")){const e=t.trim(),Q=Object.keys(this.events).filter((t=>t.split("(")[0]===e));return 0===Q.length?logger.throwArgumentError("no matching event","name",e):Q.length>1&&logger.throwArgumentError("multiple matching events","name",e),this.events[Q[0]]}const e=this.events[EventFragment.fromString(t).format()];return e||logger.throwArgumentError("no matching event","signature",t),e}getError(t){if(isHexString(t)){const e=getStatic(this.constructor,"getSighash");for(const Q in this.errors){if(t===e(this.errors[Q]))return this.errors[Q]}logger.throwArgumentError("no matching error","sighash",t)}if(-1===t.indexOf("(")){const e=t.trim(),Q=Object.keys(this.errors).filter((t=>t.split("(")[0]===e));return 0===Q.length?logger.throwArgumentError("no matching error","name",e):Q.length>1&&logger.throwArgumentError("multiple matching errors","name",e),this.errors[Q[0]]}const e=this.errors[FunctionFragment.fromString(t).format()];return e||logger.throwArgumentError("no matching error","signature",t),e}getSighash(t){if("string"==typeof t)try{t=this.getFunction(t)}catch(e){try{t=this.getError(t)}catch(t){throw e}}return getStatic(this.constructor,"getSighash")(t)}getEventTopic(t){return"string"==typeof t&&(t=this.getEvent(t)),getStatic(this.constructor,"getEventTopic")(t)}_decodeParams(t,e){return this._abiCoder.decode(t,e)}_encodeParams(t,e){return this._abiCoder.encode(t,e)}encodeDeploy(t){return this._encodeParams(this.deploy.inputs,t||[])}decodeErrorResult(t,e){"string"==typeof t&&(t=this.getError(t));const Q=arrayify(e);return hexlify(Q.slice(0,4))!==this.getSighash(t)&&logger.throwArgumentError(`data signature does not match error ${t.name}.`,"data",hexlify(Q)),this._decodeParams(t.inputs,Q.slice(4))}encodeErrorResult(t,e){return"string"==typeof t&&(t=this.getError(t)),hexlify(concat([this.getSighash(t),this._encodeParams(t.inputs,e||[])]))}decodeFunctionData(t,e){"string"==typeof t&&(t=this.getFunction(t));const Q=arrayify(e);return hexlify(Q.slice(0,4))!==this.getSighash(t)&&logger.throwArgumentError(`data signature does not match function ${t.name}.`,"data",hexlify(Q)),this._decodeParams(t.inputs,Q.slice(4))}encodeFunctionData(t,e){return"string"==typeof t&&(t=this.getFunction(t)),hexlify(concat([this.getSighash(t),this._encodeParams(t.inputs,e||[])]))}decodeFunctionResult(t,e){"string"==typeof t&&(t=this.getFunction(t));let Q=arrayify(e),B=null,s=null,F=null,U=null;switch(Q.length%this._abiCoder._getWordSize()){case 0:try{return this._abiCoder.decode(t.outputs,Q)}catch(t){}break;case 4:{const t=hexlify(Q.slice(0,4)),e=BuiltinErrors[t];if(e)s=this._abiCoder.decode(e.inputs,Q.slice(4)),F=e.name,U=e.signature,e.reason&&(B=s[0]);else try{const e=this.getError(t);s=this._abiCoder.decode(e.inputs,Q.slice(4)),F=e.name,U=e.format()}catch(t){console.log(t)}break}}return logger.throwError("call revert exception",Logger.errors.CALL_EXCEPTION,{method:t.format(),errorArgs:s,errorName:F,errorSignature:U,reason:B})}encodeFunctionResult(t,e){return"string"==typeof t&&(t=this.getFunction(t)),hexlify(this._abiCoder.encode(t.outputs,e||[]))}encodeFilterTopics(t,e){"string"==typeof t&&(t=this.getEvent(t)),e.length>t.inputs.length&&logger.throwError("too many arguments for "+t.format(),Logger.errors.UNEXPECTED_ARGUMENT,{argument:"values",value:e});let Q=[];t.anonymous||Q.push(this.getEventTopic(t));const B=(t,e)=>"string"===t.type?id(e):"bytes"===t.type?keccak256$2(hexlify(e)):("address"===t.type&&this._abiCoder.encode(["address"],[e]),hexZeroPad(hexlify(e),32));for(e.forEach(((e,s)=>{let F=t.inputs[s];F.indexed?null==e?Q.push(null):"array"===F.baseType||"tuple"===F.baseType?logger.throwArgumentError("filtering with tuples or arrays not supported","contract."+F.name,e):Array.isArray(e)?Q.push(e.map((t=>B(F,t)))):Q.push(B(F,e)):null!=e&&logger.throwArgumentError("cannot filter non-indexed parameters; must be null","contract."+F.name,e)}));Q.length&&null===Q[Q.length-1];)Q.pop();return Q}encodeEventLog(t,e){"string"==typeof t&&(t=this.getEvent(t));const Q=[],B=[],s=[];return t.anonymous||Q.push(this.getEventTopic(t)),e.length!==t.inputs.length&&logger.throwArgumentError("event arguments/values mismatch","values",e),t.inputs.forEach(((t,F)=>{const U=e[F];if(t.indexed)if("string"===t.type)Q.push(id(U));else if("bytes"===t.type)Q.push(keccak256$2(U));else{if("tuple"===t.baseType||"array"===t.baseType)throw new Error("not implemented");Q.push(this._abiCoder.encode([t.type],[U]))}else B.push(t),s.push(U)})),{data:this._abiCoder.encode(B,s),topics:Q}}decodeEventLog(t,e,Q){if("string"==typeof t&&(t=this.getEvent(t)),null!=Q&&!t.anonymous){let e=this.getEventTopic(t);isHexString(Q[0],32)&&Q[0].toLowerCase()===e||logger.throwError("fragment/topic mismatch",Logger.errors.INVALID_ARGUMENT,{argument:"topics[0]",expected:e,value:Q[0]}),Q=Q.slice(1)}let B=[],s=[],F=[];t.inputs.forEach(((t,e)=>{t.indexed?"string"===t.type||"bytes"===t.type||"tuple"===t.baseType||"array"===t.baseType?(B.push(ParamType.fromObject({type:"bytes32",name:t.name})),F.push(!0)):(B.push(t),F.push(!1)):(s.push(t),F.push(!1))}));let U=null!=Q?this._abiCoder.decode(B,concat(Q)):null,n=this._abiCoder.decode(s,e,!0),c=[],o=0,g=0;t.inputs.forEach(((t,e)=>{if(t.indexed)if(null==U)c[e]=new Indexed({_isIndexed:!0,hash:null});else if(F[e])c[e]=new Indexed({_isIndexed:!0,hash:U[g++]});else try{c[e]=U[g++]}catch(t){c[e]=t}else try{c[e]=n[o++]}catch(t){c[e]=t}if(t.name&&null==c[t.name]){const Q=c[e];Q instanceof Error?Object.defineProperty(c,t.name,{enumerable:!0,get:()=>{throw wrapAccessError(`property ${JSON.stringify(t.name)}`,Q)}}):c[t.name]=Q}}));for(let t=0;t<c.length;t++){const e=c[t];e instanceof Error&&Object.defineProperty(c,t,{enumerable:!0,get:()=>{throw wrapAccessError(`index ${t}`,e)}})}return Object.freeze(c)}parseTransaction(t){let e=this.getFunction(t.data.substring(0,10).toLowerCase());return e?new TransactionDescription({args:this._abiCoder.decode(e.inputs,"0x"+t.data.substring(10)),functionFragment:e,name:e.name,signature:e.format(),sighash:this.getSighash(e),value:BigNumber.from(t.value||"0")}):null}parseLog(t){let e=this.getEvent(t.topics[0]);return!e||e.anonymous?null:new LogDescription({eventFragment:e,name:e.name,signature:e.format(),topic:this.getEventTopic(e),args:this.decodeEventLog(e,t.data,t.topics)})}parseError(t){const e=hexlify(t);let Q=this.getError(e.substring(0,10).toLowerCase());return Q?new ErrorDescription({args:this._abiCoder.decode(Q.inputs,"0x"+e.substring(10)),errorFragment:Q,name:Q.name,signature:Q.format(),sighash:this.getSighash(Q)}):null}static isInterface(t){return!(!t||!t._isInterface)}}class Key$1{}class BadKeyError extends Error{constructor(t){super(t instanceof Error?t.message:t),this.name="BadKeyError",t instanceof Error&&(this.cause=t,this.stack=t.stack)}}var naclFast={exports:{}},_nodeResolve_empty={},_nodeResolve_empty$1=Object.freeze({__proto__:null,default:_nodeResolve_empty}),require$$0$1=getDefaultExportFromNamespaceIfPresent(_nodeResolve_empty$1);!function(t){!function(t){var e=function(t){var e,Q=new Float64Array(16);if(t)for(e=0;e<t.length;e++)Q[e]=t[e];return Q},Q=function(){throw new Error("no PRNG")},B=new Uint8Array(16),s=new Uint8Array(32);s[0]=9;var F=e(),U=e([1]),n=e([56129,1]),c=e([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),o=e([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),g=e([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),l=e([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),I=e([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function i(t,e,Q,B){t[e]=Q>>24&255,t[e+1]=Q>>16&255,t[e+2]=Q>>8&255,t[e+3]=255&Q,t[e+4]=B>>24&255,t[e+5]=B>>16&255,t[e+6]=B>>8&255,t[e+7]=255&B}function r(t,e,Q,B,s){var F,U=0;for(F=0;F<s;F++)U|=t[e+F]^Q[B+F];return(1&U-1>>>8)-1}function a(t,e,Q,B){return r(t,e,Q,B,16)}function d(t,e,Q,B){return r(t,e,Q,B,32)}function u(t,e,Q,B){!function(t,e,Q,B){for(var s,F=255&B[0]|(255&B[1])<<8|(255&B[2])<<16|(255&B[3])<<24,U=255&Q[0]|(255&Q[1])<<8|(255&Q[2])<<16|(255&Q[3])<<24,n=255&Q[4]|(255&Q[5])<<8|(255&Q[6])<<16|(255&Q[7])<<24,c=255&Q[8]|(255&Q[9])<<8|(255&Q[10])<<16|(255&Q[11])<<24,o=255&Q[12]|(255&Q[13])<<8|(255&Q[14])<<16|(255&Q[15])<<24,g=255&B[4]|(255&B[5])<<8|(255&B[6])<<16|(255&B[7])<<24,l=255&e[0]|(255&e[1])<<8|(255&e[2])<<16|(255&e[3])<<24,I=255&e[4]|(255&e[5])<<8|(255&e[6])<<16|(255&e[7])<<24,i=255&e[8]|(255&e[9])<<8|(255&e[10])<<16|(255&e[11])<<24,r=255&e[12]|(255&e[13])<<8|(255&e[14])<<16|(255&e[15])<<24,a=255&B[8]|(255&B[9])<<8|(255&B[10])<<16|(255&B[11])<<24,d=255&Q[16]|(255&Q[17])<<8|(255&Q[18])<<16|(255&Q[19])<<24,u=255&Q[20]|(255&Q[21])<<8|(255&Q[22])<<16|(255&Q[23])<<24,C=255&Q[24]|(255&Q[25])<<8|(255&Q[26])<<16|(255&Q[27])<<24,y=255&Q[28]|(255&Q[29])<<8|(255&Q[30])<<16|(255&Q[31])<<24,S=255&B[12]|(255&B[13])<<8|(255&B[14])<<16|(255&B[15])<<24,b=F,m=U,G=n,x=c,L=o,h=g,A=l,Z=I,R=i,N=r,V=a,D=d,E=u,p=C,J=y,X=S,H=0;H<20;H+=2)b^=(s=(E^=(s=(R^=(s=(L^=(s=b+E|0)<<7|s>>>25)+b|0)<<9|s>>>23)+L|0)<<13|s>>>19)+R|0)<<18|s>>>14,h^=(s=(m^=(s=(p^=(s=(N^=(s=h+m|0)<<7|s>>>25)+h|0)<<9|s>>>23)+N|0)<<13|s>>>19)+p|0)<<18|s>>>14,V^=(s=(A^=(s=(G^=(s=(J^=(s=V+A|0)<<7|s>>>25)+V|0)<<9|s>>>23)+J|0)<<13|s>>>19)+G|0)<<18|s>>>14,X^=(s=(D^=(s=(Z^=(s=(x^=(s=X+D|0)<<7|s>>>25)+X|0)<<9|s>>>23)+x|0)<<13|s>>>19)+Z|0)<<18|s>>>14,b^=(s=(x^=(s=(G^=(s=(m^=(s=b+x|0)<<7|s>>>25)+b|0)<<9|s>>>23)+m|0)<<13|s>>>19)+G|0)<<18|s>>>14,h^=(s=(L^=(s=(Z^=(s=(A^=(s=h+L|0)<<7|s>>>25)+h|0)<<9|s>>>23)+A|0)<<13|s>>>19)+Z|0)<<18|s>>>14,V^=(s=(N^=(s=(R^=(s=(D^=(s=V+N|0)<<7|s>>>25)+V|0)<<9|s>>>23)+D|0)<<13|s>>>19)+R|0)<<18|s>>>14,X^=(s=(J^=(s=(p^=(s=(E^=(s=X+J|0)<<7|s>>>25)+X|0)<<9|s>>>23)+E|0)<<13|s>>>19)+p|0)<<18|s>>>14;b=b+F|0,m=m+U|0,G=G+n|0,x=x+c|0,L=L+o|0,h=h+g|0,A=A+l|0,Z=Z+I|0,R=R+i|0,N=N+r|0,V=V+a|0,D=D+d|0,E=E+u|0,p=p+C|0,J=J+y|0,X=X+S|0,t[0]=b>>>0&255,t[1]=b>>>8&255,t[2]=b>>>16&255,t[3]=b>>>24&255,t[4]=m>>>0&255,t[5]=m>>>8&255,t[6]=m>>>16&255,t[7]=m>>>24&255,t[8]=G>>>0&255,t[9]=G>>>8&255,t[10]=G>>>16&255,t[11]=G>>>24&255,t[12]=x>>>0&255,t[13]=x>>>8&255,t[14]=x>>>16&255,t[15]=x>>>24&255,t[16]=L>>>0&255,t[17]=L>>>8&255,t[18]=L>>>16&255,t[19]=L>>>24&255,t[20]=h>>>0&255,t[21]=h>>>8&255,t[22]=h>>>16&255,t[23]=h>>>24&255,t[24]=A>>>0&255,t[25]=A>>>8&255,t[26]=A>>>16&255,t[27]=A>>>24&255,t[28]=Z>>>0&255,t[29]=Z>>>8&255,t[30]=Z>>>16&255,t[31]=Z>>>24&255,t[32]=R>>>0&255,t[33]=R>>>8&255,t[34]=R>>>16&255,t[35]=R>>>24&255,t[36]=N>>>0&255,t[37]=N>>>8&255,t[38]=N>>>16&255,t[39]=N>>>24&255,t[40]=V>>>0&255,t[41]=V>>>8&255,t[42]=V>>>16&255,t[43]=V>>>24&255,t[44]=D>>>0&255,t[45]=D>>>8&255,t[46]=D>>>16&255,t[47]=D>>>24&255,t[48]=E>>>0&255,t[49]=E>>>8&255,t[50]=E>>>16&255,t[51]=E>>>24&255,t[52]=p>>>0&255,t[53]=p>>>8&255,t[54]=p>>>16&255,t[55]=p>>>24&255,t[56]=J>>>0&255,t[57]=J>>>8&255,t[58]=J>>>16&255,t[59]=J>>>24&255,t[60]=X>>>0&255,t[61]=X>>>8&255,t[62]=X>>>16&255,t[63]=X>>>24&255}(t,e,Q,B)}function C(t,e,Q,B){!function(t,e,Q,B){for(var s,F=255&B[0]|(255&B[1])<<8|(255&B[2])<<16|(255&B[3])<<24,U=255&Q[0]|(255&Q[1])<<8|(255&Q[2])<<16|(255&Q[3])<<24,n=255&Q[4]|(255&Q[5])<<8|(255&Q[6])<<16|(255&Q[7])<<24,c=255&Q[8]|(255&Q[9])<<8|(255&Q[10])<<16|(255&Q[11])<<24,o=255&Q[12]|(255&Q[13])<<8|(255&Q[14])<<16|(255&Q[15])<<24,g=255&B[4]|(255&B[5])<<8|(255&B[6])<<16|(255&B[7])<<24,l=255&e[0]|(255&e[1])<<8|(255&e[2])<<16|(255&e[3])<<24,I=255&e[4]|(255&e[5])<<8|(255&e[6])<<16|(255&e[7])<<24,i=255&e[8]|(255&e[9])<<8|(255&e[10])<<16|(255&e[11])<<24,r=255&e[12]|(255&e[13])<<8|(255&e[14])<<16|(255&e[15])<<24,a=255&B[8]|(255&B[9])<<8|(255&B[10])<<16|(255&B[11])<<24,d=255&Q[16]|(255&Q[17])<<8|(255&Q[18])<<16|(255&Q[19])<<24,u=255&Q[20]|(255&Q[21])<<8|(255&Q[22])<<16|(255&Q[23])<<24,C=255&Q[24]|(255&Q[25])<<8|(255&Q[26])<<16|(255&Q[27])<<24,y=255&Q[28]|(255&Q[29])<<8|(255&Q[30])<<16|(255&Q[31])<<24,S=255&B[12]|(255&B[13])<<8|(255&B[14])<<16|(255&B[15])<<24,b=0;b<20;b+=2)F^=(s=(u^=(s=(i^=(s=(o^=(s=F+u|0)<<7|s>>>25)+F|0)<<9|s>>>23)+o|0)<<13|s>>>19)+i|0)<<18|s>>>14,g^=(s=(U^=(s=(C^=(s=(r^=(s=g+U|0)<<7|s>>>25)+g|0)<<9|s>>>23)+r|0)<<13|s>>>19)+C|0)<<18|s>>>14,a^=(s=(l^=(s=(n^=(s=(y^=(s=a+l|0)<<7|s>>>25)+a|0)<<9|s>>>23)+y|0)<<13|s>>>19)+n|0)<<18|s>>>14,S^=(s=(d^=(s=(I^=(s=(c^=(s=S+d|0)<<7|s>>>25)+S|0)<<9|s>>>23)+c|0)<<13|s>>>19)+I|0)<<18|s>>>14,F^=(s=(c^=(s=(n^=(s=(U^=(s=F+c|0)<<7|s>>>25)+F|0)<<9|s>>>23)+U|0)<<13|s>>>19)+n|0)<<18|s>>>14,g^=(s=(o^=(s=(I^=(s=(l^=(s=g+o|0)<<7|s>>>25)+g|0)<<9|s>>>23)+l|0)<<13|s>>>19)+I|0)<<18|s>>>14,a^=(s=(r^=(s=(i^=(s=(d^=(s=a+r|0)<<7|s>>>25)+a|0)<<9|s>>>23)+d|0)<<13|s>>>19)+i|0)<<18|s>>>14,S^=(s=(y^=(s=(C^=(s=(u^=(s=S+y|0)<<7|s>>>25)+S|0)<<9|s>>>23)+u|0)<<13|s>>>19)+C|0)<<18|s>>>14;t[0]=F>>>0&255,t[1]=F>>>8&255,t[2]=F>>>16&255,t[3]=F>>>24&255,t[4]=g>>>0&255,t[5]=g>>>8&255,t[6]=g>>>16&255,t[7]=g>>>24&255,t[8]=a>>>0&255,t[9]=a>>>8&255,t[10]=a>>>16&255,t[11]=a>>>24&255,t[12]=S>>>0&255,t[13]=S>>>8&255,t[14]=S>>>16&255,t[15]=S>>>24&255,t[16]=l>>>0&255,t[17]=l>>>8&255,t[18]=l>>>16&255,t[19]=l>>>24&255,t[20]=I>>>0&255,t[21]=I>>>8&255,t[22]=I>>>16&255,t[23]=I>>>24&255,t[24]=i>>>0&255,t[25]=i>>>8&255,t[26]=i>>>16&255,t[27]=i>>>24&255,t[28]=r>>>0&255,t[29]=r>>>8&255,t[30]=r>>>16&255,t[31]=r>>>24&255}(t,e,Q,B)}var y=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function S(t,e,Q,B,s,F,U){var n,c,o=new Uint8Array(16),g=new Uint8Array(64);for(c=0;c<16;c++)o[c]=0;for(c=0;c<8;c++)o[c]=F[c];for(;s>=64;){for(u(g,o,U,y),c=0;c<64;c++)t[e+c]=Q[B+c]^g[c];for(n=1,c=8;c<16;c++)n=n+(255&o[c])|0,o[c]=255&n,n>>>=8;s-=64,e+=64,B+=64}if(s>0)for(u(g,o,U,y),c=0;c<s;c++)t[e+c]=Q[B+c]^g[c];return 0}function b(t,e,Q,B,s){var F,U,n=new Uint8Array(16),c=new Uint8Array(64);for(U=0;U<16;U++)n[U]=0;for(U=0;U<8;U++)n[U]=B[U];for(;Q>=64;){for(u(c,n,s,y),U=0;U<64;U++)t[e+U]=c[U];for(F=1,U=8;U<16;U++)F=F+(255&n[U])|0,n[U]=255&F,F>>>=8;Q-=64,e+=64}if(Q>0)for(u(c,n,s,y),U=0;U<Q;U++)t[e+U]=c[U];return 0}function m(t,e,Q,B,s){var F=new Uint8Array(32);C(F,B,s,y);for(var U=new Uint8Array(8),n=0;n<8;n++)U[n]=B[n+16];return b(t,e,Q,U,F)}function G(t,e,Q,B,s,F,U){var n=new Uint8Array(32);C(n,F,U,y);for(var c=new Uint8Array(8),o=0;o<8;o++)c[o]=F[o+16];return S(t,e,Q,B,s,c,n)}var x=function(t){var e,Q,B,s,F,U,n,c;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,e=255&t[0]|(255&t[1])<<8,this.r[0]=8191&e,Q=255&t[2]|(255&t[3])<<8,this.r[1]=8191&(e>>>13|Q<<3),B=255&t[4]|(255&t[5])<<8,this.r[2]=7939&(Q>>>10|B<<6),s=255&t[6]|(255&t[7])<<8,this.r[3]=8191&(B>>>7|s<<9),F=255&t[8]|(255&t[9])<<8,this.r[4]=255&(s>>>4|F<<12),this.r[5]=F>>>1&8190,U=255&t[10]|(255&t[11])<<8,this.r[6]=8191&(F>>>14|U<<2),n=255&t[12]|(255&t[13])<<8,this.r[7]=8065&(U>>>11|n<<5),c=255&t[14]|(255&t[15])<<8,this.r[8]=8191&(n>>>8|c<<8),this.r[9]=c>>>5&127,this.pad[0]=255&t[16]|(255&t[17])<<8,this.pad[1]=255&t[18]|(255&t[19])<<8,this.pad[2]=255&t[20]|(255&t[21])<<8,this.pad[3]=255&t[22]|(255&t[23])<<8,this.pad[4]=255&t[24]|(255&t[25])<<8,this.pad[5]=255&t[26]|(255&t[27])<<8,this.pad[6]=255&t[28]|(255&t[29])<<8,this.pad[7]=255&t[30]|(255&t[31])<<8};function L(t,e,Q,B,s,F){var U=new x(F);return U.update(Q,B,s),U.finish(t,e),0}function h(t,e,Q,B,s,F){var U=new Uint8Array(16);return L(U,0,Q,B,s,F),a(t,e,U,0)}function A(t,e,Q,B,s){var F;if(Q<32)return-1;for(G(t,0,e,0,Q,B,s),L(t,16,t,32,Q-32,t),F=0;F<16;F++)t[F]=0;return 0}function Z(t,e,Q,B,s){var F,U=new Uint8Array(32);if(Q<32)return-1;if(m(U,0,32,B,s),0!==h(e,16,e,32,Q-32,U))return-1;for(G(t,0,e,0,Q,B,s),F=0;F<32;F++)t[F]=0;return 0}function R(t,e){var Q;for(Q=0;Q<16;Q++)t[Q]=0|e[Q]}function N(t){var e,Q,B=1;for(e=0;e<16;e++)Q=t[e]+B+65535,B=Math.floor(Q/65536),t[e]=Q-65536*B;t[0]+=B-1+37*(B-1)}function V(t,e,Q){for(var B,s=~(Q-1),F=0;F<16;F++)B=s&(t[F]^e[F]),t[F]^=B,e[F]^=B}function D(t,Q){var B,s,F,U=e(),n=e();for(B=0;B<16;B++)n[B]=Q[B];for(N(n),N(n),N(n),s=0;s<2;s++){for(U[0]=n[0]-65517,B=1;B<15;B++)U[B]=n[B]-65535-(U[B-1]>>16&1),U[B-1]&=65535;U[15]=n[15]-32767-(U[14]>>16&1),F=U[15]>>16&1,U[14]&=65535,V(n,U,1-F)}for(B=0;B<16;B++)t[2*B]=255&n[B],t[2*B+1]=n[B]>>8}function E(t,e){var Q=new Uint8Array(32),B=new Uint8Array(32);return D(Q,t),D(B,e),d(Q,0,B,0)}function p(t){var e=new Uint8Array(32);return D(e,t),1&e[0]}function J(t,e){var Q;for(Q=0;Q<16;Q++)t[Q]=e[2*Q]+(e[2*Q+1]<<8);t[15]&=32767}function X(t,e,Q){for(var B=0;B<16;B++)t[B]=e[B]+Q[B]}function H(t,e,Q){for(var B=0;B<16;B++)t[B]=e[B]-Q[B]}function k(t,e,Q){var B,s,F=0,U=0,n=0,c=0,o=0,g=0,l=0,I=0,i=0,r=0,a=0,d=0,u=0,C=0,y=0,S=0,b=0,m=0,G=0,x=0,L=0,h=0,A=0,Z=0,R=0,N=0,V=0,D=0,E=0,p=0,J=0,X=Q[0],H=Q[1],k=Q[2],W=Q[3],T=Q[4],Y=Q[5],f=Q[6],M=Q[7],w=Q[8],v=Q[9],z=Q[10],K=Q[11],O=Q[12],P=Q[13],j=Q[14],_=Q[15];F+=(B=e[0])*X,U+=B*H,n+=B*k,c+=B*W,o+=B*T,g+=B*Y,l+=B*f,I+=B*M,i+=B*w,r+=B*v,a+=B*z,d+=B*K,u+=B*O,C+=B*P,y+=B*j,S+=B*_,U+=(B=e[1])*X,n+=B*H,c+=B*k,o+=B*W,g+=B*T,l+=B*Y,I+=B*f,i+=B*M,r+=B*w,a+=B*v,d+=B*z,u+=B*K,C+=B*O,y+=B*P,S+=B*j,b+=B*_,n+=(B=e[2])*X,c+=B*H,o+=B*k,g+=B*W,l+=B*T,I+=B*Y,i+=B*f,r+=B*M,a+=B*w,d+=B*v,u+=B*z,C+=B*K,y+=B*O,S+=B*P,b+=B*j,m+=B*_,c+=(B=e[3])*X,o+=B*H,g+=B*k,l+=B*W,I+=B*T,i+=B*Y,r+=B*f,a+=B*M,d+=B*w,u+=B*v,C+=B*z,y+=B*K,S+=B*O,b+=B*P,m+=B*j,G+=B*_,o+=(B=e[4])*X,g+=B*H,l+=B*k,I+=B*W,i+=B*T,r+=B*Y,a+=B*f,d+=B*M,u+=B*w,C+=B*v,y+=B*z,S+=B*K,b+=B*O,m+=B*P,G+=B*j,x+=B*_,g+=(B=e[5])*X,l+=B*H,I+=B*k,i+=B*W,r+=B*T,a+=B*Y,d+=B*f,u+=B*M,C+=B*w,y+=B*v,S+=B*z,b+=B*K,m+=B*O,G+=B*P,x+=B*j,L+=B*_,l+=(B=e[6])*X,I+=B*H,i+=B*k,r+=B*W,a+=B*T,d+=B*Y,u+=B*f,C+=B*M,y+=B*w,S+=B*v,b+=B*z,m+=B*K,G+=B*O,x+=B*P,L+=B*j,h+=B*_,I+=(B=e[7])*X,i+=B*H,r+=B*k,a+=B*W,d+=B*T,u+=B*Y,C+=B*f,y+=B*M,S+=B*w,b+=B*v,m+=B*z,G+=B*K,x+=B*O,L+=B*P,h+=B*j,A+=B*_,i+=(B=e[8])*X,r+=B*H,a+=B*k,d+=B*W,u+=B*T,C+=B*Y,y+=B*f,S+=B*M,b+=B*w,m+=B*v,G+=B*z,x+=B*K,L+=B*O,h+=B*P,A+=B*j,Z+=B*_,r+=(B=e[9])*X,a+=B*H,d+=B*k,u+=B*W,C+=B*T,y+=B*Y,S+=B*f,b+=B*M,m+=B*w,G+=B*v,x+=B*z,L+=B*K,h+=B*O,A+=B*P,Z+=B*j,R+=B*_,a+=(B=e[10])*X,d+=B*H,u+=B*k,C+=B*W,y+=B*T,S+=B*Y,b+=B*f,m+=B*M,G+=B*w,x+=B*v,L+=B*z,h+=B*K,A+=B*O,Z+=B*P,R+=B*j,N+=B*_,d+=(B=e[11])*X,u+=B*H,C+=B*k,y+=B*W,S+=B*T,b+=B*Y,m+=B*f,G+=B*M,x+=B*w,L+=B*v,h+=B*z,A+=B*K,Z+=B*O,R+=B*P,N+=B*j,V+=B*_,u+=(B=e[12])*X,C+=B*H,y+=B*k,S+=B*W,b+=B*T,m+=B*Y,G+=B*f,x+=B*M,L+=B*w,h+=B*v,A+=B*z,Z+=B*K,R+=B*O,N+=B*P,V+=B*j,D+=B*_,C+=(B=e[13])*X,y+=B*H,S+=B*k,b+=B*W,m+=B*T,G+=B*Y,x+=B*f,L+=B*M,h+=B*w,A+=B*v,Z+=B*z,R+=B*K,N+=B*O,V+=B*P,D+=B*j,E+=B*_,y+=(B=e[14])*X,S+=B*H,b+=B*k,m+=B*W,G+=B*T,x+=B*Y,L+=B*f,h+=B*M,A+=B*w,Z+=B*v,R+=B*z,N+=B*K,V+=B*O,D+=B*P,E+=B*j,p+=B*_,S+=(B=e[15])*X,U+=38*(m+=B*k),n+=38*(G+=B*W),c+=38*(x+=B*T),o+=38*(L+=B*Y),g+=38*(h+=B*f),l+=38*(A+=B*M),I+=38*(Z+=B*w),i+=38*(R+=B*v),r+=38*(N+=B*z),a+=38*(V+=B*K),d+=38*(D+=B*O),u+=38*(E+=B*P),C+=38*(p+=B*j),y+=38*(J+=B*_),F=(B=(F+=38*(b+=B*H))+(s=1)+65535)-65536*(s=Math.floor(B/65536)),U=(B=U+s+65535)-65536*(s=Math.floor(B/65536)),n=(B=n+s+65535)-65536*(s=Math.floor(B/65536)),c=(B=c+s+65535)-65536*(s=Math.floor(B/65536)),o=(B=o+s+65535)-65536*(s=Math.floor(B/65536)),g=(B=g+s+65535)-65536*(s=Math.floor(B/65536)),l=(B=l+s+65535)-65536*(s=Math.floor(B/65536)),I=(B=I+s+65535)-65536*(s=Math.floor(B/65536)),i=(B=i+s+65535)-65536*(s=Math.floor(B/65536)),r=(B=r+s+65535)-65536*(s=Math.floor(B/65536)),a=(B=a+s+65535)-65536*(s=Math.floor(B/65536)),d=(B=d+s+65535)-65536*(s=Math.floor(B/65536)),u=(B=u+s+65535)-65536*(s=Math.floor(B/65536)),C=(B=C+s+65535)-65536*(s=Math.floor(B/65536)),y=(B=y+s+65535)-65536*(s=Math.floor(B/65536)),S=(B=S+s+65535)-65536*(s=Math.floor(B/65536)),F=(B=(F+=s-1+37*(s-1))+(s=1)+65535)-65536*(s=Math.floor(B/65536)),U=(B=U+s+65535)-65536*(s=Math.floor(B/65536)),n=(B=n+s+65535)-65536*(s=Math.floor(B/65536)),c=(B=c+s+65535)-65536*(s=Math.floor(B/65536)),o=(B=o+s+65535)-65536*(s=Math.floor(B/65536)),g=(B=g+s+65535)-65536*(s=Math.floor(B/65536)),l=(B=l+s+65535)-65536*(s=Math.floor(B/65536)),I=(B=I+s+65535)-65536*(s=Math.floor(B/65536)),i=(B=i+s+65535)-65536*(s=Math.floor(B/65536)),r=(B=r+s+65535)-65536*(s=Math.floor(B/65536)),a=(B=a+s+65535)-65536*(s=Math.floor(B/65536)),d=(B=d+s+65535)-65536*(s=Math.floor(B/65536)),u=(B=u+s+65535)-65536*(s=Math.floor(B/65536)),C=(B=C+s+65535)-65536*(s=Math.floor(B/65536)),y=(B=y+s+65535)-65536*(s=Math.floor(B/65536)),S=(B=S+s+65535)-65536*(s=Math.floor(B/65536)),F+=s-1+37*(s-1),t[0]=F,t[1]=U,t[2]=n,t[3]=c,t[4]=o,t[5]=g,t[6]=l,t[7]=I,t[8]=i,t[9]=r,t[10]=a,t[11]=d,t[12]=u,t[13]=C,t[14]=y,t[15]=S}function W(t,e){k(t,e,e)}function T(t,Q){var B,s=e();for(B=0;B<16;B++)s[B]=Q[B];for(B=253;B>=0;B--)W(s,s),2!==B&&4!==B&&k(s,s,Q);for(B=0;B<16;B++)t[B]=s[B]}function Y(t,Q){var B,s=e();for(B=0;B<16;B++)s[B]=Q[B];for(B=250;B>=0;B--)W(s,s),1!==B&&k(s,s,Q);for(B=0;B<16;B++)t[B]=s[B]}function f(t,Q,B){var s,F,U=new Uint8Array(32),c=new Float64Array(80),o=e(),g=e(),l=e(),I=e(),i=e(),r=e();for(F=0;F<31;F++)U[F]=Q[F];for(U[31]=127&Q[31]|64,U[0]&=248,J(c,B),F=0;F<16;F++)g[F]=c[F],I[F]=o[F]=l[F]=0;for(o[0]=I[0]=1,F=254;F>=0;--F)V(o,g,s=U[F>>>3]>>>(7&F)&1),V(l,I,s),X(i,o,l),H(o,o,l),X(l,g,I),H(g,g,I),W(I,i),W(r,o),k(o,l,o),k(l,g,i),X(i,o,l),H(o,o,l),W(g,o),H(l,I,r),k(o,l,n),X(o,o,I),k(l,l,o),k(o,I,r),k(I,g,c),W(g,i),V(o,g,s),V(l,I,s);for(F=0;F<16;F++)c[F+16]=o[F],c[F+32]=l[F],c[F+48]=g[F],c[F+64]=I[F];var a=c.subarray(32),d=c.subarray(16);return T(a,a),k(d,d,a),D(t,d),0}function M(t,e){return f(t,e,s)}function w(t,e){return Q(e,32),M(t,e)}function v(t,e,Q){var s=new Uint8Array(32);return f(s,Q,e),C(t,B,s,y)}x.prototype.blocks=function(t,e,Q){for(var B,s,F,U,n,c,o,g,l,I,i,r,a,d,u,C,y,S,b,m=this.fin?0:2048,G=this.h[0],x=this.h[1],L=this.h[2],h=this.h[3],A=this.h[4],Z=this.h[5],R=this.h[6],N=this.h[7],V=this.h[8],D=this.h[9],E=this.r[0],p=this.r[1],J=this.r[2],X=this.r[3],H=this.r[4],k=this.r[5],W=this.r[6],T=this.r[7],Y=this.r[8],f=this.r[9];Q>=16;)I=l=0,I+=(G+=8191&(B=255&t[e+0]|(255&t[e+1])<<8))*E,I+=(x+=8191&(B>>>13|(s=255&t[e+2]|(255&t[e+3])<<8)<<3))*(5*f),I+=(L+=8191&(s>>>10|(F=255&t[e+4]|(255&t[e+5])<<8)<<6))*(5*Y),I+=(h+=8191&(F>>>7|(U=255&t[e+6]|(255&t[e+7])<<8)<<9))*(5*T),l=(I+=(A+=8191&(U>>>4|(n=255&t[e+8]|(255&t[e+9])<<8)<<12))*(5*W))>>>13,I&=8191,I+=(Z+=n>>>1&8191)*(5*k),I+=(R+=8191&(n>>>14|(c=255&t[e+10]|(255&t[e+11])<<8)<<2))*(5*H),I+=(N+=8191&(c>>>11|(o=255&t[e+12]|(255&t[e+13])<<8)<<5))*(5*X),I+=(V+=8191&(o>>>8|(g=255&t[e+14]|(255&t[e+15])<<8)<<8))*(5*J),i=l+=(I+=(D+=g>>>5|m)*(5*p))>>>13,i+=G*p,i+=x*E,i+=L*(5*f),i+=h*(5*Y),l=(i+=A*(5*T))>>>13,i&=8191,i+=Z*(5*W),i+=R*(5*k),i+=N*(5*H),i+=V*(5*X),l+=(i+=D*(5*J))>>>13,i&=8191,r=l,r+=G*J,r+=x*p,r+=L*E,r+=h*(5*f),l=(r+=A*(5*Y))>>>13,r&=8191,r+=Z*(5*T),r+=R*(5*W),r+=N*(5*k),r+=V*(5*H),a=l+=(r+=D*(5*X))>>>13,a+=G*X,a+=x*J,a+=L*p,a+=h*E,l=(a+=A*(5*f))>>>13,a&=8191,a+=Z*(5*Y),a+=R*(5*T),a+=N*(5*W),a+=V*(5*k),d=l+=(a+=D*(5*H))>>>13,d+=G*H,d+=x*X,d+=L*J,d+=h*p,l=(d+=A*E)>>>13,d&=8191,d+=Z*(5*f),d+=R*(5*Y),d+=N*(5*T),d+=V*(5*W),u=l+=(d+=D*(5*k))>>>13,u+=G*k,u+=x*H,u+=L*X,u+=h*J,l=(u+=A*p)>>>13,u&=8191,u+=Z*E,u+=R*(5*f),u+=N*(5*Y),u+=V*(5*T),C=l+=(u+=D*(5*W))>>>13,C+=G*W,C+=x*k,C+=L*H,C+=h*X,l=(C+=A*J)>>>13,C&=8191,C+=Z*p,C+=R*E,C+=N*(5*f),C+=V*(5*Y),y=l+=(C+=D*(5*T))>>>13,y+=G*T,y+=x*W,y+=L*k,y+=h*H,l=(y+=A*X)>>>13,y&=8191,y+=Z*J,y+=R*p,y+=N*E,y+=V*(5*f),S=l+=(y+=D*(5*Y))>>>13,S+=G*Y,S+=x*T,S+=L*W,S+=h*k,l=(S+=A*H)>>>13,S&=8191,S+=Z*X,S+=R*J,S+=N*p,S+=V*E,b=l+=(S+=D*(5*f))>>>13,b+=G*f,b+=x*Y,b+=L*T,b+=h*W,l=(b+=A*k)>>>13,b&=8191,b+=Z*H,b+=R*X,b+=N*J,b+=V*p,G=I=8191&(l=(l=((l+=(b+=D*E)>>>13)<<2)+l|0)+(I&=8191)|0),x=i+=l>>>=13,L=r&=8191,h=a&=8191,A=d&=8191,Z=u&=8191,R=C&=8191,N=y&=8191,V=S&=8191,D=b&=8191,e+=16,Q-=16;this.h[0]=G,this.h[1]=x,this.h[2]=L,this.h[3]=h,this.h[4]=A,this.h[5]=Z,this.h[6]=R,this.h[7]=N,this.h[8]=V,this.h[9]=D},x.prototype.finish=function(t,e){var Q,B,s,F,U=new Uint16Array(10);if(this.leftover){for(F=this.leftover,this.buffer[F++]=1;F<16;F++)this.buffer[F]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(Q=this.h[1]>>>13,this.h[1]&=8191,F=2;F<10;F++)this.h[F]+=Q,Q=this.h[F]>>>13,this.h[F]&=8191;for(this.h[0]+=5*Q,Q=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=Q,Q=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=Q,U[0]=this.h[0]+5,Q=U[0]>>>13,U[0]&=8191,F=1;F<10;F++)U[F]=this.h[F]+Q,Q=U[F]>>>13,U[F]&=8191;for(U[9]-=8192,B=(1^Q)-1,F=0;F<10;F++)U[F]&=B;for(B=~B,F=0;F<10;F++)this.h[F]=this.h[F]&B|U[F];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),s=this.h[0]+this.pad[0],this.h[0]=65535&s,F=1;F<8;F++)s=(this.h[F]+this.pad[F]|0)+(s>>>16)|0,this.h[F]=65535&s;t[e+0]=this.h[0]>>>0&255,t[e+1]=this.h[0]>>>8&255,t[e+2]=this.h[1]>>>0&255,t[e+3]=this.h[1]>>>8&255,t[e+4]=this.h[2]>>>0&255,t[e+5]=this.h[2]>>>8&255,t[e+6]=this.h[3]>>>0&255,t[e+7]=this.h[3]>>>8&255,t[e+8]=this.h[4]>>>0&255,t[e+9]=this.h[4]>>>8&255,t[e+10]=this.h[5]>>>0&255,t[e+11]=this.h[5]>>>8&255,t[e+12]=this.h[6]>>>0&255,t[e+13]=this.h[6]>>>8&255,t[e+14]=this.h[7]>>>0&255,t[e+15]=this.h[7]>>>8&255},x.prototype.update=function(t,e,Q){var B,s;if(this.leftover){for((s=16-this.leftover)>Q&&(s=Q),B=0;B<s;B++)this.buffer[this.leftover+B]=t[e+B];if(Q-=s,e+=s,this.leftover+=s,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(Q>=16&&(s=Q-Q%16,this.blocks(t,e,s),e+=s,Q-=s),Q){for(B=0;B<Q;B++)this.buffer[this.leftover+B]=t[e+B];this.leftover+=Q}};var z=A,K=Z;var O=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function P(t,e,Q,B){for(var s,F,U,n,c,o,g,l,I,i,r,a,d,u,C,y,S,b,m,G,x,L,h,A,Z,R,N=new Int32Array(16),V=new Int32Array(16),D=t[0],E=t[1],p=t[2],J=t[3],X=t[4],H=t[5],k=t[6],W=t[7],T=e[0],Y=e[1],f=e[2],M=e[3],w=e[4],v=e[5],z=e[6],K=e[7],P=0;B>=128;){for(m=0;m<16;m++)G=8*m+P,N[m]=Q[G+0]<<24|Q[G+1]<<16|Q[G+2]<<8|Q[G+3],V[m]=Q[G+4]<<24|Q[G+5]<<16|Q[G+6]<<8|Q[G+7];for(m=0;m<80;m++)if(s=D,F=E,U=p,n=J,c=X,o=H,g=k,W,I=T,i=Y,r=f,a=M,d=w,u=v,C=z,K,h=65535&(L=K),A=L>>>16,Z=65535&(x=W),R=x>>>16,h+=65535&(L=(w>>>14|X<<18)^(w>>>18|X<<14)^(X>>>9|w<<23)),A+=L>>>16,Z+=65535&(x=(X>>>14|w<<18)^(X>>>18|w<<14)^(w>>>9|X<<23)),R+=x>>>16,h+=65535&(L=w&v^~w&z),A+=L>>>16,Z+=65535&(x=X&H^~X&k),R+=x>>>16,h+=65535&(L=O[2*m+1]),A+=L>>>16,Z+=65535&(x=O[2*m]),R+=x>>>16,x=N[m%16],A+=(L=V[m%16])>>>16,Z+=65535&x,R+=x>>>16,Z+=(A+=(h+=65535&L)>>>16)>>>16,h=65535&(L=b=65535&h|A<<16),A=L>>>16,Z=65535&(x=S=65535&Z|(R+=Z>>>16)<<16),R=x>>>16,h+=65535&(L=(T>>>28|D<<4)^(D>>>2|T<<30)^(D>>>7|T<<25)),A+=L>>>16,Z+=65535&(x=(D>>>28|T<<4)^(T>>>2|D<<30)^(T>>>7|D<<25)),R+=x>>>16,A+=(L=T&Y^T&f^Y&f)>>>16,Z+=65535&(x=D&E^D&p^E&p),R+=x>>>16,l=65535&(Z+=(A+=(h+=65535&L)>>>16)>>>16)|(R+=Z>>>16)<<16,y=65535&h|A<<16,h=65535&(L=a),A=L>>>16,Z=65535&(x=n),R=x>>>16,A+=(L=b)>>>16,Z+=65535&(x=S),R+=x>>>16,E=s,p=F,J=U,X=n=65535&(Z+=(A+=(h+=65535&L)>>>16)>>>16)|(R+=Z>>>16)<<16,H=c,k=o,W=g,D=l,Y=I,f=i,M=r,w=a=65535&h|A<<16,v=d,z=u,K=C,T=y,m%16==15)for(G=0;G<16;G++)x=N[G],h=65535&(L=V[G]),A=L>>>16,Z=65535&x,R=x>>>16,x=N[(G+9)%16],h+=65535&(L=V[(G+9)%16]),A+=L>>>16,Z+=65535&x,R+=x>>>16,S=N[(G+1)%16],h+=65535&(L=((b=V[(G+1)%16])>>>1|S<<31)^(b>>>8|S<<24)^(b>>>7|S<<25)),A+=L>>>16,Z+=65535&(x=(S>>>1|b<<31)^(S>>>8|b<<24)^S>>>7),R+=x>>>16,S=N[(G+14)%16],A+=(L=((b=V[(G+14)%16])>>>19|S<<13)^(S>>>29|b<<3)^(b>>>6|S<<26))>>>16,Z+=65535&(x=(S>>>19|b<<13)^(b>>>29|S<<3)^S>>>6),R+=x>>>16,R+=(Z+=(A+=(h+=65535&L)>>>16)>>>16)>>>16,N[G]=65535&Z|R<<16,V[G]=65535&h|A<<16;h=65535&(L=T),A=L>>>16,Z=65535&(x=D),R=x>>>16,x=t[0],A+=(L=e[0])>>>16,Z+=65535&x,R+=x>>>16,R+=(Z+=(A+=(h+=65535&L)>>>16)>>>16)>>>16,t[0]=D=65535&Z|R<<16,e[0]=T=65535&h|A<<16,h=65535&(L=Y),A=L>>>16,Z=65535&(x=E),R=x>>>16,x=t[1],A+=(L=e[1])>>>16,Z+=65535&x,R+=x>>>16,R+=(Z+=(A+=(h+=65535&L)>>>16)>>>16)>>>16,t[1]=E=65535&Z|R<<16,e[1]=Y=65535&h|A<<16,h=65535&(L=f),A=L>>>16,Z=65535&(x=p),R=x>>>16,x=t[2],A+=(L=e[2])>>>16,Z+=65535&x,R+=x>>>16,R+=(Z+=(A+=(h+=65535&L)>>>16)>>>16)>>>16,t[2]=p=65535&Z|R<<16,e[2]=f=65535&h|A<<16,h=65535&(L=M),A=L>>>16,Z=65535&(x=J),R=x>>>16,x=t[3],A+=(L=e[3])>>>16,Z+=65535&x,R+=x>>>16,R+=(Z+=(A+=(h+=65535&L)>>>16)>>>16)>>>16,t[3]=J=65535&Z|R<<16,e[3]=M=65535&h|A<<16,h=65535&(L=w),A=L>>>16,Z=65535&(x=X),R=x>>>16,x=t[4],A+=(L=e[4])>>>16,Z+=65535&x,R+=x>>>16,R+=(Z+=(A+=(h+=65535&L)>>>16)>>>16)>>>16,t[4]=X=65535&Z|R<<16,e[4]=w=65535&h|A<<16,h=65535&(L=v),A=L>>>16,Z=65535&(x=H),R=x>>>16,x=t[5],A+=(L=e[5])>>>16,Z+=65535&x,R+=x>>>16,R+=(Z+=(A+=(h+=65535&L)>>>16)>>>16)>>>16,t[5]=H=65535&Z|R<<16,e[5]=v=65535&h|A<<16,h=65535&(L=z),A=L>>>16,Z=65535&(x=k),R=x>>>16,x=t[6],A+=(L=e[6])>>>16,Z+=65535&x,R+=x>>>16,R+=(Z+=(A+=(h+=65535&L)>>>16)>>>16)>>>16,t[6]=k=65535&Z|R<<16,e[6]=z=65535&h|A<<16,h=65535&(L=K),A=L>>>16,Z=65535&(x=W),R=x>>>16,x=t[7],A+=(L=e[7])>>>16,Z+=65535&x,R+=x>>>16,R+=(Z+=(A+=(h+=65535&L)>>>16)>>>16)>>>16,t[7]=W=65535&Z|R<<16,e[7]=K=65535&h|A<<16,P+=128,B-=128}return B}function j(t,e,Q){var B,s=new Int32Array(8),F=new Int32Array(8),U=new Uint8Array(256),n=Q;for(s[0]=1779033703,s[1]=3144134277,s[2]=1013904242,s[3]=2773480762,s[4]=1359893119,s[5]=2600822924,s[6]=528734635,s[7]=1541459225,F[0]=4089235720,F[1]=2227873595,F[2]=4271175723,F[3]=1595750129,F[4]=2917565137,F[5]=725511199,F[6]=4215389547,F[7]=327033209,P(s,F,e,Q),Q%=128,B=0;B<Q;B++)U[B]=e[n-Q+B];for(U[Q]=128,U[(Q=256-128*(Q<112?1:0))-9]=0,i(U,Q-8,n/536870912|0,n<<3),P(s,F,U,Q),B=0;B<8;B++)i(t,8*B,s[B],F[B]);return 0}function _(t,Q){var B=e(),s=e(),F=e(),U=e(),n=e(),c=e(),g=e(),l=e(),I=e();H(B,t[1],t[0]),H(I,Q[1],Q[0]),k(B,B,I),X(s,t[0],t[1]),X(I,Q[0],Q[1]),k(s,s,I),k(F,t[3],Q[3]),k(F,F,o),k(U,t[2],Q[2]),X(U,U,U),H(n,s,B),H(c,U,F),X(g,U,F),X(l,s,B),k(t[0],n,c),k(t[1],l,g),k(t[2],g,c),k(t[3],n,l)}function $(t,e,Q){var B;for(B=0;B<4;B++)V(t[B],e[B],Q)}function q(t,Q){var B=e(),s=e(),F=e();T(F,Q[2]),k(B,Q[0],F),k(s,Q[1],F),D(t,s),t[31]^=p(B)<<7}function tt(t,e,Q){var B,s;for(R(t[0],F),R(t[1],U),R(t[2],U),R(t[3],F),s=255;s>=0;--s)$(t,e,B=Q[s/8|0]>>(7&s)&1),_(e,t),_(t,t),$(t,e,B)}function et(t,Q){var B=[e(),e(),e(),e()];R(B[0],g),R(B[1],l),R(B[2],U),k(B[3],g,l),tt(t,B,Q)}function Qt(t,B,s){var F,U=new Uint8Array(64),n=[e(),e(),e(),e()];for(s||Q(B,32),j(U,B,32),U[0]&=248,U[31]&=127,U[31]|=64,et(n,U),q(t,n),F=0;F<32;F++)B[F+32]=t[F];return 0}var Bt=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function st(t,e){var Q,B,s,F;for(B=63;B>=32;--B){for(Q=0,s=B-32,F=B-12;s<F;++s)e[s]+=Q-16*e[B]*Bt[s-(B-32)],Q=Math.floor((e[s]+128)/256),e[s]-=256*Q;e[s]+=Q,e[B]=0}for(Q=0,s=0;s<32;s++)e[s]+=Q-(e[31]>>4)*Bt[s],Q=e[s]>>8,e[s]&=255;for(s=0;s<32;s++)e[s]-=Q*Bt[s];for(B=0;B<32;B++)e[B+1]+=e[B]>>8,t[B]=255&e[B]}function Ft(t){var e,Q=new Float64Array(64);for(e=0;e<64;e++)Q[e]=t[e];for(e=0;e<64;e++)t[e]=0;st(t,Q)}function Ut(t,Q,B,s){var F,U,n=new Uint8Array(64),c=new Uint8Array(64),o=new Uint8Array(64),g=new Float64Array(64),l=[e(),e(),e(),e()];j(n,s,32),n[0]&=248,n[31]&=127,n[31]|=64;var I=B+64;for(F=0;F<B;F++)t[64+F]=Q[F];for(F=0;F<32;F++)t[32+F]=n[32+F];for(j(o,t.subarray(32),B+32),Ft(o),et(l,o),q(t,l),F=32;F<64;F++)t[F]=s[F];for(j(c,t,B+64),Ft(c),F=0;F<64;F++)g[F]=0;for(F=0;F<32;F++)g[F]=o[F];for(F=0;F<32;F++)for(U=0;U<32;U++)g[F+U]+=c[F]*n[U];return st(t.subarray(32),g),I}function nt(t,Q,B,s){var n,o=new Uint8Array(32),g=new Uint8Array(64),l=[e(),e(),e(),e()],i=[e(),e(),e(),e()];if(B<64)return-1;if(function(t,Q){var B=e(),s=e(),n=e(),o=e(),g=e(),l=e(),i=e();return R(t[2],U),J(t[1],Q),W(n,t[1]),k(o,n,c),H(n,n,t[2]),X(o,t[2],o),W(g,o),W(l,g),k(i,l,g),k(B,i,n),k(B,B,o),Y(B,B),k(B,B,n),k(B,B,o),k(B,B,o),k(t[0],B,o),W(s,t[0]),k(s,s,o),E(s,n)&&k(t[0],t[0],I),W(s,t[0]),k(s,s,o),E(s,n)?-1:(p(t[0])===Q[31]>>7&&H(t[0],F,t[0]),k(t[3],t[0],t[1]),0)}(i,s))return-1;for(n=0;n<B;n++)t[n]=Q[n];for(n=0;n<32;n++)t[n+32]=s[n];if(j(g,t,B),Ft(g),tt(l,i,g),et(i,Q.subarray(32)),_(l,i),q(o,l),B-=64,d(Q,0,o,0)){for(n=0;n<B;n++)t[n]=0;return-1}for(n=0;n<B;n++)t[n]=Q[n+64];return B}var ct=16,ot=64,gt=32,lt=64;function It(t,e){if(32!==t.length)throw new Error("bad key size");if(24!==e.length)throw new Error("bad nonce size")}function it(){for(var t=0;t<arguments.length;t++)if(!(arguments[t]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function rt(t){for(var e=0;e<t.length;e++)t[e]=0}t.lowlevel={crypto_core_hsalsa20:C,crypto_stream_xor:G,crypto_stream:m,crypto_stream_salsa20_xor:S,crypto_stream_salsa20:b,crypto_onetimeauth:L,crypto_onetimeauth_verify:h,crypto_verify_16:a,crypto_verify_32:d,crypto_secretbox:A,crypto_secretbox_open:Z,crypto_scalarmult:f,crypto_scalarmult_base:M,crypto_box_beforenm:v,crypto_box_afternm:z,crypto_box:function(t,e,Q,B,s,F){var U=new Uint8Array(32);return v(U,s,F),z(t,e,Q,B,U)},crypto_box_open:function(t,e,Q,B,s,F){var U=new Uint8Array(32);return v(U,s,F),K(t,e,Q,B,U)},crypto_box_keypair:w,crypto_hash:j,crypto_sign:Ut,crypto_sign_keypair:Qt,crypto_sign_open:nt,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:ct,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:ot,crypto_sign_PUBLICKEYBYTES:gt,crypto_sign_SECRETKEYBYTES:lt,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:e,D:c,L:Bt,pack25519:D,unpack25519:J,M:k,A:X,S:W,Z:H,pow2523:Y,add:_,set25519:R,modL:st,scalarmult:tt,scalarbase:et},t.randomBytes=function(t){var e=new Uint8Array(t);return Q(e,t),e},t.secretbox=function(t,e,Q){it(t,e,Q),It(Q,e);for(var B=new Uint8Array(32+t.length),s=new Uint8Array(B.length),F=0;F<t.length;F++)B[F+32]=t[F];return A(s,B,B.length,e,Q),s.subarray(ct)},t.secretbox.open=function(t,e,Q){it(t,e,Q),It(Q,e);for(var B=new Uint8Array(ct+t.length),s=new Uint8Array(B.length),F=0;F<t.length;F++)B[F+ct]=t[F];return B.length<32||0!==Z(s,B,B.length,e,Q)?null:s.subarray(32)},t.secretbox.keyLength=32,t.secretbox.nonceLength=24,t.secretbox.overheadLength=ct,t.scalarMult=function(t,e){if(it(t,e),32!==t.length)throw new Error("bad n size");if(32!==e.length)throw new Error("bad p size");var Q=new Uint8Array(32);return f(Q,t,e),Q},t.scalarMult.base=function(t){if(it(t),32!==t.length)throw new Error("bad n size");var e=new Uint8Array(32);return M(e,t),e},t.scalarMult.scalarLength=32,t.scalarMult.groupElementLength=32,t.box=function(e,Q,B,s){var F=t.box.before(B,s);return t.secretbox(e,Q,F)},t.box.before=function(t,e){it(t,e),function(t,e){if(32!==t.length)throw new Error("bad public key size");if(32!==e.length)throw new Error("bad secret key size")}(t,e);var Q=new Uint8Array(32);return v(Q,t,e),Q},t.box.after=t.secretbox,t.box.open=function(e,Q,B,s){var F=t.box.before(B,s);return t.secretbox.open(e,Q,F)},t.box.open.after=t.secretbox.open,t.box.keyPair=function(){var t=new Uint8Array(32),e=new Uint8Array(32);return w(t,e),{publicKey:t,secretKey:e}},t.box.keyPair.fromSecretKey=function(t){if(it(t),32!==t.length)throw new Error("bad secret key size");var e=new Uint8Array(32);return M(e,t),{publicKey:e,secretKey:new Uint8Array(t)}},t.box.publicKeyLength=32,t.box.secretKeyLength=32,t.box.sharedKeyLength=32,t.box.nonceLength=24,t.box.overheadLength=t.secretbox.overheadLength,t.sign=function(t,e){if(it(t,e),e.length!==lt)throw new Error("bad secret key size");var Q=new Uint8Array(ot+t.length);return Ut(Q,t,t.length,e),Q},t.sign.open=function(t,e){if(it(t,e),e.length!==gt)throw new Error("bad public key size");var Q=new Uint8Array(t.length),B=nt(Q,t,t.length,e);if(B<0)return null;for(var s=new Uint8Array(B),F=0;F<s.length;F++)s[F]=Q[F];return s},t.sign.detached=function(e,Q){for(var B=t.sign(e,Q),s=new Uint8Array(ot),F=0;F<s.length;F++)s[F]=B[F];return s},t.sign.detached.verify=function(t,e,Q){if(it(t,e,Q),e.length!==ot)throw new Error("bad signature size");if(Q.length!==gt)throw new Error("bad public key size");var B,s=new Uint8Array(ot+t.length),F=new Uint8Array(ot+t.length);for(B=0;B<ot;B++)s[B]=e[B];for(B=0;B<t.length;B++)s[B+ot]=t[B];return nt(F,s,s.length,Q)>=0},t.sign.keyPair=function(){var t=new Uint8Array(gt),e=new Uint8Array(lt);return Qt(t,e),{publicKey:t,secretKey:e}},t.sign.keyPair.fromSecretKey=function(t){if(it(t),t.length!==lt)throw new Error("bad secret key size");for(var e=new Uint8Array(gt),Q=0;Q<e.length;Q++)e[Q]=t[32+Q];return{publicKey:e,secretKey:new Uint8Array(t)}},t.sign.keyPair.fromSeed=function(t){if(it(t),32!==t.length)throw new Error("bad seed size");for(var e=new Uint8Array(gt),Q=new Uint8Array(lt),B=0;B<32;B++)Q[B]=t[B];return Qt(e,Q,!0),{publicKey:e,secretKey:Q}},t.sign.publicKeyLength=gt,t.sign.secretKeyLength=lt,t.sign.seedLength=32,t.sign.signatureLength=ot,t.hash=function(t){it(t);var e=new Uint8Array(64);return j(e,t,t.length),e},t.hash.hashLength=64,t.verify=function(t,e){return it(t,e),0!==t.length&&0!==e.length&&(t.length===e.length&&0===r(t,0,e,0,t.length))},t.setPRNG=function(t){Q=t},function(){var e="undefined"!=typeof self?self.crypto||self.msCrypto:null;if(e&&e.getRandomValues){t.setPRNG((function(t,Q){var B,s=new Uint8Array(Q);for(B=0;B<Q;B+=65536)e.getRandomValues(s.subarray(B,B+Math.min(Q-B,65536)));for(B=0;B<Q;B++)t[B]=s[B];rt(s)}))}else void 0!==commonjsRequire&&(e=require$$0$1)&&e.randomBytes&&t.setPRNG((function(t,Q){var B,s=e.randomBytes(Q);for(B=0;B<Q;B++)t[B]=s[B];rt(s)}))}()}(t.exports?t.exports:self.nacl=self.nacl||{})}(naclFast);var nacl=naclFast.exports;function arrayEqual$1(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;const Q=new DataView(t.buffer,t.byteOffset,t.byteLength),B=new DataView(e.buffer,e.byteOffset,e.byteLength);let s=t.byteLength;for(;s--;)if(Q.getUint8(s)!==B.getUint8(s))return!1;return!0}function arrayStartsWith(t,e){if(t.byteLength<e.byteLength)return!1;let Q=e.byteLength;for(;Q--;)if(t[Q]!==e[Q])return!1;return!0}const byteToHex$1=[];for(let t=0;t<=255;t+=1)byteToHex$1.push(t.toString(16).padStart(2,"0"));function encode$3(t){let e="";for(const Q of t)e+=byteToHex$1[Q];return e}function decode$5(t){const e=(t.startsWith("0x")?t.substring(2):t).match(/.{1,2}/gu);return new Uint8Array((null==e?[]:e).map((t=>parseInt(t,16))))}const derPrefix$3="302a300506032b6570032100",derPrefixBytes$3=decode$5(derPrefix$3);class Ed25519PublicKey extends Key$1{constructor(t){super(),this._keyData=t}get _type(){return"ED25519"}static fromBytes(t){switch(t.length){case 32:return Ed25519PublicKey.fromBytesRaw(t);case 44:return Ed25519PublicKey.fromBytesDer(t);default:throw new BadKeyError(`invalid public key length: ${t.length} bytes`)}}static fromBytesDer(t){if(44!=t.length||!arrayStartsWith(t,derPrefixBytes$3))throw new BadKeyError(`invalid public key length: ${t.length} bytes`);return new Ed25519PublicKey(t.subarray(12))}static fromBytesRaw(t){if(32!=t.length)throw new BadKeyError(`invalid public key length: ${t.length} bytes`);return new Ed25519PublicKey(t)}static fromString(t){return Ed25519PublicKey.fromBytes(decode$5(t))}verify(t,e){return nacl.sign.detached.verify(t,e,this._keyData)}toBytesDer(){const t=new Uint8Array(derPrefixBytes$3.length+32);return t.set(derPrefixBytes$3,0),t.set(this._keyData.subarray(0,32),derPrefixBytes$3.length),t}toBytesRaw(){return this._keyData.slice()}equals(t){return arrayEqual$1(this._keyData,t._keyData)}}function bytes(t){return nacl.randomBytes(t)}function bytesAsync(t){return Promise.resolve(nacl.randomBytes(t))}const derPrefix$2="302e020100300506032b657004220420",derPrefixBytes$2=decode$5(derPrefix$2);class Ed25519PrivateKey{constructor(t,e){this._keyPair=t instanceof Uint8Array?nacl.sign.keyPair.fromSeed(t):t,this._chainCode=null!=e?e:null}get _type(){return"ED25519"}static generate(){const t=bytes(64);return new Ed25519PrivateKey(nacl.sign.keyPair.fromSeed(t.subarray(0,32)),t.subarray(32))}static async generateAsync(){const t=await bytesAsync(64);return new Ed25519PrivateKey(nacl.sign.keyPair.fromSeed(t.subarray(0,32)),t.subarray(32))}static fromBytes(t){switch(t.length){case 48:return Ed25519PrivateKey.fromBytesDer(t);case 32:case 64:return Ed25519PrivateKey.fromBytesRaw(t);default:throw new BadKeyError(`invalid private key length: ${t.length} bytes`)}}static fromBytesDer(t){if(48!=t.length||!arrayStartsWith(t,derPrefixBytes$2))throw new BadKeyError(`invalid private key length: ${t.length} bytes`);const e=nacl.sign.keyPair.fromSeed(t.subarray(16));return new Ed25519PrivateKey(e)}static fromBytesRaw(t){switch(t.length){case 32:return new Ed25519PrivateKey(nacl.sign.keyPair.fromSeed(t));case 64:return new Ed25519PrivateKey(nacl.sign.keyPair.fromSecretKey(t))}throw new BadKeyError(`invalid private key length: ${t.length} bytes`)}static fromString(t){return Ed25519PrivateKey.fromBytes(decode$5(t))}static fromStringDer(t){return Ed25519PrivateKey.fromBytesDer(decode$5(t))}static fromStringRaw(t){return Ed25519PrivateKey.fromBytesRaw(decode$5(t))}get publicKey(){return new Ed25519PublicKey(this._keyPair.publicKey)}sign(t){return nacl.sign.detached(t,this._keyPair.secretKey)}toBytesDer(){const t=new Uint8Array(derPrefixBytes$2.length+32);return t.set(derPrefixBytes$2,0),t.set(this._keyPair.secretKey.subarray(0,32),derPrefixBytes$2.length),t}toBytesRaw(){return this._keyPair.secretKey.slice(0,32)}}const BadMnemonicReason=Object.freeze({BadLength:"BadLength",UnknownWords:"UnknownWords",ChecksumMismatch:"ChecksumMismatch"});class BadMnemonicError extends Error{constructor(t,e,Q){let B;switch(e){case BadMnemonicReason.BadLength:B="mnemonic is of an unexpected number of words";break;case BadMnemonicReason.ChecksumMismatch:B="checksum byte in mnemonic did not match the rest of the mnemonic";break;case BadMnemonicReason.UnknownWords:B="mnemonic contained words that are not in the standard word list";break;default:throw new Error(`unexpected value ${e.toString()} for 'reason'`)}super(`invalid mnemonic: ${B}`),void 0!==Error.captureStackTrace&&Error.captureStackTrace(this,BadMnemonicError),this.name="BadMnemonicError",this.reason=e,this.mnemonic=t,this.unknownWordIndices=Q}}var legacyWords=["aback","abbey","abbot","abide","ablaze","able","aboard","abode","abort","abound","about","above","abroad","abrupt","absent","absorb","absurd","abuse","accent","accept","access","accord","accuse","ace","ache","aching","acid","acidic","acorn","acre","across","act","action","active","actor","actual","acute","adam","adapt","add","added","addict","adept","adhere","adjust","admire","admit","adobe","adopt","adrift","adult","adverb","advice","aerial","afar","affair","affect","afford","afghan","afield","afloat","afraid","afresh","after","again","age","agency","agenda","agent","aghast","agile","ago","agony","agree","agreed","ahead","aid","aide","aim","air","airman","airy","akin","alarm","alaska","albeit","album","ale","alert","alibi","alice","alien","alight","align","alike","alive","alkali","all","alley","allied","allow","alloy","ally","almond","almost","aloft","alone","along","aloof","aloud","alpha","alpine","also","altar","alter","always","amaze","amazon","amber","ambush","amen","amend","amid","amidst","amiss","among","amount","ample","amuse","anchor","and","andrew","anew","angel","anger","angle","angry","animal","ankle","annoy","annual","answer","anthem","any","anyhow","anyway","apart","apathy","apex","apiece","appeal","appear","apple","apply","april","apron","arab","arcade","arcane","arch","arctic","ardent","are","area","argue","arid","arise","ark","arm","armful","army","aroma","around","arouse","array","arrest","arrive","arrow","arson","art","artery","artful","artist","ascent","ash","ashen","ashore","aside","ask","asleep","aspect","assay","assent","assert","assess","asset","assign","assist","assume","assure","asthma","astute","asylum","ate","athens","atlas","atom","atomic","attach","attack","attain","attend","attic","auburn","audio","audit","august","aunt","auntie","aura","austin","author","auto","autumn","avail","avenge","avenue","avert","avid","avoid","await","awake","awaken","award","aware","awash","away","awful","awhile","axe","axes","axiom","axis","axle","aye","babe","baby","bach","back","backup","bacon","bad","badge","badly","bag","baggy","bail","bait","bake","baker","bakery","bald","ball","ballad","ballet","ballot","baltic","bamboo","ban","banal","banana","band","bang","bank","bar","barber","bare","barely","barge","bark","barley","barn","baron","barrel","barren","basalt","base","basic","basil","basin","basis","basket","bass","bat","batch","bath","baton","battle","bay","beach","beacon","beak","beam","bean","bear","beard","beast","beat","beauty","become","bed","beech","beef","beefy","beep","beer","beet","beetle","before","beg","beggar","begin","behalf","behave","behind","beige","being","belief","bell","belly","belong","below","belt","bench","bend","benign","bent","berlin","berry","berth","beset","beside","best","bestow","bet","beta","betray","better","beware","beyond","bias","biceps","bicker","bid","big","bigger","bike","bile","bill","bin","binary","bind","biopsy","birch","bird","birdie","birth","bishop","bit","bitch","bite","bitter","black","blade","blame","bland","blast","blaze","bleak","blend","bless","blew","blind","blink","blip","bliss","blitz","block","blond","blood","bloody","bloom","blot","blouse","blow","blue","bluff","blunt","blur","blush","boar","board","boast","boat","bob","bodily","body","bogus","boil","bold","bolt","bomb","bombay","bond","bone","bonn","bonnet","bonus","bony","book","boom","boost","boot","booth","booze","border","bore","borrow","bosom","boss","boston","both","bother","bottle","bottom","bought","bounce","bound","bounty","bout","bovine","bow","bowel","bowl","box","boy","boyish","brace","brain","brainy","brake","bran","branch","brand","brandy","brass","brave","bravo","brazil","breach","bread","break","breast","breath","bred","breed","breeze","brew","bribe","brick","bride","bridge","brief","bright","brim","brine","bring","brink","brisk","broad","broke","broken","bronze","brook","broom","brown","bruise","brush","brutal","brute","bubble","buck","bucket","buckle","budget","buffet","buggy","build","bulb","bulge","bulk","bulky","bull","bullet","bully","bump","bumpy","bunch","bundle","bunk","bunny","burden","bureau","burial","buried","burly","burn","burnt","burrow","burst","bury","bus","bush","bust","bustle","busy","but","butler","butt","butter","button","buy","buyer","buzz","bye","byte","cab","cabin","cable","cache","cactus","caesar","cage","cairo","cajun","cajole","cake","calf","call","caller","calm","calmly","came","camel","camera","camp","campus","can","canada","canal","canary","cancel","cancer","candid","candle","candy","cane","canine","canoe","canopy","canvas","canyon","cap","cape","car","carbon","card","care","career","caress","cargo","carl","carnal","carol","carp","carpet","carrot","carry","cart","cartel","case","cash","cask","cast","castle","casual","cat","catch","cater","cattle","caught","causal","cause","cave","cease","celery","cell","cellar","celtic","cement","censor","census","cent","cereal","chain","chair","chalk","chalky","champ","chance","change","chant","chaos","chap","chapel","charge","charm","chart","chase","chat","cheap","cheat","check","cheek","cheeky","cheer","cheery","cheese","chef","cheque","cherry","chess","chest","chew","chic","chick","chief","child","chile","chill","chilly","chin","china","chip","choice","choir","choose","chop","choppy","chord","chorus","chose","chosen","chris","chrome","chunk","chunky","church","cider","cigar","cinema","circa","circle","circus","cite","city","civic","civil","clad","claim","clammy","clan","clap","clash","clasp","class","clause","claw","clay","clean","clear","clergy","clerk","clever","click","client","cliff","climax","climb","clinch","cling","clinic","clip","cloak","clock","clone","close","closer","closet","cloth","cloud","cloudy","clout","clown","club","clue","clumsy","clung","clutch","coach","coal","coarse","coast","coat","coax","cobalt","cobra","coca","cock","cocoa","code","coffee","coffin","cohort","coil","coin","coke","cold","collar","colon","colony","colt","column","comb","combat","come","comedy","comic","commit","common","compel","comply","concur","cone","confer","congo","consul","convex","convey","convoy","cook","cool","cope","copper","copy","coral","cord","core","cork","corn","corner","corps","corpse","corpus","cortex","cosmic","cosmos","cost","costly","cotton","couch","cough","could","count","county","coup","couple","coupon","course","court","cousin","cove","cover","covert","cow","coward","cowboy","cozy","crab","crack","cradle","craft","crafty","crag","crane","crash","crate","crater","crawl","crazy","creak","cream","creamy","create","credit","creed","creek","creep","creepy","crept","crest","crew","cried","crime","crisis","crisp","critic","crook","crop","cross","crow","crowd","crown","crude","cruel","cruise","crunch","crush","crust","crux","cry","crypt","cuba","cube","cubic","cuckoo","cuff","cult","cup","curb","cure","curfew","curl","curry","curse","cursor","curve","cuss","custom","cut","cute","cycle","cyclic","cynic","czech","dad","daddy","dagger","daily","dairy","daisy","dale","dam","damage","damp","dampen","dance","danger","danish","dare","dark","darken","darn","dart","dash","data","date","david","dawn","day","dead","deadly","deaf","deal","dealer","dean","dear","death","debate","debit","debris","debt","debtor","decade","decay","decent","decide","deck","decor","decree","deduce","deed","deep","deeply","deer","defeat","defect","defend","defer","define","defy","degree","deity","delay","delete","delhi","delta","demand","demise","demo","demure","denial","denote","dense","dental","deny","depart","depend","depict","deploy","depot","depth","deputy","derive","desert","design","desire","desist","desk","detail","detect","deter","detest","detour","device","devise","devoid","devote","devour","dial","diana","diary","dice","dictum","did","die","diesel","diet","differ","dig","digest","digit","dine","dinghy","dinner","diode","dip","dire","direct","dirt","dirty","disc","disco","dish","disk","dismal","dispel","ditch","dive","divert","divide","divine","dizzy","docile","dock","doctor","dog","dogma","dole","doll","dollar","dolly","domain","dome","domino","donate","done","donkey","donor","doom","door","dorsal","dose","dot","double","doubt","dough","dour","dove","down","dozen","draft","drag","dragon","drain","drama","drank","draw","drawer","dread","dream","dreary","dress","drew","dried","drift","drill","drink","drip","drive","driver","drop","drove","drown","drug","drum","drunk","dry","dual","duck","duct","due","duel","duet","duke","dull","duly","dumb","dummy","dump","dune","dung","duress","during","dusk","dust","dusty","dutch","duty","dwarf","dwell","dyer","dying","dynamo","each","eager","eagle","ear","earl","early","earn","earth","ease","easel","easily","east","easter","easy","eat","eaten","eater","echo","eddy","eden","edge","edible","edict","edit","editor","eel","eerie","eerily","effect","effort","egg","ego","eight","eighth","eighty","either","elbow","elder","eldest","elect","eleven","elicit","elite","else","elude","elves","embark","emblem","embryo","emerge","emit","empire","employ","empty","enable","enamel","end","endure","enemy","energy","engage","engine","enjoy","enlist","enough","ensure","entail","enter","entire","entry","envoy","envy","enzyme","epic","epoch","equal","equate","equip","equity","era","erect","eric","erode","erotic","errant","error","escape","escort","essay","essex","estate","esteem","ethic","ethnic","europe","evade","eve","even","event","ever","every","evict","evil","evoke","evolve","exact","exam","exceed","excel","except","excess","excise","excite","excuse","exempt","exert","exile","exist","exit","exodus","exotic","expand","expect","expert","expire","export","expose","extend","extra","eye","eyed","fabric","face","facial","fact","factor","fade","fail","faint","fair","fairly","fairy","faith","fake","falcon","fall","false","falter","fame","family","famine","famous","fan","fancy","far","farce","fare","farm","farmer","fast","fasten","faster","fat","fatal","fate","father","fatty","fault","faulty","fauna","fear","feast","feat","fed","fee","feeble","feed","feel","feet","fell","fellow","felt","female","fence","fend","ferry","fetal","fetch","feudal","fever","few","fewer","fiasco","fiddle","field","fiend","fierce","fiery","fifth","fifty","fig","fight","figure","file","fill","filled","filler","film","filter","filth","filthy","final","finale","find","fine","finery","finger","finish","finite","fire","firm","firmly","first","fiscal","fish","fisher","fist","fit","fitful","five","fix","flag","flair","flak","flame","flank","flap","flare","flash","flask","flat","flavor","flaw","fled","flee","fleece","fleet","flesh","fleshy","flew","flick","flight","flimsy","flint","flirt","float","flock","flood","floor","floppy","flora","floral","flour","flow","flower","fluent","fluffy","fluid","flung","flurry","flush","flute","flux","fly","flyer","foal","foam","focal","focus","fog","foil","fold","folk","follow","folly","fond","fondly","font","food","fool","foot","for","forbid","force","ford","forest","forge","forget","fork","form","formal","format","former","fort","forth","forty","forum","fossil","foster","foul","found","four","fourth","fox","foyer","frail","frame","franc","france","frank","fraud","fred","free","freed","freely","freeze","french","frenzy","fresh","friar","friday","fridge","fried","friend","fright","fringe","frock","frog","from","front","frost","frosty","frown","frozen","frugal","fruit","fry","fudge","fuel","full","fully","fumes","fun","fund","funny","fur","furry","fury","fuse","fusion","fuss","fussy","futile","future","fuzzy","gadget","gain","gala","galaxy","gale","gall","galley","gallon","gallop","gamble","game","gamma","gandhi","gang","gap","garage","garden","garlic","gas","gasp","gate","gather","gauge","gaunt","gave","gaze","gear","geese","gem","gemini","gender","gene","geneva","genial","genius","genre","gentle","gently","gentry","genus","george","germ","get","ghetto","ghost","giant","gift","giggle","gill","gilt","ginger","girl","give","given","glad","glade","glance","gland","glare","glass","glassy","gleam","glee","glide","global","globe","gloom","gloomy","gloria","glory","gloss","glossy","glove","glow","glue","gnat","gnu","goal","goat","gold","golden","golf","gone","gong","goo","good","goose","gore","gorge","gory","gosh","gospel","gossip","got","gothic","govern","gown","grab","grace","grade","grail","grain","grand","grant","grape","graph","grasp","grass","grassy","grate","grave","gravel","gravy","grease","greasy","great","greece","greed","greedy","greek","green","greet","grew","grey","grid","grief","grill","grim","grin","grind","grip","grit","gritty","groan","groin","groom","groove","gross","ground","group","grove","grow","grown","growth","grudge","grunt","guard","guess","guest","guide","guild","guilt","guilty","guise","guitar","gulf","gully","gun","gunman","guru","gut","guy","gypsy","habit","hack","had","hail","hair","hairy","haiti","hale","half","hall","halt","hamlet","hammer","hand","handle","handy","hang","hangar","hanoi","happen","happy","harass","harbor","hard","harder","hardly","hare","harem","harm","harp","harry","harsh","has","hash","hassle","haste","hasten","hasty","hat","hatch","hate","haul","haunt","havana","have","haven","havoc","hawaii","hawk","hay","hazard","haze","hazel","hazy","head","heal","health","heap","hear","heard","heart","hearth","hearty","heat","heater","heaven","heavy","hebrew","heck","hectic","hedge","heel","hefty","height","heir","held","helium","helix","hell","hello","helm","helmet","help","hemp","hence","henry","her","herald","herb","herd","here","hereby","hermes","hernia","hero","heroic","heroin","hey","heyday","hick","hidden","hide","high","higher","highly","hill","him","hind","hinder","hint","hippie","hire","his","hiss","hit","hive","hoard","hoarse","hobby","hockey","hold","holder","hole","hollow","holly","holy","home","honest","honey","hood","hook","hope","horn","horrid","horror","horse","hose","host","hot","hotel","hound","hour","house","hover","how","huge","hull","human","humane","humble","humid","hung","hunger","hungry","hunt","hurdle","hurl","hurry","hurt","hush","hut","hybrid","hymn","hyphen","ice","icing","icon","idaho","idea","ideal","idiom","idiot","idle","idly","idol","ignite","ignore","ill","image","immune","impact","imply","import","impose","inca","incest","inch","income","incur","indeed","index","india","indian","indoor","induce","inept","inert","infant","infect","infer","influx","inform","inject","injure","injury","ink","inlaid","inland","inlet","inmate","inn","innate","inner","input","insane","insect","insert","inset","inside","insist","insult","insure","intact","intake","intend","inter","into","invade","invent","invest","invite","invoke","inward","iowa","iran","iraq","irish","iron","ironic","irony","isaac","isabel","island","isle","israel","issue","italy","itch","item","itself","ivan","ivory","jack","jacket","jacob","jade","jaguar","jail","james","jane","japan","jargon","java","jaw","jazz","jeep","jelly","jerky","jest","jet","jewel","jewish","jim","job","jock","jockey","joe","john","join","joint","joke","jolly","jolt","jordan","joseph","joy","joyful","joyous","judge","judy","juice","juicy","july","jumble","jumbo","jump","june","jungle","junior","junk","junta","jury","just","kansas","karate","karl","keel","keen","keep","keeper","kenya","kept","kernel","kettle","key","khaki","kick","kid","kidnap","kidney","kill","killer","kin","kind","kindly","king","kiss","kite","kitten","knack","knee","kneel","knew","knife","knight","knit","knob","knock","knot","know","known","koran","korea","kuwait","label","lace","lack","lad","ladder","laden","lady","lagoon","laity","lake","lamb","lame","lamp","lance","land","lane","lap","lapse","large","larval","laser","last","latch","late","lately","latent","later","latest","latin","latter","laugh","launch","lava","lavish","law","lawful","lawn","lawyer","lay","layer","layman","lazy","lead","leader","leaf","leafy","league","leak","leaky","lean","leap","learn","lease","leash","least","leave","led","ledge","left","leg","legacy","legal","legend","legion","lemon","lend","length","lens","lent","leo","leper","lesion","less","lessen","lesser","lesson","lest","let","lethal","letter","level","lever","levy","lewis","liable","liar","libel","libya","lice","lick","lid","lie","lied","lier","life","lift","light","like","likely","limb","lime","limit","limp","line","linear","linen","linger","link","lint","lion","lip","liquid","liquor","list","listen","lit","live","lively","liver","liz","lizard","load","loaf","loan","lobby","lobe","local","locate","lock","locus","lodge","loft","lofty","log","logic","logo","london","lone","lonely","long","longer","look","loop","loose","loosen","loot","lord","lorry","lose","loss","lost","lot","lotion","lotus","loud","loudly","lounge","lousy","love","lovely","lover","low","lower","lowest","loyal","lucid","luck","lucky","lucy","lull","lump","lumpy","lunacy","lunar","lunch","lung","lure","lurid","lush","lust","lute","luther","luxury","lying","lymph","lynch","lyric","macho","macro","mad","madam","made","mafia","magic","magma","magnet","magnum","magpie","maid","maiden","mail","main","mainly","major","make","maker","male","malice","mall","malt","mammal","manage","mane","mania","manic","manner","manor","mantle","manual","manure","many","map","maple","marble","march","mare","margin","maria","marina","mark","market","marry","mars","marsh","martin","martyr","mary","mask","mason","mass","mast","master","mat","match","mate","matrix","matter","mature","maxim","may","maybe","mayor","maze","mead","meadow","meal","mean","meant","meat","medal","media","median","medic","medium","meet","mellow","melody","melon","melt","member","memo","memory","menace","mend","mental","mentor","menu","mercy","mere","merely","merge","merger","merit","merry","mesh","mess","messy","met","metal","meter","method","methyl","metric","metro","mexico","miami","mickey","mid","midday","middle","midst","midway","might","mighty","mild","mildew","mile","milk","milky","mill","mimic","mince","mind","mine","mini","mink","minor","mint","minus","minute","mire","mirror","mirth","misery","miss","mist","misty","mite","mix","moan","moat","mob","mobile","mock","mode","model","modem","modern","modest","modify","module","moist","molar","mold","mole","molten","moment","monday","money","monk","monkey","month","mood","moody","moon","moor","moral","morale","morbid","more","morgue","mortal","mortar","mosaic","moscow","moses","mosque","moss","most","mostly","moth","mother","motion","motive","motor","mount","mourn","mouse","mouth","move","movie","mrs","much","muck","mucus","mud","muddle","muddy","mule","mummy","munich","murder","murky","murmur","muscle","museum","music","mussel","must","mutant","mute","mutiny","mutter","mutton","mutual","muzzle","myopic","myriad","myself","mystic","myth","nadir","nail","naked","name","namely","nape","napkin","naples","narrow","nasal","nasty","nathan","nation","native","nature","nausea","naval","nave","navy","near","nearer","nearly","neat","neatly","neck","need","needle","needy","negate","neon","nepal","nephew","nerve","nest","net","neural","never","newly","next","nice","nicely","niche","nickel","niece","night","nile","nimble","nine","ninety","ninth","nobel","noble","nobody","node","noise","noisy","none","noon","nor","norm","normal","north","norway","nose","nosy","not","note","notice","notify","notion","noun","novel","novice","now","nozzle","null","numb","number","nurse","nut","nylon","nymph","oak","oar","oasis","oath","obese","obey","object","oblige","oboe","obtain","obtuse","occult","occupy","occur","ocean","octave","odd","off","offend","offer","office","offset","often","ohio","oil","oily","okay","old","older","oldest","olive","omega","omen","omit","once","one","onion","only","onset","onto","onus","onward","opaque","open","openly","opera","opium","oppose","optic","option","oracle","oral","orange","orbit","orchid","ordeal","order","organ","orgasm","orient","origin","ornate","orphan","oscar","other","otter","ought","ounce","our","out","outer","output","outset","oval","oven","over","overt","owe","owing","owl","own","owner","oxford","oxide","oxygen","oyster","ozone","pace","pack","packet","pact","pad","paddle","paddy","pagan","page","paid","pain","paint","pair","palace","pale","palm","pan","panama","panel","panic","papa","papal","paper","parade","parcel","pardon","parent","paris","parish","park","parody","parrot","part","partly","party","pascal","pass","past","paste","pastel","pastor","pastry","pat","patch","patent","path","patio","patrol","patron","paul","pause","pave","paw","pawn","pay","peace","peach","peak","pear","pearl","pedal","peel","peer","peking","pelvic","pelvis","pen","penal","pence","pencil","penny","people","pepper","per","perch","peril","period","perish","permit","person","peru","pest","pet","peter","petite","petrol","petty","phase","philip","phone","photo","phrase","piano","pick","picket","picnic","pie","piece","pier","pierce","piety","pig","pigeon","piggy","pike","pile","pill","pillar","pillow","pilot","pin","pinch","pine","pink","pint","pious","pipe","pirate","piss","pistol","piston","pit","pitch","pity","pivot","pixel","pizza","place","placid","plague","plain","plan","plane","planet","plank","plant","plasma","plate","play","player","plea","plead","please","pledge","plenty","plight","plot","plough","ploy","plug","plum","plump","plunge","plural","plus","plush","pocket","poem","poet","poetic","poetry","point","poison","poland","polar","pole","police","policy","polish","polite","poll","pollen","polo","pond","ponder","pony","pool","poor","poorly","pop","poppy","pore","pork","port","portal","pose","posh","post","postal","pot","potato","potent","pouch","pound","pour","powder","power","praise","pray","prayer","preach","prefer","prefix","press","pretty","price","pride","priest","primal","prime","prince","print","prior","prism","prison","privy","prize","probe","profit","prompt","prone","proof","propel","proper","prose","proton","proud","prove","proven","proxy","prune","pry","psalm","pseudo","psyche","pub","public","puff","pull","pulp","pulpit","pulsar","pulse","pump","punch","punish","punk","pupil","puppet","puppy","pure","purely","purge","purify","purple","purse","pursue","push","pushy","put","putt","puzzle","quaint","quake","quarry","quart","quartz","quebec","queen","queer","query","quest","queue","quick","quid","quiet","quilt","quirk","quit","quite","quiver","quiz","quota","quote","rabbit","race","racial","racism","rack","racket","radar","radio","radish","radius","raffle","raft","rage","raid","rail","rain","rainy","raise","rake","rally","ramp","random","range","rank","ransom","rape","rapid","rare","rarely","rarity","rash","rat","rate","rather","ratify","ratio","rattle","rave","raven","raw","ray","razor","reach","react","read","reader","ready","real","really","realm","reap","rear","reason","rebel","recall","recent","recess","recipe","reckon","record","recoup","rector","red","redeem","redo","reduce","reed","reef","reek","refer","reform","refuge","refuse","regal","regard","regent","regime","region","regret","reign","reject","relate","relax","relay","relic","relief","relish","rely","remain","remark","remedy","remind","remit","remote","remove","renal","render","rent","rental","repair","repeal","repeat","repent","reply","report","rescue","resent","reside","resign","resin","resist","resort","rest","result","resume","retail","retain","retina","retire","return","reveal","review","revise","revive","revolt","reward","rex","rhine","rhino","rhyme","rhythm","ribbon","rice","rich","rick","rid","ride","rider","ridge","rife","rifle","rift","right","rigid","rile","rim","ring","rinse","riot","ripe","ripen","ripple","rise","risk","risky","rite","ritual","ritz","rival","river","road","roar","roast","rob","robe","robert","robin","robot","robust","rock","rocket","rocky","rod","rode","rodent","rogue","role","roll","roman","rome","roof","room","root","rope","rose","rosy","rot","rotate","rotor","rotten","rouge","rough","round","route","rover","row","royal","rub","rubber","rubble","ruby","rudder","rude","rug","rugby","ruin","rule","ruler","rumble","rump","run","rune","rung","runway","rural","rush","russia","rust","rustic","rusty","sack","sacred","sad","saddle","sadism","sadly","safari","safe","safely","safer","safety","saga","sage","sahara","said","sail","sailor","saint","sake","salad","salary","sale","saline","saliva","salmon","saloon","salt","salty","salute","sam","same","sample","sand","sandy","sane","sash","satin","satire","saturn","sauce","saucer","saudi","sauna","savage","save","saw","say","scale","scalp","scan","scant","scar","scarce","scare","scarf","scary","scene","scenic","scent","school","scold","scope","score","scorn","scotch","scott","scout","scrap","scrape","scream","screen","screw","script","scroll","scrub","scum","sea","seal","seam","seaman","search","season","seat","second","secret","sect","sector","secure","see","seed","seeing","seek","seem","seize","seldom","select","self","sell","seller","semi","senate","send","senile","senior","sense","sensor","sent","sentry","seoul","sequel","serene","serial","series","sermon","serum","serve","server","set","settle","seven","severe","sew","sewage","shabby","shade","shadow","shady","shaft","shaggy","shah","shake","shaky","shall","sham","shame","shape","share","shark","sharp","shawl","she","shear","sheen","sheep","sheer","sheet","shelf","shell","sherry","shield","shift","shine","shiny","ship","shire","shirk","shirt","shiver","shock","shoe","shook","shoot","shop","shore","short","shot","should","shout","show","shower","shrank","shrewd","shrill","shrimp","shrine","shrink","shrub","shrug","shut","shy","shyly","sick","side","siege","sigh","sight","sigma","sign","signal","silent","silk","silken","silky","sill","silly","silo","silver","simple","simply","since","sinful","sing","singer","single","sink","sir","sire","siren","sister","sit","site","sitter","six","sixth","sixty","size","sketch","skill","skin","skinny","skip","skirt","skull","sky","slab","slack","slain","slam","slang","slap","slat","slate","slave","sleek","sleep","sleepy","sleeve","slice","slick","slid","slide","slight","slim","slimy","sling","slip","slit","slogan","slope","sloppy","slot","slow","slowly","slug","slum","slump","smack","small","smart","smash","smear","smell","smelly","smelt","smile","smite","smoke","smoky","smooth","smug","snack","snail","snake","snap","snatch","sneak","snow","snowy","snug","soak","soap","sober","soccer","social","sock","socket","socks","soda","sodden","sodium","sofa","soft","soften","softly","soggy","soil","solar","sold","sole","solely","solemn","solid","solo","solve","some","son","sonar","sonata","song","sonic","sony","soon","sooner","soot","soothe","sordid","sore","sorrow","sorry","sort","soul","sound","soup","sour","source","soviet","sow","space","spade","spain","span","spare","spark","sparse","spasm","spat","spate","speak","spear","speech","speed","speedy","spell","spend","sphere","spice","spicy","spider","spiky","spill","spin","spinal","spine","spiral","spirit","spit","spite","splash","split","spoil","spoke","sponge","spoon","sport","spot","spouse","spray","spread","spree","spring","sprint","spur","squad","square","squash","squat","squid","stab","stable","stack","staff","stage","stain","stair","stairs","stake","stale","stall","stamp","stance","stand","staple","star","starch","stare","stark","start","starve","state","static","statue","status","stay","stead","steady","steak","steal","steam","steel","steep","steer","stem","stench","step","stereo","stern","stew","stick","sticky","stiff","stifle","stigma","still","sting","stint","stir","stitch","stock","stocky","stone","stony","stool","stop","store","storm","stormy","story","stout","stove","stow","strain","strait","strand","strap","strata","straw","stray","streak","stream","street","stress","strict","stride","strife","strike","string","strip","stripe","strive","stroke","stroll","strong","stud","studio","study","stuff","stuffy","stunt","stupid","sturdy","style","submit","subtle","subtly","suburb","such","sudden","sue","suez","suffer","sugar","suit","suite","suitor","sullen","sultan","sum","summer","summit","summon","sun","sunday","sunny","sunset","super","superb","supper","supple","supply","sure","surely","surf","surge","survey","suture","swamp","swan","swap","swarm","sway","swear","sweat","sweaty","sweden","sweep","sweet","swell","swift","swim","swine","swing","swirl","swiss","switch","sword","swore","sydney","symbol","synod","syntax","syria","syrup","system","table","tablet","taboo","tacit","tackle","tact","tactic","tail","tailor","taiwan","take","tale","talent","talk","tall","tally","tame","tampa","tan","tandem","tangle","tank","tap","tape","target","tariff","tarp","tart","tarzan","task","taste","tasty","tattoo","taurus","taut","tavern","tax","taxi","tea","teach","teak","team","tear","tease","tech","teeth","tell","temper","temple","tempo","tempt","ten","tenant","tend","tender","tendon","tennis","tenor","tense","tent","tenth","tenure","teresa","term","terror","terse","test","texas","text","thank","thaw","them","theme","thence","theory","there","these","thesis","they","thick","thief","thigh","thin","thing","think","third","thirst","thirty","this","thomas","thorn","those","though","thread","threat","three","thrill","thrive","throat","throne","throng","throw","thrust","thud","thug","thumb","thus","thyme","tibet","tick","ticket","tidal","tide","tidy","tie","tier","tiger","tight","tile","till","tilt","timber","time","timid","tin","tiny","tip","tire","tissue","title","toad","toast","today","toe","toilet","token","tokyo","told","toll","tom","tomato","tomb","tonal","tone","tongue","tonic","too","took","tool","tooth","top","topaz","topic","torch","torque","torso","tort","toss","total","touch","tough","tour","toward","towel","tower","town","toxic","toxin","toy","trace","track","tract","trade","tragic","trail","train","trait","tram","trance","trap","trauma","travel","tray","tread","treat","treaty","treble","tree","trek","tremor","trench","trend","trendy","trial","tribal","tribe","trick","tricky","tried","trifle","trim","trio","trip","triple","troop","trophy","trot","trough","trout","truce","truck","true","truly","trunk","trust","truth","try","tube","tumble","tuna","tundra","tune","tunic","tunnel","turban","turf","turk","turkey","turn","turtle","tutor","tweed","twelve","twenty","twice","twin","twist","two","tycoon","tying","type","tyrant","ugly","ulcer","ultra","umpire","unable","uncle","under","uneasy","unfair","unify","union","unique","unit","unite","unity","unlike","unrest","unruly","until","update","upheld","uphill","uphold","upon","upper","uproar","upset","upshot","uptake","upturn","upward","urban","urge","urgent","urging","urine","usable","usage","use","useful","user","usual","utmost","utter","vacant","vacuum","vague","vain","valet","valid","valley","value","valve","van","vanish","vanity","vary","vase","vast","vat","vault","vector","veil","vein","velvet","vendor","veneer","venice","venom","vent","venue","venus","verb","verbal","verge","verify","verity","verse","versus","very","vessel","vest","vet","veto","via","viable","vicar","vice","victim","victor","video","vienna","view","vigil","viking","vile","villa","vine","vinyl","viola","violet","violin","viral","virgo","virtue","virus","visa","vision","visit","visual","vital","vivid","vocal","vodka","vogue","voice","void","volley","volume","vote","vowel","voyage","vulgar","wade","wage","waist","wait","waiter","wake","walk","walker","wall","wallet","walnut","wander","want","war","warden","warm","warmth","warn","warp","warsaw","wary","was","wash","wasp","waste","watch","water","watery","wave","wax","way","weak","weaken","wealth","weapon","wear","weary","weave","wedge","wee","weed","week","weekly","weep","weigh","weight","weird","well","were","west","wet","whale","wharf","what","wheat","wheel","when","whence","where","which","whiff","while","whim","whip","whisky","white","who","whole","wholly","whom","whose","why","wicked","wide","widely","widen","wider","widow","width","wife","wig","wild","wildly","will","willow","wily","win","wind","window","windy","wine","wing","wink","winner","winter","wipe","wire","wisdom","wise","wish","wit","witch","with","within","witty","wizard","woke","wolf","wolves","woman","womb","won","wonder","wood","wooden","woods","woody","wool","word","work","worker","world","worm","worry","worse","worst","worth","worthy","would","wound","wrap","wrath","wreath","wreck","wring","wrist","writ","write","writer","wrong","xerox","yacht","yale","yard","yarn","yeah","year","yeard","yeast","yellow","yet","yield","yogurt","yolk","you","young","your","youth","zaire","zeal","zebra","zenith","zero","zeus","zigzag","zinc","zombie","zone"],bip39Words=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];async function digest$1(t){return new Uint8Array(await crypto.subtle.digest("SHA-256",t))}function decode$4(t){return(new TextDecoder).decode(t)}function encode$2(t){return(new TextEncoder).encode(t)}async function deriveKey(t,e,Q,B,s){const F="string"==typeof e?encode$2(e):e,U="string"==typeof Q?encode$2(Q):Q;try{const e=await window.crypto.subtle.importKey("raw",F,{name:"PBKDF2",hash:t},!1,["deriveBits"]);return new Uint8Array(await window.crypto.subtle.deriveBits({name:"PBKDF2",hash:t,salt:U,iterations:B},e,s<<3))}catch{throw new Error("(BUG) Non-Exhaustive switch statement for algorithms")}}const HashAlgorithm={Sha256:"SHA-256",Sha384:"SHA-384",Sha512:"SHA-512"};async function hash$3(t,e,Q){const B="string"==typeof e?encode$2(e):e,s="string"==typeof Q?encode$2(Q):Q;try{const e=await window.crypto.subtle.importKey("raw",B,{name:"HMAC",hash:t},!1,["sign"]);return new Uint8Array(await window.crypto.subtle.sign("HMAC",e,s))}catch{throw new Error("Fallback if SubtleCrypto fails is not implemented")}}async function derive(t,e,Q){const B=new Uint8Array(37);B[0]=0,B.set(t,1),new DataView(B.buffer,B.byteOffset,B.byteLength).setUint32(33,Q,!1),B[33]|=128;const s=await hash$3(HashAlgorithm.Sha512,e,B);return{keyData:s.subarray(0,32),chainCode:s.subarray(32)}}function legacy1(t,e){const Q=convertRadix(t.map((t=>e.indexOf(t.toLowerCase()))),e.length,256,33),B=Q[Q.length-1],s=new Uint8Array(Q.length-1);for(let t=0;t<Q.length-1;t+=1)s[t]=Q[t]^B;return[s,B]}async function legacy2(t,e){const Q=11*t.length,B=[];B.fill(!1,0,Q);for(const[Q,s]of t.entries()){const t=e.indexOf(s.toLowerCase());if(t<0)throw new Error(`Word not found in wordlist: ${s}`);for(let e=0;e<11;e+=1)B[11*Q+e]=0!=(t&1<<10-e)}const s=Q/33,F=Q-s,U=new Uint8Array(F/8);for(let t=0;t<U.length;t+=1)for(let e=0;e<8;e+=1)B[8*t+e]&&(U[t]|=1<<7-e);const n=bytesToBits(await digest$1(U));for(let t=0;t<s;t+=1)if(B[F+t]!==n[t])throw new Error("Checksum mismatch");return U}function crc8(t){let e=255;for(let Q=0;Q<t.length-1;Q+=1){e^=t[Q];for(let t=0;t<8;t+=1)e=e>>>1^(0==(1&e)?0:178)}return 255^e}function convertRadix(t,e,Q,B){let s=new BigNumber$1(0);for(const Q of t)s=s.times(e),s=s.plus(Q);const F=new Uint8Array(B);for(let t=B-1;t>=0;t-=1){const e=s.dividedToIntegerBy(Q),B=s.modulo(Q);s=e,F[t]=B.toNumber()}return F}function bytesToBits(t){const e=[];e.fill(!1,0,8*t.length);for(let Q=0;Q<t.length;Q+=1)for(let B=0;B<8;B+=1)e[8*Q+B]=0!=(t[Q]&1<<7-B);return e}class Mnemonic$1{constructor({words:t,legacy:e}){this.words=t,this._isLegacy=e}static generate(){return Mnemonic$1._generate(24)}static generate12(){return Mnemonic$1._generate(12)}static async _generate(t){let e;if(12===t)e=16;else{if(24!==t)throw new Error(`unsupported phrase length ${t}, only 12 or 24 are supported`);e=32}const Q=await bytesAsync(e),B=(bytesToBinary(Array.from(Q))+await deriveChecksumBits(Q)).match(/(.{1,11})/g),s=(null!=B?B:[]).map((t=>bip39Words[binaryToByte(t)]));return new Mnemonic$1({words:s,legacy:!1})}static async fromWords(t){return await new Mnemonic$1({words:t,legacy:22===t.length})._validate()}async toPrivateKey(t=""){if(this._isLegacy){if(t.length>0)throw new Error("legacy 22-word mnemonics do not support passphrases");return this.toLegacyPrivateKey()}return await this._toPrivateKey(t)}static async fromString(t){return Mnemonic$1.fromWords(t.split(/\s|,/))}async _validate(){if(this._isLegacy){if(22!==this.words.length)throw new BadMnemonicError(this,BadMnemonicReason.BadLength,[]);const t=this.words.reduce(((t,e,Q)=>legacyWords.includes(e.toLowerCase())?t:[...t,Q]),[]);if(t.length>0)throw new BadMnemonicError(this,BadMnemonicReason.UnknownWords,t);const[e,Q]=legacy1(this.words,legacyWords);if(Q!==crc8(e))throw new BadMnemonicError(this,BadMnemonicReason.ChecksumMismatch,[])}else{if(12!==this.words.length&&24!==this.words.length)throw new BadMnemonicError(this,BadMnemonicReason.BadLength,[]);const t=this.words.reduce(((t,e,Q)=>bip39Words.includes(e)?t:[...t,Q]),[]);if(t.length>0)throw new BadMnemonicError(this,BadMnemonicReason.UnknownWords,t);const e=this.words.map((t=>bip39Words.indexOf(t).toString(2).padStart(11,"0"))).join(""),Q=32*Math.floor(e.length/33),B=e.slice(0,Q),s=e.slice(Q),F=B.match(/(.{1,8})/g).map(binaryToByte);if(await deriveChecksumBits(Uint8Array.from(F))!==s)throw new BadMnemonicError(this,BadMnemonicReason.ChecksumMismatch,[])}return this}async _toPrivateKey(t=""){const e=this.words.join(" "),Q=`mnemonic${t}`,B=await deriveKey(HashAlgorithm.Sha512,e,Q,2048,64),s=await hash$3(HashAlgorithm.Sha512,"ed25519 seed",B);let F=s.subarray(0,32),U=s.subarray(32);for(const t of[44,3030,0,0])({keyData:F,chainCode:U}=await derive(F,U,t));const n=nacl.sign.keyPair.fromSeed(F);return new PrivateKey$1(new Ed25519PrivateKey(n,U))}async toLegacyPrivateKey(){let t;return this._isLegacy?[t]=legacy1(this.words,legacyWords):t=await legacy2(this.words,bip39Words),PrivateKey$1.fromBytes(t)}toString(){return this.words.join(" ")}}function binaryToByte(t){return parseInt(t,2)}function bytesToBinary(t){return t.map((t=>t.toString(2).padStart(8,"0"))).join("")}async function deriveChecksumBits(t){const e=8*t.length/32,Q=await digest$1(t);return bytesToBinary(Array.from(Q)).slice(0,e)}const HEX_CHARS$1="0123456789abcdef".split(""),KECCAK_PADDING$1=[1,256,65536,16777216],SHIFT$1=[0,8,16,24],RC$1=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],Keccak$1=t=>({blocks:[],reset:!0,block:0,start:0,blockCount:1600-(t<<1)>>5,outputBlocks:t>>5,s:(t=>[].concat(t,t,t,t,t))([0,0,0,0,0,0,0,0,0,0])}),update$1=(t,e)=>{for(var Q,B,s=e.length,F=t.blocks,U=t.blockCount<<2,n=t.blockCount,c=t.outputBlocks,o=t.s,g=0;g<s;){if(t.reset)for(t.reset=!1,F[0]=t.block,Q=1;Q<n+1;++Q)F[Q]=0;if("string"!=typeof e)for(Q=t.start;g<s&&Q<U;++g)F[Q>>2]|=e[g]<<SHIFT$1[3&Q++];else for(Q=t.start;g<s&&Q<U;++g)(B=e.charCodeAt(g))<128?F[Q>>2]|=B<<SHIFT$1[3&Q++]:B<2048?(F[Q>>2]|=(192|B>>6)<<SHIFT$1[3&Q++],F[Q>>2]|=(128|63&B)<<SHIFT$1[3&Q++]):B<55296||B>=57344?(F[Q>>2]|=(224|B>>12)<<SHIFT$1[3&Q++],F[Q>>2]|=(128|B>>6&63)<<SHIFT$1[3&Q++],F[Q>>2]|=(128|63&B)<<SHIFT$1[3&Q++]):(B=65536+((1023&B)<<10|1023&e.charCodeAt(++g)),F[Q>>2]|=(240|B>>18)<<SHIFT$1[3&Q++],F[Q>>2]|=(128|B>>12&63)<<SHIFT$1[3&Q++],F[Q>>2]|=(128|B>>6&63)<<SHIFT$1[3&Q++],F[Q>>2]|=(128|63&B)<<SHIFT$1[3&Q++]);if(t.lastByteIndex=Q,Q>=U){for(t.start=Q-U,t.block=F[n],Q=0;Q<n;++Q)o[Q]^=F[Q];f$2(o),t.reset=!0}else t.start=Q}if(F[(Q=t.lastByteIndex)>>2]|=KECCAK_PADDING$1[3&Q],t.lastByteIndex===U)for(F[0]=F[n],Q=1;Q<n+1;++Q)F[Q]=0;for(F[n-1]|=2147483648,Q=0;Q<n;++Q)o[Q]^=F[Q];f$2(o);var l,I="",i=0;for(Q=0;i<c;){for(Q=0;Q<n&&i<c;++Q,++i)l=o[Q],I+=HEX_CHARS$1[l>>4&15]+HEX_CHARS$1[15&l]+HEX_CHARS$1[l>>12&15]+HEX_CHARS$1[l>>8&15]+HEX_CHARS$1[l>>20&15]+HEX_CHARS$1[l>>16&15]+HEX_CHARS$1[l>>28&15]+HEX_CHARS$1[l>>24&15];i%n==0&&(f$2(o),Q=0)}return"0x"+I},f$2=t=>{var e,Q,B,s,F,U,n,c,o,g,l,I,i,r,a,d,u,C,y,S,b,m,G,x,L,h,A,Z,R,N,V,D,E,p,J,X,H,k,W,T,Y,f,M,w,v,z,K,O,P,j,_,$,q,tt,et,Qt,Bt,st,Ft,Ut,nt,ct,ot;for(B=0;B<48;B+=2)s=t[0]^t[10]^t[20]^t[30]^t[40],F=t[1]^t[11]^t[21]^t[31]^t[41],U=t[2]^t[12]^t[22]^t[32]^t[42],n=t[3]^t[13]^t[23]^t[33]^t[43],c=t[4]^t[14]^t[24]^t[34]^t[44],o=t[5]^t[15]^t[25]^t[35]^t[45],g=t[6]^t[16]^t[26]^t[36]^t[46],l=t[7]^t[17]^t[27]^t[37]^t[47],e=(I=t[8]^t[18]^t[28]^t[38]^t[48])^(U<<1|n>>>31),Q=(i=t[9]^t[19]^t[29]^t[39]^t[49])^(n<<1|U>>>31),t[0]^=e,t[1]^=Q,t[10]^=e,t[11]^=Q,t[20]^=e,t[21]^=Q,t[30]^=e,t[31]^=Q,t[40]^=e,t[41]^=Q,e=s^(c<<1|o>>>31),Q=F^(o<<1|c>>>31),t[2]^=e,t[3]^=Q,t[12]^=e,t[13]^=Q,t[22]^=e,t[23]^=Q,t[32]^=e,t[33]^=Q,t[42]^=e,t[43]^=Q,e=U^(g<<1|l>>>31),Q=n^(l<<1|g>>>31),t[4]^=e,t[5]^=Q,t[14]^=e,t[15]^=Q,t[24]^=e,t[25]^=Q,t[34]^=e,t[35]^=Q,t[44]^=e,t[45]^=Q,e=c^(I<<1|i>>>31),Q=o^(i<<1|I>>>31),t[6]^=e,t[7]^=Q,t[16]^=e,t[17]^=Q,t[26]^=e,t[27]^=Q,t[36]^=e,t[37]^=Q,t[46]^=e,t[47]^=Q,e=g^(s<<1|F>>>31),Q=l^(F<<1|s>>>31),t[8]^=e,t[9]^=Q,t[18]^=e,t[19]^=Q,t[28]^=e,t[29]^=Q,t[38]^=e,t[39]^=Q,t[48]^=e,t[49]^=Q,r=t[0],a=t[1],z=t[11]<<4|t[10]>>>28,K=t[10]<<4|t[11]>>>28,Z=t[20]<<3|t[21]>>>29,R=t[21]<<3|t[20]>>>29,Ut=t[31]<<9|t[30]>>>23,nt=t[30]<<9|t[31]>>>23,f=t[40]<<18|t[41]>>>14,M=t[41]<<18|t[40]>>>14,p=t[2]<<1|t[3]>>>31,J=t[3]<<1|t[2]>>>31,d=t[13]<<12|t[12]>>>20,u=t[12]<<12|t[13]>>>20,O=t[22]<<10|t[23]>>>22,P=t[23]<<10|t[22]>>>22,N=t[33]<<13|t[32]>>>19,V=t[32]<<13|t[33]>>>19,ct=t[42]<<2|t[43]>>>30,ot=t[43]<<2|t[42]>>>30,tt=t[5]<<30|t[4]>>>2,et=t[4]<<30|t[5]>>>2,X=t[14]<<6|t[15]>>>26,H=t[15]<<6|t[14]>>>26,C=t[25]<<11|t[24]>>>21,y=t[24]<<11|t[25]>>>21,j=t[34]<<15|t[35]>>>17,_=t[35]<<15|t[34]>>>17,D=t[45]<<29|t[44]>>>3,E=t[44]<<29|t[45]>>>3,x=t[6]<<28|t[7]>>>4,L=t[7]<<28|t[6]>>>4,Qt=t[17]<<23|t[16]>>>9,Bt=t[16]<<23|t[17]>>>9,k=t[26]<<25|t[27]>>>7,W=t[27]<<25|t[26]>>>7,S=t[36]<<21|t[37]>>>11,b=t[37]<<21|t[36]>>>11,$=t[47]<<24|t[46]>>>8,q=t[46]<<24|t[47]>>>8,w=t[8]<<27|t[9]>>>5,v=t[9]<<27|t[8]>>>5,h=t[18]<<20|t[19]>>>12,A=t[19]<<20|t[18]>>>12,st=t[29]<<7|t[28]>>>25,Ft=t[28]<<7|t[29]>>>25,T=t[38]<<8|t[39]>>>24,Y=t[39]<<8|t[38]>>>24,m=t[48]<<14|t[49]>>>18,G=t[49]<<14|t[48]>>>18,t[0]=r^~d&C,t[1]=a^~u&y,t[10]=x^~h&Z,t[11]=L^~A&R,t[20]=p^~X&k,t[21]=J^~H&W,t[30]=w^~z&O,t[31]=v^~K&P,t[40]=tt^~Qt&st,t[41]=et^~Bt&Ft,t[2]=d^~C&S,t[3]=u^~y&b,t[12]=h^~Z&N,t[13]=A^~R&V,t[22]=X^~k&T,t[23]=H^~W&Y,t[32]=z^~O&j,t[33]=K^~P&_,t[42]=Qt^~st&Ut,t[43]=Bt^~Ft&nt,t[4]=C^~S&m,t[5]=y^~b&G,t[14]=Z^~N&D,t[15]=R^~V&E,t[24]=k^~T&f,t[25]=W^~Y&M,t[34]=O^~j&$,t[35]=P^~_&q,t[44]=st^~Ut&ct,t[45]=Ft^~nt&ot,t[6]=S^~m&r,t[7]=b^~G&a,t[16]=N^~D&x,t[17]=V^~E&L,t[26]=T^~f&p,t[27]=Y^~M&J,t[36]=j^~$&w,t[37]=_^~q&v,t[46]=Ut^~ct&tt,t[47]=nt^~ot&et,t[8]=m^~r&d,t[9]=G^~a&u,t[18]=D^~x&h,t[19]=E^~L&A,t[28]=f^~p&X,t[29]=M^~J&H,t[38]=$^~w&z,t[39]=q^~v&K,t[48]=ct^~tt&Qt,t[49]=ot^~et&Bt,t[0]^=RC$1[B],t[1]^=RC$1[B+1]},keccak$1=t=>e=>{var Q;if("0x"===e.slice(0,2)){Q=[];for(var B=2,s=e.length;B<s;B+=2)Q.push(parseInt(e.slice(B,B+2),16))}else Q=e;return update$1(Keccak$1(t),Q)},keccak256$1=keccak$1(256);var elliptic={},name="elliptic",version="6.5.4",description="EC cryptography",main="lib/elliptic.js",files=["lib"],scripts={lint:"eslint lib test","lint:fix":"npm run lint -- --fix",unit:"istanbul test _mocha --reporter=spec test/index.js",test:"npm run lint && npm run unit",version:"grunt dist && git add dist/"},repository={type:"git",url:"git@github.com:indutny/elliptic"},keywords=["EC","Elliptic","curve","Cryptography"],author="Fedor Indutny <fedor@indutny.com>",license="MIT",bugs={url:"https://github.com/indutny/elliptic/issues"},homepage="https://github.com/indutny/elliptic",devDependencies={brfs:"^2.0.2",coveralls:"^3.1.0",eslint:"^7.6.0",grunt:"^1.2.1","grunt-browserify":"^5.3.0","grunt-cli":"^1.3.2","grunt-contrib-connect":"^3.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^5.0.0","grunt-mocha-istanbul":"^5.0.2","grunt-saucelabs":"^9.0.1",istanbul:"^0.4.5",mocha:"^8.0.1"},dependencies={"bn.js":"^4.11.9",brorand:"^1.1.0","hash.js":"^1.0.0","hmac-drbg":"^1.0.1",inherits:"^2.0.4","minimalistic-assert":"^1.0.1","minimalistic-crypto-utils":"^1.0.1"},require$$0={name:name,version:version,description:description,main:main,files:files,scripts:scripts,repository:repository,keywords:keywords,author:author,license:license,bugs:bugs,homepage:homepage,devDependencies:devDependencies,dependencies:dependencies},utils$m={},bn={exports:{}};!function(t,e){function Q(t,e){if(!t)throw new Error(e||"Assertion failed")}function B(t,e){t.super_=e;var Q=function(){};Q.prototype=e.prototype,t.prototype=new Q,t.prototype.constructor=t}function s(t,e,Q){if(s.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(Q=e,e=10),this._init(t||0,e||10,Q||"be"))}var F;"object"==typeof t?t.exports=s:e.BN=s,s.BN=s,s.wordSize=26;try{F="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:require("buffer").Buffer}catch(t){}function U(t,e){var Q=t.charCodeAt(e);return Q>=65&&Q<=70?Q-55:Q>=97&&Q<=102?Q-87:Q-48&15}function n(t,e,Q){var B=U(t,Q);return Q-1>=e&&(B|=U(t,Q-1)<<4),B}function c(t,e,Q,B){for(var s=0,F=Math.min(t.length,Q),U=e;U<F;U++){var n=t.charCodeAt(U)-48;s*=B,s+=n>=49?n-49+10:n>=17?n-17+10:n}return s}s.isBN=function(t){return t instanceof s||null!==t&&"object"==typeof t&&t.constructor.wordSize===s.wordSize&&Array.isArray(t.words)},s.max=function(t,e){return t.cmp(e)>0?t:e},s.min=function(t,e){return t.cmp(e)<0?t:e},s.prototype._init=function(t,e,B){if("number"==typeof t)return this._initNumber(t,e,B);if("object"==typeof t)return this._initArray(t,e,B);"hex"===e&&(e=16),Q(e===(0|e)&&e>=2&&e<=36);var s=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(s++,this.negative=1),s<t.length&&(16===e?this._parseHex(t,s,B):(this._parseBase(t,e,s),"le"===B&&this._initArray(this.toArray(),e,B)))},s.prototype._initNumber=function(t,e,B){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(Q(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===B&&this._initArray(this.toArray(),e,B)},s.prototype._initArray=function(t,e,B){if(Q("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var s=0;s<this.length;s++)this.words[s]=0;var F,U,n=0;if("be"===B)for(s=t.length-1,F=0;s>=0;s-=3)U=t[s]|t[s-1]<<8|t[s-2]<<16,this.words[F]|=U<<n&67108863,this.words[F+1]=U>>>26-n&67108863,(n+=24)>=26&&(n-=26,F++);else if("le"===B)for(s=0,F=0;s<t.length;s+=3)U=t[s]|t[s+1]<<8|t[s+2]<<16,this.words[F]|=U<<n&67108863,this.words[F+1]=U>>>26-n&67108863,(n+=24)>=26&&(n-=26,F++);return this.strip()},s.prototype._parseHex=function(t,e,Q){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var B=0;B<this.length;B++)this.words[B]=0;var s,F=0,U=0;if("be"===Q)for(B=t.length-1;B>=e;B-=2)s=n(t,e,B)<<F,this.words[U]|=67108863&s,F>=18?(F-=18,U+=1,this.words[U]|=s>>>26):F+=8;else for(B=(t.length-e)%2==0?e+1:e;B<t.length;B+=2)s=n(t,e,B)<<F,this.words[U]|=67108863&s,F>=18?(F-=18,U+=1,this.words[U]|=s>>>26):F+=8;this.strip()},s.prototype._parseBase=function(t,e,Q){this.words=[0],this.length=1;for(var B=0,s=1;s<=67108863;s*=e)B++;B--,s=s/e|0;for(var F=t.length-Q,U=F%B,n=Math.min(F,F-U)+Q,o=0,g=Q;g<n;g+=B)o=c(t,g,g+B,e),this.imuln(s),this.words[0]+o<67108864?this.words[0]+=o:this._iaddn(o);if(0!==U){var l=1;for(o=c(t,g,t.length,e),g=0;g<U;g++)l*=e;this.imuln(l),this.words[0]+o<67108864?this.words[0]+=o:this._iaddn(o)}this.strip()},s.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},s.prototype.clone=function(){var t=new s(null);return this.copy(t),t},s.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},s.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},s.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},s.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var o=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],g=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],l=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function I(t,e,Q){Q.negative=e.negative^t.negative;var B=t.length+e.length|0;Q.length=B,B=B-1|0;var s=0|t.words[0],F=0|e.words[0],U=s*F,n=67108863&U,c=U/67108864|0;Q.words[0]=n;for(var o=1;o<B;o++){for(var g=c>>>26,l=67108863&c,I=Math.min(o,e.length-1),i=Math.max(0,o-t.length+1);i<=I;i++){var r=o-i|0;g+=(U=(s=0|t.words[r])*(F=0|e.words[i])+l)/67108864|0,l=67108863&U}Q.words[o]=0|l,c=0|g}return 0!==c?Q.words[o]=0|c:Q.length--,Q.strip()}s.prototype.toString=function(t,e){var B;if(e=0|e||1,16===(t=t||10)||"hex"===t){B="";for(var s=0,F=0,U=0;U<this.length;U++){var n=this.words[U],c=(16777215&(n<<s|F)).toString(16);B=0!=(F=n>>>24-s&16777215)||U!==this.length-1?o[6-c.length]+c+B:c+B,(s+=2)>=26&&(s-=26,U--)}for(0!==F&&(B=F.toString(16)+B);B.length%e!=0;)B="0"+B;return 0!==this.negative&&(B="-"+B),B}if(t===(0|t)&&t>=2&&t<=36){var I=g[t],i=l[t];B="";var r=this.clone();for(r.negative=0;!r.isZero();){var a=r.modn(i).toString(t);B=(r=r.idivn(i)).isZero()?a+B:o[I-a.length]+a+B}for(this.isZero()&&(B="0"+B);B.length%e!=0;)B="0"+B;return 0!==this.negative&&(B="-"+B),B}Q(!1,"Base should be between 2 and 36")},s.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&Q(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},s.prototype.toJSON=function(){return this.toString(16)},s.prototype.toBuffer=function(t,e){return Q(void 0!==F),this.toArrayLike(F,t,e)},s.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},s.prototype.toArrayLike=function(t,e,B){var s=this.byteLength(),F=B||Math.max(1,s);Q(s<=F,"byte array longer than desired length"),Q(F>0,"Requested array length <= 0"),this.strip();var U,n,c="le"===e,o=new t(F),g=this.clone();if(c){for(n=0;!g.isZero();n++)U=g.andln(255),g.iushrn(8),o[n]=U;for(;n<F;n++)o[n]=0}else{for(n=0;n<F-s;n++)o[n]=0;for(n=0;!g.isZero();n++)U=g.andln(255),g.iushrn(8),o[F-n-1]=U}return o},Math.clz32?s.prototype._countBits=function(t){return 32-Math.clz32(t)}:s.prototype._countBits=function(t){var e=t,Q=0;return e>=4096&&(Q+=13,e>>>=13),e>=64&&(Q+=7,e>>>=7),e>=8&&(Q+=4,e>>>=4),e>=2&&(Q+=2,e>>>=2),Q+e},s.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,Q=0;return 0==(8191&e)&&(Q+=13,e>>>=13),0==(127&e)&&(Q+=7,e>>>=7),0==(15&e)&&(Q+=4,e>>>=4),0==(3&e)&&(Q+=2,e>>>=2),0==(1&e)&&Q++,Q},s.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},s.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var Q=this._zeroBits(this.words[e]);if(t+=Q,26!==Q)break}return t},s.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},s.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},s.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},s.prototype.isNeg=function(){return 0!==this.negative},s.prototype.neg=function(){return this.clone().ineg()},s.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},s.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},s.prototype.ior=function(t){return Q(0==(this.negative|t.negative)),this.iuor(t)},s.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},s.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},s.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var Q=0;Q<e.length;Q++)this.words[Q]=this.words[Q]&t.words[Q];return this.length=e.length,this.strip()},s.prototype.iand=function(t){return Q(0==(this.negative|t.negative)),this.iuand(t)},s.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},s.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},s.prototype.iuxor=function(t){var e,Q;this.length>t.length?(e=this,Q=t):(e=t,Q=this);for(var B=0;B<Q.length;B++)this.words[B]=e.words[B]^Q.words[B];if(this!==e)for(;B<e.length;B++)this.words[B]=e.words[B];return this.length=e.length,this.strip()},s.prototype.ixor=function(t){return Q(0==(this.negative|t.negative)),this.iuxor(t)},s.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},s.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},s.prototype.inotn=function(t){Q("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),B=t%26;this._expand(e),B>0&&e--;for(var s=0;s<e;s++)this.words[s]=67108863&~this.words[s];return B>0&&(this.words[s]=~this.words[s]&67108863>>26-B),this.strip()},s.prototype.notn=function(t){return this.clone().inotn(t)},s.prototype.setn=function(t,e){Q("number"==typeof t&&t>=0);var B=t/26|0,s=t%26;return this._expand(B+1),this.words[B]=e?this.words[B]|1<<s:this.words[B]&~(1<<s),this.strip()},s.prototype.iadd=function(t){var e,Q,B;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(Q=this,B=t):(Q=t,B=this);for(var s=0,F=0;F<B.length;F++)e=(0|Q.words[F])+(0|B.words[F])+s,this.words[F]=67108863&e,s=e>>>26;for(;0!==s&&F<Q.length;F++)e=(0|Q.words[F])+s,this.words[F]=67108863&e,s=e>>>26;if(this.length=Q.length,0!==s)this.words[this.length]=s,this.length++;else if(Q!==this)for(;F<Q.length;F++)this.words[F]=Q.words[F];return this},s.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},s.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var Q,B,s=this.cmp(t);if(0===s)return this.negative=0,this.length=1,this.words[0]=0,this;s>0?(Q=this,B=t):(Q=t,B=this);for(var F=0,U=0;U<B.length;U++)F=(e=(0|Q.words[U])-(0|B.words[U])+F)>>26,this.words[U]=67108863&e;for(;0!==F&&U<Q.length;U++)F=(e=(0|Q.words[U])+F)>>26,this.words[U]=67108863&e;if(0===F&&U<Q.length&&Q!==this)for(;U<Q.length;U++)this.words[U]=Q.words[U];return this.length=Math.max(this.length,U),Q!==this&&(this.negative=1),this.strip()},s.prototype.sub=function(t){return this.clone().isub(t)};var i=function(t,e,Q){var B,s,F,U=t.words,n=e.words,c=Q.words,o=0,g=0|U[0],l=8191&g,I=g>>>13,i=0|U[1],r=8191&i,a=i>>>13,d=0|U[2],u=8191&d,C=d>>>13,y=0|U[3],S=8191&y,b=y>>>13,m=0|U[4],G=8191&m,x=m>>>13,L=0|U[5],h=8191&L,A=L>>>13,Z=0|U[6],R=8191&Z,N=Z>>>13,V=0|U[7],D=8191&V,E=V>>>13,p=0|U[8],J=8191&p,X=p>>>13,H=0|U[9],k=8191&H,W=H>>>13,T=0|n[0],Y=8191&T,f=T>>>13,M=0|n[1],w=8191&M,v=M>>>13,z=0|n[2],K=8191&z,O=z>>>13,P=0|n[3],j=8191&P,_=P>>>13,$=0|n[4],q=8191&$,tt=$>>>13,et=0|n[5],Qt=8191&et,Bt=et>>>13,st=0|n[6],Ft=8191&st,Ut=st>>>13,nt=0|n[7],ct=8191&nt,ot=nt>>>13,gt=0|n[8],lt=8191&gt,It=gt>>>13,it=0|n[9],rt=8191&it,at=it>>>13;Q.negative=t.negative^e.negative,Q.length=19;var dt=(o+(B=Math.imul(l,Y))|0)+((8191&(s=(s=Math.imul(l,f))+Math.imul(I,Y)|0))<<13)|0;o=((F=Math.imul(I,f))+(s>>>13)|0)+(dt>>>26)|0,dt&=67108863,B=Math.imul(r,Y),s=(s=Math.imul(r,f))+Math.imul(a,Y)|0,F=Math.imul(a,f);var ut=(o+(B=B+Math.imul(l,w)|0)|0)+((8191&(s=(s=s+Math.imul(l,v)|0)+Math.imul(I,w)|0))<<13)|0;o=((F=F+Math.imul(I,v)|0)+(s>>>13)|0)+(ut>>>26)|0,ut&=67108863,B=Math.imul(u,Y),s=(s=Math.imul(u,f))+Math.imul(C,Y)|0,F=Math.imul(C,f),B=B+Math.imul(r,w)|0,s=(s=s+Math.imul(r,v)|0)+Math.imul(a,w)|0,F=F+Math.imul(a,v)|0;var Ct=(o+(B=B+Math.imul(l,K)|0)|0)+((8191&(s=(s=s+Math.imul(l,O)|0)+Math.imul(I,K)|0))<<13)|0;o=((F=F+Math.imul(I,O)|0)+(s>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,B=Math.imul(S,Y),s=(s=Math.imul(S,f))+Math.imul(b,Y)|0,F=Math.imul(b,f),B=B+Math.imul(u,w)|0,s=(s=s+Math.imul(u,v)|0)+Math.imul(C,w)|0,F=F+Math.imul(C,v)|0,B=B+Math.imul(r,K)|0,s=(s=s+Math.imul(r,O)|0)+Math.imul(a,K)|0,F=F+Math.imul(a,O)|0;var yt=(o+(B=B+Math.imul(l,j)|0)|0)+((8191&(s=(s=s+Math.imul(l,_)|0)+Math.imul(I,j)|0))<<13)|0;o=((F=F+Math.imul(I,_)|0)+(s>>>13)|0)+(yt>>>26)|0,yt&=67108863,B=Math.imul(G,Y),s=(s=Math.imul(G,f))+Math.imul(x,Y)|0,F=Math.imul(x,f),B=B+Math.imul(S,w)|0,s=(s=s+Math.imul(S,v)|0)+Math.imul(b,w)|0,F=F+Math.imul(b,v)|0,B=B+Math.imul(u,K)|0,s=(s=s+Math.imul(u,O)|0)+Math.imul(C,K)|0,F=F+Math.imul(C,O)|0,B=B+Math.imul(r,j)|0,s=(s=s+Math.imul(r,_)|0)+Math.imul(a,j)|0,F=F+Math.imul(a,_)|0;var St=(o+(B=B+Math.imul(l,q)|0)|0)+((8191&(s=(s=s+Math.imul(l,tt)|0)+Math.imul(I,q)|0))<<13)|0;o=((F=F+Math.imul(I,tt)|0)+(s>>>13)|0)+(St>>>26)|0,St&=67108863,B=Math.imul(h,Y),s=(s=Math.imul(h,f))+Math.imul(A,Y)|0,F=Math.imul(A,f),B=B+Math.imul(G,w)|0,s=(s=s+Math.imul(G,v)|0)+Math.imul(x,w)|0,F=F+Math.imul(x,v)|0,B=B+Math.imul(S,K)|0,s=(s=s+Math.imul(S,O)|0)+Math.imul(b,K)|0,F=F+Math.imul(b,O)|0,B=B+Math.imul(u,j)|0,s=(s=s+Math.imul(u,_)|0)+Math.imul(C,j)|0,F=F+Math.imul(C,_)|0,B=B+Math.imul(r,q)|0,s=(s=s+Math.imul(r,tt)|0)+Math.imul(a,q)|0,F=F+Math.imul(a,tt)|0;var bt=(o+(B=B+Math.imul(l,Qt)|0)|0)+((8191&(s=(s=s+Math.imul(l,Bt)|0)+Math.imul(I,Qt)|0))<<13)|0;o=((F=F+Math.imul(I,Bt)|0)+(s>>>13)|0)+(bt>>>26)|0,bt&=67108863,B=Math.imul(R,Y),s=(s=Math.imul(R,f))+Math.imul(N,Y)|0,F=Math.imul(N,f),B=B+Math.imul(h,w)|0,s=(s=s+Math.imul(h,v)|0)+Math.imul(A,w)|0,F=F+Math.imul(A,v)|0,B=B+Math.imul(G,K)|0,s=(s=s+Math.imul(G,O)|0)+Math.imul(x,K)|0,F=F+Math.imul(x,O)|0,B=B+Math.imul(S,j)|0,s=(s=s+Math.imul(S,_)|0)+Math.imul(b,j)|0,F=F+Math.imul(b,_)|0,B=B+Math.imul(u,q)|0,s=(s=s+Math.imul(u,tt)|0)+Math.imul(C,q)|0,F=F+Math.imul(C,tt)|0,B=B+Math.imul(r,Qt)|0,s=(s=s+Math.imul(r,Bt)|0)+Math.imul(a,Qt)|0,F=F+Math.imul(a,Bt)|0;var mt=(o+(B=B+Math.imul(l,Ft)|0)|0)+((8191&(s=(s=s+Math.imul(l,Ut)|0)+Math.imul(I,Ft)|0))<<13)|0;o=((F=F+Math.imul(I,Ut)|0)+(s>>>13)|0)+(mt>>>26)|0,mt&=67108863,B=Math.imul(D,Y),s=(s=Math.imul(D,f))+Math.imul(E,Y)|0,F=Math.imul(E,f),B=B+Math.imul(R,w)|0,s=(s=s+Math.imul(R,v)|0)+Math.imul(N,w)|0,F=F+Math.imul(N,v)|0,B=B+Math.imul(h,K)|0,s=(s=s+Math.imul(h,O)|0)+Math.imul(A,K)|0,F=F+Math.imul(A,O)|0,B=B+Math.imul(G,j)|0,s=(s=s+Math.imul(G,_)|0)+Math.imul(x,j)|0,F=F+Math.imul(x,_)|0,B=B+Math.imul(S,q)|0,s=(s=s+Math.imul(S,tt)|0)+Math.imul(b,q)|0,F=F+Math.imul(b,tt)|0,B=B+Math.imul(u,Qt)|0,s=(s=s+Math.imul(u,Bt)|0)+Math.imul(C,Qt)|0,F=F+Math.imul(C,Bt)|0,B=B+Math.imul(r,Ft)|0,s=(s=s+Math.imul(r,Ut)|0)+Math.imul(a,Ft)|0,F=F+Math.imul(a,Ut)|0;var Gt=(o+(B=B+Math.imul(l,ct)|0)|0)+((8191&(s=(s=s+Math.imul(l,ot)|0)+Math.imul(I,ct)|0))<<13)|0;o=((F=F+Math.imul(I,ot)|0)+(s>>>13)|0)+(Gt>>>26)|0,Gt&=67108863,B=Math.imul(J,Y),s=(s=Math.imul(J,f))+Math.imul(X,Y)|0,F=Math.imul(X,f),B=B+Math.imul(D,w)|0,s=(s=s+Math.imul(D,v)|0)+Math.imul(E,w)|0,F=F+Math.imul(E,v)|0,B=B+Math.imul(R,K)|0,s=(s=s+Math.imul(R,O)|0)+Math.imul(N,K)|0,F=F+Math.imul(N,O)|0,B=B+Math.imul(h,j)|0,s=(s=s+Math.imul(h,_)|0)+Math.imul(A,j)|0,F=F+Math.imul(A,_)|0,B=B+Math.imul(G,q)|0,s=(s=s+Math.imul(G,tt)|0)+Math.imul(x,q)|0,F=F+Math.imul(x,tt)|0,B=B+Math.imul(S,Qt)|0,s=(s=s+Math.imul(S,Bt)|0)+Math.imul(b,Qt)|0,F=F+Math.imul(b,Bt)|0,B=B+Math.imul(u,Ft)|0,s=(s=s+Math.imul(u,Ut)|0)+Math.imul(C,Ft)|0,F=F+Math.imul(C,Ut)|0,B=B+Math.imul(r,ct)|0,s=(s=s+Math.imul(r,ot)|0)+Math.imul(a,ct)|0,F=F+Math.imul(a,ot)|0;var xt=(o+(B=B+Math.imul(l,lt)|0)|0)+((8191&(s=(s=s+Math.imul(l,It)|0)+Math.imul(I,lt)|0))<<13)|0;o=((F=F+Math.imul(I,It)|0)+(s>>>13)|0)+(xt>>>26)|0,xt&=67108863,B=Math.imul(k,Y),s=(s=Math.imul(k,f))+Math.imul(W,Y)|0,F=Math.imul(W,f),B=B+Math.imul(J,w)|0,s=(s=s+Math.imul(J,v)|0)+Math.imul(X,w)|0,F=F+Math.imul(X,v)|0,B=B+Math.imul(D,K)|0,s=(s=s+Math.imul(D,O)|0)+Math.imul(E,K)|0,F=F+Math.imul(E,O)|0,B=B+Math.imul(R,j)|0,s=(s=s+Math.imul(R,_)|0)+Math.imul(N,j)|0,F=F+Math.imul(N,_)|0,B=B+Math.imul(h,q)|0,s=(s=s+Math.imul(h,tt)|0)+Math.imul(A,q)|0,F=F+Math.imul(A,tt)|0,B=B+Math.imul(G,Qt)|0,s=(s=s+Math.imul(G,Bt)|0)+Math.imul(x,Qt)|0,F=F+Math.imul(x,Bt)|0,B=B+Math.imul(S,Ft)|0,s=(s=s+Math.imul(S,Ut)|0)+Math.imul(b,Ft)|0,F=F+Math.imul(b,Ut)|0,B=B+Math.imul(u,ct)|0,s=(s=s+Math.imul(u,ot)|0)+Math.imul(C,ct)|0,F=F+Math.imul(C,ot)|0,B=B+Math.imul(r,lt)|0,s=(s=s+Math.imul(r,It)|0)+Math.imul(a,lt)|0,F=F+Math.imul(a,It)|0;var Lt=(o+(B=B+Math.imul(l,rt)|0)|0)+((8191&(s=(s=s+Math.imul(l,at)|0)+Math.imul(I,rt)|0))<<13)|0;o=((F=F+Math.imul(I,at)|0)+(s>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,B=Math.imul(k,w),s=(s=Math.imul(k,v))+Math.imul(W,w)|0,F=Math.imul(W,v),B=B+Math.imul(J,K)|0,s=(s=s+Math.imul(J,O)|0)+Math.imul(X,K)|0,F=F+Math.imul(X,O)|0,B=B+Math.imul(D,j)|0,s=(s=s+Math.imul(D,_)|0)+Math.imul(E,j)|0,F=F+Math.imul(E,_)|0,B=B+Math.imul(R,q)|0,s=(s=s+Math.imul(R,tt)|0)+Math.imul(N,q)|0,F=F+Math.imul(N,tt)|0,B=B+Math.imul(h,Qt)|0,s=(s=s+Math.imul(h,Bt)|0)+Math.imul(A,Qt)|0,F=F+Math.imul(A,Bt)|0,B=B+Math.imul(G,Ft)|0,s=(s=s+Math.imul(G,Ut)|0)+Math.imul(x,Ft)|0,F=F+Math.imul(x,Ut)|0,B=B+Math.imul(S,ct)|0,s=(s=s+Math.imul(S,ot)|0)+Math.imul(b,ct)|0,F=F+Math.imul(b,ot)|0,B=B+Math.imul(u,lt)|0,s=(s=s+Math.imul(u,It)|0)+Math.imul(C,lt)|0,F=F+Math.imul(C,It)|0;var ht=(o+(B=B+Math.imul(r,rt)|0)|0)+((8191&(s=(s=s+Math.imul(r,at)|0)+Math.imul(a,rt)|0))<<13)|0;o=((F=F+Math.imul(a,at)|0)+(s>>>13)|0)+(ht>>>26)|0,ht&=67108863,B=Math.imul(k,K),s=(s=Math.imul(k,O))+Math.imul(W,K)|0,F=Math.imul(W,O),B=B+Math.imul(J,j)|0,s=(s=s+Math.imul(J,_)|0)+Math.imul(X,j)|0,F=F+Math.imul(X,_)|0,B=B+Math.imul(D,q)|0,s=(s=s+Math.imul(D,tt)|0)+Math.imul(E,q)|0,F=F+Math.imul(E,tt)|0,B=B+Math.imul(R,Qt)|0,s=(s=s+Math.imul(R,Bt)|0)+Math.imul(N,Qt)|0,F=F+Math.imul(N,Bt)|0,B=B+Math.imul(h,Ft)|0,s=(s=s+Math.imul(h,Ut)|0)+Math.imul(A,Ft)|0,F=F+Math.imul(A,Ut)|0,B=B+Math.imul(G,ct)|0,s=(s=s+Math.imul(G,ot)|0)+Math.imul(x,ct)|0,F=F+Math.imul(x,ot)|0,B=B+Math.imul(S,lt)|0,s=(s=s+Math.imul(S,It)|0)+Math.imul(b,lt)|0,F=F+Math.imul(b,It)|0;var At=(o+(B=B+Math.imul(u,rt)|0)|0)+((8191&(s=(s=s+Math.imul(u,at)|0)+Math.imul(C,rt)|0))<<13)|0;o=((F=F+Math.imul(C,at)|0)+(s>>>13)|0)+(At>>>26)|0,At&=67108863,B=Math.imul(k,j),s=(s=Math.imul(k,_))+Math.imul(W,j)|0,F=Math.imul(W,_),B=B+Math.imul(J,q)|0,s=(s=s+Math.imul(J,tt)|0)+Math.imul(X,q)|0,F=F+Math.imul(X,tt)|0,B=B+Math.imul(D,Qt)|0,s=(s=s+Math.imul(D,Bt)|0)+Math.imul(E,Qt)|0,F=F+Math.imul(E,Bt)|0,B=B+Math.imul(R,Ft)|0,s=(s=s+Math.imul(R,Ut)|0)+Math.imul(N,Ft)|0,F=F+Math.imul(N,Ut)|0,B=B+Math.imul(h,ct)|0,s=(s=s+Math.imul(h,ot)|0)+Math.imul(A,ct)|0,F=F+Math.imul(A,ot)|0,B=B+Math.imul(G,lt)|0,s=(s=s+Math.imul(G,It)|0)+Math.imul(x,lt)|0,F=F+Math.imul(x,It)|0;var Zt=(o+(B=B+Math.imul(S,rt)|0)|0)+((8191&(s=(s=s+Math.imul(S,at)|0)+Math.imul(b,rt)|0))<<13)|0;o=((F=F+Math.imul(b,at)|0)+(s>>>13)|0)+(Zt>>>26)|0,Zt&=67108863,B=Math.imul(k,q),s=(s=Math.imul(k,tt))+Math.imul(W,q)|0,F=Math.imul(W,tt),B=B+Math.imul(J,Qt)|0,s=(s=s+Math.imul(J,Bt)|0)+Math.imul(X,Qt)|0,F=F+Math.imul(X,Bt)|0,B=B+Math.imul(D,Ft)|0,s=(s=s+Math.imul(D,Ut)|0)+Math.imul(E,Ft)|0,F=F+Math.imul(E,Ut)|0,B=B+Math.imul(R,ct)|0,s=(s=s+Math.imul(R,ot)|0)+Math.imul(N,ct)|0,F=F+Math.imul(N,ot)|0,B=B+Math.imul(h,lt)|0,s=(s=s+Math.imul(h,It)|0)+Math.imul(A,lt)|0,F=F+Math.imul(A,It)|0;var Rt=(o+(B=B+Math.imul(G,rt)|0)|0)+((8191&(s=(s=s+Math.imul(G,at)|0)+Math.imul(x,rt)|0))<<13)|0;o=((F=F+Math.imul(x,at)|0)+(s>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,B=Math.imul(k,Qt),s=(s=Math.imul(k,Bt))+Math.imul(W,Qt)|0,F=Math.imul(W,Bt),B=B+Math.imul(J,Ft)|0,s=(s=s+Math.imul(J,Ut)|0)+Math.imul(X,Ft)|0,F=F+Math.imul(X,Ut)|0,B=B+Math.imul(D,ct)|0,s=(s=s+Math.imul(D,ot)|0)+Math.imul(E,ct)|0,F=F+Math.imul(E,ot)|0,B=B+Math.imul(R,lt)|0,s=(s=s+Math.imul(R,It)|0)+Math.imul(N,lt)|0,F=F+Math.imul(N,It)|0;var Nt=(o+(B=B+Math.imul(h,rt)|0)|0)+((8191&(s=(s=s+Math.imul(h,at)|0)+Math.imul(A,rt)|0))<<13)|0;o=((F=F+Math.imul(A,at)|0)+(s>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,B=Math.imul(k,Ft),s=(s=Math.imul(k,Ut))+Math.imul(W,Ft)|0,F=Math.imul(W,Ut),B=B+Math.imul(J,ct)|0,s=(s=s+Math.imul(J,ot)|0)+Math.imul(X,ct)|0,F=F+Math.imul(X,ot)|0,B=B+Math.imul(D,lt)|0,s=(s=s+Math.imul(D,It)|0)+Math.imul(E,lt)|0,F=F+Math.imul(E,It)|0;var Vt=(o+(B=B+Math.imul(R,rt)|0)|0)+((8191&(s=(s=s+Math.imul(R,at)|0)+Math.imul(N,rt)|0))<<13)|0;o=((F=F+Math.imul(N,at)|0)+(s>>>13)|0)+(Vt>>>26)|0,Vt&=67108863,B=Math.imul(k,ct),s=(s=Math.imul(k,ot))+Math.imul(W,ct)|0,F=Math.imul(W,ot),B=B+Math.imul(J,lt)|0,s=(s=s+Math.imul(J,It)|0)+Math.imul(X,lt)|0,F=F+Math.imul(X,It)|0;var Dt=(o+(B=B+Math.imul(D,rt)|0)|0)+((8191&(s=(s=s+Math.imul(D,at)|0)+Math.imul(E,rt)|0))<<13)|0;o=((F=F+Math.imul(E,at)|0)+(s>>>13)|0)+(Dt>>>26)|0,Dt&=67108863,B=Math.imul(k,lt),s=(s=Math.imul(k,It))+Math.imul(W,lt)|0,F=Math.imul(W,It);var Et=(o+(B=B+Math.imul(J,rt)|0)|0)+((8191&(s=(s=s+Math.imul(J,at)|0)+Math.imul(X,rt)|0))<<13)|0;o=((F=F+Math.imul(X,at)|0)+(s>>>13)|0)+(Et>>>26)|0,Et&=67108863;var pt=(o+(B=Math.imul(k,rt))|0)+((8191&(s=(s=Math.imul(k,at))+Math.imul(W,rt)|0))<<13)|0;return o=((F=Math.imul(W,at))+(s>>>13)|0)+(pt>>>26)|0,pt&=67108863,c[0]=dt,c[1]=ut,c[2]=Ct,c[3]=yt,c[4]=St,c[5]=bt,c[6]=mt,c[7]=Gt,c[8]=xt,c[9]=Lt,c[10]=ht,c[11]=At,c[12]=Zt,c[13]=Rt,c[14]=Nt,c[15]=Vt,c[16]=Dt,c[17]=Et,c[18]=pt,0!==o&&(c[19]=o,Q.length++),Q};function r(t,e,Q){return(new a).mulp(t,e,Q)}function a(t,e){this.x=t,this.y=e}Math.imul||(i=I),s.prototype.mulTo=function(t,e){var Q,B=this.length+t.length;return Q=10===this.length&&10===t.length?i(this,t,e):B<63?I(this,t,e):B<1024?function(t,e,Q){Q.negative=e.negative^t.negative,Q.length=t.length+e.length;for(var B=0,s=0,F=0;F<Q.length-1;F++){var U=s;s=0;for(var n=67108863&B,c=Math.min(F,e.length-1),o=Math.max(0,F-t.length+1);o<=c;o++){var g=F-o,l=(0|t.words[g])*(0|e.words[o]),I=67108863&l;n=67108863&(I=I+n|0),s+=(U=(U=U+(l/67108864|0)|0)+(I>>>26)|0)>>>26,U&=67108863}Q.words[F]=n,B=U,U=s}return 0!==B?Q.words[F]=B:Q.length--,Q.strip()}(this,t,e):r(this,t,e),Q},a.prototype.makeRBT=function(t){for(var e=new Array(t),Q=s.prototype._countBits(t)-1,B=0;B<t;B++)e[B]=this.revBin(B,Q,t);return e},a.prototype.revBin=function(t,e,Q){if(0===t||t===Q-1)return t;for(var B=0,s=0;s<e;s++)B|=(1&t)<<e-s-1,t>>=1;return B},a.prototype.permute=function(t,e,Q,B,s,F){for(var U=0;U<F;U++)B[U]=e[t[U]],s[U]=Q[t[U]]},a.prototype.transform=function(t,e,Q,B,s,F){this.permute(F,t,e,Q,B,s);for(var U=1;U<s;U<<=1)for(var n=U<<1,c=Math.cos(2*Math.PI/n),o=Math.sin(2*Math.PI/n),g=0;g<s;g+=n)for(var l=c,I=o,i=0;i<U;i++){var r=Q[g+i],a=B[g+i],d=Q[g+i+U],u=B[g+i+U],C=l*d-I*u;u=l*u+I*d,d=C,Q[g+i]=r+d,B[g+i]=a+u,Q[g+i+U]=r-d,B[g+i+U]=a-u,i!==n&&(C=c*l-o*I,I=c*I+o*l,l=C)}},a.prototype.guessLen13b=function(t,e){var Q=1|Math.max(e,t),B=1&Q,s=0;for(Q=Q/2|0;Q;Q>>>=1)s++;return 1<<s+1+B},a.prototype.conjugate=function(t,e,Q){if(!(Q<=1))for(var B=0;B<Q/2;B++){var s=t[B];t[B]=t[Q-B-1],t[Q-B-1]=s,s=e[B],e[B]=-e[Q-B-1],e[Q-B-1]=-s}},a.prototype.normalize13b=function(t,e){for(var Q=0,B=0;B<e/2;B++){var s=8192*Math.round(t[2*B+1]/e)+Math.round(t[2*B]/e)+Q;t[B]=67108863&s,Q=s<67108864?0:s/67108864|0}return t},a.prototype.convert13b=function(t,e,B,s){for(var F=0,U=0;U<e;U++)F+=0|t[U],B[2*U]=8191&F,F>>>=13,B[2*U+1]=8191&F,F>>>=13;for(U=2*e;U<s;++U)B[U]=0;Q(0===F),Q(0==(-8192&F))},a.prototype.stub=function(t){for(var e=new Array(t),Q=0;Q<t;Q++)e[Q]=0;return e},a.prototype.mulp=function(t,e,Q){var B=2*this.guessLen13b(t.length,e.length),s=this.makeRBT(B),F=this.stub(B),U=new Array(B),n=new Array(B),c=new Array(B),o=new Array(B),g=new Array(B),l=new Array(B),I=Q.words;I.length=B,this.convert13b(t.words,t.length,U,B),this.convert13b(e.words,e.length,o,B),this.transform(U,F,n,c,B,s),this.transform(o,F,g,l,B,s);for(var i=0;i<B;i++){var r=n[i]*g[i]-c[i]*l[i];c[i]=n[i]*l[i]+c[i]*g[i],n[i]=r}return this.conjugate(n,c,B),this.transform(n,c,I,F,B,s),this.conjugate(I,F,B),this.normalize13b(I,B),Q.negative=t.negative^e.negative,Q.length=t.length+e.length,Q.strip()},s.prototype.mul=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},s.prototype.mulf=function(t){var e=new s(null);return e.words=new Array(this.length+t.length),r(this,t,e)},s.prototype.imul=function(t){return this.clone().mulTo(t,this)},s.prototype.imuln=function(t){Q("number"==typeof t),Q(t<67108864);for(var e=0,B=0;B<this.length;B++){var s=(0|this.words[B])*t,F=(67108863&s)+(67108863&e);e>>=26,e+=s/67108864|0,e+=F>>>26,this.words[B]=67108863&F}return 0!==e&&(this.words[B]=e,this.length++),this},s.prototype.muln=function(t){return this.clone().imuln(t)},s.prototype.sqr=function(){return this.mul(this)},s.prototype.isqr=function(){return this.imul(this.clone())},s.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),Q=0;Q<e.length;Q++){var B=Q/26|0,s=Q%26;e[Q]=(t.words[B]&1<<s)>>>s}return e}(t);if(0===e.length)return new s(1);for(var Q=this,B=0;B<e.length&&0===e[B];B++,Q=Q.sqr());if(++B<e.length)for(var F=Q.sqr();B<e.length;B++,F=F.sqr())0!==e[B]&&(Q=Q.mul(F));return Q},s.prototype.iushln=function(t){Q("number"==typeof t&&t>=0);var e,B=t%26,s=(t-B)/26,F=67108863>>>26-B<<26-B;if(0!==B){var U=0;for(e=0;e<this.length;e++){var n=this.words[e]&F,c=(0|this.words[e])-n<<B;this.words[e]=c|U,U=n>>>26-B}U&&(this.words[e]=U,this.length++)}if(0!==s){for(e=this.length-1;e>=0;e--)this.words[e+s]=this.words[e];for(e=0;e<s;e++)this.words[e]=0;this.length+=s}return this.strip()},s.prototype.ishln=function(t){return Q(0===this.negative),this.iushln(t)},s.prototype.iushrn=function(t,e,B){var s;Q("number"==typeof t&&t>=0),s=e?(e-e%26)/26:0;var F=t%26,U=Math.min((t-F)/26,this.length),n=67108863^67108863>>>F<<F,c=B;if(s-=U,s=Math.max(0,s),c){for(var o=0;o<U;o++)c.words[o]=this.words[o];c.length=U}if(0===U);else if(this.length>U)for(this.length-=U,o=0;o<this.length;o++)this.words[o]=this.words[o+U];else this.words[0]=0,this.length=1;var g=0;for(o=this.length-1;o>=0&&(0!==g||o>=s);o--){var l=0|this.words[o];this.words[o]=g<<26-F|l>>>F,g=l&n}return c&&0!==g&&(c.words[c.length++]=g),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},s.prototype.ishrn=function(t,e,B){return Q(0===this.negative),this.iushrn(t,e,B)},s.prototype.shln=function(t){return this.clone().ishln(t)},s.prototype.ushln=function(t){return this.clone().iushln(t)},s.prototype.shrn=function(t){return this.clone().ishrn(t)},s.prototype.ushrn=function(t){return this.clone().iushrn(t)},s.prototype.testn=function(t){Q("number"==typeof t&&t>=0);var e=t%26,B=(t-e)/26,s=1<<e;return!(this.length<=B||!(this.words[B]&s))},s.prototype.imaskn=function(t){Q("number"==typeof t&&t>=0);var e=t%26,B=(t-e)/26;if(Q(0===this.negative,"imaskn works only with positive numbers"),this.length<=B)return this;if(0!==e&&B++,this.length=Math.min(B,this.length),0!==e){var s=67108863^67108863>>>e<<e;this.words[this.length-1]&=s}return this.strip()},s.prototype.maskn=function(t){return this.clone().imaskn(t)},s.prototype.iaddn=function(t){return Q("number"==typeof t),Q(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},s.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},s.prototype.isubn=function(t){if(Q("number"==typeof t),Q(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},s.prototype.addn=function(t){return this.clone().iaddn(t)},s.prototype.subn=function(t){return this.clone().isubn(t)},s.prototype.iabs=function(){return this.negative=0,this},s.prototype.abs=function(){return this.clone().iabs()},s.prototype._ishlnsubmul=function(t,e,B){var s,F,U=t.length+B;this._expand(U);var n=0;for(s=0;s<t.length;s++){F=(0|this.words[s+B])+n;var c=(0|t.words[s])*e;n=((F-=67108863&c)>>26)-(c/67108864|0),this.words[s+B]=67108863&F}for(;s<this.length-B;s++)n=(F=(0|this.words[s+B])+n)>>26,this.words[s+B]=67108863&F;if(0===n)return this.strip();for(Q(-1===n),n=0,s=0;s<this.length;s++)n=(F=-(0|this.words[s])+n)>>26,this.words[s]=67108863&F;return this.negative=1,this.strip()},s.prototype._wordDiv=function(t,e){var Q=(this.length,t.length),B=this.clone(),F=t,U=0|F.words[F.length-1];0!=(Q=26-this._countBits(U))&&(F=F.ushln(Q),B.iushln(Q),U=0|F.words[F.length-1]);var n,c=B.length-F.length;if("mod"!==e){(n=new s(null)).length=c+1,n.words=new Array(n.length);for(var o=0;o<n.length;o++)n.words[o]=0}var g=B.clone()._ishlnsubmul(F,1,c);0===g.negative&&(B=g,n&&(n.words[c]=1));for(var l=c-1;l>=0;l--){var I=67108864*(0|B.words[F.length+l])+(0|B.words[F.length+l-1]);for(I=Math.min(I/U|0,67108863),B._ishlnsubmul(F,I,l);0!==B.negative;)I--,B.negative=0,B._ishlnsubmul(F,1,l),B.isZero()||(B.negative^=1);n&&(n.words[l]=I)}return n&&n.strip(),B.strip(),"div"!==e&&0!==Q&&B.iushrn(Q),{div:n||null,mod:B}},s.prototype.divmod=function(t,e,B){return Q(!t.isZero()),this.isZero()?{div:new s(0),mod:new s(0)}:0!==this.negative&&0===t.negative?(n=this.neg().divmod(t,e),"mod"!==e&&(F=n.div.neg()),"div"!==e&&(U=n.mod.neg(),B&&0!==U.negative&&U.iadd(t)),{div:F,mod:U}):0===this.negative&&0!==t.negative?(n=this.divmod(t.neg(),e),"mod"!==e&&(F=n.div.neg()),{div:F,mod:n.mod}):0!=(this.negative&t.negative)?(n=this.neg().divmod(t.neg(),e),"div"!==e&&(U=n.mod.neg(),B&&0!==U.negative&&U.isub(t)),{div:n.div,mod:U}):t.length>this.length||this.cmp(t)<0?{div:new s(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new s(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new s(this.modn(t.words[0]))}:this._wordDiv(t,e);var F,U,n},s.prototype.div=function(t){return this.divmod(t,"div",!1).div},s.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},s.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},s.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var Q=0!==e.div.negative?e.mod.isub(t):e.mod,B=t.ushrn(1),s=t.andln(1),F=Q.cmp(B);return F<0||1===s&&0===F?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},s.prototype.modn=function(t){Q(t<=67108863);for(var e=(1<<26)%t,B=0,s=this.length-1;s>=0;s--)B=(e*B+(0|this.words[s]))%t;return B},s.prototype.idivn=function(t){Q(t<=67108863);for(var e=0,B=this.length-1;B>=0;B--){var s=(0|this.words[B])+67108864*e;this.words[B]=s/t|0,e=s%t}return this.strip()},s.prototype.divn=function(t){return this.clone().idivn(t)},s.prototype.egcd=function(t){Q(0===t.negative),Q(!t.isZero());var e=this,B=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var F=new s(1),U=new s(0),n=new s(0),c=new s(1),o=0;e.isEven()&&B.isEven();)e.iushrn(1),B.iushrn(1),++o;for(var g=B.clone(),l=e.clone();!e.isZero();){for(var I=0,i=1;0==(e.words[0]&i)&&I<26;++I,i<<=1);if(I>0)for(e.iushrn(I);I-- >0;)(F.isOdd()||U.isOdd())&&(F.iadd(g),U.isub(l)),F.iushrn(1),U.iushrn(1);for(var r=0,a=1;0==(B.words[0]&a)&&r<26;++r,a<<=1);if(r>0)for(B.iushrn(r);r-- >0;)(n.isOdd()||c.isOdd())&&(n.iadd(g),c.isub(l)),n.iushrn(1),c.iushrn(1);e.cmp(B)>=0?(e.isub(B),F.isub(n),U.isub(c)):(B.isub(e),n.isub(F),c.isub(U))}return{a:n,b:c,gcd:B.iushln(o)}},s.prototype._invmp=function(t){Q(0===t.negative),Q(!t.isZero());var e=this,B=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var F,U=new s(1),n=new s(0),c=B.clone();e.cmpn(1)>0&&B.cmpn(1)>0;){for(var o=0,g=1;0==(e.words[0]&g)&&o<26;++o,g<<=1);if(o>0)for(e.iushrn(o);o-- >0;)U.isOdd()&&U.iadd(c),U.iushrn(1);for(var l=0,I=1;0==(B.words[0]&I)&&l<26;++l,I<<=1);if(l>0)for(B.iushrn(l);l-- >0;)n.isOdd()&&n.iadd(c),n.iushrn(1);e.cmp(B)>=0?(e.isub(B),U.isub(n)):(B.isub(e),n.isub(U))}return(F=0===e.cmpn(1)?U:n).cmpn(0)<0&&F.iadd(t),F},s.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),Q=t.clone();e.negative=0,Q.negative=0;for(var B=0;e.isEven()&&Q.isEven();B++)e.iushrn(1),Q.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;Q.isEven();)Q.iushrn(1);var s=e.cmp(Q);if(s<0){var F=e;e=Q,Q=F}else if(0===s||0===Q.cmpn(1))break;e.isub(Q)}return Q.iushln(B)},s.prototype.invm=function(t){return this.egcd(t).a.umod(t)},s.prototype.isEven=function(){return 0==(1&this.words[0])},s.prototype.isOdd=function(){return 1==(1&this.words[0])},s.prototype.andln=function(t){return this.words[0]&t},s.prototype.bincn=function(t){Q("number"==typeof t);var e=t%26,B=(t-e)/26,s=1<<e;if(this.length<=B)return this._expand(B+1),this.words[B]|=s,this;for(var F=s,U=B;0!==F&&U<this.length;U++){var n=0|this.words[U];F=(n+=F)>>>26,n&=67108863,this.words[U]=n}return 0!==F&&(this.words[U]=F,this.length++),this},s.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},s.prototype.cmpn=function(t){var e,B=t<0;if(0!==this.negative&&!B)return-1;if(0===this.negative&&B)return 1;if(this.strip(),this.length>1)e=1;else{B&&(t=-t),Q(t<=67108863,"Number is too big");var s=0|this.words[0];e=s===t?0:s<t?-1:1}return 0!==this.negative?0|-e:e},s.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},s.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,Q=this.length-1;Q>=0;Q--){var B=0|this.words[Q],s=0|t.words[Q];if(B!==s){B<s?e=-1:B>s&&(e=1);break}}return e},s.prototype.gtn=function(t){return 1===this.cmpn(t)},s.prototype.gt=function(t){return 1===this.cmp(t)},s.prototype.gten=function(t){return this.cmpn(t)>=0},s.prototype.gte=function(t){return this.cmp(t)>=0},s.prototype.ltn=function(t){return-1===this.cmpn(t)},s.prototype.lt=function(t){return-1===this.cmp(t)},s.prototype.lten=function(t){return this.cmpn(t)<=0},s.prototype.lte=function(t){return this.cmp(t)<=0},s.prototype.eqn=function(t){return 0===this.cmpn(t)},s.prototype.eq=function(t){return 0===this.cmp(t)},s.red=function(t){return new m(t)},s.prototype.toRed=function(t){return Q(!this.red,"Already a number in reduction context"),Q(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},s.prototype.fromRed=function(){return Q(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},s.prototype._forceRed=function(t){return this.red=t,this},s.prototype.forceRed=function(t){return Q(!this.red,"Already a number in reduction context"),this._forceRed(t)},s.prototype.redAdd=function(t){return Q(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},s.prototype.redIAdd=function(t){return Q(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},s.prototype.redSub=function(t){return Q(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},s.prototype.redISub=function(t){return Q(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},s.prototype.redShl=function(t){return Q(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},s.prototype.redMul=function(t){return Q(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},s.prototype.redIMul=function(t){return Q(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},s.prototype.redSqr=function(){return Q(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},s.prototype.redISqr=function(){return Q(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},s.prototype.redSqrt=function(){return Q(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},s.prototype.redInvm=function(){return Q(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},s.prototype.redNeg=function(){return Q(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},s.prototype.redPow=function(t){return Q(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var d={k256:null,p224:null,p192:null,p25519:null};function u(t,e){this.name=t,this.p=new s(e,16),this.n=this.p.bitLength(),this.k=new s(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function C(){u.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function y(){u.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function S(){u.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function b(){u.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function m(t){if("string"==typeof t){var e=s._prime(t);this.m=e.p,this.prime=e}else Q(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function G(t){m.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new s(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}u.prototype._tmp=function(){var t=new s(null);return t.words=new Array(Math.ceil(this.n/13)),t},u.prototype.ireduce=function(t){var e,Q=t;do{this.split(Q,this.tmp),e=(Q=(Q=this.imulK(Q)).iadd(this.tmp)).bitLength()}while(e>this.n);var B=e<this.n?-1:Q.ucmp(this.p);return 0===B?(Q.words[0]=0,Q.length=1):B>0?Q.isub(this.p):void 0!==Q.strip?Q.strip():Q._strip(),Q},u.prototype.split=function(t,e){t.iushrn(this.n,0,e)},u.prototype.imulK=function(t){return t.imul(this.k)},B(C,u),C.prototype.split=function(t,e){for(var Q=4194303,B=Math.min(t.length,9),s=0;s<B;s++)e.words[s]=t.words[s];if(e.length=B,t.length<=9)return t.words[0]=0,void(t.length=1);var F=t.words[9];for(e.words[e.length++]=F&Q,s=10;s<t.length;s++){var U=0|t.words[s];t.words[s-10]=(U&Q)<<4|F>>>22,F=U}F>>>=22,t.words[s-10]=F,0===F&&t.length>10?t.length-=10:t.length-=9},C.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,Q=0;Q<t.length;Q++){var B=0|t.words[Q];e+=977*B,t.words[Q]=67108863&e,e=64*B+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},B(y,u),B(S,u),B(b,u),b.prototype.imulK=function(t){for(var e=0,Q=0;Q<t.length;Q++){var B=19*(0|t.words[Q])+e,s=67108863&B;B>>>=26,t.words[Q]=s,e=B}return 0!==e&&(t.words[t.length++]=e),t},s._prime=function(t){if(d[t])return d[t];var e;if("k256"===t)e=new C;else if("p224"===t)e=new y;else if("p192"===t)e=new S;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new b}return d[t]=e,e},m.prototype._verify1=function(t){Q(0===t.negative,"red works only with positives"),Q(t.red,"red works only with red numbers")},m.prototype._verify2=function(t,e){Q(0==(t.negative|e.negative),"red works only with positives"),Q(t.red&&t.red===e.red,"red works only with red numbers")},m.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},m.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},m.prototype.add=function(t,e){this._verify2(t,e);var Q=t.add(e);return Q.cmp(this.m)>=0&&Q.isub(this.m),Q._forceRed(this)},m.prototype.iadd=function(t,e){this._verify2(t,e);var Q=t.iadd(e);return Q.cmp(this.m)>=0&&Q.isub(this.m),Q},m.prototype.sub=function(t,e){this._verify2(t,e);var Q=t.sub(e);return Q.cmpn(0)<0&&Q.iadd(this.m),Q._forceRed(this)},m.prototype.isub=function(t,e){this._verify2(t,e);var Q=t.isub(e);return Q.cmpn(0)<0&&Q.iadd(this.m),Q},m.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},m.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},m.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},m.prototype.isqr=function(t){return this.imul(t,t.clone())},m.prototype.sqr=function(t){return this.mul(t,t)},m.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(Q(e%2==1),3===e){var B=this.m.add(new s(1)).iushrn(2);return this.pow(t,B)}for(var F=this.m.subn(1),U=0;!F.isZero()&&0===F.andln(1);)U++,F.iushrn(1);Q(!F.isZero());var n=new s(1).toRed(this),c=n.redNeg(),o=this.m.subn(1).iushrn(1),g=this.m.bitLength();for(g=new s(2*g*g).toRed(this);0!==this.pow(g,o).cmp(c);)g.redIAdd(c);for(var l=this.pow(g,F),I=this.pow(t,F.addn(1).iushrn(1)),i=this.pow(t,F),r=U;0!==i.cmp(n);){for(var a=i,d=0;0!==a.cmp(n);d++)a=a.redSqr();Q(d<r);var u=this.pow(l,new s(1).iushln(r-d-1));I=I.redMul(u),l=u.redSqr(),i=i.redMul(l),r=d}return I},m.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},m.prototype.pow=function(t,e){if(e.isZero())return new s(1).toRed(this);if(0===e.cmpn(1))return t.clone();var Q=new Array(16);Q[0]=new s(1).toRed(this),Q[1]=t;for(var B=2;B<Q.length;B++)Q[B]=this.mul(Q[B-1],t);var F=Q[0],U=0,n=0,c=e.bitLength()%26;for(0===c&&(c=26),B=e.length-1;B>=0;B--){for(var o=e.words[B],g=c-1;g>=0;g--){var l=o>>g&1;F!==Q[0]&&(F=this.sqr(F)),0!==l||0!==U?(U<<=1,U|=l,(4==++n||0===B&&0===g)&&(F=this.mul(F,Q[U]),n=0,U=0)):n=0}c=26}return F},m.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},m.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},s.mont=function(t){return new G(t)},B(G,m),G.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},G.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},G.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var Q=t.imul(e),B=Q.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),s=Q.isub(B).iushrn(this.shift),F=s;return s.cmp(this.m)>=0?F=s.isub(this.m):s.cmpn(0)<0&&(F=s.iadd(this.m)),F._forceRed(this)},G.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new s(0)._forceRed(this);var Q=t.mul(e),B=Q.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),F=Q.isub(B).iushrn(this.shift),U=F;return F.cmp(this.m)>=0?U=F.isub(this.m):F.cmpn(0)<0&&(U=F.iadd(this.m)),U._forceRed(this)},G.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(bn,commonjsGlobal);var minimalisticAssert=assert$f;function assert$f(t,e){if(!t)throw new Error(e||"Assertion failed")}assert$f.equal=function(t,e,Q){if(t!=e)throw new Error(Q||"Assertion failed: "+t+" != "+e)};var utils$l={};!function(t){var e=utils$l;function Q(t){return 1===t.length?"0"+t:t}function B(t){for(var e="",B=0;B<t.length;B++)e+=Q(t[B].toString(16));return e}e.toArray=function(t,e){if(Array.isArray(t))return t.slice();if(!t)return[];var Q=[];if("string"!=typeof t){for(var B=0;B<t.length;B++)Q[B]=0|t[B];return Q}if("hex"===e){(t=t.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(t="0"+t);for(B=0;B<t.length;B+=2)Q.push(parseInt(t[B]+t[B+1],16))}else for(B=0;B<t.length;B++){var s=t.charCodeAt(B),F=s>>8,U=255&s;F?Q.push(F,U):Q.push(U)}return Q},e.zero2=Q,e.toHex=B,e.encode=function(t,e){return"hex"===e?B(t):t}}(),function(t){var e=utils$m,Q=bn.exports,B=minimalisticAssert,s=utils$l;e.assert=B,e.toArray=s.toArray,e.zero2=s.zero2,e.toHex=s.toHex,e.encode=s.encode,e.getNAF=function(t,e,Q){var B=new Array(Math.max(t.bitLength(),Q)+1);B.fill(0);for(var s=1<<e+1,F=t.clone(),U=0;U<B.length;U++){var n,c=F.andln(s-1);F.isOdd()?(n=c>(s>>1)-1?(s>>1)-c:c,F.isubn(n)):n=0,B[U]=n,F.iushrn(1)}return B},e.getJSF=function(t,e){var Q=[[],[]];t=t.clone(),e=e.clone();for(var B,s=0,F=0;t.cmpn(-s)>0||e.cmpn(-F)>0;){var U,n,c=t.andln(3)+s&3,o=e.andln(3)+F&3;3===c&&(c=-1),3===o&&(o=-1),U=0==(1&c)?0:3!==(B=t.andln(7)+s&7)&&5!==B||2!==o?c:-c,Q[0].push(U),n=0==(1&o)?0:3!==(B=e.andln(7)+F&7)&&5!==B||2!==c?o:-o,Q[1].push(n),2*s===U+1&&(s=1-s),2*F===n+1&&(F=1-F),t.iushrn(1),e.iushrn(1)}return Q},e.cachedProperty=function(t,e,Q){var B="_"+e;t.prototype[e]=function(){return void 0!==this[B]?this[B]:this[B]=Q.call(this)}},e.parseBytes=function(t){return"string"==typeof t?e.toArray(t,"hex"):t},e.intFromLE=function(t){return new Q(t,"hex","le")}}();var brorand={exports:{}},r$1;function Rand(t){this.rand=t}if(brorand.exports=function(t){return r$1||(r$1=new Rand(null)),r$1.generate(t)},brorand.exports.Rand=Rand,Rand.prototype.generate=function(t){return this._rand(t)},Rand.prototype._rand=function(t){if(this.rand.getBytes)return this.rand.getBytes(t);for(var e=new Uint8Array(t),Q=0;Q<e.length;Q++)e[Q]=this.rand.getByte();return e},"object"==typeof self)self.crypto&&self.crypto.getRandomValues?Rand.prototype._rand=function(t){var e=new Uint8Array(t);return self.crypto.getRandomValues(e),e}:self.msCrypto&&self.msCrypto.getRandomValues?Rand.prototype._rand=function(t){var e=new Uint8Array(t);return self.msCrypto.getRandomValues(e),e}:"object"==typeof window&&(Rand.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var crypto$1=require("crypto");if("function"!=typeof crypto$1.randomBytes)throw new Error("Not supported");Rand.prototype._rand=function(t){return crypto$1.randomBytes(t)}}catch(t){}var curve={},BN$7=bn.exports,utils$k=utils$m,getNAF=utils$k.getNAF,getJSF=utils$k.getJSF,assert$e=utils$k.assert;function BaseCurve(t,e){this.type=t,this.p=new BN$7(e.p,16),this.red=e.prime?BN$7.red(e.prime):BN$7.mont(this.p),this.zero=new BN$7(0).toRed(this.red),this.one=new BN$7(1).toRed(this.red),this.two=new BN$7(2).toRed(this.red),this.n=e.n&&new BN$7(e.n,16),this.g=e.g&&this.pointFromJSON(e.g,e.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var Q=this.n&&this.p.div(this.n);!Q||Q.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}var base=BaseCurve;function BasePoint(t,e){this.curve=t,this.type=e,this.precomputed=null}BaseCurve.prototype.point=function(){throw new Error("Not implemented")},BaseCurve.prototype.validate=function(){throw new Error("Not implemented")},BaseCurve.prototype._fixedNafMul=function(t,e){assert$e(t.precomputed);var Q=t._getDoubles(),B=getNAF(e,1,this._bitLength),s=(1<<Q.step+1)-(Q.step%2==0?2:1);s/=3;var F,U,n=[];for(F=0;F<B.length;F+=Q.step){U=0;for(var c=F+Q.step-1;c>=F;c--)U=(U<<1)+B[c];n.push(U)}for(var o=this.jpoint(null,null,null),g=this.jpoint(null,null,null),l=s;l>0;l--){for(F=0;F<n.length;F++)(U=n[F])===l?g=g.mixedAdd(Q.points[F]):U===-l&&(g=g.mixedAdd(Q.points[F].neg()));o=o.add(g)}return o.toP()},BaseCurve.prototype._wnafMul=function(t,e){var Q=4,B=t._getNAFPoints(Q);Q=B.wnd;for(var s=B.points,F=getNAF(e,Q,this._bitLength),U=this.jpoint(null,null,null),n=F.length-1;n>=0;n--){for(var c=0;n>=0&&0===F[n];n--)c++;if(n>=0&&c++,U=U.dblp(c),n<0)break;var o=F[n];assert$e(0!==o),U="affine"===t.type?o>0?U.mixedAdd(s[o-1>>1]):U.mixedAdd(s[-o-1>>1].neg()):o>0?U.add(s[o-1>>1]):U.add(s[-o-1>>1].neg())}return"affine"===t.type?U.toP():U},BaseCurve.prototype._wnafMulAdd=function(t,e,Q,B,s){var F,U,n,c=this._wnafT1,o=this._wnafT2,g=this._wnafT3,l=0;for(F=0;F<B;F++){var I=(n=e[F])._getNAFPoints(t);c[F]=I.wnd,o[F]=I.points}for(F=B-1;F>=1;F-=2){var i=F-1,r=F;if(1===c[i]&&1===c[r]){var a=[e[i],null,null,e[r]];0===e[i].y.cmp(e[r].y)?(a[1]=e[i].add(e[r]),a[2]=e[i].toJ().mixedAdd(e[r].neg())):0===e[i].y.cmp(e[r].y.redNeg())?(a[1]=e[i].toJ().mixedAdd(e[r]),a[2]=e[i].add(e[r].neg())):(a[1]=e[i].toJ().mixedAdd(e[r]),a[2]=e[i].toJ().mixedAdd(e[r].neg()));var d=[-3,-1,-5,-7,0,7,5,1,3],u=getJSF(Q[i],Q[r]);for(l=Math.max(u[0].length,l),g[i]=new Array(l),g[r]=new Array(l),U=0;U<l;U++){var C=0|u[0][U],y=0|u[1][U];g[i][U]=d[3*(C+1)+(y+1)],g[r][U]=0,o[i]=a}}else g[i]=getNAF(Q[i],c[i],this._bitLength),g[r]=getNAF(Q[r],c[r],this._bitLength),l=Math.max(g[i].length,l),l=Math.max(g[r].length,l)}var S=this.jpoint(null,null,null),b=this._wnafT4;for(F=l;F>=0;F--){for(var m=0;F>=0;){var G=!0;for(U=0;U<B;U++)b[U]=0|g[U][F],0!==b[U]&&(G=!1);if(!G)break;m++,F--}if(F>=0&&m++,S=S.dblp(m),F<0)break;for(U=0;U<B;U++){var x=b[U];0!==x&&(x>0?n=o[U][x-1>>1]:x<0&&(n=o[U][-x-1>>1].neg()),S="affine"===n.type?S.mixedAdd(n):S.add(n))}}for(F=0;F<B;F++)o[F]=null;return s?S:S.toP()},BaseCurve.BasePoint=BasePoint,BasePoint.prototype.eq=function(){throw new Error("Not implemented")},BasePoint.prototype.validate=function(){return this.curve.validate(this)},BaseCurve.prototype.decodePoint=function(t,e){t=utils$k.toArray(t,e);var Q=this.p.byteLength();if((4===t[0]||6===t[0]||7===t[0])&&t.length-1==2*Q)return 6===t[0]?assert$e(t[t.length-1]%2==0):7===t[0]&&assert$e(t[t.length-1]%2==1),this.point(t.slice(1,1+Q),t.slice(1+Q,1+2*Q));if((2===t[0]||3===t[0])&&t.length-1===Q)return this.pointFromX(t.slice(1,1+Q),3===t[0]);throw new Error("Unknown point format")},BasePoint.prototype.encodeCompressed=function(t){return this.encode(t,!0)},BasePoint.prototype._encode=function(t){var e=this.curve.p.byteLength(),Q=this.getX().toArray("be",e);return t?[this.getY().isEven()?2:3].concat(Q):[4].concat(Q,this.getY().toArray("be",e))},BasePoint.prototype.encode=function(t,e){return utils$k.encode(this._encode(e),t)},BasePoint.prototype.precompute=function(t){if(this.precomputed)return this;var e={doubles:null,naf:null,beta:null};return e.naf=this._getNAFPoints(8),e.doubles=this._getDoubles(4,t),e.beta=this._getBeta(),this.precomputed=e,this},BasePoint.prototype._hasDoubles=function(t){if(!this.precomputed)return!1;var e=this.precomputed.doubles;return!!e&&e.points.length>=Math.ceil((t.bitLength()+1)/e.step)},BasePoint.prototype._getDoubles=function(t,e){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var Q=[this],B=this,s=0;s<e;s+=t){for(var F=0;F<t;F++)B=B.dbl();Q.push(B)}return{step:t,points:Q}},BasePoint.prototype._getNAFPoints=function(t){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var e=[this],Q=(1<<t)-1,B=1===Q?null:this.dbl(),s=1;s<Q;s++)e[s]=e[s-1].add(B);return{wnd:t,points:e}},BasePoint.prototype._getBeta=function(){return null},BasePoint.prototype.dblp=function(t){for(var e=this,Q=0;Q<t;Q++)e=e.dbl();return e};var inherits_browser={exports:{}};"function"==typeof Object.create?inherits_browser.exports=function(t,e){e&&(t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}))}:inherits_browser.exports=function(t,e){if(e){t.super_=e;var Q=function(){};Q.prototype=e.prototype,t.prototype=new Q,t.prototype.constructor=t}};var utils$j=utils$m,BN$6=bn.exports,inherits$3=inherits_browser.exports,Base$2=base,assert$d=utils$j.assert;function ShortCurve(t){Base$2.call(this,"short",t),this.a=new BN$6(t.a,16).toRed(this.red),this.b=new BN$6(t.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(t),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}inherits$3(ShortCurve,Base$2);var short=ShortCurve;function Point$2(t,e,Q,B){Base$2.BasePoint.call(this,t,"affine"),null===e&&null===Q?(this.x=null,this.y=null,this.inf=!0):(this.x=new BN$6(e,16),this.y=new BN$6(Q,16),B&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function JPoint(t,e,Q,B){Base$2.BasePoint.call(this,t,"jacobian"),null===e&&null===Q&&null===B?(this.x=this.curve.one,this.y=this.curve.one,this.z=new BN$6(0)):(this.x=new BN$6(e,16),this.y=new BN$6(Q,16),this.z=new BN$6(B,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}ShortCurve.prototype._getEndomorphism=function(t){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var e,Q;if(t.beta)e=new BN$6(t.beta,16).toRed(this.red);else{var B=this._getEndoRoots(this.p);e=(e=B[0].cmp(B[1])<0?B[0]:B[1]).toRed(this.red)}if(t.lambda)Q=new BN$6(t.lambda,16);else{var s=this._getEndoRoots(this.n);0===this.g.mul(s[0]).x.cmp(this.g.x.redMul(e))?Q=s[0]:(Q=s[1],assert$d(0===this.g.mul(Q).x.cmp(this.g.x.redMul(e))))}return{beta:e,lambda:Q,basis:t.basis?t.basis.map((function(t){return{a:new BN$6(t.a,16),b:new BN$6(t.b,16)}})):this._getEndoBasis(Q)}}},ShortCurve.prototype._getEndoRoots=function(t){var e=t===this.p?this.red:BN$6.mont(t),Q=new BN$6(2).toRed(e).redInvm(),B=Q.redNeg(),s=new BN$6(3).toRed(e).redNeg().redSqrt().redMul(Q);return[B.redAdd(s).fromRed(),B.redSub(s).fromRed()]},ShortCurve.prototype._getEndoBasis=function(t){for(var e,Q,B,s,F,U,n,c,o,g=this.n.ushrn(Math.floor(this.n.bitLength()/2)),l=t,I=this.n.clone(),i=new BN$6(1),r=new BN$6(0),a=new BN$6(0),d=new BN$6(1),u=0;0!==l.cmpn(0);){var C=I.div(l);c=I.sub(C.mul(l)),o=a.sub(C.mul(i));var y=d.sub(C.mul(r));if(!B&&c.cmp(g)<0)e=n.neg(),Q=i,B=c.neg(),s=o;else if(B&&2==++u)break;n=c,I=l,l=c,a=i,i=o,d=r,r=y}F=c.neg(),U=o;var S=B.sqr().add(s.sqr());return F.sqr().add(U.sqr()).cmp(S)>=0&&(F=e,U=Q),B.negative&&(B=B.neg(),s=s.neg()),F.negative&&(F=F.neg(),U=U.neg()),[{a:B,b:s},{a:F,b:U}]},ShortCurve.prototype._endoSplit=function(t){var e=this.endo.basis,Q=e[0],B=e[1],s=B.b.mul(t).divRound(this.n),F=Q.b.neg().mul(t).divRound(this.n),U=s.mul(Q.a),n=F.mul(B.a),c=s.mul(Q.b),o=F.mul(B.b);return{k1:t.sub(U).sub(n),k2:c.add(o).neg()}},ShortCurve.prototype.pointFromX=function(t,e){(t=new BN$6(t,16)).red||(t=t.toRed(this.red));var Q=t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),B=Q.redSqrt();if(0!==B.redSqr().redSub(Q).cmp(this.zero))throw new Error("invalid point");var s=B.fromRed().isOdd();return(e&&!s||!e&&s)&&(B=B.redNeg()),this.point(t,B)},ShortCurve.prototype.validate=function(t){if(t.inf)return!0;var e=t.x,Q=t.y,B=this.a.redMul(e),s=e.redSqr().redMul(e).redIAdd(B).redIAdd(this.b);return 0===Q.redSqr().redISub(s).cmpn(0)},ShortCurve.prototype._endoWnafMulAdd=function(t,e,Q){for(var B=this._endoWnafT1,s=this._endoWnafT2,F=0;F<t.length;F++){var U=this._endoSplit(e[F]),n=t[F],c=n._getBeta();U.k1.negative&&(U.k1.ineg(),n=n.neg(!0)),U.k2.negative&&(U.k2.ineg(),c=c.neg(!0)),B[2*F]=n,B[2*F+1]=c,s[2*F]=U.k1,s[2*F+1]=U.k2}for(var o=this._wnafMulAdd(1,B,s,2*F,Q),g=0;g<2*F;g++)B[g]=null,s[g]=null;return o},inherits$3(Point$2,Base$2.BasePoint),ShortCurve.prototype.point=function(t,e,Q){return new Point$2(this,t,e,Q)},ShortCurve.prototype.pointFromJSON=function(t,e){return Point$2.fromJSON(this,t,e)},Point$2.prototype._getBeta=function(){if(this.curve.endo){var t=this.precomputed;if(t&&t.beta)return t.beta;var e=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(t){var Q=this.curve,B=function(t){return Q.point(t.x.redMul(Q.endo.beta),t.y)};t.beta=e,e.precomputed={beta:null,naf:t.naf&&{wnd:t.naf.wnd,points:t.naf.points.map(B)},doubles:t.doubles&&{step:t.doubles.step,points:t.doubles.points.map(B)}}}return e}},Point$2.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},Point$2.fromJSON=function(t,e,Q){"string"==typeof e&&(e=JSON.parse(e));var B=t.point(e[0],e[1],Q);if(!e[2])return B;function s(e){return t.point(e[0],e[1],Q)}var F=e[2];return B.precomputed={beta:null,doubles:F.doubles&&{step:F.doubles.step,points:[B].concat(F.doubles.points.map(s))},naf:F.naf&&{wnd:F.naf.wnd,points:[B].concat(F.naf.points.map(s))}},B},Point$2.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},Point$2.prototype.isInfinity=function(){return this.inf},Point$2.prototype.add=function(t){if(this.inf)return t;if(t.inf)return this;if(this.eq(t))return this.dbl();if(this.neg().eq(t))return this.curve.point(null,null);if(0===this.x.cmp(t.x))return this.curve.point(null,null);var e=this.y.redSub(t.y);0!==e.cmpn(0)&&(e=e.redMul(this.x.redSub(t.x).redInvm()));var Q=e.redSqr().redISub(this.x).redISub(t.x),B=e.redMul(this.x.redSub(Q)).redISub(this.y);return this.curve.point(Q,B)},Point$2.prototype.dbl=function(){if(this.inf)return this;var t=this.y.redAdd(this.y);if(0===t.cmpn(0))return this.curve.point(null,null);var e=this.curve.a,Q=this.x.redSqr(),B=t.redInvm(),s=Q.redAdd(Q).redIAdd(Q).redIAdd(e).redMul(B),F=s.redSqr().redISub(this.x.redAdd(this.x)),U=s.redMul(this.x.redSub(F)).redISub(this.y);return this.curve.point(F,U)},Point$2.prototype.getX=function(){return this.x.fromRed()},Point$2.prototype.getY=function(){return this.y.fromRed()},Point$2.prototype.mul=function(t){return t=new BN$6(t,16),this.isInfinity()?this:this._hasDoubles(t)?this.curve._fixedNafMul(this,t):this.curve.endo?this.curve._endoWnafMulAdd([this],[t]):this.curve._wnafMul(this,t)},Point$2.prototype.mulAdd=function(t,e,Q){var B=[this,e],s=[t,Q];return this.curve.endo?this.curve._endoWnafMulAdd(B,s):this.curve._wnafMulAdd(1,B,s,2)},Point$2.prototype.jmulAdd=function(t,e,Q){var B=[this,e],s=[t,Q];return this.curve.endo?this.curve._endoWnafMulAdd(B,s,!0):this.curve._wnafMulAdd(1,B,s,2,!0)},Point$2.prototype.eq=function(t){return this===t||this.inf===t.inf&&(this.inf||0===this.x.cmp(t.x)&&0===this.y.cmp(t.y))},Point$2.prototype.neg=function(t){if(this.inf)return this;var e=this.curve.point(this.x,this.y.redNeg());if(t&&this.precomputed){var Q=this.precomputed,B=function(t){return t.neg()};e.precomputed={naf:Q.naf&&{wnd:Q.naf.wnd,points:Q.naf.points.map(B)},doubles:Q.doubles&&{step:Q.doubles.step,points:Q.doubles.points.map(B)}}}return e},Point$2.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},inherits$3(JPoint,Base$2.BasePoint),ShortCurve.prototype.jpoint=function(t,e,Q){return new JPoint(this,t,e,Q)},JPoint.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var t=this.z.redInvm(),e=t.redSqr(),Q=this.x.redMul(e),B=this.y.redMul(e).redMul(t);return this.curve.point(Q,B)},JPoint.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},JPoint.prototype.add=function(t){if(this.isInfinity())return t;if(t.isInfinity())return this;var e=t.z.redSqr(),Q=this.z.redSqr(),B=this.x.redMul(e),s=t.x.redMul(Q),F=this.y.redMul(e.redMul(t.z)),U=t.y.redMul(Q.redMul(this.z)),n=B.redSub(s),c=F.redSub(U);if(0===n.cmpn(0))return 0!==c.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var o=n.redSqr(),g=o.redMul(n),l=B.redMul(o),I=c.redSqr().redIAdd(g).redISub(l).redISub(l),i=c.redMul(l.redISub(I)).redISub(F.redMul(g)),r=this.z.redMul(t.z).redMul(n);return this.curve.jpoint(I,i,r)},JPoint.prototype.mixedAdd=function(t){if(this.isInfinity())return t.toJ();if(t.isInfinity())return this;var e=this.z.redSqr(),Q=this.x,B=t.x.redMul(e),s=this.y,F=t.y.redMul(e).redMul(this.z),U=Q.redSub(B),n=s.redSub(F);if(0===U.cmpn(0))return 0!==n.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var c=U.redSqr(),o=c.redMul(U),g=Q.redMul(c),l=n.redSqr().redIAdd(o).redISub(g).redISub(g),I=n.redMul(g.redISub(l)).redISub(s.redMul(o)),i=this.z.redMul(U);return this.curve.jpoint(l,I,i)},JPoint.prototype.dblp=function(t){if(0===t)return this;if(this.isInfinity())return this;if(!t)return this.dbl();var e;if(this.curve.zeroA||this.curve.threeA){var Q=this;for(e=0;e<t;e++)Q=Q.dbl();return Q}var B=this.curve.a,s=this.curve.tinv,F=this.x,U=this.y,n=this.z,c=n.redSqr().redSqr(),o=U.redAdd(U);for(e=0;e<t;e++){var g=F.redSqr(),l=o.redSqr(),I=l.redSqr(),i=g.redAdd(g).redIAdd(g).redIAdd(B.redMul(c)),r=F.redMul(l),a=i.redSqr().redISub(r.redAdd(r)),d=r.redISub(a),u=i.redMul(d);u=u.redIAdd(u).redISub(I);var C=o.redMul(n);e+1<t&&(c=c.redMul(I)),F=a,n=C,o=u}return this.curve.jpoint(F,o.redMul(s),n)},JPoint.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},JPoint.prototype._zeroDbl=function(){var t,e,Q;if(this.zOne){var B=this.x.redSqr(),s=this.y.redSqr(),F=s.redSqr(),U=this.x.redAdd(s).redSqr().redISub(B).redISub(F);U=U.redIAdd(U);var n=B.redAdd(B).redIAdd(B),c=n.redSqr().redISub(U).redISub(U),o=F.redIAdd(F);o=(o=o.redIAdd(o)).redIAdd(o),t=c,e=n.redMul(U.redISub(c)).redISub(o),Q=this.y.redAdd(this.y)}else{var g=this.x.redSqr(),l=this.y.redSqr(),I=l.redSqr(),i=this.x.redAdd(l).redSqr().redISub(g).redISub(I);i=i.redIAdd(i);var r=g.redAdd(g).redIAdd(g),a=r.redSqr(),d=I.redIAdd(I);d=(d=d.redIAdd(d)).redIAdd(d),t=a.redISub(i).redISub(i),e=r.redMul(i.redISub(t)).redISub(d),Q=(Q=this.y.redMul(this.z)).redIAdd(Q)}return this.curve.jpoint(t,e,Q)},JPoint.prototype._threeDbl=function(){var t,e,Q;if(this.zOne){var B=this.x.redSqr(),s=this.y.redSqr(),F=s.redSqr(),U=this.x.redAdd(s).redSqr().redISub(B).redISub(F);U=U.redIAdd(U);var n=B.redAdd(B).redIAdd(B).redIAdd(this.curve.a),c=n.redSqr().redISub(U).redISub(U);t=c;var o=F.redIAdd(F);o=(o=o.redIAdd(o)).redIAdd(o),e=n.redMul(U.redISub(c)).redISub(o),Q=this.y.redAdd(this.y)}else{var g=this.z.redSqr(),l=this.y.redSqr(),I=this.x.redMul(l),i=this.x.redSub(g).redMul(this.x.redAdd(g));i=i.redAdd(i).redIAdd(i);var r=I.redIAdd(I),a=(r=r.redIAdd(r)).redAdd(r);t=i.redSqr().redISub(a),Q=this.y.redAdd(this.z).redSqr().redISub(l).redISub(g);var d=l.redSqr();d=(d=(d=d.redIAdd(d)).redIAdd(d)).redIAdd(d),e=i.redMul(r.redISub(t)).redISub(d)}return this.curve.jpoint(t,e,Q)},JPoint.prototype._dbl=function(){var t=this.curve.a,e=this.x,Q=this.y,B=this.z,s=B.redSqr().redSqr(),F=e.redSqr(),U=Q.redSqr(),n=F.redAdd(F).redIAdd(F).redIAdd(t.redMul(s)),c=e.redAdd(e),o=(c=c.redIAdd(c)).redMul(U),g=n.redSqr().redISub(o.redAdd(o)),l=o.redISub(g),I=U.redSqr();I=(I=(I=I.redIAdd(I)).redIAdd(I)).redIAdd(I);var i=n.redMul(l).redISub(I),r=Q.redAdd(Q).redMul(B);return this.curve.jpoint(g,i,r)},JPoint.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var t=this.x.redSqr(),e=this.y.redSqr(),Q=this.z.redSqr(),B=e.redSqr(),s=t.redAdd(t).redIAdd(t),F=s.redSqr(),U=this.x.redAdd(e).redSqr().redISub(t).redISub(B),n=(U=(U=(U=U.redIAdd(U)).redAdd(U).redIAdd(U)).redISub(F)).redSqr(),c=B.redIAdd(B);c=(c=(c=c.redIAdd(c)).redIAdd(c)).redIAdd(c);var o=s.redIAdd(U).redSqr().redISub(F).redISub(n).redISub(c),g=e.redMul(o);g=(g=g.redIAdd(g)).redIAdd(g);var l=this.x.redMul(n).redISub(g);l=(l=l.redIAdd(l)).redIAdd(l);var I=this.y.redMul(o.redMul(c.redISub(o)).redISub(U.redMul(n)));I=(I=(I=I.redIAdd(I)).redIAdd(I)).redIAdd(I);var i=this.z.redAdd(U).redSqr().redISub(Q).redISub(n);return this.curve.jpoint(l,I,i)},JPoint.prototype.mul=function(t,e){return t=new BN$6(t,e),this.curve._wnafMul(this,t)},JPoint.prototype.eq=function(t){if("affine"===t.type)return this.eq(t.toJ());if(this===t)return!0;var e=this.z.redSqr(),Q=t.z.redSqr();if(0!==this.x.redMul(Q).redISub(t.x.redMul(e)).cmpn(0))return!1;var B=e.redMul(this.z),s=Q.redMul(t.z);return 0===this.y.redMul(s).redISub(t.y.redMul(B)).cmpn(0)},JPoint.prototype.eqXToP=function(t){var e=this.z.redSqr(),Q=t.toRed(this.curve.red).redMul(e);if(0===this.x.cmp(Q))return!0;for(var B=t.clone(),s=this.curve.redN.redMul(e);;){if(B.iadd(this.curve.n),B.cmp(this.curve.p)>=0)return!1;if(Q.redIAdd(s),0===this.x.cmp(Q))return!0}},JPoint.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},JPoint.prototype.isInfinity=function(){return 0===this.z.cmpn(0)};var BN$5=bn.exports,inherits$2=inherits_browser.exports,Base$1=base,utils$i=utils$m;function MontCurve(t){Base$1.call(this,"mont",t),this.a=new BN$5(t.a,16).toRed(this.red),this.b=new BN$5(t.b,16).toRed(this.red),this.i4=new BN$5(4).toRed(this.red).redInvm(),this.two=new BN$5(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}inherits$2(MontCurve,Base$1);var mont=MontCurve;function Point$1(t,e,Q){Base$1.BasePoint.call(this,t,"projective"),null===e&&null===Q?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new BN$5(e,16),this.z=new BN$5(Q,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}MontCurve.prototype.validate=function(t){var e=t.normalize().x,Q=e.redSqr(),B=Q.redMul(e).redAdd(Q.redMul(this.a)).redAdd(e);return 0===B.redSqrt().redSqr().cmp(B)},inherits$2(Point$1,Base$1.BasePoint),MontCurve.prototype.decodePoint=function(t,e){return this.point(utils$i.toArray(t,e),1)},MontCurve.prototype.point=function(t,e){return new Point$1(this,t,e)},MontCurve.prototype.pointFromJSON=function(t){return Point$1.fromJSON(this,t)},Point$1.prototype.precompute=function(){},Point$1.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},Point$1.fromJSON=function(t,e){return new Point$1(t,e[0],e[1]||t.one)},Point$1.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},Point$1.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},Point$1.prototype.dbl=function(){var t=this.x.redAdd(this.z).redSqr(),e=this.x.redSub(this.z).redSqr(),Q=t.redSub(e),B=t.redMul(e),s=Q.redMul(e.redAdd(this.curve.a24.redMul(Q)));return this.curve.point(B,s)},Point$1.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},Point$1.prototype.diffAdd=function(t,e){var Q=this.x.redAdd(this.z),B=this.x.redSub(this.z),s=t.x.redAdd(t.z),F=t.x.redSub(t.z).redMul(Q),U=s.redMul(B),n=e.z.redMul(F.redAdd(U).redSqr()),c=e.x.redMul(F.redISub(U).redSqr());return this.curve.point(n,c)},Point$1.prototype.mul=function(t){for(var e=t.clone(),Q=this,B=this.curve.point(null,null),s=[];0!==e.cmpn(0);e.iushrn(1))s.push(e.andln(1));for(var F=s.length-1;F>=0;F--)0===s[F]?(Q=Q.diffAdd(B,this),B=B.dbl()):(B=Q.diffAdd(B,this),Q=Q.dbl());return B},Point$1.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},Point$1.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},Point$1.prototype.eq=function(t){return 0===this.getX().cmp(t.getX())},Point$1.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},Point$1.prototype.getX=function(){return this.normalize(),this.x.fromRed()};var utils$h=utils$m,BN$4=bn.exports,inherits$1=inherits_browser.exports,Base=base,assert$c=utils$h.assert;function EdwardsCurve(t){this.twisted=1!=(0|t.a),this.mOneA=this.twisted&&-1==(0|t.a),this.extended=this.mOneA,Base.call(this,"edwards",t),this.a=new BN$4(t.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new BN$4(t.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new BN$4(t.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),assert$c(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|t.c)}inherits$1(EdwardsCurve,Base);var edwards=EdwardsCurve;function Point(t,e,Q,B,s){Base.BasePoint.call(this,t,"projective"),null===e&&null===Q&&null===B?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new BN$4(e,16),this.y=new BN$4(Q,16),this.z=B?new BN$4(B,16):this.curve.one,this.t=s&&new BN$4(s,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}EdwardsCurve.prototype._mulA=function(t){return this.mOneA?t.redNeg():this.a.redMul(t)},EdwardsCurve.prototype._mulC=function(t){return this.oneC?t:this.c.redMul(t)},EdwardsCurve.prototype.jpoint=function(t,e,Q,B){return this.point(t,e,Q,B)},EdwardsCurve.prototype.pointFromX=function(t,e){(t=new BN$4(t,16)).red||(t=t.toRed(this.red));var Q=t.redSqr(),B=this.c2.redSub(this.a.redMul(Q)),s=this.one.redSub(this.c2.redMul(this.d).redMul(Q)),F=B.redMul(s.redInvm()),U=F.redSqrt();if(0!==U.redSqr().redSub(F).cmp(this.zero))throw new Error("invalid point");var n=U.fromRed().isOdd();return(e&&!n||!e&&n)&&(U=U.redNeg()),this.point(t,U)},EdwardsCurve.prototype.pointFromY=function(t,e){(t=new BN$4(t,16)).red||(t=t.toRed(this.red));var Q=t.redSqr(),B=Q.redSub(this.c2),s=Q.redMul(this.d).redMul(this.c2).redSub(this.a),F=B.redMul(s.redInvm());if(0===F.cmp(this.zero)){if(e)throw new Error("invalid point");return this.point(this.zero,t)}var U=F.redSqrt();if(0!==U.redSqr().redSub(F).cmp(this.zero))throw new Error("invalid point");return U.fromRed().isOdd()!==e&&(U=U.redNeg()),this.point(U,t)},EdwardsCurve.prototype.validate=function(t){if(t.isInfinity())return!0;t.normalize();var e=t.x.redSqr(),Q=t.y.redSqr(),B=e.redMul(this.a).redAdd(Q),s=this.c2.redMul(this.one.redAdd(this.d.redMul(e).redMul(Q)));return 0===B.cmp(s)},inherits$1(Point,Base.BasePoint),EdwardsCurve.prototype.pointFromJSON=function(t){return Point.fromJSON(this,t)},EdwardsCurve.prototype.point=function(t,e,Q,B){return new Point(this,t,e,Q,B)},Point.fromJSON=function(t,e){return new Point(t,e[0],e[1],e[2])},Point.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},Point.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&(0===this.y.cmp(this.z)||this.zOne&&0===this.y.cmp(this.curve.c))},Point.prototype._extDbl=function(){var t=this.x.redSqr(),e=this.y.redSqr(),Q=this.z.redSqr();Q=Q.redIAdd(Q);var B=this.curve._mulA(t),s=this.x.redAdd(this.y).redSqr().redISub(t).redISub(e),F=B.redAdd(e),U=F.redSub(Q),n=B.redSub(e),c=s.redMul(U),o=F.redMul(n),g=s.redMul(n),l=U.redMul(F);return this.curve.point(c,o,l,g)},Point.prototype._projDbl=function(){var t,e,Q,B,s,F,U=this.x.redAdd(this.y).redSqr(),n=this.x.redSqr(),c=this.y.redSqr();if(this.curve.twisted){var o=(B=this.curve._mulA(n)).redAdd(c);this.zOne?(t=U.redSub(n).redSub(c).redMul(o.redSub(this.curve.two)),e=o.redMul(B.redSub(c)),Q=o.redSqr().redSub(o).redSub(o)):(s=this.z.redSqr(),F=o.redSub(s).redISub(s),t=U.redSub(n).redISub(c).redMul(F),e=o.redMul(B.redSub(c)),Q=o.redMul(F))}else B=n.redAdd(c),s=this.curve._mulC(this.z).redSqr(),F=B.redSub(s).redSub(s),t=this.curve._mulC(U.redISub(B)).redMul(F),e=this.curve._mulC(B).redMul(n.redISub(c)),Q=B.redMul(F);return this.curve.point(t,e,Q)},Point.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},Point.prototype._extAdd=function(t){var e=this.y.redSub(this.x).redMul(t.y.redSub(t.x)),Q=this.y.redAdd(this.x).redMul(t.y.redAdd(t.x)),B=this.t.redMul(this.curve.dd).redMul(t.t),s=this.z.redMul(t.z.redAdd(t.z)),F=Q.redSub(e),U=s.redSub(B),n=s.redAdd(B),c=Q.redAdd(e),o=F.redMul(U),g=n.redMul(c),l=F.redMul(c),I=U.redMul(n);return this.curve.point(o,g,I,l)},Point.prototype._projAdd=function(t){var e,Q,B=this.z.redMul(t.z),s=B.redSqr(),F=this.x.redMul(t.x),U=this.y.redMul(t.y),n=this.curve.d.redMul(F).redMul(U),c=s.redSub(n),o=s.redAdd(n),g=this.x.redAdd(this.y).redMul(t.x.redAdd(t.y)).redISub(F).redISub(U),l=B.redMul(c).redMul(g);return this.curve.twisted?(e=B.redMul(o).redMul(U.redSub(this.curve._mulA(F))),Q=c.redMul(o)):(e=B.redMul(o).redMul(U.redSub(F)),Q=this.curve._mulC(c).redMul(o)),this.curve.point(l,e,Q)},Point.prototype.add=function(t){return this.isInfinity()?t:t.isInfinity()?this:this.curve.extended?this._extAdd(t):this._projAdd(t)},Point.prototype.mul=function(t){return this._hasDoubles(t)?this.curve._fixedNafMul(this,t):this.curve._wnafMul(this,t)},Point.prototype.mulAdd=function(t,e,Q){return this.curve._wnafMulAdd(1,[this,e],[t,Q],2,!1)},Point.prototype.jmulAdd=function(t,e,Q){return this.curve._wnafMulAdd(1,[this,e],[t,Q],2,!0)},Point.prototype.normalize=function(){if(this.zOne)return this;var t=this.z.redInvm();return this.x=this.x.redMul(t),this.y=this.y.redMul(t),this.t&&(this.t=this.t.redMul(t)),this.z=this.curve.one,this.zOne=!0,this},Point.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},Point.prototype.getX=function(){return this.normalize(),this.x.fromRed()},Point.prototype.getY=function(){return this.normalize(),this.y.fromRed()},Point.prototype.eq=function(t){return this===t||0===this.getX().cmp(t.getX())&&0===this.getY().cmp(t.getY())},Point.prototype.eqXToP=function(t){var e=t.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(e))return!0;for(var Q=t.clone(),B=this.curve.redN.redMul(this.z);;){if(Q.iadd(this.curve.n),Q.cmp(this.curve.p)>=0)return!1;if(e.redIAdd(B),0===this.x.cmp(e))return!0}},Point.prototype.toP=Point.prototype.normalize,Point.prototype.mixedAdd=Point.prototype.add,function(t){var e=t;e.base=base,e.short=short,e.mont=mont,e.edwards=edwards}(curve);var curves$2={},hash$2={},utils$g={},assert$b=minimalisticAssert,inherits=inherits_browser.exports;function isSurrogatePair(t,e){return 55296==(64512&t.charCodeAt(e))&&(!(e<0||e+1>=t.length)&&56320==(64512&t.charCodeAt(e+1)))}function toArray(t,e){if(Array.isArray(t))return t.slice();if(!t)return[];var Q=[];if("string"==typeof t)if(e){if("hex"===e)for((t=t.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(t="0"+t),s=0;s<t.length;s+=2)Q.push(parseInt(t[s]+t[s+1],16))}else for(var B=0,s=0;s<t.length;s++){var F=t.charCodeAt(s);F<128?Q[B++]=F:F<2048?(Q[B++]=F>>6|192,Q[B++]=63&F|128):isSurrogatePair(t,s)?(F=65536+((1023&F)<<10)+(1023&t.charCodeAt(++s)),Q[B++]=F>>18|240,Q[B++]=F>>12&63|128,Q[B++]=F>>6&63|128,Q[B++]=63&F|128):(Q[B++]=F>>12|224,Q[B++]=F>>6&63|128,Q[B++]=63&F|128)}else for(s=0;s<t.length;s++)Q[s]=0|t[s];return Q}function toHex(t){for(var e="",Q=0;Q<t.length;Q++)e+=zero2(t[Q].toString(16));return e}function htonl(t){return(t>>>24|t>>>8&65280|t<<8&16711680|(255&t)<<24)>>>0}function toHex32(t,e){for(var Q="",B=0;B<t.length;B++){var s=t[B];"little"===e&&(s=htonl(s)),Q+=zero8(s.toString(16))}return Q}function zero2(t){return 1===t.length?"0"+t:t}function zero8(t){return 7===t.length?"0"+t:6===t.length?"00"+t:5===t.length?"000"+t:4===t.length?"0000"+t:3===t.length?"00000"+t:2===t.length?"000000"+t:1===t.length?"0000000"+t:t}function join32(t,e,Q,B){var s=Q-e;assert$b(s%4==0);for(var F=new Array(s/4),U=0,n=e;U<F.length;U++,n+=4){var c;c="big"===B?t[n]<<24|t[n+1]<<16|t[n+2]<<8|t[n+3]:t[n+3]<<24|t[n+2]<<16|t[n+1]<<8|t[n],F[U]=c>>>0}return F}function split32(t,e){for(var Q=new Array(4*t.length),B=0,s=0;B<t.length;B++,s+=4){var F=t[B];"big"===e?(Q[s]=F>>>24,Q[s+1]=F>>>16&255,Q[s+2]=F>>>8&255,Q[s+3]=255&F):(Q[s+3]=F>>>24,Q[s+2]=F>>>16&255,Q[s+1]=F>>>8&255,Q[s]=255&F)}return Q}function rotr32$1(t,e){return t>>>e|t<<32-e}function rotl32$2(t,e){return t<<e|t>>>32-e}function sum32$3(t,e){return t+e>>>0}function sum32_3$1(t,e,Q){return t+e+Q>>>0}function sum32_4$2(t,e,Q,B){return t+e+Q+B>>>0}function sum32_5$2(t,e,Q,B,s){return t+e+Q+B+s>>>0}function sum64$1(t,e,Q,B){var s=t[e],F=B+t[e+1]>>>0,U=(F<B?1:0)+Q+s;t[e]=U>>>0,t[e+1]=F}function sum64_hi$1(t,e,Q,B){return(e+B>>>0<e?1:0)+t+Q>>>0}function sum64_lo$1(t,e,Q,B){return e+B>>>0}function sum64_4_hi$1(t,e,Q,B,s,F,U,n){var c=0,o=e;return c+=(o=o+B>>>0)<e?1:0,c+=(o=o+F>>>0)<F?1:0,t+Q+s+U+(c+=(o=o+n>>>0)<n?1:0)>>>0}function sum64_4_lo$1(t,e,Q,B,s,F,U,n){return e+B+F+n>>>0}function sum64_5_hi$1(t,e,Q,B,s,F,U,n,c,o){var g=0,l=e;return g+=(l=l+B>>>0)<e?1:0,g+=(l=l+F>>>0)<F?1:0,g+=(l=l+n>>>0)<n?1:0,t+Q+s+U+c+(g+=(l=l+o>>>0)<o?1:0)>>>0}function sum64_5_lo$1(t,e,Q,B,s,F,U,n,c,o){return e+B+F+n+o>>>0}function rotr64_hi$1(t,e,Q){return(e<<32-Q|t>>>Q)>>>0}function rotr64_lo$1(t,e,Q){return(t<<32-Q|e>>>Q)>>>0}function shr64_hi$1(t,e,Q){return t>>>Q}function shr64_lo$1(t,e,Q){return(t<<32-Q|e>>>Q)>>>0}utils$g.inherits=inherits,utils$g.toArray=toArray,utils$g.toHex=toHex,utils$g.htonl=htonl,utils$g.toHex32=toHex32,utils$g.zero2=zero2,utils$g.zero8=zero8,utils$g.join32=join32,utils$g.split32=split32,utils$g.rotr32=rotr32$1,utils$g.rotl32=rotl32$2,utils$g.sum32=sum32$3,utils$g.sum32_3=sum32_3$1,utils$g.sum32_4=sum32_4$2,utils$g.sum32_5=sum32_5$2,utils$g.sum64=sum64$1,utils$g.sum64_hi=sum64_hi$1,utils$g.sum64_lo=sum64_lo$1,utils$g.sum64_4_hi=sum64_4_hi$1,utils$g.sum64_4_lo=sum64_4_lo$1,utils$g.sum64_5_hi=sum64_5_hi$1,utils$g.sum64_5_lo=sum64_5_lo$1,utils$g.rotr64_hi=rotr64_hi$1,utils$g.rotr64_lo=rotr64_lo$1,utils$g.shr64_hi=shr64_hi$1,utils$g.shr64_lo=shr64_lo$1;var common$5={},utils$f=utils$g,assert$a=minimalisticAssert;function BlockHash$4(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}common$5.BlockHash=BlockHash$4,BlockHash$4.prototype.update=function(t,e){if(t=utils$f.toArray(t,e),this.pending?this.pending=this.pending.concat(t):this.pending=t,this.pendingTotal+=t.length,this.pending.length>=this._delta8){var Q=(t=this.pending).length%this._delta8;this.pending=t.slice(t.length-Q,t.length),0===this.pending.length&&(this.pending=null),t=utils$f.join32(t,0,t.length-Q,this.endian);for(var B=0;B<t.length;B+=this._delta32)this._update(t,B,B+this._delta32)}return this},BlockHash$4.prototype.digest=function(t){return this.update(this._pad()),assert$a(null===this.pending),this._digest(t)},BlockHash$4.prototype._pad=function(){var t=this.pendingTotal,e=this._delta8,Q=e-(t+this.padLength)%e,B=new Array(Q+this.padLength);B[0]=128;for(var s=1;s<Q;s++)B[s]=0;if(t<<=3,"big"===this.endian){for(var F=8;F<this.padLength;F++)B[s++]=0;B[s++]=0,B[s++]=0,B[s++]=0,B[s++]=0,B[s++]=t>>>24&255,B[s++]=t>>>16&255,B[s++]=t>>>8&255,B[s++]=255&t}else for(B[s++]=255&t,B[s++]=t>>>8&255,B[s++]=t>>>16&255,B[s++]=t>>>24&255,B[s++]=0,B[s++]=0,B[s++]=0,B[s++]=0,F=8;F<this.padLength;F++)B[s++]=0;return B};var sha={},common$4={},utils$e=utils$g,rotr32=utils$e.rotr32;function ft_1$1(t,e,Q,B){return 0===t?ch32$1(e,Q,B):1===t||3===t?p32(e,Q,B):2===t?maj32$1(e,Q,B):void 0}function ch32$1(t,e,Q){return t&e^~t&Q}function maj32$1(t,e,Q){return t&e^t&Q^e&Q}function p32(t,e,Q){return t^e^Q}function s0_256$1(t){return rotr32(t,2)^rotr32(t,13)^rotr32(t,22)}function s1_256$1(t){return rotr32(t,6)^rotr32(t,11)^rotr32(t,25)}function g0_256$1(t){return rotr32(t,7)^rotr32(t,18)^t>>>3}function g1_256$1(t){return rotr32(t,17)^rotr32(t,19)^t>>>10}common$4.ft_1=ft_1$1,common$4.ch32=ch32$1,common$4.maj32=maj32$1,common$4.p32=p32,common$4.s0_256=s0_256$1,common$4.s1_256=s1_256$1,common$4.g0_256=g0_256$1,common$4.g1_256=g1_256$1;var utils$d=utils$g,common$3=common$5,shaCommon$1=common$4,rotl32$1=utils$d.rotl32,sum32$2=utils$d.sum32,sum32_5$1=utils$d.sum32_5,ft_1=shaCommon$1.ft_1,BlockHash$3=common$3.BlockHash,sha1_K=[1518500249,1859775393,2400959708,3395469782];function SHA1(){if(!(this instanceof SHA1))return new SHA1;BlockHash$3.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}utils$d.inherits(SHA1,BlockHash$3);var _1=SHA1;SHA1.blockSize=512,SHA1.outSize=160,SHA1.hmacStrength=80,SHA1.padLength=64,SHA1.prototype._update=function(t,e){for(var Q=this.W,B=0;B<16;B++)Q[B]=t[e+B];for(;B<Q.length;B++)Q[B]=rotl32$1(Q[B-3]^Q[B-8]^Q[B-14]^Q[B-16],1);var s=this.h[0],F=this.h[1],U=this.h[2],n=this.h[3],c=this.h[4];for(B=0;B<Q.length;B++){var o=~~(B/20),g=sum32_5$1(rotl32$1(s,5),ft_1(o,F,U,n),c,Q[B],sha1_K[o]);c=n,n=U,U=rotl32$1(F,30),F=s,s=g}this.h[0]=sum32$2(this.h[0],s),this.h[1]=sum32$2(this.h[1],F),this.h[2]=sum32$2(this.h[2],U),this.h[3]=sum32$2(this.h[3],n),this.h[4]=sum32$2(this.h[4],c)},SHA1.prototype._digest=function(t){return"hex"===t?utils$d.toHex32(this.h,"big"):utils$d.split32(this.h,"big")};var utils$c=utils$g,common$2=common$5,shaCommon=common$4,assert$9=minimalisticAssert,sum32$1=utils$c.sum32,sum32_4$1=utils$c.sum32_4,sum32_5=utils$c.sum32_5,ch32=shaCommon.ch32,maj32=shaCommon.maj32,s0_256=shaCommon.s0_256,s1_256=shaCommon.s1_256,g0_256=shaCommon.g0_256,g1_256=shaCommon.g1_256,BlockHash$2=common$2.BlockHash,sha256_K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function SHA256$1(){if(!(this instanceof SHA256$1))return new SHA256$1;BlockHash$2.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=sha256_K,this.W=new Array(64)}utils$c.inherits(SHA256$1,BlockHash$2);var _256=SHA256$1;SHA256$1.blockSize=512,SHA256$1.outSize=256,SHA256$1.hmacStrength=192,SHA256$1.padLength=64,SHA256$1.prototype._update=function(t,e){for(var Q=this.W,B=0;B<16;B++)Q[B]=t[e+B];for(;B<Q.length;B++)Q[B]=sum32_4$1(g1_256(Q[B-2]),Q[B-7],g0_256(Q[B-15]),Q[B-16]);var s=this.h[0],F=this.h[1],U=this.h[2],n=this.h[3],c=this.h[4],o=this.h[5],g=this.h[6],l=this.h[7];for(assert$9(this.k.length===Q.length),B=0;B<Q.length;B++){var I=sum32_5(l,s1_256(c),ch32(c,o,g),this.k[B],Q[B]),i=sum32$1(s0_256(s),maj32(s,F,U));l=g,g=o,o=c,c=sum32$1(n,I),n=U,U=F,F=s,s=sum32$1(I,i)}this.h[0]=sum32$1(this.h[0],s),this.h[1]=sum32$1(this.h[1],F),this.h[2]=sum32$1(this.h[2],U),this.h[3]=sum32$1(this.h[3],n),this.h[4]=sum32$1(this.h[4],c),this.h[5]=sum32$1(this.h[5],o),this.h[6]=sum32$1(this.h[6],g),this.h[7]=sum32$1(this.h[7],l)},SHA256$1.prototype._digest=function(t){return"hex"===t?utils$c.toHex32(this.h,"big"):utils$c.split32(this.h,"big")};var utils$b=utils$g,SHA256=_256;function SHA224(){if(!(this instanceof SHA224))return new SHA224;SHA256.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}utils$b.inherits(SHA224,SHA256);var _224=SHA224;SHA224.blockSize=512,SHA224.outSize=224,SHA224.hmacStrength=192,SHA224.padLength=64,SHA224.prototype._digest=function(t){return"hex"===t?utils$b.toHex32(this.h.slice(0,7),"big"):utils$b.split32(this.h.slice(0,7),"big")};var utils$a=utils$g,common$1=common$5,assert$8=minimalisticAssert,rotr64_hi=utils$a.rotr64_hi,rotr64_lo=utils$a.rotr64_lo,shr64_hi=utils$a.shr64_hi,shr64_lo=utils$a.shr64_lo,sum64=utils$a.sum64,sum64_hi=utils$a.sum64_hi,sum64_lo=utils$a.sum64_lo,sum64_4_hi=utils$a.sum64_4_hi,sum64_4_lo=utils$a.sum64_4_lo,sum64_5_hi=utils$a.sum64_5_hi,sum64_5_lo=utils$a.sum64_5_lo,BlockHash$1=common$1.BlockHash,sha512_K=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function SHA512$1(){if(!(this instanceof SHA512$1))return new SHA512$1;BlockHash$1.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=sha512_K,this.W=new Array(160)}utils$a.inherits(SHA512$1,BlockHash$1);var _512=SHA512$1;function ch64_hi(t,e,Q,B,s){var F=t&Q^~t&s;return F<0&&(F+=4294967296),F}function ch64_lo(t,e,Q,B,s,F){var U=e&B^~e&F;return U<0&&(U+=4294967296),U}function maj64_hi(t,e,Q,B,s){var F=t&Q^t&s^Q&s;return F<0&&(F+=4294967296),F}function maj64_lo(t,e,Q,B,s,F){var U=e&B^e&F^B&F;return U<0&&(U+=4294967296),U}function s0_512_hi(t,e){var Q=rotr64_hi(t,e,28)^rotr64_hi(e,t,2)^rotr64_hi(e,t,7);return Q<0&&(Q+=4294967296),Q}function s0_512_lo(t,e){var Q=rotr64_lo(t,e,28)^rotr64_lo(e,t,2)^rotr64_lo(e,t,7);return Q<0&&(Q+=4294967296),Q}function s1_512_hi(t,e){var Q=rotr64_hi(t,e,14)^rotr64_hi(t,e,18)^rotr64_hi(e,t,9);return Q<0&&(Q+=4294967296),Q}function s1_512_lo(t,e){var Q=rotr64_lo(t,e,14)^rotr64_lo(t,e,18)^rotr64_lo(e,t,9);return Q<0&&(Q+=4294967296),Q}function g0_512_hi(t,e){var Q=rotr64_hi(t,e,1)^rotr64_hi(t,e,8)^shr64_hi(t,e,7);return Q<0&&(Q+=4294967296),Q}function g0_512_lo(t,e){var Q=rotr64_lo(t,e,1)^rotr64_lo(t,e,8)^shr64_lo(t,e,7);return Q<0&&(Q+=4294967296),Q}function g1_512_hi(t,e){var Q=rotr64_hi(t,e,19)^rotr64_hi(e,t,29)^shr64_hi(t,e,6);return Q<0&&(Q+=4294967296),Q}function g1_512_lo(t,e){var Q=rotr64_lo(t,e,19)^rotr64_lo(e,t,29)^shr64_lo(t,e,6);return Q<0&&(Q+=4294967296),Q}SHA512$1.blockSize=1024,SHA512$1.outSize=512,SHA512$1.hmacStrength=192,SHA512$1.padLength=128,SHA512$1.prototype._prepareBlock=function(t,e){for(var Q=this.W,B=0;B<32;B++)Q[B]=t[e+B];for(;B<Q.length;B+=2){var s=g1_512_hi(Q[B-4],Q[B-3]),F=g1_512_lo(Q[B-4],Q[B-3]),U=Q[B-14],n=Q[B-13],c=g0_512_hi(Q[B-30],Q[B-29]),o=g0_512_lo(Q[B-30],Q[B-29]),g=Q[B-32],l=Q[B-31];Q[B]=sum64_4_hi(s,F,U,n,c,o,g,l),Q[B+1]=sum64_4_lo(s,F,U,n,c,o,g,l)}},SHA512$1.prototype._update=function(t,e){this._prepareBlock(t,e);var Q=this.W,B=this.h[0],s=this.h[1],F=this.h[2],U=this.h[3],n=this.h[4],c=this.h[5],o=this.h[6],g=this.h[7],l=this.h[8],I=this.h[9],i=this.h[10],r=this.h[11],a=this.h[12],d=this.h[13],u=this.h[14],C=this.h[15];assert$8(this.k.length===Q.length);for(var y=0;y<Q.length;y+=2){var S=u,b=C,m=s1_512_hi(l,I),G=s1_512_lo(l,I),x=ch64_hi(l,I,i,r,a),L=ch64_lo(l,I,i,r,a,d),h=this.k[y],A=this.k[y+1],Z=Q[y],R=Q[y+1],N=sum64_5_hi(S,b,m,G,x,L,h,A,Z,R),V=sum64_5_lo(S,b,m,G,x,L,h,A,Z,R);S=s0_512_hi(B,s),b=s0_512_lo(B,s),m=maj64_hi(B,s,F,U,n),G=maj64_lo(B,s,F,U,n,c);var D=sum64_hi(S,b,m,G),E=sum64_lo(S,b,m,G);u=a,C=d,a=i,d=r,i=l,r=I,l=sum64_hi(o,g,N,V),I=sum64_lo(g,g,N,V),o=n,g=c,n=F,c=U,F=B,U=s,B=sum64_hi(N,V,D,E),s=sum64_lo(N,V,D,E)}sum64(this.h,0,B,s),sum64(this.h,2,F,U),sum64(this.h,4,n,c),sum64(this.h,6,o,g),sum64(this.h,8,l,I),sum64(this.h,10,i,r),sum64(this.h,12,a,d),sum64(this.h,14,u,C)},SHA512$1.prototype._digest=function(t){return"hex"===t?utils$a.toHex32(this.h,"big"):utils$a.split32(this.h,"big")};var utils$9=utils$g,SHA512=_512;function SHA384(){if(!(this instanceof SHA384))return new SHA384;SHA512.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}utils$9.inherits(SHA384,SHA512);var _384=SHA384;SHA384.blockSize=1024,SHA384.outSize=384,SHA384.hmacStrength=192,SHA384.padLength=128,SHA384.prototype._digest=function(t){return"hex"===t?utils$9.toHex32(this.h.slice(0,12),"big"):utils$9.split32(this.h.slice(0,12),"big")},sha.sha1=_1,sha.sha224=_224,sha.sha256=_256,sha.sha384=_384,sha.sha512=_512;var ripemd={},utils$8=utils$g,common=common$5,rotl32=utils$8.rotl32,sum32=utils$8.sum32,sum32_3=utils$8.sum32_3,sum32_4=utils$8.sum32_4,BlockHash=common.BlockHash;function RIPEMD160(){if(!(this instanceof RIPEMD160))return new RIPEMD160;BlockHash.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function f$1(t,e,Q,B){return t<=15?e^Q^B:t<=31?e&Q|~e&B:t<=47?(e|~Q)^B:t<=63?e&B|Q&~B:e^(Q|~B)}function K(t){return t<=15?0:t<=31?1518500249:t<=47?1859775393:t<=63?2400959708:2840853838}function Kh(t){return t<=15?1352829926:t<=31?1548603684:t<=47?1836072691:t<=63?2053994217:0}utils$8.inherits(RIPEMD160,BlockHash),ripemd.ripemd160=RIPEMD160,RIPEMD160.blockSize=512,RIPEMD160.outSize=160,RIPEMD160.hmacStrength=192,RIPEMD160.padLength=64,RIPEMD160.prototype._update=function(t,e){for(var Q=this.h[0],B=this.h[1],F=this.h[2],U=this.h[3],n=this.h[4],c=Q,o=B,g=F,l=U,I=n,i=0;i<80;i++){var a=sum32(rotl32(sum32_4(Q,f$1(i,B,F,U),t[r[i]+e],K(i)),s[i]),n);Q=n,n=U,U=rotl32(F,10),F=B,B=a,a=sum32(rotl32(sum32_4(c,f$1(79-i,o,g,l),t[rh[i]+e],Kh(i)),sh[i]),I),c=I,I=l,l=rotl32(g,10),g=o,o=a}a=sum32_3(this.h[1],F,l),this.h[1]=sum32_3(this.h[2],U,I),this.h[2]=sum32_3(this.h[3],n,c),this.h[3]=sum32_3(this.h[4],Q,o),this.h[4]=sum32_3(this.h[0],B,g),this.h[0]=a},RIPEMD160.prototype._digest=function(t){return"hex"===t?utils$8.toHex32(this.h,"little"):utils$8.split32(this.h,"little")};var r=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],rh=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],s=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],sh=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],utils$7=utils$g,assert$7=minimalisticAssert;function Hmac(t,e,Q){if(!(this instanceof Hmac))return new Hmac(t,e,Q);this.Hash=t,this.blockSize=t.blockSize/8,this.outSize=t.outSize/8,this.inner=null,this.outer=null,this._init(utils$7.toArray(e,Q))}var hmac=Hmac;Hmac.prototype._init=function(t){t.length>this.blockSize&&(t=(new this.Hash).update(t).digest()),assert$7(t.length<=this.blockSize);for(var e=t.length;e<this.blockSize;e++)t.push(0);for(e=0;e<t.length;e++)t[e]^=54;for(this.inner=(new this.Hash).update(t),e=0;e<t.length;e++)t[e]^=106;this.outer=(new this.Hash).update(t)},Hmac.prototype.update=function(t,e){return this.inner.update(t,e),this},Hmac.prototype.digest=function(t){return this.outer.update(this.inner.digest()),this.outer.digest(t)},function(t){var e=hash$2;e.utils=utils$g,e.common=common$5,e.sha=sha,e.ripemd=ripemd,e.hmac=hmac,e.sha1=e.sha.sha1,e.sha256=e.sha.sha256,e.sha224=e.sha.sha224,e.sha384=e.sha.sha384,e.sha512=e.sha.sha512,e.ripemd160=e.ripemd.ripemd160}(),function(t){var e,Q=curves$2,B=hash$2,s=curve,F=utils$m.assert;function U(t){"short"===t.type?this.curve=new s.short(t):"edwards"===t.type?this.curve=new s.edwards(t):this.curve=new s.mont(t),this.g=this.curve.g,this.n=this.curve.n,this.hash=t.hash,F(this.g.validate(),"Invalid curve"),F(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function n(t,e){Object.defineProperty(Q,t,{configurable:!0,enumerable:!0,get:function(){var B=new U(e);return Object.defineProperty(Q,t,{configurable:!0,enumerable:!0,value:B}),B}})}Q.PresetCurve=U,n("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:B.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),n("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:B.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),n("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:B.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),n("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:B.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),n("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:B.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),n("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:B.sha256,gRed:!1,g:["9"]}),n("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:B.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{e=require("./precomputed/secp256k1")}catch(t){e=void 0}n("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:B.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",e]})}();var hash$1=hash$2,utils$6=utils$l,assert$6=minimalisticAssert;function HmacDRBG$1(t){if(!(this instanceof HmacDRBG$1))return new HmacDRBG$1(t);this.hash=t.hash,this.predResist=!!t.predResist,this.outLen=this.hash.outSize,this.minEntropy=t.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var e=utils$6.toArray(t.entropy,t.entropyEnc||"hex"),Q=utils$6.toArray(t.nonce,t.nonceEnc||"hex"),B=utils$6.toArray(t.pers,t.persEnc||"hex");assert$6(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(e,Q,B)}var hmacDrbg=HmacDRBG$1;HmacDRBG$1.prototype._init=function(t,e,Q){var B=t.concat(e).concat(Q);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var s=0;s<this.V.length;s++)this.K[s]=0,this.V[s]=1;this._update(B),this._reseed=1,this.reseedInterval=281474976710656},HmacDRBG$1.prototype._hmac=function(){return new hash$1.hmac(this.hash,this.K)},HmacDRBG$1.prototype._update=function(t){var e=this._hmac().update(this.V).update([0]);t&&(e=e.update(t)),this.K=e.digest(),this.V=this._hmac().update(this.V).digest(),t&&(this.K=this._hmac().update(this.V).update([1]).update(t).digest(),this.V=this._hmac().update(this.V).digest())},HmacDRBG$1.prototype.reseed=function(t,e,Q,B){"string"!=typeof e&&(B=Q,Q=e,e=null),t=utils$6.toArray(t,e),Q=utils$6.toArray(Q,B),assert$6(t.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(t.concat(Q||[])),this._reseed=1},HmacDRBG$1.prototype.generate=function(t,e,Q,B){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof e&&(B=Q,Q=e,e=null),Q&&(Q=utils$6.toArray(Q,B||"hex"),this._update(Q));for(var s=[];s.length<t;)this.V=this._hmac().update(this.V).digest(),s=s.concat(this.V);var F=s.slice(0,t);return this._update(Q),this._reseed++,utils$6.encode(F,e)};var BN$3=bn.exports,utils$5=utils$m,assert$5=utils$5.assert;function KeyPair$3(t,e){this.ec=t,this.priv=null,this.pub=null,e.priv&&this._importPrivate(e.priv,e.privEnc),e.pub&&this._importPublic(e.pub,e.pubEnc)}var key$1=KeyPair$3;KeyPair$3.fromPublic=function(t,e,Q){return e instanceof KeyPair$3?e:new KeyPair$3(t,{pub:e,pubEnc:Q})},KeyPair$3.fromPrivate=function(t,e,Q){return e instanceof KeyPair$3?e:new KeyPair$3(t,{priv:e,privEnc:Q})},KeyPair$3.prototype.validate=function(){var t=this.getPublic();return t.isInfinity()?{result:!1,reason:"Invalid public key"}:t.validate()?t.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},KeyPair$3.prototype.getPublic=function(t,e){return"string"==typeof t&&(e=t,t=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),e?this.pub.encode(e,t):this.pub},KeyPair$3.prototype.getPrivate=function(t){return"hex"===t?this.priv.toString(16,2):this.priv},KeyPair$3.prototype._importPrivate=function(t,e){this.priv=new BN$3(t,e||16),this.priv=this.priv.umod(this.ec.curve.n)},KeyPair$3.prototype._importPublic=function(t,e){if(t.x||t.y)return"mont"===this.ec.curve.type?assert$5(t.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||assert$5(t.x&&t.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(t.x,t.y));this.pub=this.ec.curve.decodePoint(t,e)},KeyPair$3.prototype.derive=function(t){return t.validate()||assert$5(t.validate(),"public point not validated"),t.mul(this.priv).getX()},KeyPair$3.prototype.sign=function(t,e,Q){return this.ec.sign(t,this,e,Q)},KeyPair$3.prototype.verify=function(t,e){return this.ec.verify(t,e,this)},KeyPair$3.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"};var BN$2=bn.exports,utils$4=utils$m,assert$4=utils$4.assert;function Signature$3(t,e){if(t instanceof Signature$3)return t;this._importDER(t,e)||(assert$4(t.r&&t.s,"Signature without r or s"),this.r=new BN$2(t.r,16),this.s=new BN$2(t.s,16),void 0===t.recoveryParam?this.recoveryParam=null:this.recoveryParam=t.recoveryParam)}var signature$1=Signature$3;function Position(){this.place=0}function getLength(t,e){var Q=t[e.place++];if(!(128&Q))return Q;var B=15&Q;if(0===B||B>4)return!1;for(var s=0,F=0,U=e.place;F<B;F++,U++)s<<=8,s|=t[U],s>>>=0;return!(s<=127)&&(e.place=U,s)}function rmPadding(t){for(var e=0,Q=t.length-1;!t[e]&&!(128&t[e+1])&&e<Q;)e++;return 0===e?t:t.slice(e)}function constructLength(t,e){if(e<128)t.push(e);else{var Q=1+(Math.log(e)/Math.LN2>>>3);for(t.push(128|Q);--Q;)t.push(e>>>(Q<<3)&255);t.push(e)}}Signature$3.prototype._importDER=function(t,e){t=utils$4.toArray(t,e);var Q=new Position;if(48!==t[Q.place++])return!1;var B=getLength(t,Q);if(!1===B)return!1;if(B+Q.place!==t.length)return!1;if(2!==t[Q.place++])return!1;var s=getLength(t,Q);if(!1===s)return!1;var F=t.slice(Q.place,s+Q.place);if(Q.place+=s,2!==t[Q.place++])return!1;var U=getLength(t,Q);if(!1===U)return!1;if(t.length!==U+Q.place)return!1;var n=t.slice(Q.place,U+Q.place);if(0===F[0]){if(!(128&F[1]))return!1;F=F.slice(1)}if(0===n[0]){if(!(128&n[1]))return!1;n=n.slice(1)}return this.r=new BN$2(F),this.s=new BN$2(n),this.recoveryParam=null,!0},Signature$3.prototype.toDER=function(t){var e=this.r.toArray(),Q=this.s.toArray();for(128&e[0]&&(e=[0].concat(e)),128&Q[0]&&(Q=[0].concat(Q)),e=rmPadding(e),Q=rmPadding(Q);!(Q[0]||128&Q[1]);)Q=Q.slice(1);var B=[2];constructLength(B,e.length),(B=B.concat(e)).push(2),constructLength(B,Q.length);var s=B.concat(Q),F=[48];return constructLength(F,s.length),F=F.concat(s),utils$4.encode(F,t)};var BN$1=bn.exports,HmacDRBG=hmacDrbg,utils$3=utils$m,curves$1=curves$2,rand=brorand.exports,assert$3=utils$3.assert,KeyPair$2=key$1,Signature$2=signature$1;function EC(t){if(!(this instanceof EC))return new EC(t);"string"==typeof t&&(assert$3(Object.prototype.hasOwnProperty.call(curves$1,t),"Unknown curve "+t),t=curves$1[t]),t instanceof curves$1.PresetCurve&&(t={curve:t}),this.curve=t.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=t.curve.g,this.g.precompute(t.curve.n.bitLength()+1),this.hash=t.hash||t.curve.hash}var ec=EC;EC.prototype.keyPair=function(t){return new KeyPair$2(this,t)},EC.prototype.keyFromPrivate=function(t,e){return KeyPair$2.fromPrivate(this,t,e)},EC.prototype.keyFromPublic=function(t,e){return KeyPair$2.fromPublic(this,t,e)},EC.prototype.genKeyPair=function(t){t||(t={});for(var e=new HmacDRBG({hash:this.hash,pers:t.pers,persEnc:t.persEnc||"utf8",entropy:t.entropy||rand(this.hash.hmacStrength),entropyEnc:t.entropy&&t.entropyEnc||"utf8",nonce:this.n.toArray()}),Q=this.n.byteLength(),B=this.n.sub(new BN$1(2));;){var s=new BN$1(e.generate(Q));if(!(s.cmp(B)>0))return s.iaddn(1),this.keyFromPrivate(s)}},EC.prototype._truncateToN=function(t,e){var Q=8*t.byteLength()-this.n.bitLength();return Q>0&&(t=t.ushrn(Q)),!e&&t.cmp(this.n)>=0?t.sub(this.n):t},EC.prototype.sign=function(t,e,Q,B){"object"==typeof Q&&(B=Q,Q=null),B||(B={}),e=this.keyFromPrivate(e,Q),t=this._truncateToN(new BN$1(t,16));for(var s=this.n.byteLength(),F=e.getPrivate().toArray("be",s),U=t.toArray("be",s),n=new HmacDRBG({hash:this.hash,entropy:F,nonce:U,pers:B.pers,persEnc:B.persEnc||"utf8"}),c=this.n.sub(new BN$1(1)),o=0;;o++){var g=B.k?B.k(o):new BN$1(n.generate(this.n.byteLength()));if(!((g=this._truncateToN(g,!0)).cmpn(1)<=0||g.cmp(c)>=0)){var l=this.g.mul(g);if(!l.isInfinity()){var I=l.getX(),i=I.umod(this.n);if(0!==i.cmpn(0)){var r=g.invm(this.n).mul(i.mul(e.getPrivate()).iadd(t));if(0!==(r=r.umod(this.n)).cmpn(0)){var a=(l.getY().isOdd()?1:0)|(0!==I.cmp(i)?2:0);return B.canonical&&r.cmp(this.nh)>0&&(r=this.n.sub(r),a^=1),new Signature$2({r:i,s:r,recoveryParam:a})}}}}}},EC.prototype.verify=function(t,e,Q,B){t=this._truncateToN(new BN$1(t,16)),Q=this.keyFromPublic(Q,B);var s=(e=new Signature$2(e,"hex")).r,F=e.s;if(s.cmpn(1)<0||s.cmp(this.n)>=0)return!1;if(F.cmpn(1)<0||F.cmp(this.n)>=0)return!1;var U,n=F.invm(this.n),c=n.mul(t).umod(this.n),o=n.mul(s).umod(this.n);return this.curve._maxwellTrick?!(U=this.g.jmulAdd(c,Q.getPublic(),o)).isInfinity()&&U.eqXToP(s):!(U=this.g.mulAdd(c,Q.getPublic(),o)).isInfinity()&&0===U.getX().umod(this.n).cmp(s)},EC.prototype.recoverPubKey=function(t,e,Q,B){assert$3((3&Q)===Q,"The recovery param is more than two bits"),e=new Signature$2(e,B);var s=this.n,F=new BN$1(t),U=e.r,n=e.s,c=1&Q,o=Q>>1;if(U.cmp(this.curve.p.umod(this.curve.n))>=0&&o)throw new Error("Unable to find sencond key candinate");U=o?this.curve.pointFromX(U.add(this.curve.n),c):this.curve.pointFromX(U,c);var g=e.r.invm(s),l=s.sub(F).mul(g).umod(s),I=n.mul(g).umod(s);return this.g.mulAdd(l,U,I)},EC.prototype.getKeyRecoveryParam=function(t,e,Q,B){if(null!==(e=new Signature$2(e,B)).recoveryParam)return e.recoveryParam;for(var s=0;s<4;s++){var F;try{F=this.recoverPubKey(t,e,s)}catch(t){continue}if(F.eq(Q))return s}throw new Error("Unable to find valid recovery factor")};var utils$2=utils$m,assert$2=utils$2.assert,parseBytes$2=utils$2.parseBytes,cachedProperty$1=utils$2.cachedProperty;function KeyPair$1(t,e){this.eddsa=t,this._secret=parseBytes$2(e.secret),t.isPoint(e.pub)?this._pub=e.pub:this._pubBytes=parseBytes$2(e.pub)}KeyPair$1.fromPublic=function(t,e){return e instanceof KeyPair$1?e:new KeyPair$1(t,{pub:e})},KeyPair$1.fromSecret=function(t,e){return e instanceof KeyPair$1?e:new KeyPair$1(t,{secret:e})},KeyPair$1.prototype.secret=function(){return this._secret},cachedProperty$1(KeyPair$1,"pubBytes",(function(){return this.eddsa.encodePoint(this.pub())})),cachedProperty$1(KeyPair$1,"pub",(function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())})),cachedProperty$1(KeyPair$1,"privBytes",(function(){var t=this.eddsa,e=this.hash(),Q=t.encodingLength-1,B=e.slice(0,t.encodingLength);return B[0]&=248,B[Q]&=127,B[Q]|=64,B})),cachedProperty$1(KeyPair$1,"priv",(function(){return this.eddsa.decodeInt(this.privBytes())})),cachedProperty$1(KeyPair$1,"hash",(function(){return this.eddsa.hash().update(this.secret()).digest()})),cachedProperty$1(KeyPair$1,"messagePrefix",(function(){return this.hash().slice(this.eddsa.encodingLength)})),KeyPair$1.prototype.sign=function(t){return assert$2(this._secret,"KeyPair can only verify"),this.eddsa.sign(t,this)},KeyPair$1.prototype.verify=function(t,e){return this.eddsa.verify(t,e,this)},KeyPair$1.prototype.getSecret=function(t){return assert$2(this._secret,"KeyPair is public only"),utils$2.encode(this.secret(),t)},KeyPair$1.prototype.getPublic=function(t){return utils$2.encode(this.pubBytes(),t)};var key=KeyPair$1,BN=bn.exports,utils$1=utils$m,assert$1=utils$1.assert,cachedProperty=utils$1.cachedProperty,parseBytes$1=utils$1.parseBytes;function Signature$1(t,e){this.eddsa=t,"object"!=typeof e&&(e=parseBytes$1(e)),Array.isArray(e)&&(e={R:e.slice(0,t.encodingLength),S:e.slice(t.encodingLength)}),assert$1(e.R&&e.S,"Signature without R or S"),t.isPoint(e.R)&&(this._R=e.R),e.S instanceof BN&&(this._S=e.S),this._Rencoded=Array.isArray(e.R)?e.R:e.Rencoded,this._Sencoded=Array.isArray(e.S)?e.S:e.Sencoded}cachedProperty(Signature$1,"S",(function(){return this.eddsa.decodeInt(this.Sencoded())})),cachedProperty(Signature$1,"R",(function(){return this.eddsa.decodePoint(this.Rencoded())})),cachedProperty(Signature$1,"Rencoded",(function(){return this.eddsa.encodePoint(this.R())})),cachedProperty(Signature$1,"Sencoded",(function(){return this.eddsa.encodeInt(this.S())})),Signature$1.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},Signature$1.prototype.toHex=function(){return utils$1.encode(this.toBytes(),"hex").toUpperCase()};var signature=Signature$1,hash=hash$2,curves=curves$2,utils=utils$m,assert=utils.assert,parseBytes=utils.parseBytes,KeyPair=key,Signature=signature;function EDDSA(t){if(assert("ed25519"===t,"only tested with ed25519 so far"),!(this instanceof EDDSA))return new EDDSA(t);t=curves[t].curve,this.curve=t,this.g=t.g,this.g.precompute(t.n.bitLength()+1),this.pointClass=t.point().constructor,this.encodingLength=Math.ceil(t.n.bitLength()/8),this.hash=hash.sha512}var eddsa=EDDSA;EDDSA.prototype.sign=function(t,e){t=parseBytes(t);var Q=this.keyFromSecret(e),B=this.hashInt(Q.messagePrefix(),t),s=this.g.mul(B),F=this.encodePoint(s),U=this.hashInt(F,Q.pubBytes(),t).mul(Q.priv()),n=B.add(U).umod(this.curve.n);return this.makeSignature({R:s,S:n,Rencoded:F})},EDDSA.prototype.verify=function(t,e,Q){t=parseBytes(t),e=this.makeSignature(e);var B=this.keyFromPublic(Q),s=this.hashInt(e.Rencoded(),B.pubBytes(),t),F=this.g.mul(e.S());return e.R().add(B.pub().mul(s)).eq(F)},EDDSA.prototype.hashInt=function(){for(var t=this.hash(),e=0;e<arguments.length;e++)t.update(arguments[e]);return utils.intFromLE(t.digest()).umod(this.curve.n)},EDDSA.prototype.keyFromPublic=function(t){return KeyPair.fromPublic(this,t)},EDDSA.prototype.keyFromSecret=function(t){return KeyPair.fromSecret(this,t)},EDDSA.prototype.makeSignature=function(t){return t instanceof Signature?t:new Signature(this,t)},EDDSA.prototype.encodePoint=function(t){var e=t.getY().toArray("le",this.encodingLength);return e[this.encodingLength-1]|=t.getX().isOdd()?128:0,e},EDDSA.prototype.decodePoint=function(t){var e=(t=utils.parseBytes(t)).length-1,Q=t.slice(0,e).concat(-129&t[e]),B=0!=(128&t[e]),s=utils.intFromLE(Q);return this.curve.pointFromY(s,B)},EDDSA.prototype.encodeInt=function(t){return t.toArray("le",this.encodingLength)},EDDSA.prototype.decodeInt=function(t){return utils.intFromLE(t)},EDDSA.prototype.isPoint=function(t){return t instanceof this.pointClass},function(t){var e=t;e.version=require$$0.version,e.utils=utils$m,e.rand=brorand.exports,e.curve=curve,e.curves=curves$2,e.ec=ec,e.eddsa=eddsa}(elliptic);const secp256k1=new elliptic.ec("secp256k1");function generate(){const t=secp256k1.genKeyPair();return{privateKey:decode$5(t.getPrivate("hex")),publicKey:decode$5(t.getPublic(!0,"hex"))}}async function generateAsync(){return Promise.resolve(generate())}function fromBytes(t){const e=secp256k1.keyFromPrivate(t);return{privateKey:decode$5(e.getPrivate("hex")),publicKey:decode$5(e.getPublic(!0,"hex"))}}function sign(t,e){const Q=encode$3(e),B=decode$5(keccak256$1(`0x${Q}`)),s=secp256k1.keyFromPrivate(t).sign(B),F=s.r.toArray("be",32),U=s.s.toArray("be",32),n=new Uint8Array(64);return n.set(F,0),n.set(U,32),n}function verify(t,e,Q){const B=encode$3(e),s=decode$5(keccak256$1(`0x${B}`));return secp256k1.keyFromPublic(t).verify(s,{r:Q.subarray(0,32),s:Q.subarray(32,64)})}const derPrefix$1="302f300706052b8104000a0324000421",derPrefixBytes$1=decode$5(derPrefix$1);class EcdsaPublicKey extends Key$1{constructor(t){super(),this._keyData=t}get _type(){return"secp256k1"}static fromBytes(t){switch(t.length){case 33:return EcdsaPublicKey.fromBytesRaw(t);case 49:return EcdsaPublicKey.fromBytesDer(t);default:throw new BadKeyError(`invalid public key length: ${t.length} bytes`)}}static fromBytesDer(t){if(44!=t.length||!arrayStartsWith(t,derPrefixBytes$1))throw new BadKeyError(`invalid public key length: ${t.length} bytes`);return new EcdsaPublicKey(t.subarray(12))}static fromBytesRaw(t){if(33!=t.length)throw new BadKeyError(`invalid public key length: ${t.length} bytes`);return new EcdsaPublicKey(t)}static fromString(t){return EcdsaPublicKey.fromBytes(decode$5(t))}verify(t,e){return verify(this._keyData,t,e)}toBytesDer(){const t=new Uint8Array(derPrefixBytes$1.length+this._keyData.length);return t.set(derPrefixBytes$1,0),t.set(this._keyData,derPrefixBytes$1.length),t}toBytesRaw(){return new Uint8Array(this._keyData.subarray())}equals(t){return arrayEqual$1(this._keyData,t._keyData)}}const derPrefix="3030020100300706052b8104000a04220420",derPrefixBytes=decode$5(derPrefix);class EcdsaPrivateKey{constructor(t,e){this._keyPair=t,this._chainCode=null!=e?e:null}get _type(){return"secp256k1"}static generate(){return new EcdsaPrivateKey(generate())}static async generateAsync(){return new EcdsaPrivateKey(await generateAsync())}static fromBytes(t){switch(t.length){case 32:return EcdsaPrivateKey.fromBytesRaw(t);case 50:return EcdsaPrivateKey.fromBytesDer(t);default:throw new BadKeyError(`invalid private key length: ${t.length} bytes`)}}static fromBytesDer(t){if(32!=t.length&&!arrayStartsWith(t,derPrefixBytes))throw new BadKeyError("invalid der header");return new EcdsaPrivateKey(fromBytes(t.subarray(derPrefixBytes.length)))}static fromBytesRaw(t){return new EcdsaPrivateKey(fromBytes(t))}static fromString(t){return EcdsaPrivateKey.fromBytes(decode$5(t))}static fromStringDer(t){return EcdsaPrivateKey.fromBytesDer(decode$5(t))}static fromStringRaw(t){return EcdsaPrivateKey.fromBytesRaw(decode$5(t))}get publicKey(){return new EcdsaPublicKey(this._keyPair.publicKey)}sign(t){return sign(this._keyPair.privateKey,t)}toBytesDer(){const t=new Uint8Array(derPrefixBytes.length+32);return t.set(derPrefixBytes,0),t.set(this._keyPair.privateKey.subarray(0,32),derPrefixBytes.length),t}toBytesRaw(){return this._keyPair.privateKey.slice(0,32)}}class PublicKey$1 extends Key$1{constructor(t){super(),this._key=t}get _type(){return this._key._type}static fromBytes(t){try{return new PublicKey$1(Ed25519PublicKey.fromBytes(t))}catch{}try{return new PublicKey$1(EcdsaPublicKey.fromBytes(t))}catch{}throw new BadKeyError(`invalid public key length: ${t.length} bytes`)}static fromBytesED25519(t){return new PublicKey$1(Ed25519PublicKey.fromBytes(t))}static fromBytesECDSA(t){return new PublicKey$1(EcdsaPublicKey.fromBytes(t))}static fromString(t){return PublicKey$1.fromBytes(decode$5(t))}static fromStringED25519(t){return PublicKey$1.fromBytesED25519(decode$5(t))}static fromStringECDSA(t){return PublicKey$1.fromBytesECDSA(decode$5(t))}verify(t,e){return this._key.verify(t,e)}verifyTransaction(t){console.log("Deprecated: use `@hashgraph/sdk`.PublicKey instead"),t._requireFrozen(),t.isFrozen()||t.freeze();for(const e of t._signedTransactions)if(null!=e.sigMap&&null!=e.sigMap.sigPair){let t=!1;for(const Q of e.sigMap.sigPair){if(arrayEqual$1(Q.pubKeyPrefix,this.toBytesRaw())){t=!0;const B=e.bodyBytes,s=null!=Q.ed25519?Q.ed25519:Q.ECDSASecp256k1;if(!this.verify(B,s))return!1}}if(!t)return!1}return!0}toBytes(){return this._key instanceof Ed25519PublicKey?this.toBytesRaw():this.toBytesDer()}toBytesDer(){return this._key.toBytesDer()}toBytesRaw(){return this._key.toBytesRaw()}toString(){return this.toStringDer()}toStringDer(){return encode$3(this.toBytesDer())}toStringRaw(){return encode$3(this.toBytesRaw())}equals(t){return(this._key instanceof Ed25519PublicKey&&t instanceof Ed25519PublicKey||this._key instanceof EcdsaPublicKey&&t instanceof EcdsaPublicKey)&&this._key.equals(t)}}const CipherAlgorithm={Aes128Ctr:"AES-128-CTR",Aes128Cbc:"AES-128-CBC"};async function createCipheriv(t,e,Q,B){let s;switch(t.toUpperCase()){case CipherAlgorithm.Aes128Ctr:s={name:"AES-CTR",counter:Q,length:128};break;case CipherAlgorithm.Aes128Cbc:s={name:"AES-CBC",iv:Q};break;default:throw new Error("(BUG) non-exhaustive switch statement for CipherAlgorithm")}const F=await window.crypto.subtle.importKey("raw",e,s.name,!1,["encrypt"]);return new Uint8Array(await window.crypto.subtle.encrypt(s,F,B))}async function createDecipheriv(t,e,Q,B){let s;switch(t.toUpperCase()){case CipherAlgorithm.Aes128Ctr:s={name:"AES-CTR",counter:Q,length:128};break;case CipherAlgorithm.Aes128Cbc:s={name:"AES-CBC",iv:Q};break;default:throw new Error("(BUG) non-exhaustive switch statement for CipherAlgorithm")}const F=await window.crypto.subtle.importKey("raw",e,s.name,!1,["decrypt"]);return new Uint8Array(await window.crypto.subtle.decrypt(s,F,B))}const HMAC_SHA256="hmac-sha256";async function createKeystore(t,e){const Q=262144,B=await bytesAsync(32),s=await deriveKey(HashAlgorithm.Sha256,e,B,Q,32),F=await bytesAsync(16),U=await createCipheriv(CipherAlgorithm.Aes128Ctr,s.slice(0,16),F,t),n=await hash$3(HashAlgorithm.Sha384,s.slice(16),U),c={version:1,crypto:{ciphertext:encode$3(U),cipherparams:{iv:encode$3(F)},cipher:CipherAlgorithm.Aes128Ctr,kdf:"pbkdf2",kdfparams:{dkLen:32,salt:encode$3(B),c:Q,prf:HMAC_SHA256},mac:encode$3(n)}};return encode$2(JSON.stringify(c))}async function loadKeystore(t,e){const Q=JSON.parse(decode$4(t));if(1!==Q.version)throw new BadKeyError(`unsupported keystore version: ${Q.version}`);const{ciphertext:B,cipherparams:{iv:s},cipher:F,kdf:U,kdfparams:{dkLen:n,salt:c,c:o,prf:g},mac:l}=Q.crypto;if("pbkdf2"!==U)throw new BadKeyError(`unsupported key derivation function:" + ${U}`);if(g!==HMAC_SHA256)throw new BadKeyError(`unsupported key derivation hash function: ${g}`);const I=decode$5(c),i=decode$5(s),r=decode$5(B),a=await deriveKey(HashAlgorithm.Sha256,e,I,o,n),d=decode$5(l),u=await hash$3(HashAlgorithm.Sha384,a.slice(16),r);if(!d.every(((t,e)=>t===u[e])))throw new BadKeyError("HMAC mismatch; passphrase is incorrect");return createDecipheriv(F,a.slice(0,16),i,r)}function decode$3(t){return decodeIncremental(t)[0]}function decodeIncremental(t){const[e,Q]=decodeLength(t.subarray(1)),B=Q.subarray(0,e),s=Q.subarray(e);switch(t[0]){case 2:return[{int:decodeInt(B)},s];case 4:return[{bytes:B},s];case 5:return[{},s];case 6:return[{ident:decodeObjectIdent(B)},s];case 48:return[{seq:decodeSeq(B)},s];default:throw new Error(`unsupported DER type tag: ${t[0]}`)}}function decodeSeq(t){let e=t;const Q=[];for(;0!==e.length;){const[t,B]=decodeIncremental(e);Q.push(t),e=B}return Q}function decodeObjectIdent(t){const e=[Math.floor(t[0]/40),t[0]%40];let Q=0;for(const B of t.subarray(1))Q*=128,B<128?(Q+=B,e.push(Q),Q=0):Q+=127&B;return e.join(".")}function decodeLength(t){if(t[0]<128)return[t[0],t.subarray(1)];const e=t[0]-128,Q=t.subarray(1,e+1),B=t.subarray(e+1);return[decodeInt(Q),B]}function decodeInt(t){const e=t.length;if(1===e)return t[0];let Q=new DataView(t.buffer,t.byteOffset,t.byteLength);if(2===e)return Q.getUint16(0,!1);if(3===e){const e=Uint8Array.of(0,...t);Q=new DataView(e.buffer,e.byteOffset,e.byteLength)}if(e>4)throw new Error(`unsupported DER integer length of ${e} bytes`);return Q.getUint32(0,!1)}class AlgorithmIdentifier{constructor(t){if(!("seq"in t&&t.seq.length>=1&&"ident"in t.seq[0]))throw new Error(`error parsing AlgorithmIdentifier from ${JSON.stringify(t)}`);this.algIdent=t.seq[0].ident,this.parameters=t.seq[1]}toString(){return JSON.stringify(this)}}class PBES2Params{constructor(t){if(!("seq"in t)||2!==t.seq.length)throw new Error(`error parsing PBES2Params from ${JSON.stringify(t)}`);this.kdf=new AlgorithmIdentifier(t.seq[0]),this.encScheme=new AlgorithmIdentifier(t.seq[1])}}class PBKDF2Params{constructor(t){if("seq"in t&&t.seq.length>=2&&"bytes"in t.seq[0]&&"int"in t.seq[1]&&(this.salt=t.seq[0].bytes,this.iterCount=t.seq[1].int,t.seq.length>2))return"seq"in t.seq[2]?void(this.prf=new AlgorithmIdentifier(t.seq[2])):("int"in t.seq[2]&&(this.keyLength=t.seq[2].int),void(4===t.seq.length&&(this.prf=new AlgorithmIdentifier(t.seq[3]))));throw new Error(`error parsing PBKDF2Params from ${JSON.stringify(t)}`)}}class PrivateKeyInfo{constructor(t){if(!("seq"in t)||3!==t.seq.length)throw new Error(`error parsing PrivateKeyInfo from ${JSON.stringify(t)}`);if(!("int"in t.seq[0])||0!==t.seq[0].int)throw new Error(`expected version = 0, got ${JSON.stringify(t.seq[0])}`);if(this.version=0,this.algId=new AlgorithmIdentifier(t.seq[1]),!("bytes"in t.seq[2]))throw new Error(`expected octet string as 3rd element, got ${JSON.stringify(t.seq[2])}`);this.privateKey=t.seq[2].bytes}static parse(t){return new PrivateKeyInfo(decode$3(t))}}class EncryptedPrivateKeyInfo{constructor(t){if("seq"in t&&2===t.seq.length&&"bytes"in t.seq[1])return this.algId=new AlgorithmIdentifier(t.seq[0]),void(this.data=t.seq[1].bytes);throw new Error(`error parsing EncryptedPrivateKeyInfo from ${JSON.stringify(t)}`)}static parse(t){return new EncryptedPrivateKeyInfo(decode$3(t))}async decrypt(t){if("1.2.840.113549.1.5.13"!==this.algId.algIdent||!this.algId.parameters)throw new Error(`unsupported key encryption algorithm: ${this.algId.toString()}`);const e=new PBES2Params(this.algId.parameters);if("1.2.840.113549.1.5.12"!==e.kdf.algIdent||!e.kdf.parameters)throw new Error(`unsupported key derivation function: ${e.kdf.toString()}`);const Q=new PBKDF2Params(e.kdf.parameters);if(!Q.prf)throw new Error("unsupported PRF HMAC-SHA-1");if("1.2.840.113549.2.9"!==Q.prf.algIdent)throw new Error(`unsupported PRF ${Q.prf.toString()}`);if("2.16.840.1.101.3.4.1.2"!==e.encScheme.algIdent)throw new Error(`unsupported encryption scheme: ${e.encScheme.toString()}`);if(!e.encScheme.parameters||!("bytes"in e.encScheme.parameters))throw new Error(`expected IV as bytes for AES-128-CBC, got: ${JSON.stringify(e.encScheme.parameters)}`);const B=Q.keyLength||16,s=e.encScheme.parameters.bytes,F=await deriveKey(HashAlgorithm.Sha256,t,Q.salt,Q.iterCount,B),U=await createDecipheriv(CipherAlgorithm.Aes128Cbc,F,s,this.data);return PrivateKeyInfo.parse(U)}}function decode$2(t){return Uint8Array.from(atob(t),(t=>t.charCodeAt(0)))}const BEGIN_PRIVATEKEY="-----BEGIN PRIVATE KEY-----\n",END_PRIVATEKEY="-----END PRIVATE KEY-----\n",BEGIN_ENCRYPTED_PRIVATEKEY="-----BEGIN ENCRYPTED PRIVATE KEY-----\n",END_ENCRYPTED_PRIVATEKEY="-----END ENCRYPTED PRIVATE KEY-----\n";async function read(t,e){const Q=e?BEGIN_ENCRYPTED_PRIVATEKEY:BEGIN_PRIVATEKEY,B=e?END_ENCRYPTED_PRIVATEKEY:END_PRIVATEKEY,s=t.indexOf(Q),F=t.indexOf(B);if(-1===s||-1===F)throw new BadKeyError("failed to find a private key in the PEM file");const U=decode$2(t.slice(s+Q.length,F));if(e){let t;try{t=EncryptedPrivateKeyInfo.parse(U)}catch(t){const e=null!=t&&null!=t.message?t.message:"";throw new BadKeyError(`failed to parse encrypted private key: ${e}`)}const Q=await t.decrypt(e);let B=null;if("1.3.101.112"===Q.algId.algIdent)B=Ed25519PrivateKey;else{if("1.3.132.0.10"!==Q.algId.algIdent)throw new BadKeyError(`unknown private key algorithm ${Q.algId.toString()}`);B=EcdsaPrivateKey}const s=decode$3(Q.privateKey);if(!("bytes"in s))throw new BadKeyError(`expected ASN bytes, got ${JSON.stringify(s)}`);return B.fromBytes(s.bytes)}return U.subarray(16)}function legacy(t,e){const Q=new Uint8Array(t.length+8);Q.set(t,0);const B=new DataView(Q.buffer,Q.byteOffset,Q.byteLength);0xffffffffff===e?(B.setInt32(t.length+0,255),B.setInt32(t.length+4,-1)):(B.setInt32(t.length+0,e<0?-1:0),B.setInt32(t.length+4,e));const s=Uint8Array.from([255]);return deriveKey(HashAlgorithm.Sha512,Q,s,2048,32)}class PrivateKey$1 extends Key$1{constructor(t){super(),this._key=t}get _type(){return this._key._type}static generateED25519(){return new PrivateKey$1(Ed25519PrivateKey.generate())}static generateECDSA(){return new PrivateKey$1(EcdsaPrivateKey.generate())}static generate(){return PrivateKey$1.generateED25519()}static async generateAsync(){return PrivateKey$1.generateED25519Async()}static async generateED25519Async(){return new PrivateKey$1(await Ed25519PrivateKey.generateAsync())}static async generateECDSAAsync(){return new PrivateKey$1(await EcdsaPrivateKey.generateAsync())}static fromBytes(t){try{return new PrivateKey$1(Ed25519PrivateKey.fromBytes(t))}catch{}try{return new PrivateKey$1(EcdsaPrivateKey.fromBytes(t))}catch{}throw new BadKeyError(`invalid private key length: ${t.length} bytes`)}static fromBytesECDSA(t){return new PrivateKey$1(EcdsaPrivateKey.fromBytes(t))}static fromBytesED25519(t){return new PrivateKey$1(Ed25519PrivateKey.fromBytes(t))}static fromString(t){return PrivateKey$1.fromBytes(decode$5(t))}static fromStringECDSA(t){return PrivateKey$1.fromBytesECDSA(decode$5(t))}static fromStringED25519(t){return PrivateKey$1.fromBytesED25519(decode$5(t))}static async fromMnemonic(t,e=""){return("string"==typeof t?await Mnemonic$1.fromString(t):t).toPrivateKey(e)}static async fromKeystore(t,e=""){return PrivateKey$1.fromBytes(await loadKeystore(t,e))}static async fromPem(t,e=""){const Q=await read(t,e);return Q instanceof Ed25519PrivateKey||Q instanceof EcdsaPrivateKey?new PrivateKey$1(Q):PrivateKey$1.fromBytes(Q)}async derive(t){if(null==this._key._chainCode)throw new Error("this private key does not support key derivation");const{keyData:e,chainCode:Q}=await derive(this.toBytesRaw(),this._key._chainCode,t),B=this._key.constructor;return new PrivateKey$1(new B(e,Q))}async legacyDerive(t){const e=await legacy(this.toBytesRaw().subarray(0,32),t),Q=this._key.constructor;return new PrivateKey$1(new Q(e))}get publicKey(){return new PublicKey$1(this._key.publicKey)}sign(t){return this._key.sign(t)}signTransaction(t){if(t._requireFrozen(),t.isFrozen()||t.freeze(),1!=t._signedTransactions.length)throw new Error("`PrivateKey.signTransaction()` requires `Transaction` to have a single node `AccountId` set");const e=t._signedTransactions[0],Q=encode$3(this.publicKey.toBytesRaw());null==e.sigMap&&(e.sigMap={}),null==e.sigMap.sigPair&&(e.sigMap.sigPair=[]);for(const t of e.sigMap.sigPair)if(null!=t.pubKeyPrefix&&encode$3(t.pubKeyPrefix)===Q)switch(this._type){case"ED25519":return t.ed25519;case"secp256k1":return t.ECDSASecp256k1}const B=this.sign(null!=e.bodyBytes?e.bodyBytes:new Uint8Array),s={pubKeyPrefix:this.publicKey.toBytesRaw()};switch(this._type){case"ED25519":s.ed25519=B;break;case"secp256k1":s.ECDSASecp256k1=B}return e.sigMap.sigPair.push(s),t._signerPublicKeys.add(Q),B}isDerivable(){return null!=this._key._chainCode}toBytes(){return this._key instanceof Ed25519PrivateKey?this.toBytesRaw():this.toBytesDer()}toBytesDer(){return this._key.toBytesDer()}toBytesRaw(){return this._key.toBytesRaw()}toString(){return this.toStringDer()}toStringDer(){return encode$3(this.toBytesDer())}toStringRaw(){return encode$3(this.toBytesRaw())}toKeystore(t=""){return createKeystore(this.toBytesRaw(),t)}}const CACHE={contractId:null,keyList:null,thresholdKey:null,publicKeyED25519:null,publicKeyECDSA:null,privateKeyConstructor:null,accountIdConstructor:null,delegateContractId:null};class Mnemonic{constructor(t){this._mnemonic=t}static async generate(){return new Mnemonic(await Mnemonic$1._generate(24))}static async generate12(){return new Mnemonic(await Mnemonic$1._generate(12))}static async fromWords(t){return new Mnemonic(await Mnemonic$1.fromWords(t))}async toPrivateKey(t=""){if(null==CACHE.privateKeyConstructor)throw new Error("`PrivateKey` has not been loaded");return CACHE.privateKeyConstructor(await this._mnemonic.toPrivateKey(t))}static async fromString(t){return new Mnemonic(await Mnemonic$1.fromString(t))}async toLegacyPrivateKey(){if(null==CACHE.privateKeyConstructor)throw new Error("`PrivateKey` has not been loaded");return CACHE.privateKeyConstructor(await this._mnemonic.toLegacyPrivateKey())}toString(){return this._mnemonic.toString()}}function arrayEqual(t,e){if(t===e)return!0;if(t.byteLength!==e.byteLength)return!1;const Q=new DataView(t.buffer,t.byteOffset,t.byteLength),B=new DataView(e.buffer,e.byteOffset,e.byteLength);let s=t.byteLength;for(;s--;)if(Q.getUint8(s)!==B.getUint8(s))return!1;return!0}class Key{_toProtobufKey(){throw new Error("not implemented")}static _fromProtobufKey(t){if(null!=t.contractID){if(null==CACHE.contractId)throw new Error("`ContractId` was not loaded before decoding `Key`");return CACHE.contractId(t.contractID)}if(null!=t.delegatableContractId){if(null==CACHE.delegateContractId)throw new Error("`ContractId` was not loaded before decoding `Key`");return CACHE.delegateContractId(t.delegatableContractId)}if(null!=t.ed25519&&t.ed25519.byteLength>0){if(null==CACHE.publicKeyED25519)throw new Error("`PublicKey` was not loaded before decoding `Key`");return CACHE.publicKeyED25519(t.ed25519)}if(null!=t.ECDSASecp256k1&&t.ECDSASecp256k1.byteLength>0){if(null==CACHE.publicKeyECDSA)throw new Error("`PublicKey` was not loaded before decoding `Key`");return CACHE.publicKeyECDSA(t.ECDSASecp256k1)}if(null!=t.thresholdKey&&null!=t.thresholdKey.threshold){if(null==CACHE.thresholdKey)throw new Error("`PublicKey` was not loaded before decoding `Key`");return CACHE.thresholdKey(t.thresholdKey)}if(null!=t.keyList){if(null==CACHE.keyList)throw new Error("`PublicKey` was not loaded before decoding `Key`");return CACHE.keyList(t.keyList)}throw new Error(`(BUG) keyFromProtobuf: not implemented key case: ${JSON.stringify(t)}`)}}class PublicKey extends Key{constructor(t){super(),this._key=t}static fromBytes(t){return new PublicKey(PublicKey$1.fromBytes(t))}static fromBytesED25519(t){return new PublicKey(PublicKey$1.fromBytesED25519(t))}static fromBytesECDSA(t){return new PublicKey(PublicKey$1.fromBytesECDSA(t))}static fromString(t){return new PublicKey(PublicKey$1.fromString(t))}verify(t,e){return this._key.verify(t,e)}verifyTransaction(t){t._requireFrozen(),t.isFrozen()||t.freeze();for(const e of t._signedTransactions.list)if(null!=e.sigMap&&null!=e.sigMap.sigPair){let t=!1;for(const Q of e.sigMap.sigPair){if(arrayEqual(Q.pubKeyPrefix,this.toBytesRaw())){t=!0;const B=e.bodyBytes;let s=null;if(null!=Q.ed25519?s=Q.ed25519:null!=Q.ECDSASecp256k1&&(s=Q.ECDSASecp256k1),null==s)continue;if(!this.verify(B,s))return!1}}if(!t)return!1}return!0}toBytes(){return this._key.toBytes()}toBytesDer(){return this._key.toBytesDer()}toBytesRaw(){return this._key.toBytesRaw()}toString(){return this._key.toString()}toStringDer(){return this._key.toStringDer()}toStringRaw(){return this._key.toStringRaw()}equals(t){return this._key.equals(t._key)}_toProtobufKey(){switch(this._key._type){case"ED25519":return{ed25519:this._key.toBytesRaw()};case"secp256k1":return{ECDSASecp256k1:this._key.toBytesRaw()};default:throw new Error(`unrecognized key type ${this._key._type}`)}}_toProtobufSignature(t){switch(this._key._type){case"ED25519":return{pubKeyPrefix:this._key.toBytesRaw(),ed25519:t};case"secp256k1":return{pubKeyPrefix:this._key.toBytesRaw(),ECDSASecp256k1:t};default:throw new Error(`unrecognized key type ${this._key._type}`)}}toAccountId(t,e){if(null==CACHE.accountIdConstructor)throw new Error("`AccountId` not loaded");return CACHE.accountIdConstructor(t,e,this)}}CACHE.publicKeyED25519=t=>PublicKey.fromBytesED25519(t),CACHE.publicKeyECDSA=t=>PublicKey.fromBytesECDSA(t);class PrivateKey extends Key{constructor(t){super(),this._key=t}static generateED25519(){return new PrivateKey(PrivateKey$1.generateED25519())}static generateECDSA(){return new PrivateKey(PrivateKey$1.generateECDSA())}static generate(){return PrivateKey.generateED25519()}static async generateAsync(){return new PrivateKey(await PrivateKey$1.generateAsync())}static async generateED25519Async(){return new PrivateKey(await PrivateKey$1.generateED25519Async())}static async generateECDSAAsync(){return new PrivateKey(await PrivateKey$1.generateECDSAAsync())}static fromBytes(t){return new PrivateKey(PrivateKey$1.fromBytes(t))}static fromBytesECDSA(t){return new PrivateKey(PrivateKey$1.fromBytesECDSA(t))}static fromBytesED25519(t){return new PrivateKey(PrivateKey$1.fromBytesED25519(t))}static fromString(t){return new PrivateKey(PrivateKey$1.fromString(t))}static fromStringECDSA(t){return new PrivateKey(PrivateKey$1.fromStringECDSA(t))}static fromStringED25519(t){return new PrivateKey(PrivateKey$1.fromStringED25519(t))}static async fromMnemonic(t,e=""){return new PrivateKey(t instanceof Mnemonic?await PrivateKey$1.fromMnemonic(t._mnemonic,e):await PrivateKey$1.fromMnemonic(t,e))}static async fromKeystore(t,e=""){return new PrivateKey(await PrivateKey$1.fromKeystore(t,e))}static async fromPem(t,e=""){return new PrivateKey(await PrivateKey$1.fromPem(t,e))}async derive(t){return new PrivateKey(await this._key.derive(t))}async legacyDerive(t){return new PrivateKey(await this._key.legacyDerive(t))}get publicKey(){return new PublicKey(this._key.publicKey)}sign(t){return this._key.sign(t)}signTransaction(t){const e=t._signedTransactions.get(0),Q=null!=e.bodyBytes?this.sign(e.bodyBytes):new Uint8Array;return t.addSignature(this.publicKey,Q),Q}isDerivable(){return this._key.isDerivable()}toBytes(){return this._key.toBytes()}toBytesDer(){return this._key.toBytesDer()}toBytesRaw(){return this._key.toBytesRaw()}toString(){return this._key.toStringDer()}toStringDer(){return this._key.toStringDer()}toStringRaw(){return this._key.toStringRaw()}toKeystore(t=""){return this._key.toKeystore(t)}_toProtobufKey(){return this.publicKey._toProtobufKey()}toAccountId(t,e){return this.publicKey.toAccountId(t,e)}}CACHE.privateKeyConstructor=t=>new PrivateKey(t);class KeyList extends Key{constructor(t,e){super(),this._keys=null==t?[]:t,this._threshold=null==e?null:e}static of(...t){return new KeyList(t,null)}static from(t,e,Q){return new KeyList(null==e?Array.from(t):Array.from(t,e,Q))}get threshold(){return this._threshold}setThreshold(t){return this._threshold=t,this}push(...t){return this._keys.push(...t)}splice(t,e,...Q){return new KeyList(this._keys.splice(t,e,...Q),this.threshold)}slice(t,e){return new KeyList(this._keys.slice(t,e),this.threshold)}[Symbol.iterator](){return this._keys[Symbol.iterator]()}toArray(){return this._keys.slice()}toString(){return JSON.stringify({threshold:this._threshold,keys:this._keys.toString()})}_toProtobufKey(){const t=this._keys.map((t=>t._toProtobufKey()));return null==this.threshold?{keyList:{keys:t}}:{thresholdKey:{threshold:this.threshold,keys:{keys:t}}}}static __fromProtobufKeyList(t){const e=(null!=t.keys?t.keys:[]).map((t=>Key._fromProtobufKey(t)));return new KeyList(e)}static __fromProtobufThresoldKey(t){const e=KeyList.__fromProtobufKeyList(null!=t.keys?t.keys:{});return e.setThreshold(null!=t.threshold?t.threshold:0),e}}function valueToLong(t){return BigNumber$1.isBigNumber(t)?t:new BigNumber$1(t.toString())}CACHE.keyList=t=>KeyList.__fromProtobufKeyList(t),CACHE.thresholdKey=t=>KeyList.__fromProtobufThresoldKey(t);class HbarUnit{constructor(t,e,Q){this._name=t,this._symbol=e,this._tinybar=Q,Object.freeze(this)}static fromString(t){switch(t){case HbarUnit.Hbar._symbol:return HbarUnit.Hbar;case HbarUnit.Tinybar._symbol:return HbarUnit.Tinybar;case HbarUnit.Microbar._symbol:return HbarUnit.Microbar;case HbarUnit.Millibar._symbol:return HbarUnit.Millibar;case HbarUnit.Kilobar._symbol:return HbarUnit.Kilobar;case HbarUnit.Megabar._symbol:return HbarUnit.Megabar;case HbarUnit.Gigabar._symbol:return HbarUnit.Gigabar;default:throw new Error("Unknown unit.")}}}HbarUnit.Tinybar=new HbarUnit("tinybar","tℏ",new BigNumber$1(1)),HbarUnit.Microbar=new HbarUnit("microbar","μℏ",new BigNumber$1(100)),HbarUnit.Millibar=new HbarUnit("millibar","mℏ",new BigNumber$1(1e5)),HbarUnit.Hbar=new HbarUnit("hbar","ℏ",new BigNumber$1("100000000")),HbarUnit.Kilobar=new HbarUnit("kilobar","kℏ",new BigNumber$1(1e3).multipliedBy(new BigNumber$1("100000000"))),HbarUnit.Megabar=new HbarUnit("megabar","Mℏ",new BigNumber$1(1e6).multipliedBy(new BigNumber$1("100000000"))),HbarUnit.Gigabar=new HbarUnit("gigabar","Gℏ",new BigNumber$1("1000000000").multipliedBy(new BigNumber$1("100000000")));var long$1=Long$1,wasm$1=null;try{wasm$1=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(t){}function Long$1(t,e,Q){this.low=0|t,this.high=0|e,this.unsigned=!!Q}function isLong$2(t){return!0===(t&&t.__isLong__)}Long$1.prototype.__isLong__,Object.defineProperty(Long$1.prototype,"__isLong__",{value:!0}),Long$1.isLong=isLong$2;var INT_CACHE$1={},UINT_CACHE$1={};function fromInt$1(t,e){var Q,B,s;return e?(s=0<=(t>>>=0)&&t<256)&&(B=UINT_CACHE$1[t])?B:(Q=fromBits$1(t,(0|t)<0?-1:0,!0),s&&(UINT_CACHE$1[t]=Q),Q):(s=-128<=(t|=0)&&t<128)&&(B=INT_CACHE$1[t])?B:(Q=fromBits$1(t,t<0?-1:0,!1),s&&(INT_CACHE$1[t]=Q),Q)}function fromNumber$1(t,e){if(isNaN(t))return e?UZERO$1:ZERO$1;if(e){if(t<0)return UZERO$1;if(t>=TWO_PWR_64_DBL$1)return MAX_UNSIGNED_VALUE$1}else{if(t<=-TWO_PWR_63_DBL$1)return MIN_VALUE$1;if(t+1>=TWO_PWR_63_DBL$1)return MAX_VALUE$1}return t<0?fromNumber$1(-t,e).neg():fromBits$1(t%TWO_PWR_32_DBL$1|0,t/TWO_PWR_32_DBL$1|0,e)}function fromBits$1(t,e,Q){return new Long$1(t,e,Q)}Long$1.fromInt=fromInt$1,Long$1.fromNumber=fromNumber$1,Long$1.fromBits=fromBits$1;var pow_dbl$1=Math.pow;function fromString$2(t,e,Q){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return ZERO$1;if("number"==typeof e?(Q=e,e=!1):e=!!e,(Q=Q||10)<2||36<Q)throw RangeError("radix");var B;if((B=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===B)return fromString$2(t.substring(1),e,Q).neg();for(var s=fromNumber$1(pow_dbl$1(Q,8)),F=ZERO$1,U=0;U<t.length;U+=8){var n=Math.min(8,t.length-U),c=parseInt(t.substring(U,U+n),Q);if(n<8){var o=fromNumber$1(pow_dbl$1(Q,n));F=F.mul(o).add(fromNumber$1(c))}else F=(F=F.mul(s)).add(fromNumber$1(c))}return F.unsigned=e,F}function fromValue$1(t,e){return"number"==typeof t?fromNumber$1(t,e):"string"==typeof t?fromString$2(t,e):fromBits$1(t.low,t.high,"boolean"==typeof e?e:t.unsigned)}Long$1.fromString=fromString$2,Long$1.fromValue=fromValue$1;var TWO_PWR_16_DBL$1=65536,TWO_PWR_24_DBL$1=1<<24,TWO_PWR_32_DBL$1=TWO_PWR_16_DBL$1*TWO_PWR_16_DBL$1,TWO_PWR_64_DBL$1=TWO_PWR_32_DBL$1*TWO_PWR_32_DBL$1,TWO_PWR_63_DBL$1=TWO_PWR_64_DBL$1/2,TWO_PWR_24$1=fromInt$1(TWO_PWR_24_DBL$1),ZERO$1=fromInt$1(0);Long$1.ZERO=ZERO$1;var UZERO$1=fromInt$1(0,!0);Long$1.UZERO=UZERO$1;var ONE$1=fromInt$1(1);Long$1.ONE=ONE$1;var UONE$1=fromInt$1(1,!0);Long$1.UONE=UONE$1;var NEG_ONE$1=fromInt$1(-1);Long$1.NEG_ONE=NEG_ONE$1;var MAX_VALUE$1=fromBits$1(-1,2147483647,!1);Long$1.MAX_VALUE=MAX_VALUE$1;var MAX_UNSIGNED_VALUE$1=fromBits$1(-1,-1,!0);Long$1.MAX_UNSIGNED_VALUE=MAX_UNSIGNED_VALUE$1;var MIN_VALUE$1=fromBits$1(0,-2147483648,!1);Long$1.MIN_VALUE=MIN_VALUE$1;var LongPrototype$1=Long$1.prototype;LongPrototype$1.toInt=function(){return this.unsigned?this.low>>>0:this.low},LongPrototype$1.toNumber=function(){return this.unsigned?(this.high>>>0)*TWO_PWR_32_DBL$1+(this.low>>>0):this.high*TWO_PWR_32_DBL$1+(this.low>>>0)},LongPrototype$1.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(MIN_VALUE$1)){var e=fromNumber$1(t),Q=this.div(e),B=Q.mul(e).sub(this);return Q.toString(t)+B.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var s=fromNumber$1(pow_dbl$1(t,6),this.unsigned),F=this,U="";;){var n=F.div(s),c=(F.sub(n.mul(s)).toInt()>>>0).toString(t);if((F=n).isZero())return c+U;for(;c.length<6;)c="0"+c;U=""+c+U}},LongPrototype$1.getHighBits=function(){return this.high},LongPrototype$1.getHighBitsUnsigned=function(){return this.high>>>0},LongPrototype$1.getLowBits=function(){return this.low},LongPrototype$1.getLowBitsUnsigned=function(){return this.low>>>0},LongPrototype$1.getNumBitsAbs=function(){if(this.isNegative())return this.eq(MIN_VALUE$1)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},LongPrototype$1.isZero=function(){return 0===this.high&&0===this.low},LongPrototype$1.eqz=LongPrototype$1.isZero,LongPrototype$1.isNegative=function(){return!this.unsigned&&this.high<0},LongPrototype$1.isPositive=function(){return this.unsigned||this.high>=0},LongPrototype$1.isOdd=function(){return 1==(1&this.low)},LongPrototype$1.isEven=function(){return 0==(1&this.low)},LongPrototype$1.equals=function(t){return isLong$2(t)||(t=fromValue$1(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&(this.high===t.high&&this.low===t.low)},LongPrototype$1.eq=LongPrototype$1.equals,LongPrototype$1.notEquals=function(t){return!this.eq(t)},LongPrototype$1.neq=LongPrototype$1.notEquals,LongPrototype$1.ne=LongPrototype$1.notEquals,LongPrototype$1.lessThan=function(t){return this.comp(t)<0},LongPrototype$1.lt=LongPrototype$1.lessThan,LongPrototype$1.lessThanOrEqual=function(t){return this.comp(t)<=0},LongPrototype$1.lte=LongPrototype$1.lessThanOrEqual,LongPrototype$1.le=LongPrototype$1.lessThanOrEqual,LongPrototype$1.greaterThan=function(t){return this.comp(t)>0},LongPrototype$1.gt=LongPrototype$1.greaterThan,LongPrototype$1.greaterThanOrEqual=function(t){return this.comp(t)>=0},LongPrototype$1.gte=LongPrototype$1.greaterThanOrEqual,LongPrototype$1.ge=LongPrototype$1.greaterThanOrEqual,LongPrototype$1.compare=function(t){if(isLong$2(t)||(t=fromValue$1(t)),this.eq(t))return 0;var e=this.isNegative(),Q=t.isNegative();return e&&!Q?-1:!e&&Q?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},LongPrototype$1.comp=LongPrototype$1.compare,LongPrototype$1.negate=function(){return!this.unsigned&&this.eq(MIN_VALUE$1)?MIN_VALUE$1:this.not().add(ONE$1)},LongPrototype$1.neg=LongPrototype$1.negate,LongPrototype$1.add=function(t){isLong$2(t)||(t=fromValue$1(t));var e=this.high>>>16,Q=65535&this.high,B=this.low>>>16,s=65535&this.low,F=t.high>>>16,U=65535&t.high,n=t.low>>>16,c=0,o=0,g=0,l=0;return g+=(l+=s+(65535&t.low))>>>16,o+=(g+=B+n)>>>16,c+=(o+=Q+U)>>>16,c+=e+F,fromBits$1((g&=65535)<<16|(l&=65535),(c&=65535)<<16|(o&=65535),this.unsigned)},LongPrototype$1.subtract=function(t){return isLong$2(t)||(t=fromValue$1(t)),this.add(t.neg())},LongPrototype$1.sub=LongPrototype$1.subtract,LongPrototype$1.multiply=function(t){if(this.isZero())return ZERO$1;if(isLong$2(t)||(t=fromValue$1(t)),wasm$1)return fromBits$1(wasm$1.mul(this.low,this.high,t.low,t.high),wasm$1.get_high(),this.unsigned);if(t.isZero())return ZERO$1;if(this.eq(MIN_VALUE$1))return t.isOdd()?MIN_VALUE$1:ZERO$1;if(t.eq(MIN_VALUE$1))return this.isOdd()?MIN_VALUE$1:ZERO$1;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(TWO_PWR_24$1)&&t.lt(TWO_PWR_24$1))return fromNumber$1(this.toNumber()*t.toNumber(),this.unsigned);var e=this.high>>>16,Q=65535&this.high,B=this.low>>>16,s=65535&this.low,F=t.high>>>16,U=65535&t.high,n=t.low>>>16,c=65535&t.low,o=0,g=0,l=0,I=0;return l+=(I+=s*c)>>>16,g+=(l+=B*c)>>>16,l&=65535,g+=(l+=s*n)>>>16,o+=(g+=Q*c)>>>16,g&=65535,o+=(g+=B*n)>>>16,g&=65535,o+=(g+=s*U)>>>16,o+=e*c+Q*n+B*U+s*F,fromBits$1((l&=65535)<<16|(I&=65535),(o&=65535)<<16|(g&=65535),this.unsigned)},LongPrototype$1.mul=LongPrototype$1.multiply,LongPrototype$1.divide=function(t){if(isLong$2(t)||(t=fromValue$1(t)),t.isZero())throw Error("division by zero");var e,Q,B;if(wasm$1)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?fromBits$1((this.unsigned?wasm$1.div_u:wasm$1.div_s)(this.low,this.high,t.low,t.high),wasm$1.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?UZERO$1:ZERO$1;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return UZERO$1;if(t.gt(this.shru(1)))return UONE$1;B=UZERO$1}else{if(this.eq(MIN_VALUE$1))return t.eq(ONE$1)||t.eq(NEG_ONE$1)?MIN_VALUE$1:t.eq(MIN_VALUE$1)?ONE$1:(e=this.shr(1).div(t).shl(1)).eq(ZERO$1)?t.isNegative()?ONE$1:NEG_ONE$1:(Q=this.sub(t.mul(e)),B=e.add(Q.div(t)));if(t.eq(MIN_VALUE$1))return this.unsigned?UZERO$1:ZERO$1;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();B=ZERO$1}for(Q=this;Q.gte(t);){e=Math.max(1,Math.floor(Q.toNumber()/t.toNumber()));for(var s=Math.ceil(Math.log(e)/Math.LN2),F=s<=48?1:pow_dbl$1(2,s-48),U=fromNumber$1(e),n=U.mul(t);n.isNegative()||n.gt(Q);)n=(U=fromNumber$1(e-=F,this.unsigned)).mul(t);U.isZero()&&(U=ONE$1),B=B.add(U),Q=Q.sub(n)}return B},LongPrototype$1.div=LongPrototype$1.divide,LongPrototype$1.modulo=function(t){return isLong$2(t)||(t=fromValue$1(t)),wasm$1?fromBits$1((this.unsigned?wasm$1.rem_u:wasm$1.rem_s)(this.low,this.high,t.low,t.high),wasm$1.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},LongPrototype$1.mod=LongPrototype$1.modulo,LongPrototype$1.rem=LongPrototype$1.modulo,LongPrototype$1.not=function(){return fromBits$1(~this.low,~this.high,this.unsigned)},LongPrototype$1.and=function(t){return isLong$2(t)||(t=fromValue$1(t)),fromBits$1(this.low&t.low,this.high&t.high,this.unsigned)},LongPrototype$1.or=function(t){return isLong$2(t)||(t=fromValue$1(t)),fromBits$1(this.low|t.low,this.high|t.high,this.unsigned)},LongPrototype$1.xor=function(t){return isLong$2(t)||(t=fromValue$1(t)),fromBits$1(this.low^t.low,this.high^t.high,this.unsigned)},LongPrototype$1.shiftLeft=function(t){return isLong$2(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?fromBits$1(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):fromBits$1(0,this.low<<t-32,this.unsigned)},LongPrototype$1.shl=LongPrototype$1.shiftLeft,LongPrototype$1.shiftRight=function(t){return isLong$2(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?fromBits$1(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):fromBits$1(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},LongPrototype$1.shr=LongPrototype$1.shiftRight,LongPrototype$1.shiftRightUnsigned=function(t){if(isLong$2(t)&&(t=t.toInt()),0===(t&=63))return this;var e=this.high;return t<32?fromBits$1(this.low>>>t|e<<32-t,e>>>t,this.unsigned):fromBits$1(32===t?e:e>>>t-32,0,this.unsigned)},LongPrototype$1.shru=LongPrototype$1.shiftRightUnsigned,LongPrototype$1.shr_u=LongPrototype$1.shiftRightUnsigned,LongPrototype$1.toSigned=function(){return this.unsigned?fromBits$1(this.low,this.high,!1):this},LongPrototype$1.toUnsigned=function(){return this.unsigned?this:fromBits$1(this.low,this.high,!0)},LongPrototype$1.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},LongPrototype$1.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},LongPrototype$1.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},Long$1.fromBytes=function(t,e,Q){return Q?Long$1.fromBytesLE(t,e):Long$1.fromBytesBE(t,e)},Long$1.fromBytesLE=function(t,e){return new Long$1(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},Long$1.fromBytesBE=function(t,e){return new Long$1(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};class Hbar{constructor(t,e=HbarUnit.Hbar){if(e===HbarUnit.Tinybar)this._valueInTinybar=valueToLong(t);else{let Q;Q=long$1.isLong(t)?new BigNumber$1(t.toString(10)):BigNumber$1.isBigNumber(t)||"string"==typeof t||"number"==typeof t?new BigNumber$1(t):new BigNumber$1(0),this._valueInTinybar=Q.multipliedBy(e._tinybar)}if(!this._valueInTinybar.isInteger())throw new Error("Hbar in tinybars contains decimals")}static from(t,e){return new Hbar(t,e)}static fromTinybars(t){return"string"==typeof t?this.fromString(t,HbarUnit.Tinybar):new Hbar(t,HbarUnit.Tinybar)}static fromString(t,e=HbarUnit.Hbar){if(/^((?:\+|-)?\d+(?:\.\d+)?)(?: (tℏ|μℏ|mℏ|ℏ|kℏ|Mℏ|Gℏ))?$/.test(t)){let[Q,B]=t.split(" ");return null!=B&&(e=HbarUnit.fromString(B)),new Hbar(new BigNumber$1(Q),e)}throw new Error("invalid argument provided")}to(t){return this._valueInTinybar.dividedBy(t._tinybar)}toBigNumber(){return this.to(HbarUnit.Hbar)}toTinybars(){return long$1.fromValue(this._valueInTinybar.toFixed())}negated(){return Hbar.fromTinybars(this._valueInTinybar.negated())}toString(t){return null!=t?`${this._valueInTinybar.dividedBy(t._tinybar).toString()} ${t._symbol}`:this._valueInTinybar.isLessThan(1e4)&&this._valueInTinybar.isGreaterThan(-1e4)?`${this._valueInTinybar.toFixed()} ${HbarUnit.Tinybar._symbol}`:`${this.to(HbarUnit.Hbar).toString()} ${HbarUnit.Hbar._symbol}`}}class StatusError extends Error{constructor(t,e){super(e),this.name="StatusError",this.status=t.status,this.transactionId=t.transactionId,this.message=e,void 0!==Error.captureStackTrace&&Error.captureStackTrace(this,StatusError)}}class ReceiptStatusError extends StatusError{constructor(t){super(t,`receipt for transaction ${t.transactionId.toString()} contained error status ${t.status.toString()}`),this.transactionReceipt=t.transactionReceipt}}class Status{constructor(t){this._code=t,Object.freeze(this)}toString(){switch(this){case Status.Ok:return"OK";case Status.InvalidTransaction:return"INVALID_TRANSACTION";case Status.PayerAccountNotFound:return"PAYER_ACCOUNT_NOT_FOUND";case Status.InvalidNodeAccount:return"INVALID_NODE_ACCOUNT";case Status.TransactionExpired:return"TRANSACTION_EXPIRED";case Status.InvalidTransactionStart:return"INVALID_TRANSACTION_START";case Status.InvalidTransactionDuration:return"INVALID_TRANSACTION_DURATION";case Status.InvalidSignature:return"INVALID_SIGNATURE";case Status.MemoTooLong:return"MEMO_TOO_LONG";case Status.InsufficientTxFee:return"INSUFFICIENT_TX_FEE";case Status.InsufficientPayerBalance:return"INSUFFICIENT_PAYER_BALANCE";case Status.DuplicateTransaction:return"DUPLICATE_TRANSACTION";case Status.Busy:return"BUSY";case Status.NotSupported:return"NOT_SUPPORTED";case Status.InvalidFileId:return"INVALID_FILE_ID";case Status.InvalidAccountId:return"INVALID_ACCOUNT_ID";case Status.InvalidContractId:return"INVALID_CONTRACT_ID";case Status.InvalidTransactionId:return"INVALID_TRANSACTION_ID";case Status.ReceiptNotFound:return"RECEIPT_NOT_FOUND";case Status.RecordNotFound:return"RECORD_NOT_FOUND";case Status.InvalidSolidityId:return"INVALID_SOLIDITY_ID";case Status.Unknown:return"UNKNOWN";case Status.Success:return"SUCCESS";case Status.FailInvalid:return"FAIL_INVALID";case Status.FailFee:return"FAIL_FEE";case Status.FailBalance:return"FAIL_BALANCE";case Status.KeyRequired:return"KEY_REQUIRED";case Status.BadEncoding:return"BAD_ENCODING";case Status.InsufficientAccountBalance:return"INSUFFICIENT_ACCOUNT_BALANCE";case Status.InvalidSolidityAddress:return"INVALID_SOLIDITY_ADDRESS";case Status.InsufficientGas:return"INSUFFICIENT_GAS";case Status.ContractSizeLimitExceeded:return"CONTRACT_SIZE_LIMIT_EXCEEDED";case Status.LocalCallModificationException:return"LOCAL_CALL_MODIFICATION_EXCEPTION";case Status.ContractRevertExecuted:return"CONTRACT_REVERT_EXECUTED";case Status.ContractExecutionException:return"CONTRACT_EXECUTION_EXCEPTION";case Status.InvalidReceivingNodeAccount:return"INVALID_RECEIVING_NODE_ACCOUNT";case Status.MissingQueryHeader:return"MISSING_QUERY_HEADER";case Status.AccountUpdateFailed:return"ACCOUNT_UPDATE_FAILED";case Status.InvalidKeyEncoding:return"INVALID_KEY_ENCODING";case Status.NullSolidityAddress:return"NULL_SOLIDITY_ADDRESS";case Status.ContractUpdateFailed:return"CONTRACT_UPDATE_FAILED";case Status.InvalidQueryHeader:return"INVALID_QUERY_HEADER";case Status.InvalidFeeSubmitted:return"INVALID_FEE_SUBMITTED";case Status.InvalidPayerSignature:return"INVALID_PAYER_SIGNATURE";case Status.KeyNotProvided:return"KEY_NOT_PROVIDED";case Status.InvalidExpirationTime:return"INVALID_EXPIRATION_TIME";case Status.NoWaclKey:return"NO_WACL_KEY";case Status.FileContentEmpty:return"FILE_CONTENT_EMPTY";case Status.InvalidAccountAmounts:return"INVALID_ACCOUNT_AMOUNTS";case Status.EmptyTransactionBody:return"EMPTY_TRANSACTION_BODY";case Status.InvalidTransactionBody:return"INVALID_TRANSACTION_BODY";case Status.InvalidSignatureTypeMismatchingKey:return"INVALID_SIGNATURE_TYPE_MISMATCHING_KEY";case Status.InvalidSignatureCountMismatchingKey:return"INVALID_SIGNATURE_COUNT_MISMATCHING_KEY";case Status.EmptyLiveHashBody:return"EMPTY_LIVE_HASH_BODY";case Status.EmptyLiveHash:return"EMPTY_LIVE_HASH";case Status.EmptyLiveHashKeys:return"EMPTY_LIVE_HASH_KEYS";case Status.InvalidLiveHashSize:return"INVALID_LIVE_HASH_SIZE";case Status.EmptyQueryBody:return"EMPTY_QUERY_BODY";case Status.EmptyLiveHashQuery:return"EMPTY_LIVE_HASH_QUERY";case Status.LiveHashNotFound:return"LIVE_HASH_NOT_FOUND";case Status.AccountIdDoesNotExist:return"ACCOUNT_ID_DOES_NOT_EXIST";case Status.LiveHashAlreadyExists:return"LIVE_HASH_ALREADY_EXISTS";case Status.InvalidFileWacl:return"INVALID_FILE_WACL";case Status.SerializationFailed:return"SERIALIZATION_FAILED";case Status.TransactionOversize:return"TRANSACTION_OVERSIZE";case Status.TransactionTooManyLayers:return"TRANSACTION_TOO_MANY_LAYERS";case Status.ContractDeleted:return"CONTRACT_DELETED";case Status.PlatformNotActive:return"PLATFORM_NOT_ACTIVE";case Status.KeyPrefixMismatch:return"KEY_PREFIX_MISMATCH";case Status.PlatformTransactionNotCreated:return"PLATFORM_TRANSACTION_NOT_CREATED";case Status.InvalidRenewalPeriod:return"INVALID_RENEWAL_PERIOD";case Status.InvalidPayerAccountId:return"INVALID_PAYER_ACCOUNT_ID";case Status.AccountDeleted:return"ACCOUNT_DELETED";case Status.FileDeleted:return"FILE_DELETED";case Status.AccountRepeatedInAccountAmounts:return"ACCOUNT_REPEATED_IN_ACCOUNT_AMOUNTS";case Status.SettingNegativeAccountBalance:return"SETTING_NEGATIVE_ACCOUNT_BALANCE";case Status.ObtainerRequired:return"OBTAINER_REQUIRED";case Status.ObtainerSameContractId:return"OBTAINER_SAME_CONTRACT_ID";case Status.ObtainerDoesNotExist:return"OBTAINER_DOES_NOT_EXIST";case Status.ModifyingImmutableContract:return"MODIFYING_IMMUTABLE_CONTRACT";case Status.FileSystemException:return"FILE_SYSTEM_EXCEPTION";case Status.AutorenewDurationNotInRange:return"AUTORENEW_DURATION_NOT_IN_RANGE";case Status.ErrorDecodingBytestring:return"ERROR_DECODING_BYTESTRING";case Status.ContractFileEmpty:return"CONTRACT_FILE_EMPTY";case Status.ContractBytecodeEmpty:return"CONTRACT_BYTECODE_EMPTY";case Status.InvalidInitialBalance:return"INVALID_INITIAL_BALANCE";case Status.InvalidReceiveRecordThreshold:return"INVALID_RECEIVE_RECORD_THRESHOLD";case Status.InvalidSendRecordThreshold:return"INVALID_SEND_RECORD_THRESHOLD";case Status.AccountIsNotGenesisAccount:return"ACCOUNT_IS_NOT_GENESIS_ACCOUNT";case Status.PayerAccountUnauthorized:return"PAYER_ACCOUNT_UNAUTHORIZED";case Status.InvalidFreezeTransactionBody:return"INVALID_FREEZE_TRANSACTION_BODY";case Status.FreezeTransactionBodyNotFound:return"FREEZE_TRANSACTION_BODY_NOT_FOUND";case Status.TransferListSizeLimitExceeded:return"TRANSFER_LIST_SIZE_LIMIT_EXCEEDED";case Status.ResultSizeLimitExceeded:return"RESULT_SIZE_LIMIT_EXCEEDED";case Status.NotSpecialAccount:return"NOT_SPECIAL_ACCOUNT";case Status.ContractNegativeGas:return"CONTRACT_NEGATIVE_GAS";case Status.ContractNegativeValue:return"CONTRACT_NEGATIVE_VALUE";case Status.InvalidFeeFile:return"INVALID_FEE_FILE";case Status.InvalidExchangeRateFile:return"INVALID_EXCHANGE_RATE_FILE";case Status.InsufficientLocalCallGas:return"INSUFFICIENT_LOCAL_CALL_GAS";case Status.EntityNotAllowedToDelete:return"ENTITY_NOT_ALLOWED_TO_DELETE";case Status.AuthorizationFailed:return"AUTHORIZATION_FAILED";case Status.FileUploadedProtoInvalid:return"FILE_UPLOADED_PROTO_INVALID";case Status.FileUploadedProtoNotSavedToDisk:return"FILE_UPLOADED_PROTO_NOT_SAVED_TO_DISK";case Status.FeeScheduleFilePartUploaded:return"FEE_SCHEDULE_FILE_PART_UPLOADED";case Status.ExchangeRateChangeLimitExceeded:return"EXCHANGE_RATE_CHANGE_LIMIT_EXCEEDED";case Status.MaxContractStorageExceeded:return"MAX_CONTRACT_STORAGE_EXCEEDED";case Status.TransferAccountSameAsDeleteAccount:return"TRANSFER_ACCOUNT_SAME_AS_DELETE_ACCOUNT";case Status.TotalLedgerBalanceInvalid:return"TOTAL_LEDGER_BALANCE_INVALID";case Status.ExpirationReductionNotAllowed:return"EXPIRATION_REDUCTION_NOT_ALLOWED";case Status.MaxGasLimitExceeded:return"MAX_GAS_LIMIT_EXCEEDED";case Status.MaxFileSizeExceeded:return"MAX_FILE_SIZE_EXCEEDED";case Status.ReceiverSigRequired:return"RECEIVER_SIG_REQUIRED";case Status.InvalidTopicId:return"INVALID_TOPIC_ID";case Status.InvalidAdminKey:return"INVALID_ADMIN_KEY";case Status.InvalidSubmitKey:return"INVALID_SUBMIT_KEY";case Status.Unauthorized:return"UNAUTHORIZED";case Status.InvalidTopicMessage:return"INVALID_TOPIC_MESSAGE";case Status.InvalidAutorenewAccount:return"INVALID_AUTORENEW_ACCOUNT";case Status.AutorenewAccountNotAllowed:return"AUTORENEW_ACCOUNT_NOT_ALLOWED";case Status.TopicExpired:return"TOPIC_EXPIRED";case Status.InvalidChunkNumber:return"INVALID_CHUNK_NUMBER";case Status.InvalidChunkTransactionId:return"INVALID_CHUNK_TRANSACTION_ID";case Status.AccountFrozenForToken:return"ACCOUNT_FROZEN_FOR_TOKEN";case Status.TokensPerAccountLimitExceeded:return"TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED";case Status.InvalidTokenId:return"INVALID_TOKEN_ID";case Status.InvalidTokenDecimals:return"INVALID_TOKEN_DECIMALS";case Status.InvalidTokenInitialSupply:return"INVALID_TOKEN_INITIAL_SUPPLY";case Status.InvalidTreasuryAccountForToken:return"INVALID_TREASURY_ACCOUNT_FOR_TOKEN";case Status.InvalidTokenSymbol:return"INVALID_TOKEN_SYMBOL";case Status.TokenHasNoFreezeKey:return"TOKEN_HAS_NO_FREEZE_KEY";case Status.TransfersNotZeroSumForToken:return"TRANSFERS_NOT_ZERO_SUM_FOR_TOKEN";case Status.MissingTokenSymbol:return"MISSING_TOKEN_SYMBOL";case Status.TokenSymbolTooLong:return"TOKEN_SYMBOL_TOO_LONG";case Status.AccountKycNotGrantedForToken:return"ACCOUNT_KYC_NOT_GRANTED_FOR_TOKEN";case Status.TokenHasNoKycKey:return"TOKEN_HAS_NO_KYC_KEY";case Status.InsufficientTokenBalance:return"INSUFFICIENT_TOKEN_BALANCE";case Status.TokenWasDeleted:return"TOKEN_WAS_DELETED";case Status.TokenHasNoSupplyKey:return"TOKEN_HAS_NO_SUPPLY_KEY";case Status.TokenHasNoWipeKey:return"TOKEN_HAS_NO_WIPE_KEY";case Status.InvalidTokenMintAmount:return"INVALID_TOKEN_MINT_AMOUNT";case Status.InvalidTokenBurnAmount:return"INVALID_TOKEN_BURN_AMOUNT";case Status.TokenNotAssociatedToAccount:return"TOKEN_NOT_ASSOCIATED_TO_ACCOUNT";case Status.CannotWipeTokenTreasuryAccount:return"CANNOT_WIPE_TOKEN_TREASURY_ACCOUNT";case Status.InvalidKycKey:return"INVALID_KYC_KEY";case Status.InvalidWipeKey:return"INVALID_WIPE_KEY";case Status.InvalidFreezeKey:return"INVALID_FREEZE_KEY";case Status.InvalidSupplyKey:return"INVALID_SUPPLY_KEY";case Status.MissingTokenName:return"MISSING_TOKEN_NAME";case Status.TokenNameTooLong:return"TOKEN_NAME_TOO_LONG";case Status.InvalidWipingAmount:return"INVALID_WIPING_AMOUNT";case Status.TokenIsImmutable:return"TOKEN_IS_IMMUTABLE";case Status.TokenAlreadyAssociatedToAccount:return"TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT";case Status.TransactionRequiresZeroTokenBalances:return"TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES";case Status.AccountIsTreasury:return"ACCOUNT_IS_TREASURY";case Status.TokenIdRepeatedInTokenList:return"TOKEN_ID_REPEATED_IN_TOKEN_LIST";case Status.TokenTransferListSizeLimitExceeded:return"TOKEN_TRANSFER_LIST_SIZE_LIMIT_EXCEEDED";case Status.EmptyTokenTransferBody:return"EMPTY_TOKEN_TRANSFER_BODY";case Status.EmptyTokenTransferAccountAmounts:return"EMPTY_TOKEN_TRANSFER_ACCOUNT_AMOUNTS";case Status.InvalidScheduleId:return"INVALID_SCHEDULE_ID";case Status.ScheduleIsImmutable:return"SCHEDULE_IS_IMMUTABLE";case Status.InvalidSchedulePayerId:return"INVALID_SCHEDULE_PAYER_ID";case Status.InvalidScheduleAccountId:return"INVALID_SCHEDULE_ACCOUNT_ID";case Status.NoNewValidSignatures:return"NO_NEW_VALID_SIGNATURES";case Status.UnresolvableRequiredSigners:return"UNRESOLVABLE_REQUIRED_SIGNERS";case Status.ScheduledTransactionNotInWhitelist:return"SCHEDULED_TRANSACTION_NOT_IN_WHITELIST";case Status.SomeSignaturesWereInvalid:return"SOME_SIGNATURES_WERE_INVALID";case Status.TransactionIdFieldNotAllowed:return"TRANSACTION_ID_FIELD_NOT_ALLOWED";case Status.IdenticalScheduleAlreadyCreated:return"IDENTICAL_SCHEDULE_ALREADY_CREATED";case Status.InvalidZeroByteInString:return"INVALID_ZERO_BYTE_IN_STRING";case Status.ScheduleAlreadyDeleted:return"SCHEDULE_ALREADY_DELETED";case Status.ScheduleAlreadyExecuted:return"SCHEDULE_ALREADY_EXECUTED";case Status.MessageSizeTooLarge:return"MESSAGE_SIZE_TOO_LARGE";case Status.OperationRepeatedInBucketGroups:return"OPERATION_REPEATED_IN_BUCKET_GROUPS";case Status.BucketCapacityOverflow:return"BUCKET_CAPACITY_OVERFLOW";case Status.NodeCapacityNotSufficientForOperation:return"NODE_CAPACITY_NOT_SUFFICIENT_FOR_OPERATION";case Status.BucketHasNoThrottleGroups:return"BUCKET_HAS_NO_THROTTLE_GROUPS";case Status.ThrottleGroupHasZeroOpsPerSec:return"THROTTLE_GROUP_HAS_ZERO_OPS_PER_SEC";case Status.SuccessButMissingExpectedOperation:return"SUCCESS_BUT_MISSING_EXPECTED_OPERATION";case Status.UnparseableThrottleDefinitions:return"UNPARSEABLE_THROTTLE_DEFINITIONS";case Status.InvalidThrottleDefinitions:return"INVALID_THROTTLE_DEFINITIONS";case Status.AccountExpiredAndPendingRemoval:return"ACCOUNT_EXPIRED_AND_PENDING_REMOVAL";case Status.InvalidTokenMaxSupply:return"INVALID_TOKEN_MAX_SUPPLY";case Status.InvalidTokenNftSerialNumber:return"INVALID_TOKEN_NFT_SERIAL_NUMBER";case Status.InvalidNftId:return"INVALID_NFT_ID";case Status.MetadataTooLong:return"METADATA_TOO_LONG";case Status.BatchSizeLimitExceeded:return"BATCH_SIZE_LIMIT_EXCEEDED";case Status.InvalidQueryRange:return"INVALID_QUERY_RANGE";case Status.FractionDividesByZero:return"FRACTION_DIVIDES_BY_ZERO";case Status.InsufficientPayerBalanceForCustomFee:return"INSUFFICIENT_PAYER_BALANCE_FOR_CUSTOM_FEE";case Status.CustomFeesListTooLong:return"CUSTOM_FEES_LIST_TOO_LONG";case Status.InvalidCustomFeeCollector:return"INVALID_CUSTOM_FEE_COLLECTOR";case Status.InvalidTokenIdInCustomFees:return"INVALID_TOKEN_ID_IN_CUSTOM_FEES";case Status.TokenNotAssociatedToFeeCollector:return"TOKEN_NOT_ASSOCIATED_TO_FEE_COLLECTOR";case Status.TokenMaxSupplyReached:return"TOKEN_MAX_SUPPLY_REACHED";case Status.SenderDoesNotOwnNftSerialNo:return"SENDER_DOES_NOT_OWN_NFT_SERIAL_NO";case Status.CustomFeeNotFullySpecified:return"CUSTOM_FEE_NOT_FULLY_SPECIFIED";case Status.CustomFeeMustBePositive:return"CUSTOM_FEE_MUST_BE_POSITIVE";case Status.TokenHasNoFeeScheduleKey:return"TOKEN_HAS_NO_FEE_SCHEDULE_KEY";case Status.CustomFeeOutsideNumericRange:return"CUSTOM_FEE_OUTSIDE_NUMERIC_RANGE";case Status.RoyaltyFractionCannotExceedOne:return"ROYALTY_FRACTION_CANNOT_EXCEED_ONE";case Status.FractionalFeeMaxAmountLessThanMinAmount:return"FRACTIONAL_FEE_MAX_AMOUNT_LESS_THAN_MIN_AMOUNT";case Status.CustomScheduleAlreadyHasNoFees:return"CUSTOM_SCHEDULE_ALREADY_HAS_NO_FEES";case Status.CustomFeeDenominationMustBeFungibleCommon:return"CUSTOM_FEE_DENOMINATION_MUST_BE_FUNGIBLE_COMMON";case Status.CustomFractionalFeeOnlyAllowedForFungibleCommon:return"CUSTOM_FRACTIONAL_FEE_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON";case Status.InvalidCustomFeeScheduleKey:return"INVALID_CUSTOM_FEE_SCHEDULE_KEY";case Status.InvalidTokenMintMetadata:return"INVALID_TOKEN_MINT_METADATA";case Status.InvalidTokenBurnMetadata:return"INVALID_TOKEN_BURN_METADATA";case Status.CurrentTreasuryStillOwnsNfts:return"CURRENT_TREASURY_STILL_OWNS_NFTS";case Status.AccountStillOwnsNfts:return"ACCOUNT_STILL_OWNS_NFTS";case Status.TreasuryMustOwnBurnedNft:return"TREASURY_MUST_OWN_BURNED_NFT";case Status.AccountDoesNotOwnWipedNft:return"ACCOUNT_DOES_NOT_OWN_WIPED_NFT";case Status.AccountAmountTransfersOnlyAllowedForFungibleCommon:return"ACCOUNT_AMOUNT_TRANSFERS_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON";case Status.MaxNftsInPriceRegimeHaveBeenMinted:return"MAX_NFTS_IN_PRICE_REGIME_HAVE_BEEN_MINTED";case Status.PayerAccountDeleted:return"PAYER_ACCOUNT_DELETED";case Status.CustomFeeChargingExceededMaxRecursionDepth:return"CUSTOM_FEE_CHARGING_EXCEEDED_MAX_RECURSION_DEPTH";case Status.CustomFeeChargingExceededMaxAccountAmounts:return"CUSTOM_FEE_CHARGING_EXCEEDED_MAX_ACCOUNT_AMOUNTS";case Status.InsufficientSenderAccountBalanceForCustomFee:return"INSUFFICIENT_SENDER_ACCOUNT_BALANCE_FOR_CUSTOM_FEE";case Status.SerialNumberLimitReached:return"SERIAL_NUMBER_LIMIT_REACHED";case Status.CustomRoyaltyFeeOnlyAllowedForNonFungibleUnique:return"CUSTOM_ROYALTY_FEE_ONLY_ALLOWED_FOR_NON_FUNGIBLE_UNIQUE";case Status.NoRemainingAutomaticAssociations:return"NO_REMAINING_AUTOMATIC_ASSOCIATIONS";case Status.ExistingAutomaticAssociationsExceedGivenLimit:return"EXISTING_AUTOMATIC_ASSOCIATIONS_EXCEED_GIVEN_LIMIT";case Status.RequestedNumAutomaticAssociationsExceedsAssociationLimit:return"REQUESTED_NUM_AUTOMATIC_ASSOCIATIONS_EXCEEDS_ASSOCIATION_LIMIT";case Status.TokenIsPaused:return"TOKEN_IS_PAUSED";case Status.TokenHasNoPauseKey:return"TOKEN_HAS_NO_PAUSE_KEY";case Status.InvalidPauseKey:return"INVALID_PAUSE_KEY";case Status.FreezeUpdateFileDoesNotExist:return"FREEZE_UPDATE_FILE_DOES_NOT_EXIST";case Status.FreezeUpdateFileHashDoesNotMatch:return"FREEZE_UPDATE_FILE_HASH_DOES_NOT_MATCH";case Status.NoUpgradeHasBeenPrepared:return"NO_UPGRADE_HAS_BEEN_PREPARED";case Status.NoFreezeIsScheduled:return"NO_FREEZE_IS_SCHEDULED";case Status.UpdateFileHashChangedSincePrepareUpgrade:return"UPDATE_FILE_HASH_CHANGED_SINCE_PREPARE_UPGRADE";case Status.FreezeStartTimeMustBeFuture:return"FREEZE_START_TIME_MUST_BE_FUTURE";case Status.PreparedUpdateFileIsImmutable:return"PREPARED_UPDATE_FILE_IS_IMMUTABLE";case Status.FreezeAlreadyScheduled:return"FREEZE_ALREADY_SCHEDULED";case Status.FreezeUpgradeInProgress:return"FREEZE_UPGRADE_IN_PROGRESS";case Status.UpdateFileIdDoesNotMatchPrepared:return"UPDATE_FILE_ID_DOES_NOT_MATCH_PREPARED";case Status.UpdateFileHashDoesNotMatchPrepared:return"UPDATE_FILE_HASH_DOES_NOT_MATCH_PREPARED";case Status.ConsensusGasExhausted:return"CONSENSUS_GAS_EXHAUSTED";case Status.RevertedSuccess:return"REVERTED_SUCCESS";case Status.MaxStorageInPriceRegimeHasBeenUsed:return"MAX_STORAGE_IN_PRICE_REGIME_HAS_BEEN_USED";case Status.InvalidAliasKey:return"INVALID_ALIAS_KEY";case Status.UnexpectedTokenDecimals:return"UNEXPECTED_TOKEN_DECIMALS";case Status.InvalidProxyAccountId:return"INVALID_PROXY_ACCOUNT_ID";case Status.InvalidTransferAccountId:return"INVALID_TRANSFER_ACCOUNT_ID";case Status.InvalidFeeCollectorAccountId:return"INVALID_FEE_COLLECTOR_ACCOUNT_ID";case Status.AliasIsImmutable:return"ALIAS_IS_IMMUTABLE";case Status.SpenderAccountSameAsOwner:return"SPENDER_ACCOUNT_SAME_AS_OWNER";case Status.AmountExceedsTokenMaxSupply:return"AMOUNT_EXCEEDS_TOKEN_MAX_SUPPLY";case Status.NegativeAllowanceAmount:return"NEGATIVE_ALLOWANCE_AMOUNT";case Status.CannotApproveForAllFungibleCommon:return"CANNOT_APPROVE_FOR_ALL_FUNGIBLE_COMMON";case Status.SpenderDoesNotHaveAllowance:return"SPENDER_DOES_NOT_HAVE_ALLOWANCE";case Status.AmountExceedsAllowance:return"AMOUNT_EXCEEDS_ALLOWANCE";case Status.MaxAllowancesExceeded:return"MAX_ALLOWANCES_EXCEEDED";case Status.EmptyAllowances:return"EMPTY_ALLOWANCES";default:return`UNKNOWN (${this._code})`}}static _fromCode(t){switch(t){case 0:return Status.Ok;case 1:return Status.InvalidTransaction;case 2:return Status.PayerAccountNotFound;case 3:return Status.InvalidNodeAccount;case 4:return Status.TransactionExpired;case 5:return Status.InvalidTransactionStart;case 6:return Status.InvalidTransactionDuration;case 7:return Status.InvalidSignature;case 8:return Status.MemoTooLong;case 9:return Status.InsufficientTxFee;case 10:return Status.InsufficientPayerBalance;case 11:return Status.DuplicateTransaction;case 12:return Status.Busy;case 13:return Status.NotSupported;case 14:return Status.InvalidFileId;case 15:return Status.InvalidAccountId;case 16:return Status.InvalidContractId;case 17:return Status.InvalidTransactionId;case 18:return Status.ReceiptNotFound;case 19:return Status.RecordNotFound;case 20:return Status.InvalidSolidityId;case 21:return Status.Unknown;case 22:return Status.Success;case 23:return Status.FailInvalid;case 24:return Status.FailFee;case 25:return Status.FailBalance;case 26:return Status.KeyRequired;case 27:return Status.BadEncoding;case 28:return Status.InsufficientAccountBalance;case 29:return Status.InvalidSolidityAddress;case 30:return Status.InsufficientGas;case 31:return Status.ContractSizeLimitExceeded;case 32:return Status.LocalCallModificationException;case 33:return Status.ContractRevertExecuted;case 34:return Status.ContractExecutionException;case 35:return Status.InvalidReceivingNodeAccount;case 36:return Status.MissingQueryHeader;case 37:return Status.AccountUpdateFailed;case 38:return Status.InvalidKeyEncoding;case 39:return Status.NullSolidityAddress;case 40:return Status.ContractUpdateFailed;case 41:return Status.InvalidQueryHeader;case 42:return Status.InvalidFeeSubmitted;case 43:return Status.InvalidPayerSignature;case 44:return Status.KeyNotProvided;case 45:return Status.InvalidExpirationTime;case 46:return Status.NoWaclKey;case 47:return Status.FileContentEmpty;case 48:return Status.InvalidAccountAmounts;case 49:return Status.EmptyTransactionBody;case 50:return Status.InvalidTransactionBody;case 51:return Status.InvalidSignatureTypeMismatchingKey;case 52:return Status.InvalidSignatureCountMismatchingKey;case 53:return Status.EmptyLiveHashBody;case 54:return Status.EmptyLiveHash;case 55:return Status.EmptyLiveHashKeys;case 56:return Status.InvalidLiveHashSize;case 57:return Status.EmptyQueryBody;case 58:return Status.EmptyLiveHashQuery;case 59:return Status.LiveHashNotFound;case 60:return Status.AccountIdDoesNotExist;case 61:return Status.LiveHashAlreadyExists;case 62:return Status.InvalidFileWacl;case 63:return Status.SerializationFailed;case 64:return Status.TransactionOversize;case 65:return Status.TransactionTooManyLayers;case 66:return Status.ContractDeleted;case 67:return Status.PlatformNotActive;case 68:return Status.KeyPrefixMismatch;case 69:return Status.PlatformTransactionNotCreated;case 70:return Status.InvalidRenewalPeriod;case 71:return Status.InvalidPayerAccountId;case 72:return Status.AccountDeleted;case 73:return Status.FileDeleted;case 74:return Status.AccountRepeatedInAccountAmounts;case 75:return Status.SettingNegativeAccountBalance;case 76:return Status.ObtainerRequired;case 77:return Status.ObtainerSameContractId;case 78:return Status.ObtainerDoesNotExist;case 79:return Status.ModifyingImmutableContract;case 80:return Status.FileSystemException;case 81:return Status.AutorenewDurationNotInRange;case 82:return Status.ErrorDecodingBytestring;case 83:return Status.ContractFileEmpty;case 84:return Status.ContractBytecodeEmpty;case 85:return Status.InvalidInitialBalance;case 86:return Status.InvalidReceiveRecordThreshold;case 87:return Status.InvalidSendRecordThreshold;case 88:return Status.AccountIsNotGenesisAccount;case 89:return Status.PayerAccountUnauthorized;case 90:return Status.InvalidFreezeTransactionBody;case 91:return Status.FreezeTransactionBodyNotFound;case 92:return Status.TransferListSizeLimitExceeded;case 93:return Status.ResultSizeLimitExceeded;case 94:return Status.NotSpecialAccount;case 95:return Status.ContractNegativeGas;case 96:return Status.ContractNegativeValue;case 97:return Status.InvalidFeeFile;case 98:return Status.InvalidExchangeRateFile;case 99:return Status.InsufficientLocalCallGas;case 100:return Status.EntityNotAllowedToDelete;case 101:return Status.AuthorizationFailed;case 102:return Status.FileUploadedProtoInvalid;case 103:return Status.FileUploadedProtoNotSavedToDisk;case 104:return Status.FeeScheduleFilePartUploaded;case 105:return Status.ExchangeRateChangeLimitExceeded;case 106:return Status.MaxContractStorageExceeded;case 107:return Status.TransferAccountSameAsDeleteAccount;case 108:return Status.TotalLedgerBalanceInvalid;case 110:return Status.ExpirationReductionNotAllowed;case 111:return Status.MaxGasLimitExceeded;case 112:return Status.MaxFileSizeExceeded;case 113:return Status.ReceiverSigRequired;case 150:return Status.InvalidTopicId;case 155:return Status.InvalidAdminKey;case 156:return Status.InvalidSubmitKey;case 157:return Status.Unauthorized;case 158:return Status.InvalidTopicMessage;case 159:return Status.InvalidAutorenewAccount;case 160:return Status.AutorenewAccountNotAllowed;case 162:return Status.TopicExpired;case 163:return Status.InvalidChunkNumber;case 164:return Status.InvalidChunkTransactionId;case 165:return Status.AccountFrozenForToken;case 166:return Status.TokensPerAccountLimitExceeded;case 167:return Status.InvalidTokenId;case 168:return Status.InvalidTokenDecimals;case 169:return Status.InvalidTokenInitialSupply;case 170:return Status.InvalidTreasuryAccountForToken;case 171:return Status.InvalidTokenSymbol;case 172:return Status.TokenHasNoFreezeKey;case 173:return Status.TransfersNotZeroSumForToken;case 174:return Status.MissingTokenSymbol;case 175:return Status.TokenSymbolTooLong;case 176:return Status.AccountKycNotGrantedForToken;case 177:return Status.TokenHasNoKycKey;case 178:return Status.InsufficientTokenBalance;case 179:return Status.TokenWasDeleted;case 180:return Status.TokenHasNoSupplyKey;case 181:return Status.TokenHasNoWipeKey;case 182:return Status.InvalidTokenMintAmount;case 183:return Status.InvalidTokenBurnAmount;case 184:return Status.TokenNotAssociatedToAccount;case 185:return Status.CannotWipeTokenTreasuryAccount;case 186:return Status.InvalidKycKey;case 187:return Status.InvalidWipeKey;case 188:return Status.InvalidFreezeKey;case 189:return Status.InvalidSupplyKey;case 190:return Status.MissingTokenName;case 191:return Status.TokenNameTooLong;case 192:return Status.InvalidWipingAmount;case 193:return Status.TokenIsImmutable;case 194:return Status.TokenAlreadyAssociatedToAccount;case 195:return Status.TransactionRequiresZeroTokenBalances;case 196:return Status.AccountIsTreasury;case 197:return Status.TokenIdRepeatedInTokenList;case 198:return Status.TokenTransferListSizeLimitExceeded;case 199:return Status.EmptyTokenTransferBody;case 200:return Status.EmptyTokenTransferAccountAmounts;case 201:return Status.InvalidScheduleId;case 202:return Status.ScheduleIsImmutable;case 203:return Status.InvalidSchedulePayerId;case 204:return Status.InvalidScheduleAccountId;case 205:return Status.NoNewValidSignatures;case 206:return Status.UnresolvableRequiredSigners;case 207:return Status.ScheduledTransactionNotInWhitelist;case 208:return Status.SomeSignaturesWereInvalid;case 209:return Status.TransactionIdFieldNotAllowed;case 210:return Status.IdenticalScheduleAlreadyCreated;case 211:return Status.InvalidZeroByteInString;case 212:return Status.ScheduleAlreadyDeleted;case 213:return Status.ScheduleAlreadyExecuted;case 214:return Status.MessageSizeTooLarge;case 215:return Status.OperationRepeatedInBucketGroups;case 216:return Status.BucketCapacityOverflow;case 217:return Status.NodeCapacityNotSufficientForOperation;case 218:return Status.BucketHasNoThrottleGroups;case 219:return Status.ThrottleGroupHasZeroOpsPerSec;case 220:return Status.SuccessButMissingExpectedOperation;case 221:return Status.UnparseableThrottleDefinitions;case 222:return Status.InvalidThrottleDefinitions;case 223:return Status.AccountExpiredAndPendingRemoval;case 224:return Status.InvalidTokenMaxSupply;case 225:return Status.InvalidTokenNftSerialNumber;case 226:return Status.InvalidNftId;case 227:return Status.MetadataTooLong;case 228:return Status.BatchSizeLimitExceeded;case 229:return Status.InvalidQueryRange;case 230:return Status.FractionDividesByZero;case 231:return Status.InsufficientPayerBalanceForCustomFee;case 232:return Status.CustomFeesListTooLong;case 233:return Status.InvalidCustomFeeCollector;case 234:return Status.InvalidTokenIdInCustomFees;case 235:return Status.TokenNotAssociatedToFeeCollector;case 236:return Status.TokenMaxSupplyReached;case 237:return Status.SenderDoesNotOwnNftSerialNo;case 238:return Status.CustomFeeNotFullySpecified;case 239:return Status.CustomFeeMustBePositive;case 240:return Status.TokenHasNoFeeScheduleKey;case 241:return Status.CustomFeeOutsideNumericRange;case 242:return Status.RoyaltyFractionCannotExceedOne;case 243:return Status.FractionalFeeMaxAmountLessThanMinAmount;case 244:return Status.CustomScheduleAlreadyHasNoFees;case 245:return Status.CustomFeeDenominationMustBeFungibleCommon;case 246:return Status.CustomFractionalFeeOnlyAllowedForFungibleCommon;case 247:return Status.InvalidCustomFeeScheduleKey;case 248:return Status.InvalidTokenMintMetadata;case 249:return Status.InvalidTokenBurnMetadata;case 250:return Status.CurrentTreasuryStillOwnsNfts;case 251:return Status.AccountStillOwnsNfts;case 252:return Status.TreasuryMustOwnBurnedNft;case 253:return Status.AccountDoesNotOwnWipedNft;case 254:return Status.AccountAmountTransfersOnlyAllowedForFungibleCommon;case 255:return Status.MaxNftsInPriceRegimeHaveBeenMinted;case 256:return Status.PayerAccountDeleted;case 257:return Status.CustomFeeChargingExceededMaxRecursionDepth;case 258:return Status.CustomFeeChargingExceededMaxAccountAmounts;case 259:return Status.InsufficientSenderAccountBalanceForCustomFee;case 260:return Status.SerialNumberLimitReached;case 261:return Status.CustomRoyaltyFeeOnlyAllowedForNonFungibleUnique;case 262:return Status.NoRemainingAutomaticAssociations;case 263:return Status.ExistingAutomaticAssociationsExceedGivenLimit;case 264:return Status.RequestedNumAutomaticAssociationsExceedsAssociationLimit;case 265:return Status.TokenIsPaused;case 266:return Status.TokenHasNoPauseKey;case 267:return Status.InvalidPauseKey;case 268:return Status.FreezeUpdateFileDoesNotExist;case 269:return Status.FreezeUpdateFileHashDoesNotMatch;case 270:return Status.NoUpgradeHasBeenPrepared;case 271:return Status.NoFreezeIsScheduled;case 272:return Status.UpdateFileHashChangedSincePrepareUpgrade;case 273:return Status.FreezeStartTimeMustBeFuture;case 274:return Status.PreparedUpdateFileIsImmutable;case 275:return Status.FreezeAlreadyScheduled;case 276:return Status.FreezeUpgradeInProgress;case 277:return Status.UpdateFileIdDoesNotMatchPrepared;case 278:return Status.UpdateFileHashDoesNotMatchPrepared;case 279:return Status.ConsensusGasExhausted;case 280:return Status.RevertedSuccess;case 281:return Status.MaxStorageInPriceRegimeHasBeenUsed;case 282:return Status.InvalidAliasKey;case 283:return Status.UnexpectedTokenDecimals;case 284:return Status.InvalidProxyAccountId;case 285:return Status.InvalidTransferAccountId;case 286:return Status.InvalidFeeCollectorAccountId;case 287:return Status.AliasIsImmutable;case 288:return Status.SpenderAccountSameAsOwner;case 289:return Status.AmountExceedsTokenMaxSupply;case 290:return Status.NegativeAllowanceAmount;case 291:return Status.CannotApproveForAllFungibleCommon;case 292:return Status.SpenderDoesNotHaveAllowance;case 293:return Status.AmountExceedsAllowance;case 294:return Status.MaxAllowancesExceeded;case 295:return Status.EmptyAllowances;default:throw new Error(`(BUG) Status.fromCode() does not handle code: ${t}`)}}valueOf(){return this._code}}Status.Ok=new Status(0),Status.InvalidTransaction=new Status(1),Status.PayerAccountNotFound=new Status(2),Status.InvalidNodeAccount=new Status(3),Status.TransactionExpired=new Status(4),Status.InvalidTransactionStart=new Status(5),Status.InvalidTransactionDuration=new Status(6),Status.InvalidSignature=new Status(7),Status.MemoTooLong=new Status(8),Status.InsufficientTxFee=new Status(9),Status.InsufficientPayerBalance=new Status(10),Status.DuplicateTransaction=new Status(11),Status.Busy=new Status(12),Status.NotSupported=new Status(13),Status.InvalidFileId=new Status(14),Status.InvalidAccountId=new Status(15),Status.InvalidContractId=new Status(16),Status.InvalidTransactionId=new Status(17),Status.ReceiptNotFound=new Status(18),Status.RecordNotFound=new Status(19),Status.InvalidSolidityId=new Status(20),Status.Unknown=new Status(21),Status.Success=new Status(22),Status.FailInvalid=new Status(23),Status.FailFee=new Status(24),Status.FailBalance=new Status(25),Status.KeyRequired=new Status(26),Status.BadEncoding=new Status(27),Status.InsufficientAccountBalance=new Status(28),Status.InvalidSolidityAddress=new Status(29),Status.InsufficientGas=new Status(30),Status.ContractSizeLimitExceeded=new Status(31),Status.LocalCallModificationException=new Status(32),Status.ContractRevertExecuted=new Status(33),Status.ContractExecutionException=new Status(34),Status.InvalidReceivingNodeAccount=new Status(35),Status.MissingQueryHeader=new Status(36),Status.AccountUpdateFailed=new Status(37),Status.InvalidKeyEncoding=new Status(38),Status.NullSolidityAddress=new Status(39),Status.ContractUpdateFailed=new Status(40),Status.InvalidQueryHeader=new Status(41),Status.InvalidFeeSubmitted=new Status(42),Status.InvalidPayerSignature=new Status(43),Status.KeyNotProvided=new Status(44),Status.InvalidExpirationTime=new Status(45),Status.NoWaclKey=new Status(46),Status.FileContentEmpty=new Status(47),Status.InvalidAccountAmounts=new Status(48),Status.EmptyTransactionBody=new Status(49),Status.InvalidTransactionBody=new Status(50),Status.InvalidSignatureTypeMismatchingKey=new Status(51),Status.InvalidSignatureCountMismatchingKey=new Status(52),Status.EmptyLiveHashBody=new Status(53),Status.EmptyLiveHash=new Status(54),Status.EmptyLiveHashKeys=new Status(55),Status.InvalidLiveHashSize=new Status(56),Status.EmptyQueryBody=new Status(57),Status.EmptyLiveHashQuery=new Status(58),Status.LiveHashNotFound=new Status(59),Status.AccountIdDoesNotExist=new Status(60),Status.LiveHashAlreadyExists=new Status(61),Status.InvalidFileWacl=new Status(62),Status.SerializationFailed=new Status(63),Status.TransactionOversize=new Status(64),Status.TransactionTooManyLayers=new Status(65),Status.ContractDeleted=new Status(66),Status.PlatformNotActive=new Status(67),Status.KeyPrefixMismatch=new Status(68),Status.PlatformTransactionNotCreated=new Status(69),Status.InvalidRenewalPeriod=new Status(70),Status.InvalidPayerAccountId=new Status(71),Status.AccountDeleted=new Status(72),Status.FileDeleted=new Status(73),Status.AccountRepeatedInAccountAmounts=new Status(74),Status.SettingNegativeAccountBalance=new Status(75),Status.ObtainerRequired=new Status(76),Status.ObtainerSameContractId=new Status(77),Status.ObtainerDoesNotExist=new Status(78),Status.ModifyingImmutableContract=new Status(79),Status.FileSystemException=new Status(80),Status.AutorenewDurationNotInRange=new Status(81),Status.ErrorDecodingBytestring=new Status(82),Status.ContractFileEmpty=new Status(83),Status.ContractBytecodeEmpty=new Status(84),Status.InvalidInitialBalance=new Status(85),Status.InvalidReceiveRecordThreshold=new Status(86),Status.InvalidSendRecordThreshold=new Status(87),Status.AccountIsNotGenesisAccount=new Status(88),Status.PayerAccountUnauthorized=new Status(89),Status.InvalidFreezeTransactionBody=new Status(90),Status.FreezeTransactionBodyNotFound=new Status(91),Status.TransferListSizeLimitExceeded=new Status(92),Status.ResultSizeLimitExceeded=new Status(93),Status.NotSpecialAccount=new Status(94),Status.ContractNegativeGas=new Status(95),Status.ContractNegativeValue=new Status(96),Status.InvalidFeeFile=new Status(97),Status.InvalidExchangeRateFile=new Status(98),Status.InsufficientLocalCallGas=new Status(99),Status.EntityNotAllowedToDelete=new Status(100),Status.AuthorizationFailed=new Status(101),Status.FileUploadedProtoInvalid=new Status(102),Status.FileUploadedProtoNotSavedToDisk=new Status(103),Status.FeeScheduleFilePartUploaded=new Status(104),Status.ExchangeRateChangeLimitExceeded=new Status(105),Status.MaxContractStorageExceeded=new Status(106),Status.TransferAccountSameAsDeleteAccount=new Status(107),Status.TotalLedgerBalanceInvalid=new Status(108),Status.ExpirationReductionNotAllowed=new Status(110),Status.MaxGasLimitExceeded=new Status(111),Status.MaxFileSizeExceeded=new Status(112),Status.ReceiverSigRequired=new Status(113),Status.InvalidTopicId=new Status(150),Status.InvalidAdminKey=new Status(155),Status.InvalidSubmitKey=new Status(156),Status.Unauthorized=new Status(157),Status.InvalidTopicMessage=new Status(158),Status.InvalidAutorenewAccount=new Status(159),Status.AutorenewAccountNotAllowed=new Status(160),Status.TopicExpired=new Status(162),Status.InvalidChunkNumber=new Status(163),Status.InvalidChunkTransactionId=new Status(164),Status.AccountFrozenForToken=new Status(165),Status.TokensPerAccountLimitExceeded=new Status(166),Status.InvalidTokenId=new Status(167),Status.InvalidTokenDecimals=new Status(168),Status.InvalidTokenInitialSupply=new Status(169),Status.InvalidTreasuryAccountForToken=new Status(170),Status.InvalidTokenSymbol=new Status(171),Status.TokenHasNoFreezeKey=new Status(172),Status.TransfersNotZeroSumForToken=new Status(173),Status.MissingTokenSymbol=new Status(174),Status.TokenSymbolTooLong=new Status(175),Status.AccountKycNotGrantedForToken=new Status(176),Status.TokenHasNoKycKey=new Status(177),Status.InsufficientTokenBalance=new Status(178),Status.TokenWasDeleted=new Status(179),Status.TokenHasNoSupplyKey=new Status(180),Status.TokenHasNoWipeKey=new Status(181),Status.InvalidTokenMintAmount=new Status(182),Status.InvalidTokenBurnAmount=new Status(183),Status.TokenNotAssociatedToAccount=new Status(184),Status.CannotWipeTokenTreasuryAccount=new Status(185),Status.InvalidKycKey=new Status(186),Status.InvalidWipeKey=new Status(187),Status.InvalidFreezeKey=new Status(188),Status.InvalidSupplyKey=new Status(189),Status.MissingTokenName=new Status(190),Status.TokenNameTooLong=new Status(191),Status.InvalidWipingAmount=new Status(192),Status.TokenIsImmutable=new Status(193),Status.TokenAlreadyAssociatedToAccount=new Status(194),Status.TransactionRequiresZeroTokenBalances=new Status(195),Status.AccountIsTreasury=new Status(196),Status.TokenIdRepeatedInTokenList=new Status(197),Status.TokenTransferListSizeLimitExceeded=new Status(198),Status.EmptyTokenTransferBody=new Status(199),Status.EmptyTokenTransferAccountAmounts=new Status(200),Status.InvalidScheduleId=new Status(201),Status.ScheduleIsImmutable=new Status(202),Status.InvalidSchedulePayerId=new Status(203),Status.InvalidScheduleAccountId=new Status(204),Status.NoNewValidSignatures=new Status(205),Status.UnresolvableRequiredSigners=new Status(206),Status.ScheduledTransactionNotInWhitelist=new Status(207),Status.SomeSignaturesWereInvalid=new Status(208),Status.TransactionIdFieldNotAllowed=new Status(209),Status.IdenticalScheduleAlreadyCreated=new Status(210),Status.InvalidZeroByteInString=new Status(211),Status.ScheduleAlreadyDeleted=new Status(212),Status.ScheduleAlreadyExecuted=new Status(213),Status.MessageSizeTooLarge=new Status(214),Status.OperationRepeatedInBucketGroups=new Status(215),Status.BucketCapacityOverflow=new Status(216),Status.NodeCapacityNotSufficientForOperation=new Status(217),Status.BucketHasNoThrottleGroups=new Status(218),Status.ThrottleGroupHasZeroOpsPerSec=new Status(219),Status.SuccessButMissingExpectedOperation=new Status(220),Status.UnparseableThrottleDefinitions=new Status(221),Status.InvalidThrottleDefinitions=new Status(222),Status.AccountExpiredAndPendingRemoval=new Status(223),Status.InvalidTokenMaxSupply=new Status(224),Status.InvalidTokenNftSerialNumber=new Status(225),Status.InvalidNftId=new Status(226),Status.MetadataTooLong=new Status(227),Status.BatchSizeLimitExceeded=new Status(228),Status.InvalidQueryRange=new Status(229),Status.FractionDividesByZero=new Status(230),Status.InsufficientPayerBalanceForCustomFee=new Status(231),Status.CustomFeesListTooLong=new Status(232),Status.InvalidCustomFeeCollector=new Status(233),Status.InvalidTokenIdInCustomFees=new Status(234),Status.TokenNotAssociatedToFeeCollector=new Status(235),Status.TokenMaxSupplyReached=new Status(236),Status.SenderDoesNotOwnNftSerialNo=new Status(237),Status.CustomFeeNotFullySpecified=new Status(238),Status.CustomFeeMustBePositive=new Status(239),Status.TokenHasNoFeeScheduleKey=new Status(240),Status.CustomFeeOutsideNumericRange=new Status(241),Status.RoyaltyFractionCannotExceedOne=new Status(242),Status.FractionalFeeMaxAmountLessThanMinAmount=new Status(243),Status.CustomScheduleAlreadyHasNoFees=new Status(244),Status.CustomFeeDenominationMustBeFungibleCommon=new Status(245),Status.CustomFractionalFeeOnlyAllowedForFungibleCommon=new Status(246),Status.InvalidCustomFeeScheduleKey=new Status(247),Status.InvalidTokenMintMetadata=new Status(248),Status.InvalidTokenBurnMetadata=new Status(249),Status.CurrentTreasuryStillOwnsNfts=new Status(250),Status.AccountStillOwnsNfts=new Status(251),Status.TreasuryMustOwnBurnedNft=new Status(252),Status.AccountDoesNotOwnWipedNft=new Status(253),Status.AccountAmountTransfersOnlyAllowedForFungibleCommon=new Status(254),Status.MaxNftsInPriceRegimeHaveBeenMinted=new Status(255),Status.PayerAccountDeleted=new Status(256),Status.CustomFeeChargingExceededMaxRecursionDepth=new Status(257),Status.CustomFeeChargingExceededMaxAccountAmounts=new Status(258),Status.InsufficientSenderAccountBalanceForCustomFee=new Status(259),Status.SerialNumberLimitReached=new Status(260),Status.CustomRoyaltyFeeOnlyAllowedForNonFungibleUnique=new Status(261),Status.NoRemainingAutomaticAssociations=new Status(262),Status.ExistingAutomaticAssociationsExceedGivenLimit=new Status(263),Status.RequestedNumAutomaticAssociationsExceedsAssociationLimit=new Status(264),Status.TokenIsPaused=new Status(265),Status.TokenHasNoPauseKey=new Status(266),Status.InvalidPauseKey=new Status(267),Status.FreezeUpdateFileDoesNotExist=new Status(268),Status.FreezeUpdateFileHashDoesNotMatch=new Status(269),Status.NoUpgradeHasBeenPrepared=new Status(270),Status.NoFreezeIsScheduled=new Status(271),Status.UpdateFileHashChangedSincePrepareUpgrade=new Status(272),Status.FreezeStartTimeMustBeFuture=new Status(273),Status.PreparedUpdateFileIsImmutable=new Status(274),Status.FreezeAlreadyScheduled=new Status(275),Status.FreezeUpgradeInProgress=new Status(276),Status.UpdateFileIdDoesNotMatchPrepared=new Status(277),Status.UpdateFileHashDoesNotMatchPrepared=new Status(278),Status.ConsensusGasExhausted=new Status(279),Status.RevertedSuccess=new Status(280),Status.MaxStorageInPriceRegimeHasBeenUsed=new Status(281),Status.InvalidAliasKey=new Status(282),Status.UnexpectedTokenDecimals=new Status(283),Status.InvalidProxyAccountId=new Status(284),Status.InvalidTransferAccountId=new Status(285),Status.InvalidFeeCollectorAccountId=new Status(286),Status.AliasIsImmutable=new Status(287),Status.SpenderAccountSameAsOwner=new Status(288),Status.AmountExceedsTokenMaxSupply=new Status(289),Status.NegativeAllowanceAmount=new Status(290),Status.CannotApproveForAllFungibleCommon=new Status(291),Status.SpenderDoesNotHaveAllowance=new Status(292),Status.AmountExceedsAllowance=new Status(293),Status.MaxAllowancesExceeded=new Status(294),Status.EmptyAllowances=new Status(295);const byteToHex=[];for(let t=0;t<=255;t+=1)byteToHex.push(t.toString(16).padStart(2,"0"));function encode$1(t){let e="";for(const Q of t)e+=byteToHex[Q];return e}function decode$1(t){const e=(t.startsWith("0x")?t.substring(2):t).match(/.{1,2}/gu);return new Uint8Array((null==e?[]:e).map((t=>parseInt(t,16))))}class BadEntityIdException extends Error{constructor(t,e,Q,B,s){super(`Entity ID ${t.toString()}.${e.toString()}.${Q.toString()}-${B} was incorrect.`),this.name="BadEntityIdException",this.shard=t,this.realm=e,this.num=Q,this.presentChecksum=B,this.expectedChecksum=s}}const REQUIRE_NON_NULL_ERROR="This value cannot be null | undefined.",REQUIRE_STRING_OR_UINT8ARRAY_ERROR="This value must be a string or Uint8Array.",REQUIRE_ARRAY_ERROR="The provided variable must be an Array.",FUNCTION_CONVERT_TO_BIGNUMBER_ERROR="This value must be a String, Number, or BigNumber to be converted.",FUNCTION_CONVERT_TO_NUMBER_ERROR="This value must be a String, Number, or BigNumber to be converted.",FUNCTION_CONVERT_TO_NUMBER_PARSE_ERROR="Unable to parse given variable. Returns NaN.";function isNonNull(t){return null!=t&&null!=t}function isUint8Array(t){return isNonNull(t)&&t instanceof Uint8Array}function isNumber$1(t){return isNonNull(t)&&("number"==typeof t||t instanceof Number)}function isBigNumber(t){return isNonNull(t)&&t instanceof BigNumber$1}function isLong$1(t){return isNonNull(t)&&t instanceof long$1}function isString$1(t){return isNonNull(t)&&"string"==typeof t}function isStringOrUint8Array(t){return isNonNull(t)&&(isString$1(t)||isUint8Array(t))}function requireNonNull(t){if(isNonNull(t))return t;throw new Error(REQUIRE_NON_NULL_ERROR)}function requireStringOrUint8Array(t){if(isStringOrUint8Array(requireNonNull(t)))return t;throw new Error(REQUIRE_STRING_OR_UINT8ARRAY_ERROR)}function convertToBigNumber(t){if(requireNonNull(t),isBigNumber(t)||isString$1(t)||isNumber$1(t)||isLong$1(t))return new BigNumber$1(t);throw new Error(FUNCTION_CONVERT_TO_BIGNUMBER_ERROR)}function convertToBigNumberArray(t){if(t instanceof Array)return t.map(convertToBigNumber);throw new Error(REQUIRE_ARRAY_ERROR)}function convertToNumber(t){if(requireNonNull(t),isBigNumber(t)||isString$1(t)||isNumber$1(t)||isLong$1(t)){const e=parseInt(t);if(isNaN(e))throw new Error(FUNCTION_CONVERT_TO_NUMBER_PARSE_ERROR);return e}throw new Error(FUNCTION_CONVERT_TO_NUMBER_ERROR)}function safeView(t,e=0,Q=t.byteLength){if(!(Number.isInteger(e)&&e>=0))throw new Error("Invalid offset!");if(!(Number.isInteger(Q)&&Q>=0))throw new Error("Invalid length!");return new DataView(t.buffer,t.byteOffset+e,Math.min(Q,t.byteLength-e))}const ENTITY_ID_REGEX=/^(\d+)(?:\.(\d+)\.([a-fA-F0-9]+))?(?:-([a-z]{5}))?$/;function constructor(t,e,Q){if(null==e&&null!=Q||null!=e&&null==Q)throw new Error("invalid entity ID");const[B,s,F]="number"==typeof t||long$1.isLong(t)?[null!=Q?long$1.fromValue(t):long$1.ZERO,null!=e?long$1.fromValue(e):long$1.ZERO,null!=Q?long$1.fromValue(Q):long$1.fromValue(t)]:[null!=t.shard?long$1.fromValue(t.shard):long$1.ZERO,null!=t.realm?long$1.fromValue(t.realm):long$1.ZERO,long$1.fromValue(t.num)];if(B.isNegative()||s.isNegative()||F.isNegative())throw new Error("negative numbers are not allowed in IDs");return{shard:B,realm:s,num:F}}function compare(t,e){let Q=t[0].compare(e[0]);return 0!=Q?Q:(Q=t[1].compare(e[1]),0!=Q?Q:t[2].compare(e[2]))}function fromStringSplitter(t){const e=ENTITY_ID_REGEX.exec(t);if(null==e)throw new Error(`failed to parse entity id: ${t}`);return null==e[2]&&null==e[3]?{shard:"0",realm:"0",numOrHex:e[1],checksum:e[4]}:{shard:e[1],realm:e[2],numOrHex:e[3],checksum:e[4]}}function fromString$1(t){const e=fromStringSplitter(t);if(Number.isNaN(e.shard)||Number.isNaN(e.realm)||Number.isNaN(e.numOrHex))throw new Error("invalid format for entity ID");return{shard:null!=e.shard?long$1.fromString(e.shard):long$1.ZERO,realm:null!=e.realm?long$1.fromString(e.realm):long$1.ZERO,num:long$1.fromString(e.numOrHex),checksum:e.checksum}}function fromSolidityAddress(t){const e=t.startsWith("0x")?decode$1(t.slice(2)):decode$1(t);if(20!==e.length)throw new Error(`Invalid hex encoded solidity address length:\n                expected length 40, got length ${t.length}`);return[long$1.fromBytesBE([0,0,0,0,...e.slice(0,4)]),long$1.fromBytesBE(Array.from(e.slice(4,12))),long$1.fromBytesBE(Array.from(e.slice(12,20)))]}function toSolidityAddress(t){const e=new Uint8Array(20),Q=safeView(e),[B,s,F]=t;return Q.setUint32(0,convertToNumber(B)),Q.setUint32(8,convertToNumber(s)),Q.setUint32(16,convertToNumber(F)),encode$1(e)}function _checksum(t,e){let Q="",B=[],s=0,F=0,U=0,n=0,c=0;const o=11881376,g="a".charCodeAt(0);let l=t+"000000000000",I=[];for(var i=0;i<l.length;i+=2)I.push(parseInt(l.substring(i,i+2),16));for(let t=0;t<e.length;t++)B.push("."===e[t]?10:parseInt(e[t],10));for(let t=0;t<B.length;t++)U=(31*U+B[t])%17576,t%2==0?s=(s+B[t])%11:F=(F+B[t])%11;for(let t=0;t<I.length;t++)n=(31*n+I[t])%o;c=(17576*(11*(e.length%5*11+s)+F)+U+n)%o,c=1000003*c%o;for(let t=0;t<5;t++)Q=String.fromCharCode(g+c%26)+Q,c/=26;return Q}function validateChecksum(t,e,Q,B,s){if(null==s._network._ledgerId||null==B)return;const F=_checksum(s._network._ledgerId._toStringForChecksum(),`${t.toString()}.${e.toString()}.${Q.toString()}`);if(B!=F)throw new BadEntityIdException(t,e,Q,B,F)}function toStringWithChecksum(t,e){if(null==e._network._ledgerId)throw new Error("cannot calculate checksum with a client that does not contain a recognzied ledger ID");return`${t}-${_checksum(e._network._ledgerId._toStringForChecksum(),t)}`}var lib={},indexMinimal={},minimal$1={},aspromise=asPromise;function asPromise(t,e){for(var Q=new Array(arguments.length-1),B=0,s=2,F=!0;s<arguments.length;)Q[B++]=arguments[s++];return new Promise((function(s,U){Q[B]=function(t){if(F)if(F=!1,t)U(t);else{for(var e=new Array(arguments.length-1),Q=0;Q<e.length;)e[Q++]=arguments[Q];s.apply(null,e)}};try{t.apply(e||null,Q)}catch(t){F&&(F=!1,U(t))}}))}var base64$1={};!function(t){var e=base64$1;e.length=function(t){var e=t.length;if(!e)return 0;for(var Q=0;--e%4>1&&"="===t.charAt(e);)++Q;return Math.ceil(3*t.length)/4-Q};for(var Q=new Array(64),B=new Array(123),s=0;s<64;)B[Q[s]=s<26?s+65:s<52?s+71:s<62?s-4:s-59|43]=s++;e.encode=function(t,e,B){for(var s,F=null,U=[],n=0,c=0;e<B;){var o=t[e++];switch(c){case 0:U[n++]=Q[o>>2],s=(3&o)<<4,c=1;break;case 1:U[n++]=Q[s|o>>4],s=(15&o)<<2,c=2;break;case 2:U[n++]=Q[s|o>>6],U[n++]=Q[63&o],c=0}n>8191&&((F||(F=[])).push(String.fromCharCode.apply(String,U)),n=0)}return c&&(U[n++]=Q[s],U[n++]=61,1===c&&(U[n++]=61)),F?(n&&F.push(String.fromCharCode.apply(String,U.slice(0,n))),F.join("")):String.fromCharCode.apply(String,U.slice(0,n))};var F="invalid encoding";e.decode=function(t,e,Q){for(var s,U=Q,n=0,c=0;c<t.length;){var o=t.charCodeAt(c++);if(61===o&&n>1)break;if(void 0===(o=B[o]))throw Error(F);switch(n){case 0:s=o,n=1;break;case 1:e[Q++]=s<<2|(48&o)>>4,s=o,n=2;break;case 2:e[Q++]=(15&s)<<4|(60&o)>>2,s=o,n=3;break;case 3:e[Q++]=(3&s)<<6|o,n=0}}if(1===n)throw Error(F);return Q-U},e.test=function(t){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(t)}}();var eventemitter=EventEmitter;function EventEmitter(){this._listeners={}}EventEmitter.prototype.on=function(t,e,Q){return(this._listeners[t]||(this._listeners[t]=[])).push({fn:e,ctx:Q||this}),this},EventEmitter.prototype.off=function(t,e){if(void 0===t)this._listeners={};else if(void 0===e)this._listeners[t]=[];else for(var Q=this._listeners[t],B=0;B<Q.length;)Q[B].fn===e?Q.splice(B,1):++B;return this},EventEmitter.prototype.emit=function(t){var e=this._listeners[t];if(e){for(var Q=[],B=1;B<arguments.length;)Q.push(arguments[B++]);for(B=0;B<e.length;)e[B].fn.apply(e[B++].ctx,Q)}return this};var float=factory(factory);function factory(t){return"undefined"!=typeof Float32Array?function(){var e=new Float32Array([-0]),Q=new Uint8Array(e.buffer),B=128===Q[3];function s(t,B,s){e[0]=t,B[s]=Q[0],B[s+1]=Q[1],B[s+2]=Q[2],B[s+3]=Q[3]}function F(t,B,s){e[0]=t,B[s]=Q[3],B[s+1]=Q[2],B[s+2]=Q[1],B[s+3]=Q[0]}function U(t,B){return Q[0]=t[B],Q[1]=t[B+1],Q[2]=t[B+2],Q[3]=t[B+3],e[0]}function n(t,B){return Q[3]=t[B],Q[2]=t[B+1],Q[1]=t[B+2],Q[0]=t[B+3],e[0]}t.writeFloatLE=B?s:F,t.writeFloatBE=B?F:s,t.readFloatLE=B?U:n,t.readFloatBE=B?n:U}():function(){function e(t,e,Q,B){var s=e<0?1:0;if(s&&(e=-e),0===e)t(1/e>0?0:2147483648,Q,B);else if(isNaN(e))t(2143289344,Q,B);else if(e>34028234663852886e22)t((s<<31|2139095040)>>>0,Q,B);else if(e<11754943508222875e-54)t((s<<31|Math.round(e/1401298464324817e-60))>>>0,Q,B);else{var F=Math.floor(Math.log(e)/Math.LN2);t((s<<31|F+127<<23|8388607&Math.round(e*Math.pow(2,-F)*8388608))>>>0,Q,B)}}function Q(t,e,Q){var B=t(e,Q),s=2*(B>>31)+1,F=B>>>23&255,U=8388607&B;return 255===F?U?NaN:s*(1/0):0===F?1401298464324817e-60*s*U:s*Math.pow(2,F-150)*(U+8388608)}t.writeFloatLE=e.bind(null,writeUintLE),t.writeFloatBE=e.bind(null,writeUintBE),t.readFloatLE=Q.bind(null,readUintLE),t.readFloatBE=Q.bind(null,readUintBE)}(),"undefined"!=typeof Float64Array?function(){var e=new Float64Array([-0]),Q=new Uint8Array(e.buffer),B=128===Q[7];function s(t,B,s){e[0]=t,B[s]=Q[0],B[s+1]=Q[1],B[s+2]=Q[2],B[s+3]=Q[3],B[s+4]=Q[4],B[s+5]=Q[5],B[s+6]=Q[6],B[s+7]=Q[7]}function F(t,B,s){e[0]=t,B[s]=Q[7],B[s+1]=Q[6],B[s+2]=Q[5],B[s+3]=Q[4],B[s+4]=Q[3],B[s+5]=Q[2],B[s+6]=Q[1],B[s+7]=Q[0]}function U(t,B){return Q[0]=t[B],Q[1]=t[B+1],Q[2]=t[B+2],Q[3]=t[B+3],Q[4]=t[B+4],Q[5]=t[B+5],Q[6]=t[B+6],Q[7]=t[B+7],e[0]}function n(t,B){return Q[7]=t[B],Q[6]=t[B+1],Q[5]=t[B+2],Q[4]=t[B+3],Q[3]=t[B+4],Q[2]=t[B+5],Q[1]=t[B+6],Q[0]=t[B+7],e[0]}t.writeDoubleLE=B?s:F,t.writeDoubleBE=B?F:s,t.readDoubleLE=B?U:n,t.readDoubleBE=B?n:U}():function(){function e(t,e,Q,B,s,F){var U=B<0?1:0;if(U&&(B=-B),0===B)t(0,s,F+e),t(1/B>0?0:2147483648,s,F+Q);else if(isNaN(B))t(0,s,F+e),t(2146959360,s,F+Q);else if(B>17976931348623157e292)t(0,s,F+e),t((U<<31|2146435072)>>>0,s,F+Q);else{var n;if(B<22250738585072014e-324)t((n=B/5e-324)>>>0,s,F+e),t((U<<31|n/4294967296)>>>0,s,F+Q);else{var c=Math.floor(Math.log(B)/Math.LN2);1024===c&&(c=1023),t(4503599627370496*(n=B*Math.pow(2,-c))>>>0,s,F+e),t((U<<31|c+1023<<20|1048576*n&1048575)>>>0,s,F+Q)}}}function Q(t,e,Q,B,s){var F=t(B,s+e),U=t(B,s+Q),n=2*(U>>31)+1,c=U>>>20&2047,o=4294967296*(1048575&U)+F;return 2047===c?o?NaN:n*(1/0):0===c?5e-324*n*o:n*Math.pow(2,c-1075)*(o+4503599627370496)}t.writeDoubleLE=e.bind(null,writeUintLE,0,4),t.writeDoubleBE=e.bind(null,writeUintBE,4,0),t.readDoubleLE=Q.bind(null,readUintLE,0,4),t.readDoubleBE=Q.bind(null,readUintBE,4,0)}(),t}function writeUintLE(t,e,Q){e[Q]=255&t,e[Q+1]=t>>>8&255,e[Q+2]=t>>>16&255,e[Q+3]=t>>>24}function writeUintBE(t,e,Q){e[Q]=t>>>24,e[Q+1]=t>>>16&255,e[Q+2]=t>>>8&255,e[Q+3]=255&t}function readUintLE(t,e){return(t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0}function readUintBE(t,e){return(t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3])>>>0}var inquire_1=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(t){}return null}var utf8$2={};!function(t){var e=utf8$2;e.length=function(t){for(var e=0,Q=0,B=0;B<t.length;++B)(Q=t.charCodeAt(B))<128?e+=1:Q<2048?e+=2:55296==(64512&Q)&&56320==(64512&t.charCodeAt(B+1))?(++B,e+=4):e+=3;return e},e.read=function(t,e,Q){if(Q-e<1)return"";for(var B,s=null,F=[],U=0;e<Q;)(B=t[e++])<128?F[U++]=B:B>191&&B<224?F[U++]=(31&B)<<6|63&t[e++]:B>239&&B<365?(B=((7&B)<<18|(63&t[e++])<<12|(63&t[e++])<<6|63&t[e++])-65536,F[U++]=55296+(B>>10),F[U++]=56320+(1023&B)):F[U++]=(15&B)<<12|(63&t[e++])<<6|63&t[e++],U>8191&&((s||(s=[])).push(String.fromCharCode.apply(String,F)),U=0);return s?(U&&s.push(String.fromCharCode.apply(String,F.slice(0,U))),s.join("")):String.fromCharCode.apply(String,F.slice(0,U))},e.write=function(t,e,Q){for(var B,s,F=Q,U=0;U<t.length;++U)(B=t.charCodeAt(U))<128?e[Q++]=B:B<2048?(e[Q++]=B>>6|192,e[Q++]=63&B|128):55296==(64512&B)&&56320==(64512&(s=t.charCodeAt(U+1)))?(B=65536+((1023&B)<<10)+(1023&s),++U,e[Q++]=B>>18|240,e[Q++]=B>>12&63|128,e[Q++]=B>>6&63|128,e[Q++]=63&B|128):(e[Q++]=B>>12|224,e[Q++]=B>>6&63|128,e[Q++]=63&B|128);return Q-F}}();var pool_1=pool;function pool(t,e,Q){var B=Q||8192,s=B>>>1,F=null,U=B;return function(Q){if(Q<1||Q>s)return t(Q);U+Q>B&&(F=t(B),U=0);var n=e.call(F,U,U+=Q);return 7&U&&(U=1+(7|U)),n}}var longbits=LongBits$2,util$5=minimal$1;function LongBits$2(t,e){this.lo=t>>>0,this.hi=e>>>0}var zero=LongBits$2.zero=new LongBits$2(0,0);zero.toNumber=function(){return 0},zero.zzEncode=zero.zzDecode=function(){return this},zero.length=function(){return 1};var zeroHash=LongBits$2.zeroHash="\0\0\0\0\0\0\0\0";LongBits$2.fromNumber=function(t){if(0===t)return zero;var e=t<0;e&&(t=-t);var Q=t>>>0,B=(t-Q)/4294967296>>>0;return e&&(B=~B>>>0,Q=~Q>>>0,++Q>4294967295&&(Q=0,++B>4294967295&&(B=0))),new LongBits$2(Q,B)},LongBits$2.from=function(t){if("number"==typeof t)return LongBits$2.fromNumber(t);if(util$5.isString(t)){if(!util$5.Long)return LongBits$2.fromNumber(parseInt(t,10));t=util$5.Long.fromString(t)}return t.low||t.high?new LongBits$2(t.low>>>0,t.high>>>0):zero},LongBits$2.prototype.toNumber=function(t){if(!t&&this.hi>>>31){var e=1+~this.lo>>>0,Q=~this.hi>>>0;return e||(Q=Q+1>>>0),-(e+4294967296*Q)}return this.lo+4294967296*this.hi},LongBits$2.prototype.toLong=function(t){return util$5.Long?new util$5.Long(0|this.lo,0|this.hi,Boolean(t)):{low:0|this.lo,high:0|this.hi,unsigned:Boolean(t)}};var charCodeAt=String.prototype.charCodeAt;LongBits$2.fromHash=function(t){return t===zeroHash?zero:new LongBits$2((charCodeAt.call(t,0)|charCodeAt.call(t,1)<<8|charCodeAt.call(t,2)<<16|charCodeAt.call(t,3)<<24)>>>0,(charCodeAt.call(t,4)|charCodeAt.call(t,5)<<8|charCodeAt.call(t,6)<<16|charCodeAt.call(t,7)<<24)>>>0)},LongBits$2.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},LongBits$2.prototype.zzEncode=function(){var t=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^t)>>>0,this.lo=(this.lo<<1^t)>>>0,this},LongBits$2.prototype.zzDecode=function(){var t=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^t)>>>0,this.hi=(this.hi>>>1^t)>>>0,this},LongBits$2.prototype.length=function(){var t=this.lo,e=(this.lo>>>28|this.hi<<4)>>>0,Q=this.hi>>>24;return 0===Q?0===e?t<16384?t<128?1:2:t<2097152?3:4:e<16384?e<128?5:6:e<2097152?7:8:Q<128?9:10},function(t){var e=minimal$1;function Q(t,e,Q){for(var B=Object.keys(e),s=0;s<B.length;++s)void 0!==t[B[s]]&&Q||(t[B[s]]=e[B[s]]);return t}function B(t){function e(t,B){if(!(this instanceof e))return new e(t,B);Object.defineProperty(this,"message",{get:function(){return t}}),Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:(new Error).stack||""}),B&&Q(this,B)}return(e.prototype=Object.create(Error.prototype)).constructor=e,Object.defineProperty(e.prototype,"name",{get:function(){return t}}),e.prototype.toString=function(){return this.name+": "+this.message},e}e.asPromise=aspromise,e.base64=base64$1,e.EventEmitter=eventemitter,e.float=float,e.inquire=inquire_1,e.utf8=utf8$2,e.pool=pool_1,e.LongBits=longbits,e.isNode=Boolean(void 0!==commonjsGlobal&&commonjsGlobal&&commonjsGlobal.process&&commonjsGlobal.process.versions&&commonjsGlobal.process.versions.node),e.global=e.isNode&&commonjsGlobal||"undefined"!=typeof window&&window||"undefined"!=typeof self&&self||commonjsGlobal,e.emptyArray=Object.freeze?Object.freeze([]):[],e.emptyObject=Object.freeze?Object.freeze({}):{},e.isInteger=Number.isInteger||function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t},e.isString=function(t){return"string"==typeof t||t instanceof String},e.isObject=function(t){return t&&"object"==typeof t},e.isset=e.isSet=function(t,e){var Q=t[e];return!(null==Q||!t.hasOwnProperty(e))&&("object"!=typeof Q||(Array.isArray(Q)?Q.length:Object.keys(Q).length)>0)},e.Buffer=function(){try{var t=e.inquire("buffer").Buffer;return t.prototype.utf8Write?t:null}catch(t){return null}}(),e._Buffer_from=null,e._Buffer_allocUnsafe=null,e.newBuffer=function(t){return"number"==typeof t?e.Buffer?e._Buffer_allocUnsafe(t):new e.Array(t):e.Buffer?e._Buffer_from(t):"undefined"==typeof Uint8Array?t:new Uint8Array(t)},e.Array="undefined"!=typeof Uint8Array?Uint8Array:Array,e.Long=e.global.dcodeIO&&e.global.dcodeIO.Long||e.global.Long||e.inquire("long"),e.key2Re=/^true|false|0|1$/,e.key32Re=/^-?(?:0|[1-9][0-9]*)$/,e.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,e.longToHash=function(t){return t?e.LongBits.from(t).toHash():e.LongBits.zeroHash},e.longFromHash=function(t,Q){var B=e.LongBits.fromHash(t);return e.Long?e.Long.fromBits(B.lo,B.hi,Q):B.toNumber(Boolean(Q))},e.merge=Q,e.lcFirst=function(t){return t.charAt(0).toLowerCase()+t.substring(1)},e.newError=B,e.ProtocolError=B("ProtocolError"),e.oneOfGetter=function(t){for(var e={},Q=0;Q<t.length;++Q)e[t[Q]]=1;return function(){for(var t=Object.keys(this),Q=t.length-1;Q>-1;--Q)if(1===e[t[Q]]&&void 0!==this[t[Q]]&&null!==this[t[Q]])return t[Q]}},e.oneOfSetter=function(t){return function(e){for(var Q=0;Q<t.length;++Q)t[Q]!==e&&delete this[t[Q]]}},e.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},e._configure=function(){var t=e.Buffer;t?(e._Buffer_from=t.from!==Uint8Array.from&&t.from||function(e,Q){return new t(e,Q)},e._Buffer_allocUnsafe=t.allocUnsafe||function(e){return new t(e)}):e._Buffer_from=e._Buffer_allocUnsafe=null}}();var writer=Writer$1,util$4=minimal$1,BufferWriter$1,LongBits$1=util$4.LongBits,base64=util$4.base64,utf8$1=util$4.utf8;function Op(t,e,Q){this.fn=t,this.len=e,this.next=void 0,this.val=Q}function noop(){}function State(t){this.head=t.head,this.tail=t.tail,this.len=t.len,this.next=t.states}function Writer$1(){this.len=0,this.head=new Op(noop,0,0),this.tail=this.head,this.states=null}var create$1=function(){return util$4.Buffer?function(){return(Writer$1.create=function(){return new BufferWriter$1})()}:function(){return new Writer$1}};function writeByte(t,e,Q){e[Q]=255&t}function writeVarint32(t,e,Q){for(;t>127;)e[Q++]=127&t|128,t>>>=7;e[Q]=t}function VarintOp(t,e){this.len=t,this.next=void 0,this.val=e}function writeVarint64(t,e,Q){for(;t.hi;)e[Q++]=127&t.lo|128,t.lo=(t.lo>>>7|t.hi<<25)>>>0,t.hi>>>=7;for(;t.lo>127;)e[Q++]=127&t.lo|128,t.lo=t.lo>>>7;e[Q++]=t.lo}function writeFixed32(t,e,Q){e[Q]=255&t,e[Q+1]=t>>>8&255,e[Q+2]=t>>>16&255,e[Q+3]=t>>>24}Writer$1.create=create$1(),Writer$1.alloc=function(t){return new util$4.Array(t)},util$4.Array!==Array&&(Writer$1.alloc=util$4.pool(Writer$1.alloc,util$4.Array.prototype.subarray)),Writer$1.prototype._push=function(t,e,Q){return this.tail=this.tail.next=new Op(t,e,Q),this.len+=e,this},VarintOp.prototype=Object.create(Op.prototype),VarintOp.prototype.fn=writeVarint32,Writer$1.prototype.uint32=function(t){return this.len+=(this.tail=this.tail.next=new VarintOp((t>>>=0)<128?1:t<16384?2:t<2097152?3:t<268435456?4:5,t)).len,this},Writer$1.prototype.int32=function(t){return t<0?this._push(writeVarint64,10,LongBits$1.fromNumber(t)):this.uint32(t)},Writer$1.prototype.sint32=function(t){return this.uint32((t<<1^t>>31)>>>0)},Writer$1.prototype.uint64=function(t){var e=LongBits$1.from(t);return this._push(writeVarint64,e.length(),e)},Writer$1.prototype.int64=Writer$1.prototype.uint64,Writer$1.prototype.sint64=function(t){var e=LongBits$1.from(t).zzEncode();return this._push(writeVarint64,e.length(),e)},Writer$1.prototype.bool=function(t){return this._push(writeByte,1,t?1:0)},Writer$1.prototype.fixed32=function(t){return this._push(writeFixed32,4,t>>>0)},Writer$1.prototype.sfixed32=Writer$1.prototype.fixed32,Writer$1.prototype.fixed64=function(t){var e=LongBits$1.from(t);return this._push(writeFixed32,4,e.lo)._push(writeFixed32,4,e.hi)},Writer$1.prototype.sfixed64=Writer$1.prototype.fixed64,Writer$1.prototype.float=function(t){return this._push(util$4.float.writeFloatLE,4,t)},Writer$1.prototype.double=function(t){return this._push(util$4.float.writeDoubleLE,8,t)};var writeBytes=util$4.Array.prototype.set?function(t,e,Q){e.set(t,Q)}:function(t,e,Q){for(var B=0;B<t.length;++B)e[Q+B]=t[B]};Writer$1.prototype.bytes=function(t){var e=t.length>>>0;if(!e)return this._push(writeByte,1,0);if(util$4.isString(t)){var Q=Writer$1.alloc(e=base64.length(t));base64.decode(t,Q,0),t=Q}return this.uint32(e)._push(writeBytes,e,t)},Writer$1.prototype.string=function(t){var e=utf8$1.length(t);return e?this.uint32(e)._push(utf8$1.write,e,t):this._push(writeByte,1,0)},Writer$1.prototype.fork=function(){return this.states=new State(this),this.head=this.tail=new Op(noop,0,0),this.len=0,this},Writer$1.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Op(noop,0,0),this.len=0),this},Writer$1.prototype.ldelim=function(){var t=this.head,e=this.tail,Q=this.len;return this.reset().uint32(Q),Q&&(this.tail.next=t.next,this.tail=e,this.len+=Q),this},Writer$1.prototype.finish=function(){for(var t=this.head.next,e=this.constructor.alloc(this.len),Q=0;t;)t.fn(t.val,e,Q),Q+=t.len,t=t.next;return e},Writer$1._configure=function(t){BufferWriter$1=t,Writer$1.create=create$1(),BufferWriter$1._configure()};var writer_buffer=BufferWriter,Writer=writer;(BufferWriter.prototype=Object.create(Writer.prototype)).constructor=BufferWriter;var util$3=minimal$1;function BufferWriter(){Writer.call(this)}function writeStringBuffer(t,e,Q){t.length<40?util$3.utf8.write(t,e,Q):e.utf8Write?e.utf8Write(t,Q):e.write(t,Q)}BufferWriter._configure=function(){BufferWriter.alloc=util$3._Buffer_allocUnsafe,BufferWriter.writeBytesBuffer=util$3.Buffer&&util$3.Buffer.prototype instanceof Uint8Array&&"set"===util$3.Buffer.prototype.set.name?function(t,e,Q){e.set(t,Q)}:function(t,e,Q){if(t.copy)t.copy(e,Q,0,t.length);else for(var B=0;B<t.length;)e[Q++]=t[B++]}},BufferWriter.prototype.bytes=function(t){util$3.isString(t)&&(t=util$3._Buffer_from(t,"base64"));var e=t.length>>>0;return this.uint32(e),e&&this._push(BufferWriter.writeBytesBuffer,e,t),this},BufferWriter.prototype.string=function(t){var e=util$3.Buffer.byteLength(t);return this.uint32(e),e&&this._push(writeStringBuffer,e,t),this},BufferWriter._configure();var reader=Reader$1,util$2=minimal$1,BufferReader$1,LongBits=util$2.LongBits,utf8=util$2.utf8;function indexOutOfRange(t,e){return RangeError("index out of range: "+t.pos+" + "+(e||1)+" > "+t.len)}function Reader$1(t){this.buf=t,this.pos=0,this.len=t.length}var create_array="undefined"!=typeof Uint8Array?function(t){if(t instanceof Uint8Array||Array.isArray(t))return new Reader$1(t);throw Error("illegal buffer")}:function(t){if(Array.isArray(t))return new Reader$1(t);throw Error("illegal buffer")},create=function(){return util$2.Buffer?function(t){return(Reader$1.create=function(t){return util$2.Buffer.isBuffer(t)?new BufferReader$1(t):create_array(t)})(t)}:create_array},value;function readLongVarint(){var t=new LongBits(0,0),e=0;if(!(this.len-this.pos>4)){for(;e<3;++e){if(this.pos>=this.len)throw indexOutOfRange(this);if(t.lo=(t.lo|(127&this.buf[this.pos])<<7*e)>>>0,this.buf[this.pos++]<128)return t}return t.lo=(t.lo|(127&this.buf[this.pos++])<<7*e)>>>0,t}for(;e<4;++e)if(t.lo=(t.lo|(127&this.buf[this.pos])<<7*e)>>>0,this.buf[this.pos++]<128)return t;if(t.lo=(t.lo|(127&this.buf[this.pos])<<28)>>>0,t.hi=(t.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return t;if(e=0,this.len-this.pos>4){for(;e<5;++e)if(t.hi=(t.hi|(127&this.buf[this.pos])<<7*e+3)>>>0,this.buf[this.pos++]<128)return t}else for(;e<5;++e){if(this.pos>=this.len)throw indexOutOfRange(this);if(t.hi=(t.hi|(127&this.buf[this.pos])<<7*e+3)>>>0,this.buf[this.pos++]<128)return t}throw Error("invalid varint encoding")}function readFixed32_end(t,e){return(t[e-4]|t[e-3]<<8|t[e-2]<<16|t[e-1]<<24)>>>0}function readFixed64(){if(this.pos+8>this.len)throw indexOutOfRange(this,8);return new LongBits(readFixed32_end(this.buf,this.pos+=4),readFixed32_end(this.buf,this.pos+=4))}Reader$1.create=create(),Reader$1.prototype._slice=util$2.Array.prototype.subarray||util$2.Array.prototype.slice,Reader$1.prototype.uint32=(value=4294967295,function(){if(value=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128)return value;if(value=(value|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)return value;if(value=(value|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)return value;if(value=(value|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)return value;if(value=(value|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128)return value;if((this.pos+=5)>this.len)throw this.pos=this.len,indexOutOfRange(this,10);return value}),Reader$1.prototype.int32=function(){return 0|this.uint32()},Reader$1.prototype.sint32=function(){var t=this.uint32();return t>>>1^-(1&t)|0},Reader$1.prototype.bool=function(){return 0!==this.uint32()},Reader$1.prototype.fixed32=function(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return readFixed32_end(this.buf,this.pos+=4)},Reader$1.prototype.sfixed32=function(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return 0|readFixed32_end(this.buf,this.pos+=4)},Reader$1.prototype.float=function(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);var t=util$2.float.readFloatLE(this.buf,this.pos);return this.pos+=4,t},Reader$1.prototype.double=function(){if(this.pos+8>this.len)throw indexOutOfRange(this,4);var t=util$2.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,t},Reader$1.prototype.bytes=function(){var t=this.uint32(),e=this.pos,Q=this.pos+t;if(Q>this.len)throw indexOutOfRange(this,t);return this.pos+=t,Array.isArray(this.buf)?this.buf.slice(e,Q):e===Q?new this.buf.constructor(0):this._slice.call(this.buf,e,Q)},Reader$1.prototype.string=function(){var t=this.bytes();return utf8.read(t,0,t.length)},Reader$1.prototype.skip=function(t){if("number"==typeof t){if(this.pos+t>this.len)throw indexOutOfRange(this,t);this.pos+=t}else do{if(this.pos>=this.len)throw indexOutOfRange(this)}while(128&this.buf[this.pos++]);return this},Reader$1.prototype.skipType=function(t){switch(t){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(t=7&this.uint32());)this.skipType(t);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+t+" at offset "+this.pos)}return this},Reader$1._configure=function(t){BufferReader$1=t,Reader$1.create=create(),BufferReader$1._configure();var e=util$2.Long?"toLong":"toNumber";util$2.merge(Reader$1.prototype,{int64:function(){return readLongVarint.call(this)[e](!1)},uint64:function(){return readLongVarint.call(this)[e](!0)},sint64:function(){return readLongVarint.call(this).zzDecode()[e](!1)},fixed64:function(){return readFixed64.call(this)[e](!0)},sfixed64:function(){return readFixed64.call(this)[e](!1)}})};var reader_buffer=BufferReader,Reader=reader;(BufferReader.prototype=Object.create(Reader.prototype)).constructor=BufferReader;var util$1=minimal$1;function BufferReader(t){Reader.call(this,t)}BufferReader._configure=function(){util$1.Buffer&&(BufferReader.prototype._slice=util$1.Buffer.prototype.slice)},BufferReader.prototype.string=function(){var t=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+t,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+t,this.len))},BufferReader._configure();var rpc={},service=Service,util=minimal$1,exports;function Service(t,e,Q){if("function"!=typeof t)throw TypeError("rpcImpl must be a function");util.EventEmitter.call(this),this.rpcImpl=t,this.requestDelimited=Boolean(e),this.responseDelimited=Boolean(Q)}(Service.prototype=Object.create(util.EventEmitter.prototype)).constructor=Service,Service.prototype.rpcCall=function t(e,Q,B,s,F){if(!s)throw TypeError("request must be specified");var U=this;if(!F)return util.asPromise(t,U,e,Q,B,s);if(U.rpcImpl)try{return U.rpcImpl(e,Q[U.requestDelimited?"encodeDelimited":"encode"](s).finish(),(function(t,Q){if(t)return U.emit("error",t,e),F(t);if(null!==Q){if(!(Q instanceof B))try{Q=B[U.responseDelimited?"decodeDelimited":"decode"](Q)}catch(t){return U.emit("error",t,e),F(t)}return U.emit("data",Q,e),F(null,Q)}U.end(!0)}))}catch(t){return U.emit("error",t,e),void setTimeout((function(){F(t)}),0)}else setTimeout((function(){F(Error("already ended"))}),0)},Service.prototype.end=function(t){return this.rpcImpl&&(t||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this},exports=rpc,exports.Service=service;var roots={};!function(t){var e=indexMinimal;function Q(){e.util._configure(),e.Writer._configure(e.BufferWriter),e.Reader._configure(e.BufferReader)}e.build="minimal",e.Writer=writer,e.BufferWriter=writer_buffer,e.Reader=reader,e.BufferReader=reader_buffer,e.util=minimal$1,e.rpc=rpc,e.roots=roots,e.configure=Q,Q()}();var minimal=indexMinimal,proto={};!function(t){var e=function(t,e){if(!e&&t&&t.__esModule)return t;if(null===t||"object"!=typeof t&&"function"!=typeof t)return{default:t};var B=Q(e);if(B&&B.has(t))return B.get(t);var s={},F=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var U in t)if("default"!=U&&Object.prototype.hasOwnProperty.call(t,U)){var n=F?Object.getOwnPropertyDescriptor(t,U):null;n&&(n.get||n.set)?Object.defineProperty(s,U,n):s[U]=t[U]}return s.default=t,B&&B.set(t,s),s}(minimal);function Q(t){if("function"!=typeof WeakMap)return null;var e=new WeakMap,B=new WeakMap;return(Q=function(t){return t?B:e})(t)}Object.defineProperty(t,"__esModule",{value:!0}),t.proto=t.google=t.default=void 0;const B=e.Reader,s=e.Writer,F=e.util,U=e.roots.hashgraph||(e.roots.hashgraph={});t.default=U;const n=U.proto={TokenUnitBalance:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.tokenId=null,t.prototype.balance=F.Long?F.Long.fromBits(0,0,!0):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.tokenId&&Object.hasOwnProperty.call(t,"tokenId")&&U.proto.TokenID.encode(t.tokenId,e.uint32(10).fork()).ldelim(),null!=t.balance&&Object.hasOwnProperty.call(t,"balance")&&e.uint32(16).uint64(t.balance),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenUnitBalance;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.tokenId=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.balance=t.uint64();break;default:t.skipType(7&Q)}return F},t}(),SingleAccountBalances:function(){function t(t){if(this.tokenUnitBalances=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.accountID=null,t.prototype.hbarBalance=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.tokenUnitBalances=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(10).fork()).ldelim(),null!=t.hbarBalance&&Object.hasOwnProperty.call(t,"hbarBalance")&&e.uint32(16).uint64(t.hbarBalance),null!=t.tokenUnitBalances&&t.tokenUnitBalances.length)for(var Q=0;Q<t.tokenUnitBalances.length;++Q)U.proto.TokenUnitBalance.encode(t.tokenUnitBalances[Q],e.uint32(26).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.SingleAccountBalances;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 2:F.hbarBalance=t.uint64();break;case 3:F.tokenUnitBalances&&F.tokenUnitBalances.length||(F.tokenUnitBalances=[]),F.tokenUnitBalances.push(U.proto.TokenUnitBalance.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),AllAccountBalances:function(){function t(t){if(this.allAccounts=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.consensusTimestamp=null,t.prototype.allAccounts=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.consensusTimestamp&&Object.hasOwnProperty.call(t,"consensusTimestamp")&&U.proto.Timestamp.encode(t.consensusTimestamp,e.uint32(10).fork()).ldelim(),null!=t.allAccounts&&t.allAccounts.length)for(var Q=0;Q<t.allAccounts.length;++Q)U.proto.SingleAccountBalances.encode(t.allAccounts[Q],e.uint32(18).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.AllAccountBalances;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.consensusTimestamp=U.proto.Timestamp.decode(t,t.uint32());break;case 2:F.allAccounts&&F.allAccounts.length||(F.allAccounts=[]),F.allAccounts.push(U.proto.SingleAccountBalances.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),ShardID:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.shardNum=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.shardNum&&Object.hasOwnProperty.call(t,"shardNum")&&e.uint32(8).int64(t.shardNum),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ShardID;t.pos<s;)1==(Q=t.uint32())>>>3?F.shardNum=t.int64():t.skipType(7&Q);return F},t}(),RealmID:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.shardNum=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.realmNum=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.shardNum&&Object.hasOwnProperty.call(t,"shardNum")&&e.uint32(8).int64(t.shardNum),null!=t.realmNum&&Object.hasOwnProperty.call(t,"realmNum")&&e.uint32(16).int64(t.realmNum),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.RealmID;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.shardNum=t.int64();break;case 2:F.realmNum=t.int64();break;default:t.skipType(7&Q)}return F},t}(),AccountID:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.shardNum=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.realmNum=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.accountNum=null,t.prototype.alias=null,Object.defineProperty(t.prototype,"account",{get:F.oneOfGetter(e=["accountNum","alias"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.shardNum&&Object.hasOwnProperty.call(t,"shardNum")&&e.uint32(8).int64(t.shardNum),null!=t.realmNum&&Object.hasOwnProperty.call(t,"realmNum")&&e.uint32(16).int64(t.realmNum),null!=t.accountNum&&Object.hasOwnProperty.call(t,"accountNum")&&e.uint32(24).int64(t.accountNum),null!=t.alias&&Object.hasOwnProperty.call(t,"alias")&&e.uint32(34).bytes(t.alias),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.AccountID;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.shardNum=t.int64();break;case 2:F.realmNum=t.int64();break;case 3:F.accountNum=t.int64();break;case 4:F.alias=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),FileID:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.shardNum=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.realmNum=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.fileNum=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.shardNum&&Object.hasOwnProperty.call(t,"shardNum")&&e.uint32(8).int64(t.shardNum),null!=t.realmNum&&Object.hasOwnProperty.call(t,"realmNum")&&e.uint32(16).int64(t.realmNum),null!=t.fileNum&&Object.hasOwnProperty.call(t,"fileNum")&&e.uint32(24).int64(t.fileNum),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FileID;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.shardNum=t.int64();break;case 2:F.realmNum=t.int64();break;case 3:F.fileNum=t.int64();break;default:t.skipType(7&Q)}return F},t}(),ContractID:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.shardNum=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.realmNum=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.contractNum=null,t.prototype.evmAddress=null,Object.defineProperty(t.prototype,"contract",{get:F.oneOfGetter(e=["contractNum","evmAddress"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.shardNum&&Object.hasOwnProperty.call(t,"shardNum")&&e.uint32(8).int64(t.shardNum),null!=t.realmNum&&Object.hasOwnProperty.call(t,"realmNum")&&e.uint32(16).int64(t.realmNum),null!=t.contractNum&&Object.hasOwnProperty.call(t,"contractNum")&&e.uint32(24).int64(t.contractNum),null!=t.evmAddress&&Object.hasOwnProperty.call(t,"evmAddress")&&e.uint32(34).bytes(t.evmAddress),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractID;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.shardNum=t.int64();break;case 2:F.realmNum=t.int64();break;case 3:F.contractNum=t.int64();break;case 4:F.evmAddress=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),TransactionID:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.transactionValidStart=null,t.prototype.accountID=null,t.prototype.scheduled=!1,t.prototype.nonce=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.transactionValidStart&&Object.hasOwnProperty.call(t,"transactionValidStart")&&U.proto.Timestamp.encode(t.transactionValidStart,e.uint32(10).fork()).ldelim(),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(18).fork()).ldelim(),null!=t.scheduled&&Object.hasOwnProperty.call(t,"scheduled")&&e.uint32(24).bool(t.scheduled),null!=t.nonce&&Object.hasOwnProperty.call(t,"nonce")&&e.uint32(32).int32(t.nonce),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TransactionID;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.transactionValidStart=U.proto.Timestamp.decode(t,t.uint32());break;case 2:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.scheduled=t.bool();break;case 4:F.nonce=t.int32();break;default:t.skipType(7&Q)}return F},t}(),AccountAmount:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.accountID=null,t.prototype.amount=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.isApproval=!1,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(10).fork()).ldelim(),null!=t.amount&&Object.hasOwnProperty.call(t,"amount")&&e.uint32(16).sint64(t.amount),null!=t.isApproval&&Object.hasOwnProperty.call(t,"isApproval")&&e.uint32(24).bool(t.isApproval),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.AccountAmount;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 2:F.amount=t.sint64();break;case 3:F.isApproval=t.bool();break;default:t.skipType(7&Q)}return F},t}(),TransferList:function(){function t(t){if(this.accountAmounts=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.accountAmounts=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.accountAmounts&&t.accountAmounts.length)for(var Q=0;Q<t.accountAmounts.length;++Q)U.proto.AccountAmount.encode(t.accountAmounts[Q],e.uint32(10).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TransferList;t.pos<s;)1==(Q=t.uint32())>>>3?(F.accountAmounts&&F.accountAmounts.length||(F.accountAmounts=[]),F.accountAmounts.push(U.proto.AccountAmount.decode(t,t.uint32()))):t.skipType(7&Q);return F},t}(),NftTransfer:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.senderAccountID=null,t.prototype.receiverAccountID=null,t.prototype.serialNumber=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.isApproval=!1,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.senderAccountID&&Object.hasOwnProperty.call(t,"senderAccountID")&&U.proto.AccountID.encode(t.senderAccountID,e.uint32(10).fork()).ldelim(),null!=t.receiverAccountID&&Object.hasOwnProperty.call(t,"receiverAccountID")&&U.proto.AccountID.encode(t.receiverAccountID,e.uint32(18).fork()).ldelim(),null!=t.serialNumber&&Object.hasOwnProperty.call(t,"serialNumber")&&e.uint32(24).int64(t.serialNumber),null!=t.isApproval&&Object.hasOwnProperty.call(t,"isApproval")&&e.uint32(32).bool(t.isApproval),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.NftTransfer;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.senderAccountID=U.proto.AccountID.decode(t,t.uint32());break;case 2:F.receiverAccountID=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.serialNumber=t.int64();break;case 4:F.isApproval=t.bool();break;default:t.skipType(7&Q)}return F},t}(),TokenTransferList:function(){function t(t){if(this.transfers=[],this.nftTransfers=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.token=null,t.prototype.transfers=F.emptyArray,t.prototype.nftTransfers=F.emptyArray,t.prototype.expectedDecimals=null,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.token&&Object.hasOwnProperty.call(t,"token")&&U.proto.TokenID.encode(t.token,e.uint32(10).fork()).ldelim(),null!=t.transfers&&t.transfers.length)for(var Q=0;Q<t.transfers.length;++Q)U.proto.AccountAmount.encode(t.transfers[Q],e.uint32(18).fork()).ldelim();if(null!=t.nftTransfers&&t.nftTransfers.length)for(Q=0;Q<t.nftTransfers.length;++Q)U.proto.NftTransfer.encode(t.nftTransfers[Q],e.uint32(26).fork()).ldelim();return null!=t.expectedDecimals&&Object.hasOwnProperty.call(t,"expectedDecimals")&&U.google.protobuf.UInt32Value.encode(t.expectedDecimals,e.uint32(34).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenTransferList;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.token=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.transfers&&F.transfers.length||(F.transfers=[]),F.transfers.push(U.proto.AccountAmount.decode(t,t.uint32()));break;case 3:F.nftTransfers&&F.nftTransfers.length||(F.nftTransfers=[]),F.nftTransfers.push(U.proto.NftTransfer.decode(t,t.uint32()));break;case 4:F.expectedDecimals=U.google.protobuf.UInt32Value.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),Fraction:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.numerator=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.denominator=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.numerator&&Object.hasOwnProperty.call(t,"numerator")&&e.uint32(8).int64(t.numerator),null!=t.denominator&&Object.hasOwnProperty.call(t,"denominator")&&e.uint32(16).int64(t.denominator),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.Fraction;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.numerator=t.int64();break;case 2:F.denominator=t.int64();break;default:t.skipType(7&Q)}return F},t}(),TopicID:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.shardNum=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.realmNum=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.topicNum=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.shardNum&&Object.hasOwnProperty.call(t,"shardNum")&&e.uint32(8).int64(t.shardNum),null!=t.realmNum&&Object.hasOwnProperty.call(t,"realmNum")&&e.uint32(16).int64(t.realmNum),null!=t.topicNum&&Object.hasOwnProperty.call(t,"topicNum")&&e.uint32(24).int64(t.topicNum),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TopicID;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.shardNum=t.int64();break;case 2:F.realmNum=t.int64();break;case 3:F.topicNum=t.int64();break;default:t.skipType(7&Q)}return F},t}(),TokenID:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.shardNum=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.realmNum=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.tokenNum=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.shardNum&&Object.hasOwnProperty.call(t,"shardNum")&&e.uint32(8).int64(t.shardNum),null!=t.realmNum&&Object.hasOwnProperty.call(t,"realmNum")&&e.uint32(16).int64(t.realmNum),null!=t.tokenNum&&Object.hasOwnProperty.call(t,"tokenNum")&&e.uint32(24).int64(t.tokenNum),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenID;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.shardNum=t.int64();break;case 2:F.realmNum=t.int64();break;case 3:F.tokenNum=t.int64();break;default:t.skipType(7&Q)}return F},t}(),ScheduleID:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.shardNum=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.realmNum=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.scheduleNum=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.shardNum&&Object.hasOwnProperty.call(t,"shardNum")&&e.uint32(8).int64(t.shardNum),null!=t.realmNum&&Object.hasOwnProperty.call(t,"realmNum")&&e.uint32(16).int64(t.realmNum),null!=t.scheduleNum&&Object.hasOwnProperty.call(t,"scheduleNum")&&e.uint32(24).int64(t.scheduleNum),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ScheduleID;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.shardNum=t.int64();break;case 2:F.realmNum=t.int64();break;case 3:F.scheduleNum=t.int64();break;default:t.skipType(7&Q)}return F},t}(),TokenType:function(){const t={},e=Object.create(t);return e[t[0]="FUNGIBLE_COMMON"]=0,e[t[1]="NON_FUNGIBLE_UNIQUE"]=1,e}(),SubType:function(){const t={},e=Object.create(t);return e[t[0]="DEFAULT"]=0,e[t[1]="TOKEN_FUNGIBLE_COMMON"]=1,e[t[2]="TOKEN_NON_FUNGIBLE_UNIQUE"]=2,e[t[3]="TOKEN_FUNGIBLE_COMMON_WITH_CUSTOM_FEES"]=3,e[t[4]="TOKEN_NON_FUNGIBLE_UNIQUE_WITH_CUSTOM_FEES"]=4,e}(),TokenSupplyType:function(){const t={},e=Object.create(t);return e[t[0]="INFINITE"]=0,e[t[1]="FINITE"]=1,e}(),TokenFreezeStatus:function(){const t={},e=Object.create(t);return e[t[0]="FreezeNotApplicable"]=0,e[t[1]="Frozen"]=1,e[t[2]="Unfrozen"]=2,e}(),TokenKycStatus:function(){const t={},e=Object.create(t);return e[t[0]="KycNotApplicable"]=0,e[t[1]="Granted"]=1,e[t[2]="Revoked"]=2,e}(),TokenPauseStatus:function(){const t={},e=Object.create(t);return e[t[0]="PauseNotApplicable"]=0,e[t[1]="Paused"]=1,e[t[2]="Unpaused"]=2,e}(),Key:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.contractID=null,t.prototype.ed25519=null,t.prototype.RSA_3072=null,t.prototype.ECDSA_384=null,t.prototype.thresholdKey=null,t.prototype.keyList=null,t.prototype.ECDSASecp256k1=null,t.prototype.delegatableContractId=null,Object.defineProperty(t.prototype,"key",{get:F.oneOfGetter(e=["contractID","ed25519","RSA_3072","ECDSA_384","thresholdKey","keyList","ECDSASecp256k1","delegatableContractId"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(10).fork()).ldelim(),null!=t.ed25519&&Object.hasOwnProperty.call(t,"ed25519")&&e.uint32(18).bytes(t.ed25519),null!=t.RSA_3072&&Object.hasOwnProperty.call(t,"RSA_3072")&&e.uint32(26).bytes(t.RSA_3072),null!=t.ECDSA_384&&Object.hasOwnProperty.call(t,"ECDSA_384")&&e.uint32(34).bytes(t.ECDSA_384),null!=t.thresholdKey&&Object.hasOwnProperty.call(t,"thresholdKey")&&U.proto.ThresholdKey.encode(t.thresholdKey,e.uint32(42).fork()).ldelim(),null!=t.keyList&&Object.hasOwnProperty.call(t,"keyList")&&U.proto.KeyList.encode(t.keyList,e.uint32(50).fork()).ldelim(),null!=t.ECDSASecp256k1&&Object.hasOwnProperty.call(t,"ECDSASecp256k1")&&e.uint32(58).bytes(t.ECDSASecp256k1),null!=t.delegatableContractId&&Object.hasOwnProperty.call(t,"delegatableContractId")&&U.proto.ContractID.encode(t.delegatableContractId,e.uint32(66).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.Key;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;case 2:F.ed25519=t.bytes();break;case 3:F.RSA_3072=t.bytes();break;case 4:F.ECDSA_384=t.bytes();break;case 5:F.thresholdKey=U.proto.ThresholdKey.decode(t,t.uint32());break;case 6:F.keyList=U.proto.KeyList.decode(t,t.uint32());break;case 7:F.ECDSASecp256k1=t.bytes();break;case 8:F.delegatableContractId=U.proto.ContractID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ThresholdKey:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.threshold=0,t.prototype.keys=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.threshold&&Object.hasOwnProperty.call(t,"threshold")&&e.uint32(8).uint32(t.threshold),null!=t.keys&&Object.hasOwnProperty.call(t,"keys")&&U.proto.KeyList.encode(t.keys,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ThresholdKey;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.threshold=t.uint32();break;case 2:F.keys=U.proto.KeyList.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),KeyList:function(){function t(t){if(this.keys=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.keys=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.keys&&t.keys.length)for(var Q=0;Q<t.keys.length;++Q)U.proto.Key.encode(t.keys[Q],e.uint32(10).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.KeyList;t.pos<s;)1==(Q=t.uint32())>>>3?(F.keys&&F.keys.length||(F.keys=[]),F.keys.push(U.proto.Key.decode(t,t.uint32()))):t.skipType(7&Q);return F},t}(),Signature:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.contract=null,t.prototype.ed25519=null,t.prototype.RSA_3072=null,t.prototype.ECDSA_384=null,t.prototype.thresholdSignature=null,t.prototype.signatureList=null,Object.defineProperty(t.prototype,"signature",{get:F.oneOfGetter(e=["contract","ed25519","RSA_3072","ECDSA_384","thresholdSignature","signatureList"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.contract&&Object.hasOwnProperty.call(t,"contract")&&e.uint32(10).bytes(t.contract),null!=t.ed25519&&Object.hasOwnProperty.call(t,"ed25519")&&e.uint32(18).bytes(t.ed25519),null!=t.RSA_3072&&Object.hasOwnProperty.call(t,"RSA_3072")&&e.uint32(26).bytes(t.RSA_3072),null!=t.ECDSA_384&&Object.hasOwnProperty.call(t,"ECDSA_384")&&e.uint32(34).bytes(t.ECDSA_384),null!=t.thresholdSignature&&Object.hasOwnProperty.call(t,"thresholdSignature")&&U.proto.ThresholdSignature.encode(t.thresholdSignature,e.uint32(42).fork()).ldelim(),null!=t.signatureList&&Object.hasOwnProperty.call(t,"signatureList")&&U.proto.SignatureList.encode(t.signatureList,e.uint32(50).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.Signature;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.contract=t.bytes();break;case 2:F.ed25519=t.bytes();break;case 3:F.RSA_3072=t.bytes();break;case 4:F.ECDSA_384=t.bytes();break;case 5:F.thresholdSignature=U.proto.ThresholdSignature.decode(t,t.uint32());break;case 6:F.signatureList=U.proto.SignatureList.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ThresholdSignature:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.sigs=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.sigs&&Object.hasOwnProperty.call(t,"sigs")&&U.proto.SignatureList.encode(t.sigs,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ThresholdSignature;t.pos<s;)2==(Q=t.uint32())>>>3?F.sigs=U.proto.SignatureList.decode(t,t.uint32()):t.skipType(7&Q);return F},t}(),SignatureList:function(){function t(t){if(this.sigs=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.sigs=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.sigs&&t.sigs.length)for(var Q=0;Q<t.sigs.length;++Q)U.proto.Signature.encode(t.sigs[Q],e.uint32(18).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.SignatureList;t.pos<s;)2==(Q=t.uint32())>>>3?(F.sigs&&F.sigs.length||(F.sigs=[]),F.sigs.push(U.proto.Signature.decode(t,t.uint32()))):t.skipType(7&Q);return F},t}(),SignaturePair:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.pubKeyPrefix=F.newBuffer([]),t.prototype.contract=null,t.prototype.ed25519=null,t.prototype.RSA_3072=null,t.prototype.ECDSA_384=null,t.prototype.ECDSASecp256k1=null,Object.defineProperty(t.prototype,"signature",{get:F.oneOfGetter(e=["contract","ed25519","RSA_3072","ECDSA_384","ECDSASecp256k1"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.pubKeyPrefix&&Object.hasOwnProperty.call(t,"pubKeyPrefix")&&e.uint32(10).bytes(t.pubKeyPrefix),null!=t.contract&&Object.hasOwnProperty.call(t,"contract")&&e.uint32(18).bytes(t.contract),null!=t.ed25519&&Object.hasOwnProperty.call(t,"ed25519")&&e.uint32(26).bytes(t.ed25519),null!=t.RSA_3072&&Object.hasOwnProperty.call(t,"RSA_3072")&&e.uint32(34).bytes(t.RSA_3072),null!=t.ECDSA_384&&Object.hasOwnProperty.call(t,"ECDSA_384")&&e.uint32(42).bytes(t.ECDSA_384),null!=t.ECDSASecp256k1&&Object.hasOwnProperty.call(t,"ECDSASecp256k1")&&e.uint32(50).bytes(t.ECDSASecp256k1),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.SignaturePair;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.pubKeyPrefix=t.bytes();break;case 2:F.contract=t.bytes();break;case 3:F.ed25519=t.bytes();break;case 4:F.RSA_3072=t.bytes();break;case 5:F.ECDSA_384=t.bytes();break;case 6:F.ECDSASecp256k1=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),SignatureMap:function(){function t(t){if(this.sigPair=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.sigPair=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.sigPair&&t.sigPair.length)for(var Q=0;Q<t.sigPair.length;++Q)U.proto.SignaturePair.encode(t.sigPair[Q],e.uint32(10).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.SignatureMap;t.pos<s;)1==(Q=t.uint32())>>>3?(F.sigPair&&F.sigPair.length||(F.sigPair=[]),F.sigPair.push(U.proto.SignaturePair.decode(t,t.uint32()))):t.skipType(7&Q);return F},t}(),HederaFunctionality:function(){const t={},e=Object.create(t);return e[t[0]="NONE"]=0,e[t[1]="CryptoTransfer"]=1,e[t[2]="CryptoUpdate"]=2,e[t[3]="CryptoDelete"]=3,e[t[4]="CryptoAddLiveHash"]=4,e[t[5]="CryptoDeleteLiveHash"]=5,e[t[6]="ContractCall"]=6,e[t[7]="ContractCreate"]=7,e[t[8]="ContractUpdate"]=8,e[t[9]="FileCreate"]=9,e[t[10]="FileAppend"]=10,e[t[11]="FileUpdate"]=11,e[t[12]="FileDelete"]=12,e[t[13]="CryptoGetAccountBalance"]=13,e[t[14]="CryptoGetAccountRecords"]=14,e[t[15]="CryptoGetInfo"]=15,e[t[16]="ContractCallLocal"]=16,e[t[17]="ContractGetInfo"]=17,e[t[18]="ContractGetBytecode"]=18,e[t[19]="GetBySolidityID"]=19,e[t[20]="GetByKey"]=20,e[t[21]="CryptoGetLiveHash"]=21,e[t[22]="CryptoGetStakers"]=22,e[t[23]="FileGetContents"]=23,e[t[24]="FileGetInfo"]=24,e[t[25]="TransactionGetRecord"]=25,e[t[26]="ContractGetRecords"]=26,e[t[27]="CryptoCreate"]=27,e[t[28]="SystemDelete"]=28,e[t[29]="SystemUndelete"]=29,e[t[30]="ContractDelete"]=30,e[t[31]="Freeze"]=31,e[t[32]="CreateTransactionRecord"]=32,e[t[33]="CryptoAccountAutoRenew"]=33,e[t[34]="ContractAutoRenew"]=34,e[t[35]="GetVersionInfo"]=35,e[t[36]="TransactionGetReceipt"]=36,e[t[50]="ConsensusCreateTopic"]=50,e[t[51]="ConsensusUpdateTopic"]=51,e[t[52]="ConsensusDeleteTopic"]=52,e[t[53]="ConsensusGetTopicInfo"]=53,e[t[54]="ConsensusSubmitMessage"]=54,e[t[55]="UncheckedSubmit"]=55,e[t[56]="TokenCreate"]=56,e[t[58]="TokenGetInfo"]=58,e[t[59]="TokenFreezeAccount"]=59,e[t[60]="TokenUnfreezeAccount"]=60,e[t[61]="TokenGrantKycToAccount"]=61,e[t[62]="TokenRevokeKycFromAccount"]=62,e[t[63]="TokenDelete"]=63,e[t[64]="TokenUpdate"]=64,e[t[65]="TokenMint"]=65,e[t[66]="TokenBurn"]=66,e[t[67]="TokenAccountWipe"]=67,e[t[68]="TokenAssociateToAccount"]=68,e[t[69]="TokenDissociateFromAccount"]=69,e[t[70]="ScheduleCreate"]=70,e[t[71]="ScheduleDelete"]=71,e[t[72]="ScheduleSign"]=72,e[t[73]="ScheduleGetInfo"]=73,e[t[74]="TokenGetAccountNftInfos"]=74,e[t[75]="TokenGetNftInfo"]=75,e[t[76]="TokenGetNftInfos"]=76,e[t[77]="TokenFeeScheduleUpdate"]=77,e[t[78]="NetworkGetExecutionTime"]=78,e[t[79]="TokenPause"]=79,e[t[80]="TokenUnpause"]=80,e}(),FeeComponents:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.min=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.max=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.constant=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.bpt=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.vpt=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.rbh=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.sbh=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.gas=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.tv=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.bpr=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.sbpr=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.min&&Object.hasOwnProperty.call(t,"min")&&e.uint32(8).int64(t.min),null!=t.max&&Object.hasOwnProperty.call(t,"max")&&e.uint32(16).int64(t.max),null!=t.constant&&Object.hasOwnProperty.call(t,"constant")&&e.uint32(24).int64(t.constant),null!=t.bpt&&Object.hasOwnProperty.call(t,"bpt")&&e.uint32(32).int64(t.bpt),null!=t.vpt&&Object.hasOwnProperty.call(t,"vpt")&&e.uint32(40).int64(t.vpt),null!=t.rbh&&Object.hasOwnProperty.call(t,"rbh")&&e.uint32(48).int64(t.rbh),null!=t.sbh&&Object.hasOwnProperty.call(t,"sbh")&&e.uint32(56).int64(t.sbh),null!=t.gas&&Object.hasOwnProperty.call(t,"gas")&&e.uint32(64).int64(t.gas),null!=t.tv&&Object.hasOwnProperty.call(t,"tv")&&e.uint32(72).int64(t.tv),null!=t.bpr&&Object.hasOwnProperty.call(t,"bpr")&&e.uint32(80).int64(t.bpr),null!=t.sbpr&&Object.hasOwnProperty.call(t,"sbpr")&&e.uint32(88).int64(t.sbpr),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FeeComponents;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.min=t.int64();break;case 2:F.max=t.int64();break;case 3:F.constant=t.int64();break;case 4:F.bpt=t.int64();break;case 5:F.vpt=t.int64();break;case 6:F.rbh=t.int64();break;case 7:F.sbh=t.int64();break;case 8:F.gas=t.int64();break;case 9:F.tv=t.int64();break;case 10:F.bpr=t.int64();break;case 11:F.sbpr=t.int64();break;default:t.skipType(7&Q)}return F},t}(),TransactionFeeSchedule:function(){function t(t){if(this.fees=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.hederaFunctionality=0,t.prototype.feeData=null,t.prototype.fees=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.hederaFunctionality&&Object.hasOwnProperty.call(t,"hederaFunctionality")&&e.uint32(8).int32(t.hederaFunctionality),null!=t.feeData&&Object.hasOwnProperty.call(t,"feeData")&&U.proto.FeeData.encode(t.feeData,e.uint32(18).fork()).ldelim(),null!=t.fees&&t.fees.length)for(var Q=0;Q<t.fees.length;++Q)U.proto.FeeData.encode(t.fees[Q],e.uint32(26).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TransactionFeeSchedule;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.hederaFunctionality=t.int32();break;case 2:F.feeData=U.proto.FeeData.decode(t,t.uint32());break;case 3:F.fees&&F.fees.length||(F.fees=[]),F.fees.push(U.proto.FeeData.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),FeeData:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.nodedata=null,t.prototype.networkdata=null,t.prototype.servicedata=null,t.prototype.subType=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.nodedata&&Object.hasOwnProperty.call(t,"nodedata")&&U.proto.FeeComponents.encode(t.nodedata,e.uint32(10).fork()).ldelim(),null!=t.networkdata&&Object.hasOwnProperty.call(t,"networkdata")&&U.proto.FeeComponents.encode(t.networkdata,e.uint32(18).fork()).ldelim(),null!=t.servicedata&&Object.hasOwnProperty.call(t,"servicedata")&&U.proto.FeeComponents.encode(t.servicedata,e.uint32(26).fork()).ldelim(),null!=t.subType&&Object.hasOwnProperty.call(t,"subType")&&e.uint32(32).int32(t.subType),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FeeData;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.nodedata=U.proto.FeeComponents.decode(t,t.uint32());break;case 2:F.networkdata=U.proto.FeeComponents.decode(t,t.uint32());break;case 3:F.servicedata=U.proto.FeeComponents.decode(t,t.uint32());break;case 4:F.subType=t.int32();break;default:t.skipType(7&Q)}return F},t}(),FeeSchedule:function(){function t(t){if(this.transactionFeeSchedule=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.transactionFeeSchedule=F.emptyArray,t.prototype.expiryTime=null,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.transactionFeeSchedule&&t.transactionFeeSchedule.length)for(var Q=0;Q<t.transactionFeeSchedule.length;++Q)U.proto.TransactionFeeSchedule.encode(t.transactionFeeSchedule[Q],e.uint32(10).fork()).ldelim();return null!=t.expiryTime&&Object.hasOwnProperty.call(t,"expiryTime")&&U.proto.TimestampSeconds.encode(t.expiryTime,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FeeSchedule;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.transactionFeeSchedule&&F.transactionFeeSchedule.length||(F.transactionFeeSchedule=[]),F.transactionFeeSchedule.push(U.proto.TransactionFeeSchedule.decode(t,t.uint32()));break;case 2:F.expiryTime=U.proto.TimestampSeconds.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),CurrentAndNextFeeSchedule:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.currentFeeSchedule=null,t.prototype.nextFeeSchedule=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.currentFeeSchedule&&Object.hasOwnProperty.call(t,"currentFeeSchedule")&&U.proto.FeeSchedule.encode(t.currentFeeSchedule,e.uint32(10).fork()).ldelim(),null!=t.nextFeeSchedule&&Object.hasOwnProperty.call(t,"nextFeeSchedule")&&U.proto.FeeSchedule.encode(t.nextFeeSchedule,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CurrentAndNextFeeSchedule;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.currentFeeSchedule=U.proto.FeeSchedule.decode(t,t.uint32());break;case 2:F.nextFeeSchedule=U.proto.FeeSchedule.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ServiceEndpoint:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.ipAddressV4=F.newBuffer([]),t.prototype.port=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.ipAddressV4&&Object.hasOwnProperty.call(t,"ipAddressV4")&&e.uint32(10).bytes(t.ipAddressV4),null!=t.port&&Object.hasOwnProperty.call(t,"port")&&e.uint32(16).int32(t.port),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ServiceEndpoint;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.ipAddressV4=t.bytes();break;case 2:F.port=t.int32();break;default:t.skipType(7&Q)}return F},t}(),NodeAddress:function(){function t(t){if(this.serviceEndpoint=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.ipAddress=F.newBuffer([]),t.prototype.portno=0,t.prototype.memo=F.newBuffer([]),t.prototype.RSA_PubKey="",t.prototype.nodeId=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.nodeAccountId=null,t.prototype.nodeCertHash=F.newBuffer([]),t.prototype.serviceEndpoint=F.emptyArray,t.prototype.description="",t.prototype.stake=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.ipAddress&&Object.hasOwnProperty.call(t,"ipAddress")&&e.uint32(10).bytes(t.ipAddress),null!=t.portno&&Object.hasOwnProperty.call(t,"portno")&&e.uint32(16).int32(t.portno),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(26).bytes(t.memo),null!=t.RSA_PubKey&&Object.hasOwnProperty.call(t,"RSA_PubKey")&&e.uint32(34).string(t.RSA_PubKey),null!=t.nodeId&&Object.hasOwnProperty.call(t,"nodeId")&&e.uint32(40).int64(t.nodeId),null!=t.nodeAccountId&&Object.hasOwnProperty.call(t,"nodeAccountId")&&U.proto.AccountID.encode(t.nodeAccountId,e.uint32(50).fork()).ldelim(),null!=t.nodeCertHash&&Object.hasOwnProperty.call(t,"nodeCertHash")&&e.uint32(58).bytes(t.nodeCertHash),null!=t.serviceEndpoint&&t.serviceEndpoint.length)for(var Q=0;Q<t.serviceEndpoint.length;++Q)U.proto.ServiceEndpoint.encode(t.serviceEndpoint[Q],e.uint32(66).fork()).ldelim();return null!=t.description&&Object.hasOwnProperty.call(t,"description")&&e.uint32(74).string(t.description),null!=t.stake&&Object.hasOwnProperty.call(t,"stake")&&e.uint32(80).int64(t.stake),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.NodeAddress;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.ipAddress=t.bytes();break;case 2:F.portno=t.int32();break;case 3:F.memo=t.bytes();break;case 4:F.RSA_PubKey=t.string();break;case 5:F.nodeId=t.int64();break;case 6:F.nodeAccountId=U.proto.AccountID.decode(t,t.uint32());break;case 7:F.nodeCertHash=t.bytes();break;case 8:F.serviceEndpoint&&F.serviceEndpoint.length||(F.serviceEndpoint=[]),F.serviceEndpoint.push(U.proto.ServiceEndpoint.decode(t,t.uint32()));break;case 9:F.description=t.string();break;case 10:F.stake=t.int64();break;default:t.skipType(7&Q)}return F},t}(),NodeAddressBook:function(){function t(t){if(this.nodeAddress=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.nodeAddress=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.nodeAddress&&t.nodeAddress.length)for(var Q=0;Q<t.nodeAddress.length;++Q)U.proto.NodeAddress.encode(t.nodeAddress[Q],e.uint32(10).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.NodeAddressBook;t.pos<s;)1==(Q=t.uint32())>>>3?(F.nodeAddress&&F.nodeAddress.length||(F.nodeAddress=[]),F.nodeAddress.push(U.proto.NodeAddress.decode(t,t.uint32()))):t.skipType(7&Q);return F},t}(),SemanticVersion:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.major=0,t.prototype.minor=0,t.prototype.patch=0,t.prototype.pre="",t.prototype.build="",t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.major&&Object.hasOwnProperty.call(t,"major")&&e.uint32(8).int32(t.major),null!=t.minor&&Object.hasOwnProperty.call(t,"minor")&&e.uint32(16).int32(t.minor),null!=t.patch&&Object.hasOwnProperty.call(t,"patch")&&e.uint32(24).int32(t.patch),null!=t.pre&&Object.hasOwnProperty.call(t,"pre")&&e.uint32(34).string(t.pre),null!=t.build&&Object.hasOwnProperty.call(t,"build")&&e.uint32(42).string(t.build),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.SemanticVersion;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.major=t.int32();break;case 2:F.minor=t.int32();break;case 3:F.patch=t.int32();break;case 4:F.pre=t.string();break;case 5:F.build=t.string();break;default:t.skipType(7&Q)}return F},t}(),Setting:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.name="",t.prototype.value="",t.prototype.data=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.name&&Object.hasOwnProperty.call(t,"name")&&e.uint32(10).string(t.name),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(18).string(t.value),null!=t.data&&Object.hasOwnProperty.call(t,"data")&&e.uint32(26).bytes(t.data),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.Setting;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.name=t.string();break;case 2:F.value=t.string();break;case 3:F.data=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),ServicesConfigurationList:function(){function t(t){if(this.nameValue=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.nameValue=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.nameValue&&t.nameValue.length)for(var Q=0;Q<t.nameValue.length;++Q)U.proto.Setting.encode(t.nameValue[Q],e.uint32(10).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ServicesConfigurationList;t.pos<s;)1==(Q=t.uint32())>>>3?(F.nameValue&&F.nameValue.length||(F.nameValue=[]),F.nameValue.push(U.proto.Setting.decode(t,t.uint32()))):t.skipType(7&Q);return F},t}(),TokenRelationship:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.tokenId=null,t.prototype.symbol="",t.prototype.balance=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.kycStatus=0,t.prototype.freezeStatus=0,t.prototype.decimals=0,t.prototype.automaticAssociation=!1,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.tokenId&&Object.hasOwnProperty.call(t,"tokenId")&&U.proto.TokenID.encode(t.tokenId,e.uint32(10).fork()).ldelim(),null!=t.symbol&&Object.hasOwnProperty.call(t,"symbol")&&e.uint32(18).string(t.symbol),null!=t.balance&&Object.hasOwnProperty.call(t,"balance")&&e.uint32(24).uint64(t.balance),null!=t.kycStatus&&Object.hasOwnProperty.call(t,"kycStatus")&&e.uint32(32).int32(t.kycStatus),null!=t.freezeStatus&&Object.hasOwnProperty.call(t,"freezeStatus")&&e.uint32(40).int32(t.freezeStatus),null!=t.decimals&&Object.hasOwnProperty.call(t,"decimals")&&e.uint32(48).uint32(t.decimals),null!=t.automaticAssociation&&Object.hasOwnProperty.call(t,"automaticAssociation")&&e.uint32(56).bool(t.automaticAssociation),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenRelationship;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.tokenId=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.symbol=t.string();break;case 3:F.balance=t.uint64();break;case 4:F.kycStatus=t.int32();break;case 5:F.freezeStatus=t.int32();break;case 6:F.decimals=t.uint32();break;case 7:F.automaticAssociation=t.bool();break;default:t.skipType(7&Q)}return F},t}(),TokenBalance:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.tokenId=null,t.prototype.balance=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.decimals=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.tokenId&&Object.hasOwnProperty.call(t,"tokenId")&&U.proto.TokenID.encode(t.tokenId,e.uint32(10).fork()).ldelim(),null!=t.balance&&Object.hasOwnProperty.call(t,"balance")&&e.uint32(16).uint64(t.balance),null!=t.decimals&&Object.hasOwnProperty.call(t,"decimals")&&e.uint32(24).uint32(t.decimals),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenBalance;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.tokenId=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.balance=t.uint64();break;case 3:F.decimals=t.uint32();break;default:t.skipType(7&Q)}return F},t}(),TokenBalances:function(){function t(t){if(this.tokenBalances=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.tokenBalances=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.tokenBalances&&t.tokenBalances.length)for(var Q=0;Q<t.tokenBalances.length;++Q)U.proto.TokenBalance.encode(t.tokenBalances[Q],e.uint32(10).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenBalances;t.pos<s;)1==(Q=t.uint32())>>>3?(F.tokenBalances&&F.tokenBalances.length||(F.tokenBalances=[]),F.tokenBalances.push(U.proto.TokenBalance.decode(t,t.uint32()))):t.skipType(7&Q);return F},t}(),TokenAssociation:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.tokenId=null,t.prototype.accountId=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.tokenId&&Object.hasOwnProperty.call(t,"tokenId")&&U.proto.TokenID.encode(t.tokenId,e.uint32(10).fork()).ldelim(),null!=t.accountId&&Object.hasOwnProperty.call(t,"accountId")&&U.proto.AccountID.encode(t.accountId,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenAssociation;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.tokenId=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.accountId=U.proto.AccountID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),CryptoAllowance:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.spender=null,t.prototype.amount=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.spender&&Object.hasOwnProperty.call(t,"spender")&&U.proto.AccountID.encode(t.spender,e.uint32(10).fork()).ldelim(),null!=t.amount&&Object.hasOwnProperty.call(t,"amount")&&e.uint32(16).int64(t.amount),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoAllowance;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.spender=U.proto.AccountID.decode(t,t.uint32());break;case 2:F.amount=t.int64();break;default:t.skipType(7&Q)}return F},t}(),NftAllowance:function(){function t(t){if(this.serialNumbers=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.tokenId=null,t.prototype.spender=null,t.prototype.serialNumbers=F.emptyArray,t.prototype.approvedForAll=null,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.tokenId&&Object.hasOwnProperty.call(t,"tokenId")&&U.proto.TokenID.encode(t.tokenId,e.uint32(10).fork()).ldelim(),null!=t.spender&&Object.hasOwnProperty.call(t,"spender")&&U.proto.AccountID.encode(t.spender,e.uint32(18).fork()).ldelim(),null!=t.serialNumbers&&t.serialNumbers.length){e.uint32(26).fork();for(var Q=0;Q<t.serialNumbers.length;++Q)e.int64(t.serialNumbers[Q]);e.ldelim()}return null!=t.approvedForAll&&Object.hasOwnProperty.call(t,"approvedForAll")&&U.google.protobuf.BoolValue.encode(t.approvedForAll,e.uint32(34).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.NftAllowance;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.tokenId=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.spender=U.proto.AccountID.decode(t,t.uint32());break;case 3:if(F.serialNumbers&&F.serialNumbers.length||(F.serialNumbers=[]),2==(7&Q))for(var n=t.uint32()+t.pos;t.pos<n;)F.serialNumbers.push(t.int64());else F.serialNumbers.push(t.int64());break;case 4:F.approvedForAll=U.google.protobuf.BoolValue.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),TokenAllowance:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.tokenId=null,t.prototype.spender=null,t.prototype.amount=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.tokenId&&Object.hasOwnProperty.call(t,"tokenId")&&U.proto.TokenID.encode(t.tokenId,e.uint32(10).fork()).ldelim(),null!=t.spender&&Object.hasOwnProperty.call(t,"spender")&&U.proto.AccountID.encode(t.spender,e.uint32(18).fork()).ldelim(),null!=t.amount&&Object.hasOwnProperty.call(t,"amount")&&e.uint32(24).int64(t.amount),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenAllowance;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.tokenId=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.spender=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.amount=t.int64();break;default:t.skipType(7&Q)}return F},t}(),Timestamp:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.seconds=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.nanos=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.seconds&&Object.hasOwnProperty.call(t,"seconds")&&e.uint32(8).int64(t.seconds),null!=t.nanos&&Object.hasOwnProperty.call(t,"nanos")&&e.uint32(16).int32(t.nanos),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.Timestamp;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.seconds=t.int64();break;case 2:F.nanos=t.int32();break;default:t.skipType(7&Q)}return F},t}(),TimestampSeconds:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.seconds=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.seconds&&Object.hasOwnProperty.call(t,"seconds")&&e.uint32(8).int64(t.seconds),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TimestampSeconds;t.pos<s;)1==(Q=t.uint32())>>>3?F.seconds=t.int64():t.skipType(7&Q);return F},t}(),ConsensusCreateTopicTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.memo="",t.prototype.adminKey=null,t.prototype.submitKey=null,t.prototype.autoRenewPeriod=null,t.prototype.autoRenewAccount=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(10).string(t.memo),null!=t.adminKey&&Object.hasOwnProperty.call(t,"adminKey")&&U.proto.Key.encode(t.adminKey,e.uint32(18).fork()).ldelim(),null!=t.submitKey&&Object.hasOwnProperty.call(t,"submitKey")&&U.proto.Key.encode(t.submitKey,e.uint32(26).fork()).ldelim(),null!=t.autoRenewPeriod&&Object.hasOwnProperty.call(t,"autoRenewPeriod")&&U.proto.Duration.encode(t.autoRenewPeriod,e.uint32(50).fork()).ldelim(),null!=t.autoRenewAccount&&Object.hasOwnProperty.call(t,"autoRenewAccount")&&U.proto.AccountID.encode(t.autoRenewAccount,e.uint32(58).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ConsensusCreateTopicTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.memo=t.string();break;case 2:F.adminKey=U.proto.Key.decode(t,t.uint32());break;case 3:F.submitKey=U.proto.Key.decode(t,t.uint32());break;case 6:F.autoRenewPeriod=U.proto.Duration.decode(t,t.uint32());break;case 7:F.autoRenewAccount=U.proto.AccountID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),Duration:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.seconds=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.seconds&&Object.hasOwnProperty.call(t,"seconds")&&e.uint32(8).int64(t.seconds),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.Duration;t.pos<s;)1==(Q=t.uint32())>>>3?F.seconds=t.int64():t.skipType(7&Q);return F},t}(),ConsensusDeleteTopicTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.topicID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.topicID&&Object.hasOwnProperty.call(t,"topicID")&&U.proto.TopicID.encode(t.topicID,e.uint32(10).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ConsensusDeleteTopicTransactionBody;t.pos<s;)1==(Q=t.uint32())>>>3?F.topicID=U.proto.TopicID.decode(t,t.uint32()):t.skipType(7&Q);return F},t}(),ConsensusGetTopicInfoQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.topicID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.topicID&&Object.hasOwnProperty.call(t,"topicID")&&U.proto.TopicID.encode(t.topicID,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ConsensusGetTopicInfoQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.topicID=U.proto.TopicID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ConsensusGetTopicInfoResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.topicID=null,t.prototype.topicInfo=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.topicID&&Object.hasOwnProperty.call(t,"topicID")&&U.proto.TopicID.encode(t.topicID,e.uint32(18).fork()).ldelim(),null!=t.topicInfo&&Object.hasOwnProperty.call(t,"topicInfo")&&U.proto.ConsensusTopicInfo.encode(t.topicInfo,e.uint32(42).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ConsensusGetTopicInfoResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.topicID=U.proto.TopicID.decode(t,t.uint32());break;case 5:F.topicInfo=U.proto.ConsensusTopicInfo.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ResponseType:function(){const t={},e=Object.create(t);return e[t[0]="ANSWER_ONLY"]=0,e[t[1]="ANSWER_STATE_PROOF"]=1,e[t[2]="COST_ANSWER"]=2,e[t[3]="COST_ANSWER_STATE_PROOF"]=3,e}(),QueryHeader:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.payment=null,t.prototype.responseType=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.payment&&Object.hasOwnProperty.call(t,"payment")&&U.proto.Transaction.encode(t.payment,e.uint32(10).fork()).ldelim(),null!=t.responseType&&Object.hasOwnProperty.call(t,"responseType")&&e.uint32(16).int32(t.responseType),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.QueryHeader;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.payment=U.proto.Transaction.decode(t,t.uint32());break;case 2:F.responseType=t.int32();break;default:t.skipType(7&Q)}return F},t}(),Transaction:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.body=null,t.prototype.sigs=null,t.prototype.sigMap=null,t.prototype.bodyBytes=F.newBuffer([]),t.prototype.signedTransactionBytes=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.body&&Object.hasOwnProperty.call(t,"body")&&U.proto.TransactionBody.encode(t.body,e.uint32(10).fork()).ldelim(),null!=t.sigs&&Object.hasOwnProperty.call(t,"sigs")&&U.proto.SignatureList.encode(t.sigs,e.uint32(18).fork()).ldelim(),null!=t.sigMap&&Object.hasOwnProperty.call(t,"sigMap")&&U.proto.SignatureMap.encode(t.sigMap,e.uint32(26).fork()).ldelim(),null!=t.bodyBytes&&Object.hasOwnProperty.call(t,"bodyBytes")&&e.uint32(34).bytes(t.bodyBytes),null!=t.signedTransactionBytes&&Object.hasOwnProperty.call(t,"signedTransactionBytes")&&e.uint32(42).bytes(t.signedTransactionBytes),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.Transaction;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.body=U.proto.TransactionBody.decode(t,t.uint32());break;case 2:F.sigs=U.proto.SignatureList.decode(t,t.uint32());break;case 3:F.sigMap=U.proto.SignatureMap.decode(t,t.uint32());break;case 4:F.bodyBytes=t.bytes();break;case 5:F.signedTransactionBytes=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),TransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.transactionID=null,t.prototype.nodeAccountID=null,t.prototype.transactionFee=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.transactionValidDuration=null,t.prototype.generateRecord=!1,t.prototype.memo="",t.prototype.contractCall=null,t.prototype.contractCreateInstance=null,t.prototype.contractUpdateInstance=null,t.prototype.contractDeleteInstance=null,t.prototype.cryptoAddLiveHash=null,t.prototype.cryptoAdjustAllowance=null,t.prototype.cryptoApproveAllowance=null,t.prototype.cryptoCreateAccount=null,t.prototype.cryptoDelete=null,t.prototype.cryptoDeleteLiveHash=null,t.prototype.cryptoTransfer=null,t.prototype.cryptoUpdateAccount=null,t.prototype.fileAppend=null,t.prototype.fileCreate=null,t.prototype.fileDelete=null,t.prototype.fileUpdate=null,t.prototype.systemDelete=null,t.prototype.systemUndelete=null,t.prototype.freeze=null,t.prototype.consensusCreateTopic=null,t.prototype.consensusUpdateTopic=null,t.prototype.consensusDeleteTopic=null,t.prototype.consensusSubmitMessage=null,t.prototype.uncheckedSubmit=null,t.prototype.tokenCreation=null,t.prototype.tokenFreeze=null,t.prototype.tokenUnfreeze=null,t.prototype.tokenGrantKyc=null,t.prototype.tokenRevokeKyc=null,t.prototype.tokenDeletion=null,t.prototype.tokenUpdate=null,t.prototype.tokenMint=null,t.prototype.tokenBurn=null,t.prototype.tokenWipe=null,t.prototype.tokenAssociate=null,t.prototype.tokenDissociate=null,t.prototype.tokenFeeScheduleUpdate=null,t.prototype.tokenPause=null,t.prototype.tokenUnpause=null,t.prototype.scheduleCreate=null,t.prototype.scheduleDelete=null,t.prototype.scheduleSign=null,Object.defineProperty(t.prototype,"data",{get:F.oneOfGetter(e=["contractCall","contractCreateInstance","contractUpdateInstance","contractDeleteInstance","cryptoAddLiveHash","cryptoAdjustAllowance","cryptoApproveAllowance","cryptoCreateAccount","cryptoDelete","cryptoDeleteLiveHash","cryptoTransfer","cryptoUpdateAccount","fileAppend","fileCreate","fileDelete","fileUpdate","systemDelete","systemUndelete","freeze","consensusCreateTopic","consensusUpdateTopic","consensusDeleteTopic","consensusSubmitMessage","uncheckedSubmit","tokenCreation","tokenFreeze","tokenUnfreeze","tokenGrantKyc","tokenRevokeKyc","tokenDeletion","tokenUpdate","tokenMint","tokenBurn","tokenWipe","tokenAssociate","tokenDissociate","tokenFeeScheduleUpdate","tokenPause","tokenUnpause","scheduleCreate","scheduleDelete","scheduleSign"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.transactionID&&Object.hasOwnProperty.call(t,"transactionID")&&U.proto.TransactionID.encode(t.transactionID,e.uint32(10).fork()).ldelim(),null!=t.nodeAccountID&&Object.hasOwnProperty.call(t,"nodeAccountID")&&U.proto.AccountID.encode(t.nodeAccountID,e.uint32(18).fork()).ldelim(),null!=t.transactionFee&&Object.hasOwnProperty.call(t,"transactionFee")&&e.uint32(24).uint64(t.transactionFee),null!=t.transactionValidDuration&&Object.hasOwnProperty.call(t,"transactionValidDuration")&&U.proto.Duration.encode(t.transactionValidDuration,e.uint32(34).fork()).ldelim(),null!=t.generateRecord&&Object.hasOwnProperty.call(t,"generateRecord")&&e.uint32(40).bool(t.generateRecord),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(50).string(t.memo),null!=t.contractCall&&Object.hasOwnProperty.call(t,"contractCall")&&U.proto.ContractCallTransactionBody.encode(t.contractCall,e.uint32(58).fork()).ldelim(),null!=t.contractCreateInstance&&Object.hasOwnProperty.call(t,"contractCreateInstance")&&U.proto.ContractCreateTransactionBody.encode(t.contractCreateInstance,e.uint32(66).fork()).ldelim(),null!=t.contractUpdateInstance&&Object.hasOwnProperty.call(t,"contractUpdateInstance")&&U.proto.ContractUpdateTransactionBody.encode(t.contractUpdateInstance,e.uint32(74).fork()).ldelim(),null!=t.cryptoAddLiveHash&&Object.hasOwnProperty.call(t,"cryptoAddLiveHash")&&U.proto.CryptoAddLiveHashTransactionBody.encode(t.cryptoAddLiveHash,e.uint32(82).fork()).ldelim(),null!=t.cryptoCreateAccount&&Object.hasOwnProperty.call(t,"cryptoCreateAccount")&&U.proto.CryptoCreateTransactionBody.encode(t.cryptoCreateAccount,e.uint32(90).fork()).ldelim(),null!=t.cryptoDelete&&Object.hasOwnProperty.call(t,"cryptoDelete")&&U.proto.CryptoDeleteTransactionBody.encode(t.cryptoDelete,e.uint32(98).fork()).ldelim(),null!=t.cryptoDeleteLiveHash&&Object.hasOwnProperty.call(t,"cryptoDeleteLiveHash")&&U.proto.CryptoDeleteLiveHashTransactionBody.encode(t.cryptoDeleteLiveHash,e.uint32(106).fork()).ldelim(),null!=t.cryptoTransfer&&Object.hasOwnProperty.call(t,"cryptoTransfer")&&U.proto.CryptoTransferTransactionBody.encode(t.cryptoTransfer,e.uint32(114).fork()).ldelim(),null!=t.cryptoUpdateAccount&&Object.hasOwnProperty.call(t,"cryptoUpdateAccount")&&U.proto.CryptoUpdateTransactionBody.encode(t.cryptoUpdateAccount,e.uint32(122).fork()).ldelim(),null!=t.fileAppend&&Object.hasOwnProperty.call(t,"fileAppend")&&U.proto.FileAppendTransactionBody.encode(t.fileAppend,e.uint32(130).fork()).ldelim(),null!=t.fileCreate&&Object.hasOwnProperty.call(t,"fileCreate")&&U.proto.FileCreateTransactionBody.encode(t.fileCreate,e.uint32(138).fork()).ldelim(),null!=t.fileDelete&&Object.hasOwnProperty.call(t,"fileDelete")&&U.proto.FileDeleteTransactionBody.encode(t.fileDelete,e.uint32(146).fork()).ldelim(),null!=t.fileUpdate&&Object.hasOwnProperty.call(t,"fileUpdate")&&U.proto.FileUpdateTransactionBody.encode(t.fileUpdate,e.uint32(154).fork()).ldelim(),null!=t.systemDelete&&Object.hasOwnProperty.call(t,"systemDelete")&&U.proto.SystemDeleteTransactionBody.encode(t.systemDelete,e.uint32(162).fork()).ldelim(),null!=t.systemUndelete&&Object.hasOwnProperty.call(t,"systemUndelete")&&U.proto.SystemUndeleteTransactionBody.encode(t.systemUndelete,e.uint32(170).fork()).ldelim(),null!=t.contractDeleteInstance&&Object.hasOwnProperty.call(t,"contractDeleteInstance")&&U.proto.ContractDeleteTransactionBody.encode(t.contractDeleteInstance,e.uint32(178).fork()).ldelim(),null!=t.freeze&&Object.hasOwnProperty.call(t,"freeze")&&U.proto.FreezeTransactionBody.encode(t.freeze,e.uint32(186).fork()).ldelim(),null!=t.consensusCreateTopic&&Object.hasOwnProperty.call(t,"consensusCreateTopic")&&U.proto.ConsensusCreateTopicTransactionBody.encode(t.consensusCreateTopic,e.uint32(194).fork()).ldelim(),null!=t.consensusUpdateTopic&&Object.hasOwnProperty.call(t,"consensusUpdateTopic")&&U.proto.ConsensusUpdateTopicTransactionBody.encode(t.consensusUpdateTopic,e.uint32(202).fork()).ldelim(),null!=t.consensusDeleteTopic&&Object.hasOwnProperty.call(t,"consensusDeleteTopic")&&U.proto.ConsensusDeleteTopicTransactionBody.encode(t.consensusDeleteTopic,e.uint32(210).fork()).ldelim(),null!=t.consensusSubmitMessage&&Object.hasOwnProperty.call(t,"consensusSubmitMessage")&&U.proto.ConsensusSubmitMessageTransactionBody.encode(t.consensusSubmitMessage,e.uint32(218).fork()).ldelim(),null!=t.uncheckedSubmit&&Object.hasOwnProperty.call(t,"uncheckedSubmit")&&U.proto.UncheckedSubmitBody.encode(t.uncheckedSubmit,e.uint32(226).fork()).ldelim(),null!=t.tokenCreation&&Object.hasOwnProperty.call(t,"tokenCreation")&&U.proto.TokenCreateTransactionBody.encode(t.tokenCreation,e.uint32(234).fork()).ldelim(),null!=t.tokenFreeze&&Object.hasOwnProperty.call(t,"tokenFreeze")&&U.proto.TokenFreezeAccountTransactionBody.encode(t.tokenFreeze,e.uint32(250).fork()).ldelim(),null!=t.tokenUnfreeze&&Object.hasOwnProperty.call(t,"tokenUnfreeze")&&U.proto.TokenUnfreezeAccountTransactionBody.encode(t.tokenUnfreeze,e.uint32(258).fork()).ldelim(),null!=t.tokenGrantKyc&&Object.hasOwnProperty.call(t,"tokenGrantKyc")&&U.proto.TokenGrantKycTransactionBody.encode(t.tokenGrantKyc,e.uint32(266).fork()).ldelim(),null!=t.tokenRevokeKyc&&Object.hasOwnProperty.call(t,"tokenRevokeKyc")&&U.proto.TokenRevokeKycTransactionBody.encode(t.tokenRevokeKyc,e.uint32(274).fork()).ldelim(),null!=t.tokenDeletion&&Object.hasOwnProperty.call(t,"tokenDeletion")&&U.proto.TokenDeleteTransactionBody.encode(t.tokenDeletion,e.uint32(282).fork()).ldelim(),null!=t.tokenUpdate&&Object.hasOwnProperty.call(t,"tokenUpdate")&&U.proto.TokenUpdateTransactionBody.encode(t.tokenUpdate,e.uint32(290).fork()).ldelim(),null!=t.tokenMint&&Object.hasOwnProperty.call(t,"tokenMint")&&U.proto.TokenMintTransactionBody.encode(t.tokenMint,e.uint32(298).fork()).ldelim(),null!=t.tokenBurn&&Object.hasOwnProperty.call(t,"tokenBurn")&&U.proto.TokenBurnTransactionBody.encode(t.tokenBurn,e.uint32(306).fork()).ldelim(),null!=t.tokenWipe&&Object.hasOwnProperty.call(t,"tokenWipe")&&U.proto.TokenWipeAccountTransactionBody.encode(t.tokenWipe,e.uint32(314).fork()).ldelim(),null!=t.tokenAssociate&&Object.hasOwnProperty.call(t,"tokenAssociate")&&U.proto.TokenAssociateTransactionBody.encode(t.tokenAssociate,e.uint32(322).fork()).ldelim(),null!=t.tokenDissociate&&Object.hasOwnProperty.call(t,"tokenDissociate")&&U.proto.TokenDissociateTransactionBody.encode(t.tokenDissociate,e.uint32(330).fork()).ldelim(),null!=t.scheduleCreate&&Object.hasOwnProperty.call(t,"scheduleCreate")&&U.proto.ScheduleCreateTransactionBody.encode(t.scheduleCreate,e.uint32(338).fork()).ldelim(),null!=t.scheduleDelete&&Object.hasOwnProperty.call(t,"scheduleDelete")&&U.proto.ScheduleDeleteTransactionBody.encode(t.scheduleDelete,e.uint32(346).fork()).ldelim(),null!=t.scheduleSign&&Object.hasOwnProperty.call(t,"scheduleSign")&&U.proto.ScheduleSignTransactionBody.encode(t.scheduleSign,e.uint32(354).fork()).ldelim(),null!=t.tokenFeeScheduleUpdate&&Object.hasOwnProperty.call(t,"tokenFeeScheduleUpdate")&&U.proto.TokenFeeScheduleUpdateTransactionBody.encode(t.tokenFeeScheduleUpdate,e.uint32(362).fork()).ldelim(),null!=t.tokenPause&&Object.hasOwnProperty.call(t,"tokenPause")&&U.proto.TokenPauseTransactionBody.encode(t.tokenPause,e.uint32(370).fork()).ldelim(),null!=t.tokenUnpause&&Object.hasOwnProperty.call(t,"tokenUnpause")&&U.proto.TokenUnpauseTransactionBody.encode(t.tokenUnpause,e.uint32(378).fork()).ldelim(),null!=t.cryptoAdjustAllowance&&Object.hasOwnProperty.call(t,"cryptoAdjustAllowance")&&U.proto.CryptoAdjustAllowanceTransactionBody.encode(t.cryptoAdjustAllowance,e.uint32(386).fork()).ldelim(),null!=t.cryptoApproveAllowance&&Object.hasOwnProperty.call(t,"cryptoApproveAllowance")&&U.proto.CryptoApproveAllowanceTransactionBody.encode(t.cryptoApproveAllowance,e.uint32(394).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.transactionID=U.proto.TransactionID.decode(t,t.uint32());break;case 2:F.nodeAccountID=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.transactionFee=t.uint64();break;case 4:F.transactionValidDuration=U.proto.Duration.decode(t,t.uint32());break;case 5:F.generateRecord=t.bool();break;case 6:F.memo=t.string();break;case 7:F.contractCall=U.proto.ContractCallTransactionBody.decode(t,t.uint32());break;case 8:F.contractCreateInstance=U.proto.ContractCreateTransactionBody.decode(t,t.uint32());break;case 9:F.contractUpdateInstance=U.proto.ContractUpdateTransactionBody.decode(t,t.uint32());break;case 22:F.contractDeleteInstance=U.proto.ContractDeleteTransactionBody.decode(t,t.uint32());break;case 10:F.cryptoAddLiveHash=U.proto.CryptoAddLiveHashTransactionBody.decode(t,t.uint32());break;case 48:F.cryptoAdjustAllowance=U.proto.CryptoAdjustAllowanceTransactionBody.decode(t,t.uint32());break;case 49:F.cryptoApproveAllowance=U.proto.CryptoApproveAllowanceTransactionBody.decode(t,t.uint32());break;case 11:F.cryptoCreateAccount=U.proto.CryptoCreateTransactionBody.decode(t,t.uint32());break;case 12:F.cryptoDelete=U.proto.CryptoDeleteTransactionBody.decode(t,t.uint32());break;case 13:F.cryptoDeleteLiveHash=U.proto.CryptoDeleteLiveHashTransactionBody.decode(t,t.uint32());break;case 14:F.cryptoTransfer=U.proto.CryptoTransferTransactionBody.decode(t,t.uint32());break;case 15:F.cryptoUpdateAccount=U.proto.CryptoUpdateTransactionBody.decode(t,t.uint32());break;case 16:F.fileAppend=U.proto.FileAppendTransactionBody.decode(t,t.uint32());break;case 17:F.fileCreate=U.proto.FileCreateTransactionBody.decode(t,t.uint32());break;case 18:F.fileDelete=U.proto.FileDeleteTransactionBody.decode(t,t.uint32());break;case 19:F.fileUpdate=U.proto.FileUpdateTransactionBody.decode(t,t.uint32());break;case 20:F.systemDelete=U.proto.SystemDeleteTransactionBody.decode(t,t.uint32());break;case 21:F.systemUndelete=U.proto.SystemUndeleteTransactionBody.decode(t,t.uint32());break;case 23:F.freeze=U.proto.FreezeTransactionBody.decode(t,t.uint32());break;case 24:F.consensusCreateTopic=U.proto.ConsensusCreateTopicTransactionBody.decode(t,t.uint32());break;case 25:F.consensusUpdateTopic=U.proto.ConsensusUpdateTopicTransactionBody.decode(t,t.uint32());break;case 26:F.consensusDeleteTopic=U.proto.ConsensusDeleteTopicTransactionBody.decode(t,t.uint32());break;case 27:F.consensusSubmitMessage=U.proto.ConsensusSubmitMessageTransactionBody.decode(t,t.uint32());break;case 28:F.uncheckedSubmit=U.proto.UncheckedSubmitBody.decode(t,t.uint32());break;case 29:F.tokenCreation=U.proto.TokenCreateTransactionBody.decode(t,t.uint32());break;case 31:F.tokenFreeze=U.proto.TokenFreezeAccountTransactionBody.decode(t,t.uint32());break;case 32:F.tokenUnfreeze=U.proto.TokenUnfreezeAccountTransactionBody.decode(t,t.uint32());break;case 33:F.tokenGrantKyc=U.proto.TokenGrantKycTransactionBody.decode(t,t.uint32());break;case 34:F.tokenRevokeKyc=U.proto.TokenRevokeKycTransactionBody.decode(t,t.uint32());break;case 35:F.tokenDeletion=U.proto.TokenDeleteTransactionBody.decode(t,t.uint32());break;case 36:F.tokenUpdate=U.proto.TokenUpdateTransactionBody.decode(t,t.uint32());break;case 37:F.tokenMint=U.proto.TokenMintTransactionBody.decode(t,t.uint32());break;case 38:F.tokenBurn=U.proto.TokenBurnTransactionBody.decode(t,t.uint32());break;case 39:F.tokenWipe=U.proto.TokenWipeAccountTransactionBody.decode(t,t.uint32());break;case 40:F.tokenAssociate=U.proto.TokenAssociateTransactionBody.decode(t,t.uint32());break;case 41:F.tokenDissociate=U.proto.TokenDissociateTransactionBody.decode(t,t.uint32());break;case 45:F.tokenFeeScheduleUpdate=U.proto.TokenFeeScheduleUpdateTransactionBody.decode(t,t.uint32());break;case 46:F.tokenPause=U.proto.TokenPauseTransactionBody.decode(t,t.uint32());break;case 47:F.tokenUnpause=U.proto.TokenUnpauseTransactionBody.decode(t,t.uint32());break;case 42:F.scheduleCreate=U.proto.ScheduleCreateTransactionBody.decode(t,t.uint32());break;case 43:F.scheduleDelete=U.proto.ScheduleDeleteTransactionBody.decode(t,t.uint32());break;case 44:F.scheduleSign=U.proto.ScheduleSignTransactionBody.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),SystemDeleteTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.fileID=null,t.prototype.contractID=null,t.prototype.expirationTime=null,Object.defineProperty(t.prototype,"id",{get:F.oneOfGetter(e=["fileID","contractID"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.fileID&&Object.hasOwnProperty.call(t,"fileID")&&U.proto.FileID.encode(t.fileID,e.uint32(10).fork()).ldelim(),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(18).fork()).ldelim(),null!=t.expirationTime&&Object.hasOwnProperty.call(t,"expirationTime")&&U.proto.TimestampSeconds.encode(t.expirationTime,e.uint32(26).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.SystemDeleteTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.fileID=U.proto.FileID.decode(t,t.uint32());break;case 2:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;case 3:F.expirationTime=U.proto.TimestampSeconds.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),SystemUndeleteTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.fileID=null,t.prototype.contractID=null,Object.defineProperty(t.prototype,"id",{get:F.oneOfGetter(e=["fileID","contractID"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.fileID&&Object.hasOwnProperty.call(t,"fileID")&&U.proto.FileID.encode(t.fileID,e.uint32(10).fork()).ldelim(),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.SystemUndeleteTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.fileID=U.proto.FileID.decode(t,t.uint32());break;case 2:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),FreezeTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.startHour=0,t.prototype.startMin=0,t.prototype.endHour=0,t.prototype.endMin=0,t.prototype.updateFile=null,t.prototype.fileHash=F.newBuffer([]),t.prototype.startTime=null,t.prototype.freezeType=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.startHour&&Object.hasOwnProperty.call(t,"startHour")&&e.uint32(8).int32(t.startHour),null!=t.startMin&&Object.hasOwnProperty.call(t,"startMin")&&e.uint32(16).int32(t.startMin),null!=t.endHour&&Object.hasOwnProperty.call(t,"endHour")&&e.uint32(24).int32(t.endHour),null!=t.endMin&&Object.hasOwnProperty.call(t,"endMin")&&e.uint32(32).int32(t.endMin),null!=t.updateFile&&Object.hasOwnProperty.call(t,"updateFile")&&U.proto.FileID.encode(t.updateFile,e.uint32(42).fork()).ldelim(),null!=t.fileHash&&Object.hasOwnProperty.call(t,"fileHash")&&e.uint32(50).bytes(t.fileHash),null!=t.startTime&&Object.hasOwnProperty.call(t,"startTime")&&U.proto.Timestamp.encode(t.startTime,e.uint32(58).fork()).ldelim(),null!=t.freezeType&&Object.hasOwnProperty.call(t,"freezeType")&&e.uint32(64).int32(t.freezeType),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FreezeTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.startHour=t.int32();break;case 2:F.startMin=t.int32();break;case 3:F.endHour=t.int32();break;case 4:F.endMin=t.int32();break;case 5:F.updateFile=U.proto.FileID.decode(t,t.uint32());break;case 6:F.fileHash=t.bytes();break;case 7:F.startTime=U.proto.Timestamp.decode(t,t.uint32());break;case 8:F.freezeType=t.int32();break;default:t.skipType(7&Q)}return F},t}(),FreezeType:function(){const t={},e=Object.create(t);return e[t[0]="UNKNOWN_FREEZE_TYPE"]=0,e[t[1]="FREEZE_ONLY"]=1,e[t[2]="PREPARE_UPGRADE"]=2,e[t[3]="FREEZE_UPGRADE"]=3,e[t[4]="FREEZE_ABORT"]=4,e[t[5]="TELEMETRY_UPGRADE"]=5,e}(),ContractCallTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.contractID=null,t.prototype.gas=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.amount=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.functionParameters=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(10).fork()).ldelim(),null!=t.gas&&Object.hasOwnProperty.call(t,"gas")&&e.uint32(16).int64(t.gas),null!=t.amount&&Object.hasOwnProperty.call(t,"amount")&&e.uint32(24).int64(t.amount),null!=t.functionParameters&&Object.hasOwnProperty.call(t,"functionParameters")&&e.uint32(34).bytes(t.functionParameters),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractCallTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;case 2:F.gas=t.int64();break;case 3:F.amount=t.int64();break;case 4:F.functionParameters=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),ContractCreateTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.fileID=null,t.prototype.adminKey=null,t.prototype.gas=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.initialBalance=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.proxyAccountID=null,t.prototype.autoRenewPeriod=null,t.prototype.constructorParameters=F.newBuffer([]),t.prototype.shardID=null,t.prototype.realmID=null,t.prototype.newRealmAdminKey=null,t.prototype.memo="",t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.fileID&&Object.hasOwnProperty.call(t,"fileID")&&U.proto.FileID.encode(t.fileID,e.uint32(10).fork()).ldelim(),null!=t.adminKey&&Object.hasOwnProperty.call(t,"adminKey")&&U.proto.Key.encode(t.adminKey,e.uint32(26).fork()).ldelim(),null!=t.gas&&Object.hasOwnProperty.call(t,"gas")&&e.uint32(32).int64(t.gas),null!=t.initialBalance&&Object.hasOwnProperty.call(t,"initialBalance")&&e.uint32(40).int64(t.initialBalance),null!=t.proxyAccountID&&Object.hasOwnProperty.call(t,"proxyAccountID")&&U.proto.AccountID.encode(t.proxyAccountID,e.uint32(50).fork()).ldelim(),null!=t.autoRenewPeriod&&Object.hasOwnProperty.call(t,"autoRenewPeriod")&&U.proto.Duration.encode(t.autoRenewPeriod,e.uint32(66).fork()).ldelim(),null!=t.constructorParameters&&Object.hasOwnProperty.call(t,"constructorParameters")&&e.uint32(74).bytes(t.constructorParameters),null!=t.shardID&&Object.hasOwnProperty.call(t,"shardID")&&U.proto.ShardID.encode(t.shardID,e.uint32(82).fork()).ldelim(),null!=t.realmID&&Object.hasOwnProperty.call(t,"realmID")&&U.proto.RealmID.encode(t.realmID,e.uint32(90).fork()).ldelim(),null!=t.newRealmAdminKey&&Object.hasOwnProperty.call(t,"newRealmAdminKey")&&U.proto.Key.encode(t.newRealmAdminKey,e.uint32(98).fork()).ldelim(),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(106).string(t.memo),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractCreateTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.fileID=U.proto.FileID.decode(t,t.uint32());break;case 3:F.adminKey=U.proto.Key.decode(t,t.uint32());break;case 4:F.gas=t.int64();break;case 5:F.initialBalance=t.int64();break;case 6:F.proxyAccountID=U.proto.AccountID.decode(t,t.uint32());break;case 8:F.autoRenewPeriod=U.proto.Duration.decode(t,t.uint32());break;case 9:F.constructorParameters=t.bytes();break;case 10:F.shardID=U.proto.ShardID.decode(t,t.uint32());break;case 11:F.realmID=U.proto.RealmID.decode(t,t.uint32());break;case 12:F.newRealmAdminKey=U.proto.Key.decode(t,t.uint32());break;case 13:F.memo=t.string();break;default:t.skipType(7&Q)}return F},t}(),ContractUpdateTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.contractID=null,t.prototype.expirationTime=null,t.prototype.adminKey=null,t.prototype.proxyAccountID=null,t.prototype.autoRenewPeriod=null,t.prototype.fileID=null,t.prototype.memo=null,t.prototype.memoWrapper=null,Object.defineProperty(t.prototype,"memoField",{get:F.oneOfGetter(e=["memo","memoWrapper"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(10).fork()).ldelim(),null!=t.expirationTime&&Object.hasOwnProperty.call(t,"expirationTime")&&U.proto.Timestamp.encode(t.expirationTime,e.uint32(18).fork()).ldelim(),null!=t.adminKey&&Object.hasOwnProperty.call(t,"adminKey")&&U.proto.Key.encode(t.adminKey,e.uint32(26).fork()).ldelim(),null!=t.proxyAccountID&&Object.hasOwnProperty.call(t,"proxyAccountID")&&U.proto.AccountID.encode(t.proxyAccountID,e.uint32(50).fork()).ldelim(),null!=t.autoRenewPeriod&&Object.hasOwnProperty.call(t,"autoRenewPeriod")&&U.proto.Duration.encode(t.autoRenewPeriod,e.uint32(58).fork()).ldelim(),null!=t.fileID&&Object.hasOwnProperty.call(t,"fileID")&&U.proto.FileID.encode(t.fileID,e.uint32(66).fork()).ldelim(),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(74).string(t.memo),null!=t.memoWrapper&&Object.hasOwnProperty.call(t,"memoWrapper")&&U.google.protobuf.StringValue.encode(t.memoWrapper,e.uint32(82).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractUpdateTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;case 2:F.expirationTime=U.proto.Timestamp.decode(t,t.uint32());break;case 3:F.adminKey=U.proto.Key.decode(t,t.uint32());break;case 6:F.proxyAccountID=U.proto.AccountID.decode(t,t.uint32());break;case 7:F.autoRenewPeriod=U.proto.Duration.decode(t,t.uint32());break;case 8:F.fileID=U.proto.FileID.decode(t,t.uint32());break;case 9:F.memo=t.string();break;case 10:F.memoWrapper=U.google.protobuf.StringValue.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),LiveHash:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.accountId=null,t.prototype.hash=F.newBuffer([]),t.prototype.keys=null,t.prototype.duration=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.accountId&&Object.hasOwnProperty.call(t,"accountId")&&U.proto.AccountID.encode(t.accountId,e.uint32(10).fork()).ldelim(),null!=t.hash&&Object.hasOwnProperty.call(t,"hash")&&e.uint32(18).bytes(t.hash),null!=t.keys&&Object.hasOwnProperty.call(t,"keys")&&U.proto.KeyList.encode(t.keys,e.uint32(26).fork()).ldelim(),null!=t.duration&&Object.hasOwnProperty.call(t,"duration")&&U.proto.Duration.encode(t.duration,e.uint32(42).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.LiveHash;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.accountId=U.proto.AccountID.decode(t,t.uint32());break;case 2:F.hash=t.bytes();break;case 3:F.keys=U.proto.KeyList.decode(t,t.uint32());break;case 5:F.duration=U.proto.Duration.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),CryptoAddLiveHashTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.liveHash=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.liveHash&&Object.hasOwnProperty.call(t,"liveHash")&&U.proto.LiveHash.encode(t.liveHash,e.uint32(26).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoAddLiveHashTransactionBody;t.pos<s;)3==(Q=t.uint32())>>>3?F.liveHash=U.proto.LiveHash.decode(t,t.uint32()):t.skipType(7&Q);return F},t}(),CryptoCreateTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.key=null,t.prototype.initialBalance=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.proxyAccountID=null,t.prototype.sendRecordThreshold=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.receiveRecordThreshold=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.receiverSigRequired=!1,t.prototype.autoRenewPeriod=null,t.prototype.shardID=null,t.prototype.realmID=null,t.prototype.newRealmAdminKey=null,t.prototype.memo="",t.prototype.maxAutomaticTokenAssociations=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.key&&Object.hasOwnProperty.call(t,"key")&&U.proto.Key.encode(t.key,e.uint32(10).fork()).ldelim(),null!=t.initialBalance&&Object.hasOwnProperty.call(t,"initialBalance")&&e.uint32(16).uint64(t.initialBalance),null!=t.proxyAccountID&&Object.hasOwnProperty.call(t,"proxyAccountID")&&U.proto.AccountID.encode(t.proxyAccountID,e.uint32(26).fork()).ldelim(),null!=t.sendRecordThreshold&&Object.hasOwnProperty.call(t,"sendRecordThreshold")&&e.uint32(48).uint64(t.sendRecordThreshold),null!=t.receiveRecordThreshold&&Object.hasOwnProperty.call(t,"receiveRecordThreshold")&&e.uint32(56).uint64(t.receiveRecordThreshold),null!=t.receiverSigRequired&&Object.hasOwnProperty.call(t,"receiverSigRequired")&&e.uint32(64).bool(t.receiverSigRequired),null!=t.autoRenewPeriod&&Object.hasOwnProperty.call(t,"autoRenewPeriod")&&U.proto.Duration.encode(t.autoRenewPeriod,e.uint32(74).fork()).ldelim(),null!=t.shardID&&Object.hasOwnProperty.call(t,"shardID")&&U.proto.ShardID.encode(t.shardID,e.uint32(82).fork()).ldelim(),null!=t.realmID&&Object.hasOwnProperty.call(t,"realmID")&&U.proto.RealmID.encode(t.realmID,e.uint32(90).fork()).ldelim(),null!=t.newRealmAdminKey&&Object.hasOwnProperty.call(t,"newRealmAdminKey")&&U.proto.Key.encode(t.newRealmAdminKey,e.uint32(98).fork()).ldelim(),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(106).string(t.memo),null!=t.maxAutomaticTokenAssociations&&Object.hasOwnProperty.call(t,"maxAutomaticTokenAssociations")&&e.uint32(112).int32(t.maxAutomaticTokenAssociations),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoCreateTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.key=U.proto.Key.decode(t,t.uint32());break;case 2:F.initialBalance=t.uint64();break;case 3:F.proxyAccountID=U.proto.AccountID.decode(t,t.uint32());break;case 6:F.sendRecordThreshold=t.uint64();break;case 7:F.receiveRecordThreshold=t.uint64();break;case 8:F.receiverSigRequired=t.bool();break;case 9:F.autoRenewPeriod=U.proto.Duration.decode(t,t.uint32());break;case 10:F.shardID=U.proto.ShardID.decode(t,t.uint32());break;case 11:F.realmID=U.proto.RealmID.decode(t,t.uint32());break;case 12:F.newRealmAdminKey=U.proto.Key.decode(t,t.uint32());break;case 13:F.memo=t.string();break;case 14:F.maxAutomaticTokenAssociations=t.int32();break;default:t.skipType(7&Q)}return F},t}(),CryptoDeleteTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.transferAccountID=null,t.prototype.deleteAccountID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.transferAccountID&&Object.hasOwnProperty.call(t,"transferAccountID")&&U.proto.AccountID.encode(t.transferAccountID,e.uint32(10).fork()).ldelim(),null!=t.deleteAccountID&&Object.hasOwnProperty.call(t,"deleteAccountID")&&U.proto.AccountID.encode(t.deleteAccountID,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoDeleteTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.transferAccountID=U.proto.AccountID.decode(t,t.uint32());break;case 2:F.deleteAccountID=U.proto.AccountID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),CryptoDeleteLiveHashTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.accountOfLiveHash=null,t.prototype.liveHashToDelete=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.accountOfLiveHash&&Object.hasOwnProperty.call(t,"accountOfLiveHash")&&U.proto.AccountID.encode(t.accountOfLiveHash,e.uint32(10).fork()).ldelim(),null!=t.liveHashToDelete&&Object.hasOwnProperty.call(t,"liveHashToDelete")&&e.uint32(18).bytes(t.liveHashToDelete),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoDeleteLiveHashTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.accountOfLiveHash=U.proto.AccountID.decode(t,t.uint32());break;case 2:F.liveHashToDelete=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),CryptoTransferTransactionBody:function(){function t(t){if(this.tokenTransfers=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.transfers=null,t.prototype.tokenTransfers=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.transfers&&Object.hasOwnProperty.call(t,"transfers")&&U.proto.TransferList.encode(t.transfers,e.uint32(10).fork()).ldelim(),null!=t.tokenTransfers&&t.tokenTransfers.length)for(var Q=0;Q<t.tokenTransfers.length;++Q)U.proto.TokenTransferList.encode(t.tokenTransfers[Q],e.uint32(18).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoTransferTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.transfers=U.proto.TransferList.decode(t,t.uint32());break;case 2:F.tokenTransfers&&F.tokenTransfers.length||(F.tokenTransfers=[]),F.tokenTransfers.push(U.proto.TokenTransferList.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),CryptoUpdateTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.accountIDToUpdate=null,t.prototype.key=null,t.prototype.proxyAccountID=null,t.prototype.proxyFraction=0,t.prototype.sendRecordThreshold=null,t.prototype.sendRecordThresholdWrapper=null,t.prototype.receiveRecordThreshold=null,t.prototype.receiveRecordThresholdWrapper=null,t.prototype.autoRenewPeriod=null,t.prototype.expirationTime=null,t.prototype.receiverSigRequired=null,t.prototype.receiverSigRequiredWrapper=null,t.prototype.memo=null,t.prototype.maxAutomaticTokenAssociations=null,t.prototype.alias=F.newBuffer([]),Object.defineProperty(t.prototype,"sendRecordThresholdField",{get:F.oneOfGetter(e=["sendRecordThreshold","sendRecordThresholdWrapper"]),set:F.oneOfSetter(e)}),Object.defineProperty(t.prototype,"receiveRecordThresholdField",{get:F.oneOfGetter(e=["receiveRecordThreshold","receiveRecordThresholdWrapper"]),set:F.oneOfSetter(e)}),Object.defineProperty(t.prototype,"receiverSigRequiredField",{get:F.oneOfGetter(e=["receiverSigRequired","receiverSigRequiredWrapper"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.accountIDToUpdate&&Object.hasOwnProperty.call(t,"accountIDToUpdate")&&U.proto.AccountID.encode(t.accountIDToUpdate,e.uint32(18).fork()).ldelim(),null!=t.key&&Object.hasOwnProperty.call(t,"key")&&U.proto.Key.encode(t.key,e.uint32(26).fork()).ldelim(),null!=t.proxyAccountID&&Object.hasOwnProperty.call(t,"proxyAccountID")&&U.proto.AccountID.encode(t.proxyAccountID,e.uint32(34).fork()).ldelim(),null!=t.proxyFraction&&Object.hasOwnProperty.call(t,"proxyFraction")&&e.uint32(40).int32(t.proxyFraction),null!=t.sendRecordThreshold&&Object.hasOwnProperty.call(t,"sendRecordThreshold")&&e.uint32(48).uint64(t.sendRecordThreshold),null!=t.receiveRecordThreshold&&Object.hasOwnProperty.call(t,"receiveRecordThreshold")&&e.uint32(56).uint64(t.receiveRecordThreshold),null!=t.autoRenewPeriod&&Object.hasOwnProperty.call(t,"autoRenewPeriod")&&U.proto.Duration.encode(t.autoRenewPeriod,e.uint32(66).fork()).ldelim(),null!=t.expirationTime&&Object.hasOwnProperty.call(t,"expirationTime")&&U.proto.Timestamp.encode(t.expirationTime,e.uint32(74).fork()).ldelim(),null!=t.receiverSigRequired&&Object.hasOwnProperty.call(t,"receiverSigRequired")&&e.uint32(80).bool(t.receiverSigRequired),null!=t.sendRecordThresholdWrapper&&Object.hasOwnProperty.call(t,"sendRecordThresholdWrapper")&&U.google.protobuf.UInt64Value.encode(t.sendRecordThresholdWrapper,e.uint32(90).fork()).ldelim(),null!=t.receiveRecordThresholdWrapper&&Object.hasOwnProperty.call(t,"receiveRecordThresholdWrapper")&&U.google.protobuf.UInt64Value.encode(t.receiveRecordThresholdWrapper,e.uint32(98).fork()).ldelim(),null!=t.receiverSigRequiredWrapper&&Object.hasOwnProperty.call(t,"receiverSigRequiredWrapper")&&U.google.protobuf.BoolValue.encode(t.receiverSigRequiredWrapper,e.uint32(106).fork()).ldelim(),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&U.google.protobuf.StringValue.encode(t.memo,e.uint32(114).fork()).ldelim(),null!=t.maxAutomaticTokenAssociations&&Object.hasOwnProperty.call(t,"maxAutomaticTokenAssociations")&&U.google.protobuf.Int32Value.encode(t.maxAutomaticTokenAssociations,e.uint32(122).fork()).ldelim(),null!=t.alias&&Object.hasOwnProperty.call(t,"alias")&&e.uint32(130).bytes(t.alias),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoUpdateTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 2:F.accountIDToUpdate=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.key=U.proto.Key.decode(t,t.uint32());break;case 4:F.proxyAccountID=U.proto.AccountID.decode(t,t.uint32());break;case 5:F.proxyFraction=t.int32();break;case 6:F.sendRecordThreshold=t.uint64();break;case 11:F.sendRecordThresholdWrapper=U.google.protobuf.UInt64Value.decode(t,t.uint32());break;case 7:F.receiveRecordThreshold=t.uint64();break;case 12:F.receiveRecordThresholdWrapper=U.google.protobuf.UInt64Value.decode(t,t.uint32());break;case 8:F.autoRenewPeriod=U.proto.Duration.decode(t,t.uint32());break;case 9:F.expirationTime=U.proto.Timestamp.decode(t,t.uint32());break;case 10:F.receiverSigRequired=t.bool();break;case 13:F.receiverSigRequiredWrapper=U.google.protobuf.BoolValue.decode(t,t.uint32());break;case 14:F.memo=U.google.protobuf.StringValue.decode(t,t.uint32());break;case 15:F.maxAutomaticTokenAssociations=U.google.protobuf.Int32Value.decode(t,t.uint32());break;case 16:F.alias=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),CryptoApproveAllowanceTransactionBody:function(){function t(t){if(this.cryptoAllowances=[],this.nftAllowances=[],this.tokenAllowances=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.cryptoAllowances=F.emptyArray,t.prototype.nftAllowances=F.emptyArray,t.prototype.tokenAllowances=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.cryptoAllowances&&t.cryptoAllowances.length)for(var Q=0;Q<t.cryptoAllowances.length;++Q)U.proto.CryptoAllowance.encode(t.cryptoAllowances[Q],e.uint32(10).fork()).ldelim();if(null!=t.nftAllowances&&t.nftAllowances.length)for(Q=0;Q<t.nftAllowances.length;++Q)U.proto.NftAllowance.encode(t.nftAllowances[Q],e.uint32(18).fork()).ldelim();if(null!=t.tokenAllowances&&t.tokenAllowances.length)for(Q=0;Q<t.tokenAllowances.length;++Q)U.proto.TokenAllowance.encode(t.tokenAllowances[Q],e.uint32(26).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoApproveAllowanceTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.cryptoAllowances&&F.cryptoAllowances.length||(F.cryptoAllowances=[]),F.cryptoAllowances.push(U.proto.CryptoAllowance.decode(t,t.uint32()));break;case 2:F.nftAllowances&&F.nftAllowances.length||(F.nftAllowances=[]),F.nftAllowances.push(U.proto.NftAllowance.decode(t,t.uint32()));break;case 3:F.tokenAllowances&&F.tokenAllowances.length||(F.tokenAllowances=[]),F.tokenAllowances.push(U.proto.TokenAllowance.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),CryptoAdjustAllowanceTransactionBody:function(){function t(t){if(this.cryptoAllowances=[],this.nftAllowances=[],this.tokenAllowances=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.cryptoAllowances=F.emptyArray,t.prototype.nftAllowances=F.emptyArray,t.prototype.tokenAllowances=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.cryptoAllowances&&t.cryptoAllowances.length)for(var Q=0;Q<t.cryptoAllowances.length;++Q)U.proto.CryptoAllowance.encode(t.cryptoAllowances[Q],e.uint32(10).fork()).ldelim();if(null!=t.nftAllowances&&t.nftAllowances.length)for(Q=0;Q<t.nftAllowances.length;++Q)U.proto.NftAllowance.encode(t.nftAllowances[Q],e.uint32(18).fork()).ldelim();if(null!=t.tokenAllowances&&t.tokenAllowances.length)for(Q=0;Q<t.tokenAllowances.length;++Q)U.proto.TokenAllowance.encode(t.tokenAllowances[Q],e.uint32(26).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoAdjustAllowanceTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.cryptoAllowances&&F.cryptoAllowances.length||(F.cryptoAllowances=[]),F.cryptoAllowances.push(U.proto.CryptoAllowance.decode(t,t.uint32()));break;case 2:F.nftAllowances&&F.nftAllowances.length||(F.nftAllowances=[]),F.nftAllowances.push(U.proto.NftAllowance.decode(t,t.uint32()));break;case 3:F.tokenAllowances&&F.tokenAllowances.length||(F.tokenAllowances=[]),F.tokenAllowances.push(U.proto.TokenAllowance.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),FileAppendTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.fileID=null,t.prototype.contents=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.fileID&&Object.hasOwnProperty.call(t,"fileID")&&U.proto.FileID.encode(t.fileID,e.uint32(18).fork()).ldelim(),null!=t.contents&&Object.hasOwnProperty.call(t,"contents")&&e.uint32(34).bytes(t.contents),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FileAppendTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 2:F.fileID=U.proto.FileID.decode(t,t.uint32());break;case 4:F.contents=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),FileCreateTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.expirationTime=null,t.prototype.keys=null,t.prototype.contents=F.newBuffer([]),t.prototype.shardID=null,t.prototype.realmID=null,t.prototype.newRealmAdminKey=null,t.prototype.memo="",t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.expirationTime&&Object.hasOwnProperty.call(t,"expirationTime")&&U.proto.Timestamp.encode(t.expirationTime,e.uint32(18).fork()).ldelim(),null!=t.keys&&Object.hasOwnProperty.call(t,"keys")&&U.proto.KeyList.encode(t.keys,e.uint32(26).fork()).ldelim(),null!=t.contents&&Object.hasOwnProperty.call(t,"contents")&&e.uint32(34).bytes(t.contents),null!=t.shardID&&Object.hasOwnProperty.call(t,"shardID")&&U.proto.ShardID.encode(t.shardID,e.uint32(42).fork()).ldelim(),null!=t.realmID&&Object.hasOwnProperty.call(t,"realmID")&&U.proto.RealmID.encode(t.realmID,e.uint32(50).fork()).ldelim(),null!=t.newRealmAdminKey&&Object.hasOwnProperty.call(t,"newRealmAdminKey")&&U.proto.Key.encode(t.newRealmAdminKey,e.uint32(58).fork()).ldelim(),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(66).string(t.memo),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FileCreateTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 2:F.expirationTime=U.proto.Timestamp.decode(t,t.uint32());break;case 3:F.keys=U.proto.KeyList.decode(t,t.uint32());break;case 4:F.contents=t.bytes();break;case 5:F.shardID=U.proto.ShardID.decode(t,t.uint32());break;case 6:F.realmID=U.proto.RealmID.decode(t,t.uint32());break;case 7:F.newRealmAdminKey=U.proto.Key.decode(t,t.uint32());break;case 8:F.memo=t.string();break;default:t.skipType(7&Q)}return F},t}(),FileDeleteTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.fileID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.fileID&&Object.hasOwnProperty.call(t,"fileID")&&U.proto.FileID.encode(t.fileID,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FileDeleteTransactionBody;t.pos<s;)2==(Q=t.uint32())>>>3?F.fileID=U.proto.FileID.decode(t,t.uint32()):t.skipType(7&Q);return F},t}(),FileUpdateTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.fileID=null,t.prototype.expirationTime=null,t.prototype.keys=null,t.prototype.contents=F.newBuffer([]),t.prototype.memo=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.fileID&&Object.hasOwnProperty.call(t,"fileID")&&U.proto.FileID.encode(t.fileID,e.uint32(10).fork()).ldelim(),null!=t.expirationTime&&Object.hasOwnProperty.call(t,"expirationTime")&&U.proto.Timestamp.encode(t.expirationTime,e.uint32(18).fork()).ldelim(),null!=t.keys&&Object.hasOwnProperty.call(t,"keys")&&U.proto.KeyList.encode(t.keys,e.uint32(26).fork()).ldelim(),null!=t.contents&&Object.hasOwnProperty.call(t,"contents")&&e.uint32(34).bytes(t.contents),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&U.google.protobuf.StringValue.encode(t.memo,e.uint32(42).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FileUpdateTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.fileID=U.proto.FileID.decode(t,t.uint32());break;case 2:F.expirationTime=U.proto.Timestamp.decode(t,t.uint32());break;case 3:F.keys=U.proto.KeyList.decode(t,t.uint32());break;case 4:F.contents=t.bytes();break;case 5:F.memo=U.google.protobuf.StringValue.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ContractDeleteTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.contractID=null,t.prototype.transferAccountID=null,t.prototype.transferContractID=null,Object.defineProperty(t.prototype,"obtainers",{get:F.oneOfGetter(e=["transferAccountID","transferContractID"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(10).fork()).ldelim(),null!=t.transferAccountID&&Object.hasOwnProperty.call(t,"transferAccountID")&&U.proto.AccountID.encode(t.transferAccountID,e.uint32(18).fork()).ldelim(),null!=t.transferContractID&&Object.hasOwnProperty.call(t,"transferContractID")&&U.proto.ContractID.encode(t.transferContractID,e.uint32(26).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractDeleteTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;case 2:F.transferAccountID=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.transferContractID=U.proto.ContractID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ConsensusUpdateTopicTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.topicID=null,t.prototype.memo=null,t.prototype.expirationTime=null,t.prototype.adminKey=null,t.prototype.submitKey=null,t.prototype.autoRenewPeriod=null,t.prototype.autoRenewAccount=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.topicID&&Object.hasOwnProperty.call(t,"topicID")&&U.proto.TopicID.encode(t.topicID,e.uint32(10).fork()).ldelim(),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&U.google.protobuf.StringValue.encode(t.memo,e.uint32(18).fork()).ldelim(),null!=t.expirationTime&&Object.hasOwnProperty.call(t,"expirationTime")&&U.proto.Timestamp.encode(t.expirationTime,e.uint32(34).fork()).ldelim(),null!=t.adminKey&&Object.hasOwnProperty.call(t,"adminKey")&&U.proto.Key.encode(t.adminKey,e.uint32(50).fork()).ldelim(),null!=t.submitKey&&Object.hasOwnProperty.call(t,"submitKey")&&U.proto.Key.encode(t.submitKey,e.uint32(58).fork()).ldelim(),null!=t.autoRenewPeriod&&Object.hasOwnProperty.call(t,"autoRenewPeriod")&&U.proto.Duration.encode(t.autoRenewPeriod,e.uint32(66).fork()).ldelim(),null!=t.autoRenewAccount&&Object.hasOwnProperty.call(t,"autoRenewAccount")&&U.proto.AccountID.encode(t.autoRenewAccount,e.uint32(74).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ConsensusUpdateTopicTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.topicID=U.proto.TopicID.decode(t,t.uint32());break;case 2:F.memo=U.google.protobuf.StringValue.decode(t,t.uint32());break;case 4:F.expirationTime=U.proto.Timestamp.decode(t,t.uint32());break;case 6:F.adminKey=U.proto.Key.decode(t,t.uint32());break;case 7:F.submitKey=U.proto.Key.decode(t,t.uint32());break;case 8:F.autoRenewPeriod=U.proto.Duration.decode(t,t.uint32());break;case 9:F.autoRenewAccount=U.proto.AccountID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ConsensusMessageChunkInfo:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.initialTransactionID=null,t.prototype.total=0,t.prototype.number=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.initialTransactionID&&Object.hasOwnProperty.call(t,"initialTransactionID")&&U.proto.TransactionID.encode(t.initialTransactionID,e.uint32(10).fork()).ldelim(),null!=t.total&&Object.hasOwnProperty.call(t,"total")&&e.uint32(16).int32(t.total),null!=t.number&&Object.hasOwnProperty.call(t,"number")&&e.uint32(24).int32(t.number),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ConsensusMessageChunkInfo;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.initialTransactionID=U.proto.TransactionID.decode(t,t.uint32());break;case 2:F.total=t.int32();break;case 3:F.number=t.int32();break;default:t.skipType(7&Q)}return F},t}(),ConsensusSubmitMessageTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.topicID=null,t.prototype.message=F.newBuffer([]),t.prototype.chunkInfo=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.topicID&&Object.hasOwnProperty.call(t,"topicID")&&U.proto.TopicID.encode(t.topicID,e.uint32(10).fork()).ldelim(),null!=t.message&&Object.hasOwnProperty.call(t,"message")&&e.uint32(18).bytes(t.message),null!=t.chunkInfo&&Object.hasOwnProperty.call(t,"chunkInfo")&&U.proto.ConsensusMessageChunkInfo.encode(t.chunkInfo,e.uint32(26).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ConsensusSubmitMessageTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.topicID=U.proto.TopicID.decode(t,t.uint32());break;case 2:F.message=t.bytes();break;case 3:F.chunkInfo=U.proto.ConsensusMessageChunkInfo.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),UncheckedSubmitBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.transactionBytes=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.transactionBytes&&Object.hasOwnProperty.call(t,"transactionBytes")&&e.uint32(10).bytes(t.transactionBytes),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.UncheckedSubmitBody;t.pos<s;)1==(Q=t.uint32())>>>3?F.transactionBytes=t.bytes():t.skipType(7&Q);return F},t}(),TokenCreateTransactionBody:function(){function t(t){if(this.customFees=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.name="",t.prototype.symbol="",t.prototype.decimals=0,t.prototype.initialSupply=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.treasury=null,t.prototype.adminKey=null,t.prototype.kycKey=null,t.prototype.freezeKey=null,t.prototype.wipeKey=null,t.prototype.supplyKey=null,t.prototype.freezeDefault=!1,t.prototype.expiry=null,t.prototype.autoRenewAccount=null,t.prototype.autoRenewPeriod=null,t.prototype.memo="",t.prototype.tokenType=0,t.prototype.supplyType=0,t.prototype.maxSupply=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.feeScheduleKey=null,t.prototype.customFees=F.emptyArray,t.prototype.pauseKey=null,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.name&&Object.hasOwnProperty.call(t,"name")&&e.uint32(10).string(t.name),null!=t.symbol&&Object.hasOwnProperty.call(t,"symbol")&&e.uint32(18).string(t.symbol),null!=t.decimals&&Object.hasOwnProperty.call(t,"decimals")&&e.uint32(24).uint32(t.decimals),null!=t.initialSupply&&Object.hasOwnProperty.call(t,"initialSupply")&&e.uint32(32).uint64(t.initialSupply),null!=t.treasury&&Object.hasOwnProperty.call(t,"treasury")&&U.proto.AccountID.encode(t.treasury,e.uint32(42).fork()).ldelim(),null!=t.adminKey&&Object.hasOwnProperty.call(t,"adminKey")&&U.proto.Key.encode(t.adminKey,e.uint32(50).fork()).ldelim(),null!=t.kycKey&&Object.hasOwnProperty.call(t,"kycKey")&&U.proto.Key.encode(t.kycKey,e.uint32(58).fork()).ldelim(),null!=t.freezeKey&&Object.hasOwnProperty.call(t,"freezeKey")&&U.proto.Key.encode(t.freezeKey,e.uint32(66).fork()).ldelim(),null!=t.wipeKey&&Object.hasOwnProperty.call(t,"wipeKey")&&U.proto.Key.encode(t.wipeKey,e.uint32(74).fork()).ldelim(),null!=t.supplyKey&&Object.hasOwnProperty.call(t,"supplyKey")&&U.proto.Key.encode(t.supplyKey,e.uint32(82).fork()).ldelim(),null!=t.freezeDefault&&Object.hasOwnProperty.call(t,"freezeDefault")&&e.uint32(88).bool(t.freezeDefault),null!=t.expiry&&Object.hasOwnProperty.call(t,"expiry")&&U.proto.Timestamp.encode(t.expiry,e.uint32(106).fork()).ldelim(),null!=t.autoRenewAccount&&Object.hasOwnProperty.call(t,"autoRenewAccount")&&U.proto.AccountID.encode(t.autoRenewAccount,e.uint32(114).fork()).ldelim(),null!=t.autoRenewPeriod&&Object.hasOwnProperty.call(t,"autoRenewPeriod")&&U.proto.Duration.encode(t.autoRenewPeriod,e.uint32(122).fork()).ldelim(),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(130).string(t.memo),null!=t.tokenType&&Object.hasOwnProperty.call(t,"tokenType")&&e.uint32(136).int32(t.tokenType),null!=t.supplyType&&Object.hasOwnProperty.call(t,"supplyType")&&e.uint32(144).int32(t.supplyType),null!=t.maxSupply&&Object.hasOwnProperty.call(t,"maxSupply")&&e.uint32(152).int64(t.maxSupply),null!=t.feeScheduleKey&&Object.hasOwnProperty.call(t,"feeScheduleKey")&&U.proto.Key.encode(t.feeScheduleKey,e.uint32(162).fork()).ldelim(),null!=t.customFees&&t.customFees.length)for(var Q=0;Q<t.customFees.length;++Q)U.proto.CustomFee.encode(t.customFees[Q],e.uint32(170).fork()).ldelim();return null!=t.pauseKey&&Object.hasOwnProperty.call(t,"pauseKey")&&U.proto.Key.encode(t.pauseKey,e.uint32(178).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenCreateTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.name=t.string();break;case 2:F.symbol=t.string();break;case 3:F.decimals=t.uint32();break;case 4:F.initialSupply=t.uint64();break;case 5:F.treasury=U.proto.AccountID.decode(t,t.uint32());break;case 6:F.adminKey=U.proto.Key.decode(t,t.uint32());break;case 7:F.kycKey=U.proto.Key.decode(t,t.uint32());break;case 8:F.freezeKey=U.proto.Key.decode(t,t.uint32());break;case 9:F.wipeKey=U.proto.Key.decode(t,t.uint32());break;case 10:F.supplyKey=U.proto.Key.decode(t,t.uint32());break;case 11:F.freezeDefault=t.bool();break;case 13:F.expiry=U.proto.Timestamp.decode(t,t.uint32());break;case 14:F.autoRenewAccount=U.proto.AccountID.decode(t,t.uint32());break;case 15:F.autoRenewPeriod=U.proto.Duration.decode(t,t.uint32());break;case 16:F.memo=t.string();break;case 17:F.tokenType=t.int32();break;case 18:F.supplyType=t.int32();break;case 19:F.maxSupply=t.int64();break;case 20:F.feeScheduleKey=U.proto.Key.decode(t,t.uint32());break;case 21:F.customFees&&F.customFees.length||(F.customFees=[]),F.customFees.push(U.proto.CustomFee.decode(t,t.uint32()));break;case 22:F.pauseKey=U.proto.Key.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),FractionalFee:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.fractionalAmount=null,t.prototype.minimumAmount=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.maximumAmount=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.netOfTransfers=!1,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.fractionalAmount&&Object.hasOwnProperty.call(t,"fractionalAmount")&&U.proto.Fraction.encode(t.fractionalAmount,e.uint32(10).fork()).ldelim(),null!=t.minimumAmount&&Object.hasOwnProperty.call(t,"minimumAmount")&&e.uint32(16).int64(t.minimumAmount),null!=t.maximumAmount&&Object.hasOwnProperty.call(t,"maximumAmount")&&e.uint32(24).int64(t.maximumAmount),null!=t.netOfTransfers&&Object.hasOwnProperty.call(t,"netOfTransfers")&&e.uint32(32).bool(t.netOfTransfers),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FractionalFee;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.fractionalAmount=U.proto.Fraction.decode(t,t.uint32());break;case 2:F.minimumAmount=t.int64();break;case 3:F.maximumAmount=t.int64();break;case 4:F.netOfTransfers=t.bool();break;default:t.skipType(7&Q)}return F},t}(),FixedFee:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.amount=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.denominatingTokenId=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.amount&&Object.hasOwnProperty.call(t,"amount")&&e.uint32(8).int64(t.amount),null!=t.denominatingTokenId&&Object.hasOwnProperty.call(t,"denominatingTokenId")&&U.proto.TokenID.encode(t.denominatingTokenId,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FixedFee;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.amount=t.int64();break;case 2:F.denominatingTokenId=U.proto.TokenID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),RoyaltyFee:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.exchangeValueFraction=null,t.prototype.fallbackFee=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.exchangeValueFraction&&Object.hasOwnProperty.call(t,"exchangeValueFraction")&&U.proto.Fraction.encode(t.exchangeValueFraction,e.uint32(10).fork()).ldelim(),null!=t.fallbackFee&&Object.hasOwnProperty.call(t,"fallbackFee")&&U.proto.FixedFee.encode(t.fallbackFee,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.RoyaltyFee;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.exchangeValueFraction=U.proto.Fraction.decode(t,t.uint32());break;case 2:F.fallbackFee=U.proto.FixedFee.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),CustomFee:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.fixedFee=null,t.prototype.fractionalFee=null,t.prototype.royaltyFee=null,t.prototype.feeCollectorAccountId=null,Object.defineProperty(t.prototype,"fee",{get:F.oneOfGetter(e=["fixedFee","fractionalFee","royaltyFee"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.fixedFee&&Object.hasOwnProperty.call(t,"fixedFee")&&U.proto.FixedFee.encode(t.fixedFee,e.uint32(10).fork()).ldelim(),null!=t.fractionalFee&&Object.hasOwnProperty.call(t,"fractionalFee")&&U.proto.FractionalFee.encode(t.fractionalFee,e.uint32(18).fork()).ldelim(),null!=t.feeCollectorAccountId&&Object.hasOwnProperty.call(t,"feeCollectorAccountId")&&U.proto.AccountID.encode(t.feeCollectorAccountId,e.uint32(26).fork()).ldelim(),null!=t.royaltyFee&&Object.hasOwnProperty.call(t,"royaltyFee")&&U.proto.RoyaltyFee.encode(t.royaltyFee,e.uint32(34).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CustomFee;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.fixedFee=U.proto.FixedFee.decode(t,t.uint32());break;case 2:F.fractionalFee=U.proto.FractionalFee.decode(t,t.uint32());break;case 4:F.royaltyFee=U.proto.RoyaltyFee.decode(t,t.uint32());break;case 3:F.feeCollectorAccountId=U.proto.AccountID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),AssessedCustomFee:function(){function t(t){if(this.effectivePayerAccountId=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.amount=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.tokenId=null,t.prototype.feeCollectorAccountId=null,t.prototype.effectivePayerAccountId=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.amount&&Object.hasOwnProperty.call(t,"amount")&&e.uint32(8).int64(t.amount),null!=t.tokenId&&Object.hasOwnProperty.call(t,"tokenId")&&U.proto.TokenID.encode(t.tokenId,e.uint32(18).fork()).ldelim(),null!=t.feeCollectorAccountId&&Object.hasOwnProperty.call(t,"feeCollectorAccountId")&&U.proto.AccountID.encode(t.feeCollectorAccountId,e.uint32(26).fork()).ldelim(),null!=t.effectivePayerAccountId&&t.effectivePayerAccountId.length)for(var Q=0;Q<t.effectivePayerAccountId.length;++Q)U.proto.AccountID.encode(t.effectivePayerAccountId[Q],e.uint32(34).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.AssessedCustomFee;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.amount=t.int64();break;case 2:F.tokenId=U.proto.TokenID.decode(t,t.uint32());break;case 3:F.feeCollectorAccountId=U.proto.AccountID.decode(t,t.uint32());break;case 4:F.effectivePayerAccountId&&F.effectivePayerAccountId.length||(F.effectivePayerAccountId=[]),F.effectivePayerAccountId.push(U.proto.AccountID.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),TokenFreezeAccountTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.token=null,t.prototype.account=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.token&&Object.hasOwnProperty.call(t,"token")&&U.proto.TokenID.encode(t.token,e.uint32(10).fork()).ldelim(),null!=t.account&&Object.hasOwnProperty.call(t,"account")&&U.proto.AccountID.encode(t.account,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenFreezeAccountTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.token=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.account=U.proto.AccountID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),TokenUnfreezeAccountTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.token=null,t.prototype.account=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.token&&Object.hasOwnProperty.call(t,"token")&&U.proto.TokenID.encode(t.token,e.uint32(10).fork()).ldelim(),null!=t.account&&Object.hasOwnProperty.call(t,"account")&&U.proto.AccountID.encode(t.account,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenUnfreezeAccountTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.token=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.account=U.proto.AccountID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),TokenGrantKycTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.token=null,t.prototype.account=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.token&&Object.hasOwnProperty.call(t,"token")&&U.proto.TokenID.encode(t.token,e.uint32(10).fork()).ldelim(),null!=t.account&&Object.hasOwnProperty.call(t,"account")&&U.proto.AccountID.encode(t.account,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenGrantKycTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.token=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.account=U.proto.AccountID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),TokenRevokeKycTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.token=null,t.prototype.account=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.token&&Object.hasOwnProperty.call(t,"token")&&U.proto.TokenID.encode(t.token,e.uint32(10).fork()).ldelim(),null!=t.account&&Object.hasOwnProperty.call(t,"account")&&U.proto.AccountID.encode(t.account,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenRevokeKycTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.token=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.account=U.proto.AccountID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),TokenDeleteTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.token=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.token&&Object.hasOwnProperty.call(t,"token")&&U.proto.TokenID.encode(t.token,e.uint32(10).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenDeleteTransactionBody;t.pos<s;)1==(Q=t.uint32())>>>3?F.token=U.proto.TokenID.decode(t,t.uint32()):t.skipType(7&Q);return F},t}(),TokenUpdateTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.token=null,t.prototype.symbol="",t.prototype.name="",t.prototype.treasury=null,t.prototype.adminKey=null,t.prototype.kycKey=null,t.prototype.freezeKey=null,t.prototype.wipeKey=null,t.prototype.supplyKey=null,t.prototype.autoRenewAccount=null,t.prototype.autoRenewPeriod=null,t.prototype.expiry=null,t.prototype.memo=null,t.prototype.feeScheduleKey=null,t.prototype.pauseKey=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.token&&Object.hasOwnProperty.call(t,"token")&&U.proto.TokenID.encode(t.token,e.uint32(10).fork()).ldelim(),null!=t.symbol&&Object.hasOwnProperty.call(t,"symbol")&&e.uint32(18).string(t.symbol),null!=t.name&&Object.hasOwnProperty.call(t,"name")&&e.uint32(26).string(t.name),null!=t.treasury&&Object.hasOwnProperty.call(t,"treasury")&&U.proto.AccountID.encode(t.treasury,e.uint32(34).fork()).ldelim(),null!=t.adminKey&&Object.hasOwnProperty.call(t,"adminKey")&&U.proto.Key.encode(t.adminKey,e.uint32(42).fork()).ldelim(),null!=t.kycKey&&Object.hasOwnProperty.call(t,"kycKey")&&U.proto.Key.encode(t.kycKey,e.uint32(50).fork()).ldelim(),null!=t.freezeKey&&Object.hasOwnProperty.call(t,"freezeKey")&&U.proto.Key.encode(t.freezeKey,e.uint32(58).fork()).ldelim(),null!=t.wipeKey&&Object.hasOwnProperty.call(t,"wipeKey")&&U.proto.Key.encode(t.wipeKey,e.uint32(66).fork()).ldelim(),null!=t.supplyKey&&Object.hasOwnProperty.call(t,"supplyKey")&&U.proto.Key.encode(t.supplyKey,e.uint32(74).fork()).ldelim(),null!=t.autoRenewAccount&&Object.hasOwnProperty.call(t,"autoRenewAccount")&&U.proto.AccountID.encode(t.autoRenewAccount,e.uint32(82).fork()).ldelim(),null!=t.autoRenewPeriod&&Object.hasOwnProperty.call(t,"autoRenewPeriod")&&U.proto.Duration.encode(t.autoRenewPeriod,e.uint32(90).fork()).ldelim(),null!=t.expiry&&Object.hasOwnProperty.call(t,"expiry")&&U.proto.Timestamp.encode(t.expiry,e.uint32(98).fork()).ldelim(),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&U.google.protobuf.StringValue.encode(t.memo,e.uint32(106).fork()).ldelim(),null!=t.feeScheduleKey&&Object.hasOwnProperty.call(t,"feeScheduleKey")&&U.proto.Key.encode(t.feeScheduleKey,e.uint32(114).fork()).ldelim(),null!=t.pauseKey&&Object.hasOwnProperty.call(t,"pauseKey")&&U.proto.Key.encode(t.pauseKey,e.uint32(122).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenUpdateTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.token=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.symbol=t.string();break;case 3:F.name=t.string();break;case 4:F.treasury=U.proto.AccountID.decode(t,t.uint32());break;case 5:F.adminKey=U.proto.Key.decode(t,t.uint32());break;case 6:F.kycKey=U.proto.Key.decode(t,t.uint32());break;case 7:F.freezeKey=U.proto.Key.decode(t,t.uint32());break;case 8:F.wipeKey=U.proto.Key.decode(t,t.uint32());break;case 9:F.supplyKey=U.proto.Key.decode(t,t.uint32());break;case 10:F.autoRenewAccount=U.proto.AccountID.decode(t,t.uint32());break;case 11:F.autoRenewPeriod=U.proto.Duration.decode(t,t.uint32());break;case 12:F.expiry=U.proto.Timestamp.decode(t,t.uint32());break;case 13:F.memo=U.google.protobuf.StringValue.decode(t,t.uint32());break;case 14:F.feeScheduleKey=U.proto.Key.decode(t,t.uint32());break;case 15:F.pauseKey=U.proto.Key.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),TokenMintTransactionBody:function(){function t(t){if(this.metadata=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.token=null,t.prototype.amount=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.metadata=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.token&&Object.hasOwnProperty.call(t,"token")&&U.proto.TokenID.encode(t.token,e.uint32(10).fork()).ldelim(),null!=t.amount&&Object.hasOwnProperty.call(t,"amount")&&e.uint32(16).uint64(t.amount),null!=t.metadata&&t.metadata.length)for(var Q=0;Q<t.metadata.length;++Q)e.uint32(26).bytes(t.metadata[Q]);return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenMintTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.token=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.amount=t.uint64();break;case 3:F.metadata&&F.metadata.length||(F.metadata=[]),F.metadata.push(t.bytes());break;default:t.skipType(7&Q)}return F},t}(),TokenBurnTransactionBody:function(){function t(t){if(this.serialNumbers=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.token=null,t.prototype.amount=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.serialNumbers=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.token&&Object.hasOwnProperty.call(t,"token")&&U.proto.TokenID.encode(t.token,e.uint32(10).fork()).ldelim(),null!=t.amount&&Object.hasOwnProperty.call(t,"amount")&&e.uint32(16).uint64(t.amount),null!=t.serialNumbers&&t.serialNumbers.length){e.uint32(26).fork();for(var Q=0;Q<t.serialNumbers.length;++Q)e.int64(t.serialNumbers[Q]);e.ldelim()}return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenBurnTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.token=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.amount=t.uint64();break;case 3:if(F.serialNumbers&&F.serialNumbers.length||(F.serialNumbers=[]),2==(7&Q))for(var n=t.uint32()+t.pos;t.pos<n;)F.serialNumbers.push(t.int64());else F.serialNumbers.push(t.int64());break;default:t.skipType(7&Q)}return F},t}(),TokenWipeAccountTransactionBody:function(){function t(t){if(this.serialNumbers=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.token=null,t.prototype.account=null,t.prototype.amount=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.serialNumbers=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.token&&Object.hasOwnProperty.call(t,"token")&&U.proto.TokenID.encode(t.token,e.uint32(10).fork()).ldelim(),null!=t.account&&Object.hasOwnProperty.call(t,"account")&&U.proto.AccountID.encode(t.account,e.uint32(18).fork()).ldelim(),null!=t.amount&&Object.hasOwnProperty.call(t,"amount")&&e.uint32(24).uint64(t.amount),null!=t.serialNumbers&&t.serialNumbers.length){e.uint32(34).fork();for(var Q=0;Q<t.serialNumbers.length;++Q)e.int64(t.serialNumbers[Q]);e.ldelim()}return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenWipeAccountTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.token=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.account=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.amount=t.uint64();break;case 4:if(F.serialNumbers&&F.serialNumbers.length||(F.serialNumbers=[]),2==(7&Q))for(var n=t.uint32()+t.pos;t.pos<n;)F.serialNumbers.push(t.int64());else F.serialNumbers.push(t.int64());break;default:t.skipType(7&Q)}return F},t}(),TokenAssociateTransactionBody:function(){function t(t){if(this.tokens=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.account=null,t.prototype.tokens=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.account&&Object.hasOwnProperty.call(t,"account")&&U.proto.AccountID.encode(t.account,e.uint32(10).fork()).ldelim(),null!=t.tokens&&t.tokens.length)for(var Q=0;Q<t.tokens.length;++Q)U.proto.TokenID.encode(t.tokens[Q],e.uint32(18).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenAssociateTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.account=U.proto.AccountID.decode(t,t.uint32());break;case 2:F.tokens&&F.tokens.length||(F.tokens=[]),F.tokens.push(U.proto.TokenID.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),TokenDissociateTransactionBody:function(){function t(t){if(this.tokens=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.account=null,t.prototype.tokens=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.account&&Object.hasOwnProperty.call(t,"account")&&U.proto.AccountID.encode(t.account,e.uint32(10).fork()).ldelim(),null!=t.tokens&&t.tokens.length)for(var Q=0;Q<t.tokens.length;++Q)U.proto.TokenID.encode(t.tokens[Q],e.uint32(18).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenDissociateTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.account=U.proto.AccountID.decode(t,t.uint32());break;case 2:F.tokens&&F.tokens.length||(F.tokens=[]),F.tokens.push(U.proto.TokenID.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),TokenFeeScheduleUpdateTransactionBody:function(){function t(t){if(this.customFees=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.tokenId=null,t.prototype.customFees=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.tokenId&&Object.hasOwnProperty.call(t,"tokenId")&&U.proto.TokenID.encode(t.tokenId,e.uint32(10).fork()).ldelim(),null!=t.customFees&&t.customFees.length)for(var Q=0;Q<t.customFees.length;++Q)U.proto.CustomFee.encode(t.customFees[Q],e.uint32(18).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenFeeScheduleUpdateTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.tokenId=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.customFees&&F.customFees.length||(F.customFees=[]),F.customFees.push(U.proto.CustomFee.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),TokenPauseTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.token=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.token&&Object.hasOwnProperty.call(t,"token")&&U.proto.TokenID.encode(t.token,e.uint32(10).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenPauseTransactionBody;t.pos<s;)1==(Q=t.uint32())>>>3?F.token=U.proto.TokenID.decode(t,t.uint32()):t.skipType(7&Q);return F},t}(),TokenUnpauseTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.token=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.token&&Object.hasOwnProperty.call(t,"token")&&U.proto.TokenID.encode(t.token,e.uint32(10).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenUnpauseTransactionBody;t.pos<s;)1==(Q=t.uint32())>>>3?F.token=U.proto.TokenID.decode(t,t.uint32()):t.skipType(7&Q);return F},t}(),ScheduleCreateTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.scheduledTransactionBody=null,t.prototype.memo="",t.prototype.adminKey=null,t.prototype.payerAccountID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.scheduledTransactionBody&&Object.hasOwnProperty.call(t,"scheduledTransactionBody")&&U.proto.SchedulableTransactionBody.encode(t.scheduledTransactionBody,e.uint32(10).fork()).ldelim(),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(18).string(t.memo),null!=t.adminKey&&Object.hasOwnProperty.call(t,"adminKey")&&U.proto.Key.encode(t.adminKey,e.uint32(26).fork()).ldelim(),null!=t.payerAccountID&&Object.hasOwnProperty.call(t,"payerAccountID")&&U.proto.AccountID.encode(t.payerAccountID,e.uint32(34).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ScheduleCreateTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.scheduledTransactionBody=U.proto.SchedulableTransactionBody.decode(t,t.uint32());break;case 2:F.memo=t.string();break;case 3:F.adminKey=U.proto.Key.decode(t,t.uint32());break;case 4:F.payerAccountID=U.proto.AccountID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),SchedulableTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.transactionFee=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.memo="",t.prototype.contractCall=null,t.prototype.contractCreateInstance=null,t.prototype.contractUpdateInstance=null,t.prototype.contractDeleteInstance=null,t.prototype.cryptoAdjustAllowance=null,t.prototype.cryptoApproveAllowance=null,t.prototype.cryptoCreateAccount=null,t.prototype.cryptoDelete=null,t.prototype.cryptoTransfer=null,t.prototype.cryptoUpdateAccount=null,t.prototype.fileAppend=null,t.prototype.fileCreate=null,t.prototype.fileDelete=null,t.prototype.fileUpdate=null,t.prototype.systemDelete=null,t.prototype.systemUndelete=null,t.prototype.freeze=null,t.prototype.consensusCreateTopic=null,t.prototype.consensusUpdateTopic=null,t.prototype.consensusDeleteTopic=null,t.prototype.consensusSubmitMessage=null,t.prototype.tokenCreation=null,t.prototype.tokenFreeze=null,t.prototype.tokenUnfreeze=null,t.prototype.tokenGrantKyc=null,t.prototype.tokenRevokeKyc=null,t.prototype.tokenDeletion=null,t.prototype.tokenUpdate=null,t.prototype.tokenMint=null,t.prototype.tokenBurn=null,t.prototype.tokenWipe=null,t.prototype.tokenAssociate=null,t.prototype.tokenDissociate=null,t.prototype.tokenFeeScheduleUpdate=null,t.prototype.tokenPause=null,t.prototype.tokenUnpause=null,t.prototype.scheduleDelete=null,Object.defineProperty(t.prototype,"data",{get:F.oneOfGetter(e=["contractCall","contractCreateInstance","contractUpdateInstance","contractDeleteInstance","cryptoAdjustAllowance","cryptoApproveAllowance","cryptoCreateAccount","cryptoDelete","cryptoTransfer","cryptoUpdateAccount","fileAppend","fileCreate","fileDelete","fileUpdate","systemDelete","systemUndelete","freeze","consensusCreateTopic","consensusUpdateTopic","consensusDeleteTopic","consensusSubmitMessage","tokenCreation","tokenFreeze","tokenUnfreeze","tokenGrantKyc","tokenRevokeKyc","tokenDeletion","tokenUpdate","tokenMint","tokenBurn","tokenWipe","tokenAssociate","tokenDissociate","tokenFeeScheduleUpdate","tokenPause","tokenUnpause","scheduleDelete"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.transactionFee&&Object.hasOwnProperty.call(t,"transactionFee")&&e.uint32(8).uint64(t.transactionFee),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(18).string(t.memo),null!=t.contractCall&&Object.hasOwnProperty.call(t,"contractCall")&&U.proto.ContractCallTransactionBody.encode(t.contractCall,e.uint32(26).fork()).ldelim(),null!=t.contractCreateInstance&&Object.hasOwnProperty.call(t,"contractCreateInstance")&&U.proto.ContractCreateTransactionBody.encode(t.contractCreateInstance,e.uint32(34).fork()).ldelim(),null!=t.contractUpdateInstance&&Object.hasOwnProperty.call(t,"contractUpdateInstance")&&U.proto.ContractUpdateTransactionBody.encode(t.contractUpdateInstance,e.uint32(42).fork()).ldelim(),null!=t.contractDeleteInstance&&Object.hasOwnProperty.call(t,"contractDeleteInstance")&&U.proto.ContractDeleteTransactionBody.encode(t.contractDeleteInstance,e.uint32(50).fork()).ldelim(),null!=t.cryptoCreateAccount&&Object.hasOwnProperty.call(t,"cryptoCreateAccount")&&U.proto.CryptoCreateTransactionBody.encode(t.cryptoCreateAccount,e.uint32(58).fork()).ldelim(),null!=t.cryptoDelete&&Object.hasOwnProperty.call(t,"cryptoDelete")&&U.proto.CryptoDeleteTransactionBody.encode(t.cryptoDelete,e.uint32(66).fork()).ldelim(),null!=t.cryptoTransfer&&Object.hasOwnProperty.call(t,"cryptoTransfer")&&U.proto.CryptoTransferTransactionBody.encode(t.cryptoTransfer,e.uint32(74).fork()).ldelim(),null!=t.cryptoUpdateAccount&&Object.hasOwnProperty.call(t,"cryptoUpdateAccount")&&U.proto.CryptoUpdateTransactionBody.encode(t.cryptoUpdateAccount,e.uint32(82).fork()).ldelim(),null!=t.fileAppend&&Object.hasOwnProperty.call(t,"fileAppend")&&U.proto.FileAppendTransactionBody.encode(t.fileAppend,e.uint32(90).fork()).ldelim(),null!=t.fileCreate&&Object.hasOwnProperty.call(t,"fileCreate")&&U.proto.FileCreateTransactionBody.encode(t.fileCreate,e.uint32(98).fork()).ldelim(),null!=t.fileDelete&&Object.hasOwnProperty.call(t,"fileDelete")&&U.proto.FileDeleteTransactionBody.encode(t.fileDelete,e.uint32(106).fork()).ldelim(),null!=t.fileUpdate&&Object.hasOwnProperty.call(t,"fileUpdate")&&U.proto.FileUpdateTransactionBody.encode(t.fileUpdate,e.uint32(114).fork()).ldelim(),null!=t.systemDelete&&Object.hasOwnProperty.call(t,"systemDelete")&&U.proto.SystemDeleteTransactionBody.encode(t.systemDelete,e.uint32(122).fork()).ldelim(),null!=t.systemUndelete&&Object.hasOwnProperty.call(t,"systemUndelete")&&U.proto.SystemUndeleteTransactionBody.encode(t.systemUndelete,e.uint32(130).fork()).ldelim(),null!=t.freeze&&Object.hasOwnProperty.call(t,"freeze")&&U.proto.FreezeTransactionBody.encode(t.freeze,e.uint32(138).fork()).ldelim(),null!=t.consensusCreateTopic&&Object.hasOwnProperty.call(t,"consensusCreateTopic")&&U.proto.ConsensusCreateTopicTransactionBody.encode(t.consensusCreateTopic,e.uint32(146).fork()).ldelim(),null!=t.consensusUpdateTopic&&Object.hasOwnProperty.call(t,"consensusUpdateTopic")&&U.proto.ConsensusUpdateTopicTransactionBody.encode(t.consensusUpdateTopic,e.uint32(154).fork()).ldelim(),null!=t.consensusDeleteTopic&&Object.hasOwnProperty.call(t,"consensusDeleteTopic")&&U.proto.ConsensusDeleteTopicTransactionBody.encode(t.consensusDeleteTopic,e.uint32(162).fork()).ldelim(),null!=t.consensusSubmitMessage&&Object.hasOwnProperty.call(t,"consensusSubmitMessage")&&U.proto.ConsensusSubmitMessageTransactionBody.encode(t.consensusSubmitMessage,e.uint32(170).fork()).ldelim(),null!=t.tokenCreation&&Object.hasOwnProperty.call(t,"tokenCreation")&&U.proto.TokenCreateTransactionBody.encode(t.tokenCreation,e.uint32(178).fork()).ldelim(),null!=t.tokenFreeze&&Object.hasOwnProperty.call(t,"tokenFreeze")&&U.proto.TokenFreezeAccountTransactionBody.encode(t.tokenFreeze,e.uint32(186).fork()).ldelim(),null!=t.tokenUnfreeze&&Object.hasOwnProperty.call(t,"tokenUnfreeze")&&U.proto.TokenUnfreezeAccountTransactionBody.encode(t.tokenUnfreeze,e.uint32(194).fork()).ldelim(),null!=t.tokenGrantKyc&&Object.hasOwnProperty.call(t,"tokenGrantKyc")&&U.proto.TokenGrantKycTransactionBody.encode(t.tokenGrantKyc,e.uint32(202).fork()).ldelim(),null!=t.tokenRevokeKyc&&Object.hasOwnProperty.call(t,"tokenRevokeKyc")&&U.proto.TokenRevokeKycTransactionBody.encode(t.tokenRevokeKyc,e.uint32(210).fork()).ldelim(),null!=t.tokenDeletion&&Object.hasOwnProperty.call(t,"tokenDeletion")&&U.proto.TokenDeleteTransactionBody.encode(t.tokenDeletion,e.uint32(218).fork()).ldelim(),null!=t.tokenUpdate&&Object.hasOwnProperty.call(t,"tokenUpdate")&&U.proto.TokenUpdateTransactionBody.encode(t.tokenUpdate,e.uint32(226).fork()).ldelim(),null!=t.tokenMint&&Object.hasOwnProperty.call(t,"tokenMint")&&U.proto.TokenMintTransactionBody.encode(t.tokenMint,e.uint32(234).fork()).ldelim(),null!=t.tokenBurn&&Object.hasOwnProperty.call(t,"tokenBurn")&&U.proto.TokenBurnTransactionBody.encode(t.tokenBurn,e.uint32(242).fork()).ldelim(),null!=t.tokenWipe&&Object.hasOwnProperty.call(t,"tokenWipe")&&U.proto.TokenWipeAccountTransactionBody.encode(t.tokenWipe,e.uint32(250).fork()).ldelim(),null!=t.tokenAssociate&&Object.hasOwnProperty.call(t,"tokenAssociate")&&U.proto.TokenAssociateTransactionBody.encode(t.tokenAssociate,e.uint32(258).fork()).ldelim(),null!=t.tokenDissociate&&Object.hasOwnProperty.call(t,"tokenDissociate")&&U.proto.TokenDissociateTransactionBody.encode(t.tokenDissociate,e.uint32(266).fork()).ldelim(),null!=t.scheduleDelete&&Object.hasOwnProperty.call(t,"scheduleDelete")&&U.proto.ScheduleDeleteTransactionBody.encode(t.scheduleDelete,e.uint32(274).fork()).ldelim(),null!=t.tokenPause&&Object.hasOwnProperty.call(t,"tokenPause")&&U.proto.TokenPauseTransactionBody.encode(t.tokenPause,e.uint32(282).fork()).ldelim(),null!=t.tokenUnpause&&Object.hasOwnProperty.call(t,"tokenUnpause")&&U.proto.TokenUnpauseTransactionBody.encode(t.tokenUnpause,e.uint32(290).fork()).ldelim(),null!=t.cryptoAdjustAllowance&&Object.hasOwnProperty.call(t,"cryptoAdjustAllowance")&&U.proto.CryptoAdjustAllowanceTransactionBody.encode(t.cryptoAdjustAllowance,e.uint32(298).fork()).ldelim(),null!=t.cryptoApproveAllowance&&Object.hasOwnProperty.call(t,"cryptoApproveAllowance")&&U.proto.CryptoApproveAllowanceTransactionBody.encode(t.cryptoApproveAllowance,e.uint32(306).fork()).ldelim(),null!=t.tokenFeeScheduleUpdate&&Object.hasOwnProperty.call(t,"tokenFeeScheduleUpdate")&&U.proto.TokenFeeScheduleUpdateTransactionBody.encode(t.tokenFeeScheduleUpdate,e.uint32(314).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.SchedulableTransactionBody;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.transactionFee=t.uint64();break;case 2:F.memo=t.string();break;case 3:F.contractCall=U.proto.ContractCallTransactionBody.decode(t,t.uint32());break;case 4:F.contractCreateInstance=U.proto.ContractCreateTransactionBody.decode(t,t.uint32());break;case 5:F.contractUpdateInstance=U.proto.ContractUpdateTransactionBody.decode(t,t.uint32());break;case 6:F.contractDeleteInstance=U.proto.ContractDeleteTransactionBody.decode(t,t.uint32());break;case 37:F.cryptoAdjustAllowance=U.proto.CryptoAdjustAllowanceTransactionBody.decode(t,t.uint32());break;case 38:F.cryptoApproveAllowance=U.proto.CryptoApproveAllowanceTransactionBody.decode(t,t.uint32());break;case 7:F.cryptoCreateAccount=U.proto.CryptoCreateTransactionBody.decode(t,t.uint32());break;case 8:F.cryptoDelete=U.proto.CryptoDeleteTransactionBody.decode(t,t.uint32());break;case 9:F.cryptoTransfer=U.proto.CryptoTransferTransactionBody.decode(t,t.uint32());break;case 10:F.cryptoUpdateAccount=U.proto.CryptoUpdateTransactionBody.decode(t,t.uint32());break;case 11:F.fileAppend=U.proto.FileAppendTransactionBody.decode(t,t.uint32());break;case 12:F.fileCreate=U.proto.FileCreateTransactionBody.decode(t,t.uint32());break;case 13:F.fileDelete=U.proto.FileDeleteTransactionBody.decode(t,t.uint32());break;case 14:F.fileUpdate=U.proto.FileUpdateTransactionBody.decode(t,t.uint32());break;case 15:F.systemDelete=U.proto.SystemDeleteTransactionBody.decode(t,t.uint32());break;case 16:F.systemUndelete=U.proto.SystemUndeleteTransactionBody.decode(t,t.uint32());break;case 17:F.freeze=U.proto.FreezeTransactionBody.decode(t,t.uint32());break;case 18:F.consensusCreateTopic=U.proto.ConsensusCreateTopicTransactionBody.decode(t,t.uint32());break;case 19:F.consensusUpdateTopic=U.proto.ConsensusUpdateTopicTransactionBody.decode(t,t.uint32());break;case 20:F.consensusDeleteTopic=U.proto.ConsensusDeleteTopicTransactionBody.decode(t,t.uint32());break;case 21:F.consensusSubmitMessage=U.proto.ConsensusSubmitMessageTransactionBody.decode(t,t.uint32());break;case 22:F.tokenCreation=U.proto.TokenCreateTransactionBody.decode(t,t.uint32());break;case 23:F.tokenFreeze=U.proto.TokenFreezeAccountTransactionBody.decode(t,t.uint32());break;case 24:F.tokenUnfreeze=U.proto.TokenUnfreezeAccountTransactionBody.decode(t,t.uint32());break;case 25:F.tokenGrantKyc=U.proto.TokenGrantKycTransactionBody.decode(t,t.uint32());break;case 26:F.tokenRevokeKyc=U.proto.TokenRevokeKycTransactionBody.decode(t,t.uint32());break;case 27:F.tokenDeletion=U.proto.TokenDeleteTransactionBody.decode(t,t.uint32());break;case 28:F.tokenUpdate=U.proto.TokenUpdateTransactionBody.decode(t,t.uint32());break;case 29:F.tokenMint=U.proto.TokenMintTransactionBody.decode(t,t.uint32());break;case 30:F.tokenBurn=U.proto.TokenBurnTransactionBody.decode(t,t.uint32());break;case 31:F.tokenWipe=U.proto.TokenWipeAccountTransactionBody.decode(t,t.uint32());break;case 32:F.tokenAssociate=U.proto.TokenAssociateTransactionBody.decode(t,t.uint32());break;case 33:F.tokenDissociate=U.proto.TokenDissociateTransactionBody.decode(t,t.uint32());break;case 39:F.tokenFeeScheduleUpdate=U.proto.TokenFeeScheduleUpdateTransactionBody.decode(t,t.uint32());break;case 35:F.tokenPause=U.proto.TokenPauseTransactionBody.decode(t,t.uint32());break;case 36:F.tokenUnpause=U.proto.TokenUnpauseTransactionBody.decode(t,t.uint32());break;case 34:F.scheduleDelete=U.proto.ScheduleDeleteTransactionBody.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ScheduleDeleteTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.scheduleID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.scheduleID&&Object.hasOwnProperty.call(t,"scheduleID")&&U.proto.ScheduleID.encode(t.scheduleID,e.uint32(10).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ScheduleDeleteTransactionBody;t.pos<s;)1==(Q=t.uint32())>>>3?F.scheduleID=U.proto.ScheduleID.decode(t,t.uint32()):t.skipType(7&Q);return F},t}(),ScheduleSignTransactionBody:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.scheduleID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.scheduleID&&Object.hasOwnProperty.call(t,"scheduleID")&&U.proto.ScheduleID.encode(t.scheduleID,e.uint32(10).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ScheduleSignTransactionBody;t.pos<s;)1==(Q=t.uint32())>>>3?F.scheduleID=U.proto.ScheduleID.decode(t,t.uint32()):t.skipType(7&Q);return F},t}(),ResponseHeader:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.nodeTransactionPrecheckCode=0,t.prototype.responseType=0,t.prototype.cost=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.stateProof=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.nodeTransactionPrecheckCode&&Object.hasOwnProperty.call(t,"nodeTransactionPrecheckCode")&&e.uint32(8).int32(t.nodeTransactionPrecheckCode),null!=t.responseType&&Object.hasOwnProperty.call(t,"responseType")&&e.uint32(16).int32(t.responseType),null!=t.cost&&Object.hasOwnProperty.call(t,"cost")&&e.uint32(24).uint64(t.cost),null!=t.stateProof&&Object.hasOwnProperty.call(t,"stateProof")&&e.uint32(34).bytes(t.stateProof),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ResponseHeader;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.nodeTransactionPrecheckCode=t.int32();break;case 2:F.responseType=t.int32();break;case 3:F.cost=t.uint64();break;case 4:F.stateProof=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),TransactionResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.nodeTransactionPrecheckCode=0,t.prototype.cost=F.Long?F.Long.fromBits(0,0,!0):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.nodeTransactionPrecheckCode&&Object.hasOwnProperty.call(t,"nodeTransactionPrecheckCode")&&e.uint32(8).int32(t.nodeTransactionPrecheckCode),null!=t.cost&&Object.hasOwnProperty.call(t,"cost")&&e.uint32(16).uint64(t.cost),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TransactionResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.nodeTransactionPrecheckCode=t.int32();break;case 2:F.cost=t.uint64();break;default:t.skipType(7&Q)}return F},t}(),ResponseCodeEnum:function(){const t={},e=Object.create(t);return e[t[0]="OK"]=0,e[t[1]="INVALID_TRANSACTION"]=1,e[t[2]="PAYER_ACCOUNT_NOT_FOUND"]=2,e[t[3]="INVALID_NODE_ACCOUNT"]=3,e[t[4]="TRANSACTION_EXPIRED"]=4,e[t[5]="INVALID_TRANSACTION_START"]=5,e[t[6]="INVALID_TRANSACTION_DURATION"]=6,e[t[7]="INVALID_SIGNATURE"]=7,e[t[8]="MEMO_TOO_LONG"]=8,e[t[9]="INSUFFICIENT_TX_FEE"]=9,e[t[10]="INSUFFICIENT_PAYER_BALANCE"]=10,e[t[11]="DUPLICATE_TRANSACTION"]=11,e[t[12]="BUSY"]=12,e[t[13]="NOT_SUPPORTED"]=13,e[t[14]="INVALID_FILE_ID"]=14,e[t[15]="INVALID_ACCOUNT_ID"]=15,e[t[16]="INVALID_CONTRACT_ID"]=16,e[t[17]="INVALID_TRANSACTION_ID"]=17,e[t[18]="RECEIPT_NOT_FOUND"]=18,e[t[19]="RECORD_NOT_FOUND"]=19,e[t[20]="INVALID_SOLIDITY_ID"]=20,e[t[21]="UNKNOWN"]=21,e[t[22]="SUCCESS"]=22,e[t[23]="FAIL_INVALID"]=23,e[t[24]="FAIL_FEE"]=24,e[t[25]="FAIL_BALANCE"]=25,e[t[26]="KEY_REQUIRED"]=26,e[t[27]="BAD_ENCODING"]=27,e[t[28]="INSUFFICIENT_ACCOUNT_BALANCE"]=28,e[t[29]="INVALID_SOLIDITY_ADDRESS"]=29,e[t[30]="INSUFFICIENT_GAS"]=30,e[t[31]="CONTRACT_SIZE_LIMIT_EXCEEDED"]=31,e[t[32]="LOCAL_CALL_MODIFICATION_EXCEPTION"]=32,e[t[33]="CONTRACT_REVERT_EXECUTED"]=33,e[t[34]="CONTRACT_EXECUTION_EXCEPTION"]=34,e[t[35]="INVALID_RECEIVING_NODE_ACCOUNT"]=35,e[t[36]="MISSING_QUERY_HEADER"]=36,e[t[37]="ACCOUNT_UPDATE_FAILED"]=37,e[t[38]="INVALID_KEY_ENCODING"]=38,e[t[39]="NULL_SOLIDITY_ADDRESS"]=39,e[t[40]="CONTRACT_UPDATE_FAILED"]=40,e[t[41]="INVALID_QUERY_HEADER"]=41,e[t[42]="INVALID_FEE_SUBMITTED"]=42,e[t[43]="INVALID_PAYER_SIGNATURE"]=43,e[t[44]="KEY_NOT_PROVIDED"]=44,e[t[45]="INVALID_EXPIRATION_TIME"]=45,e[t[46]="NO_WACL_KEY"]=46,e[t[47]="FILE_CONTENT_EMPTY"]=47,e[t[48]="INVALID_ACCOUNT_AMOUNTS"]=48,e[t[49]="EMPTY_TRANSACTION_BODY"]=49,e[t[50]="INVALID_TRANSACTION_BODY"]=50,e[t[51]="INVALID_SIGNATURE_TYPE_MISMATCHING_KEY"]=51,e[t[52]="INVALID_SIGNATURE_COUNT_MISMATCHING_KEY"]=52,e[t[53]="EMPTY_LIVE_HASH_BODY"]=53,e[t[54]="EMPTY_LIVE_HASH"]=54,e[t[55]="EMPTY_LIVE_HASH_KEYS"]=55,e[t[56]="INVALID_LIVE_HASH_SIZE"]=56,e[t[57]="EMPTY_QUERY_BODY"]=57,e[t[58]="EMPTY_LIVE_HASH_QUERY"]=58,e[t[59]="LIVE_HASH_NOT_FOUND"]=59,e[t[60]="ACCOUNT_ID_DOES_NOT_EXIST"]=60,e[t[61]="LIVE_HASH_ALREADY_EXISTS"]=61,e[t[62]="INVALID_FILE_WACL"]=62,e[t[63]="SERIALIZATION_FAILED"]=63,e[t[64]="TRANSACTION_OVERSIZE"]=64,e[t[65]="TRANSACTION_TOO_MANY_LAYERS"]=65,e[t[66]="CONTRACT_DELETED"]=66,e[t[67]="PLATFORM_NOT_ACTIVE"]=67,e[t[68]="KEY_PREFIX_MISMATCH"]=68,e[t[69]="PLATFORM_TRANSACTION_NOT_CREATED"]=69,e[t[70]="INVALID_RENEWAL_PERIOD"]=70,e[t[71]="INVALID_PAYER_ACCOUNT_ID"]=71,e[t[72]="ACCOUNT_DELETED"]=72,e[t[73]="FILE_DELETED"]=73,e[t[74]="ACCOUNT_REPEATED_IN_ACCOUNT_AMOUNTS"]=74,e[t[75]="SETTING_NEGATIVE_ACCOUNT_BALANCE"]=75,e[t[76]="OBTAINER_REQUIRED"]=76,e[t[77]="OBTAINER_SAME_CONTRACT_ID"]=77,e[t[78]="OBTAINER_DOES_NOT_EXIST"]=78,e[t[79]="MODIFYING_IMMUTABLE_CONTRACT"]=79,e[t[80]="FILE_SYSTEM_EXCEPTION"]=80,e[t[81]="AUTORENEW_DURATION_NOT_IN_RANGE"]=81,e[t[82]="ERROR_DECODING_BYTESTRING"]=82,e[t[83]="CONTRACT_FILE_EMPTY"]=83,e[t[84]="CONTRACT_BYTECODE_EMPTY"]=84,e[t[85]="INVALID_INITIAL_BALANCE"]=85,e[t[86]="INVALID_RECEIVE_RECORD_THRESHOLD"]=86,e[t[87]="INVALID_SEND_RECORD_THRESHOLD"]=87,e[t[88]="ACCOUNT_IS_NOT_GENESIS_ACCOUNT"]=88,e[t[89]="PAYER_ACCOUNT_UNAUTHORIZED"]=89,e[t[90]="INVALID_FREEZE_TRANSACTION_BODY"]=90,e[t[91]="FREEZE_TRANSACTION_BODY_NOT_FOUND"]=91,e[t[92]="TRANSFER_LIST_SIZE_LIMIT_EXCEEDED"]=92,e[t[93]="RESULT_SIZE_LIMIT_EXCEEDED"]=93,e[t[94]="NOT_SPECIAL_ACCOUNT"]=94,e[t[95]="CONTRACT_NEGATIVE_GAS"]=95,e[t[96]="CONTRACT_NEGATIVE_VALUE"]=96,e[t[97]="INVALID_FEE_FILE"]=97,e[t[98]="INVALID_EXCHANGE_RATE_FILE"]=98,e[t[99]="INSUFFICIENT_LOCAL_CALL_GAS"]=99,e[t[100]="ENTITY_NOT_ALLOWED_TO_DELETE"]=100,e[t[101]="AUTHORIZATION_FAILED"]=101,e[t[102]="FILE_UPLOADED_PROTO_INVALID"]=102,e[t[103]="FILE_UPLOADED_PROTO_NOT_SAVED_TO_DISK"]=103,e[t[104]="FEE_SCHEDULE_FILE_PART_UPLOADED"]=104,e[t[105]="EXCHANGE_RATE_CHANGE_LIMIT_EXCEEDED"]=105,e[t[106]="MAX_CONTRACT_STORAGE_EXCEEDED"]=106,e[t[107]="TRANSFER_ACCOUNT_SAME_AS_DELETE_ACCOUNT"]=107,e[t[108]="TOTAL_LEDGER_BALANCE_INVALID"]=108,e[t[110]="EXPIRATION_REDUCTION_NOT_ALLOWED"]=110,e[t[111]="MAX_GAS_LIMIT_EXCEEDED"]=111,e[t[112]="MAX_FILE_SIZE_EXCEEDED"]=112,e[t[113]="RECEIVER_SIG_REQUIRED"]=113,e[t[150]="INVALID_TOPIC_ID"]=150,e[t[155]="INVALID_ADMIN_KEY"]=155,e[t[156]="INVALID_SUBMIT_KEY"]=156,e[t[157]="UNAUTHORIZED"]=157,e[t[158]="INVALID_TOPIC_MESSAGE"]=158,e[t[159]="INVALID_AUTORENEW_ACCOUNT"]=159,e[t[160]="AUTORENEW_ACCOUNT_NOT_ALLOWED"]=160,e[t[162]="TOPIC_EXPIRED"]=162,e[t[163]="INVALID_CHUNK_NUMBER"]=163,e[t[164]="INVALID_CHUNK_TRANSACTION_ID"]=164,e[t[165]="ACCOUNT_FROZEN_FOR_TOKEN"]=165,e[t[166]="TOKENS_PER_ACCOUNT_LIMIT_EXCEEDED"]=166,e[t[167]="INVALID_TOKEN_ID"]=167,e[t[168]="INVALID_TOKEN_DECIMALS"]=168,e[t[169]="INVALID_TOKEN_INITIAL_SUPPLY"]=169,e[t[170]="INVALID_TREASURY_ACCOUNT_FOR_TOKEN"]=170,e[t[171]="INVALID_TOKEN_SYMBOL"]=171,e[t[172]="TOKEN_HAS_NO_FREEZE_KEY"]=172,e[t[173]="TRANSFERS_NOT_ZERO_SUM_FOR_TOKEN"]=173,e[t[174]="MISSING_TOKEN_SYMBOL"]=174,e[t[175]="TOKEN_SYMBOL_TOO_LONG"]=175,e[t[176]="ACCOUNT_KYC_NOT_GRANTED_FOR_TOKEN"]=176,e[t[177]="TOKEN_HAS_NO_KYC_KEY"]=177,e[t[178]="INSUFFICIENT_TOKEN_BALANCE"]=178,e[t[179]="TOKEN_WAS_DELETED"]=179,e[t[180]="TOKEN_HAS_NO_SUPPLY_KEY"]=180,e[t[181]="TOKEN_HAS_NO_WIPE_KEY"]=181,e[t[182]="INVALID_TOKEN_MINT_AMOUNT"]=182,e[t[183]="INVALID_TOKEN_BURN_AMOUNT"]=183,e[t[184]="TOKEN_NOT_ASSOCIATED_TO_ACCOUNT"]=184,e[t[185]="CANNOT_WIPE_TOKEN_TREASURY_ACCOUNT"]=185,e[t[186]="INVALID_KYC_KEY"]=186,e[t[187]="INVALID_WIPE_KEY"]=187,e[t[188]="INVALID_FREEZE_KEY"]=188,e[t[189]="INVALID_SUPPLY_KEY"]=189,e[t[190]="MISSING_TOKEN_NAME"]=190,e[t[191]="TOKEN_NAME_TOO_LONG"]=191,e[t[192]="INVALID_WIPING_AMOUNT"]=192,e[t[193]="TOKEN_IS_IMMUTABLE"]=193,e[t[194]="TOKEN_ALREADY_ASSOCIATED_TO_ACCOUNT"]=194,e[t[195]="TRANSACTION_REQUIRES_ZERO_TOKEN_BALANCES"]=195,e[t[196]="ACCOUNT_IS_TREASURY"]=196,e[t[197]="TOKEN_ID_REPEATED_IN_TOKEN_LIST"]=197,e[t[198]="TOKEN_TRANSFER_LIST_SIZE_LIMIT_EXCEEDED"]=198,e[t[199]="EMPTY_TOKEN_TRANSFER_BODY"]=199,e[t[200]="EMPTY_TOKEN_TRANSFER_ACCOUNT_AMOUNTS"]=200,e[t[201]="INVALID_SCHEDULE_ID"]=201,e[t[202]="SCHEDULE_IS_IMMUTABLE"]=202,e[t[203]="INVALID_SCHEDULE_PAYER_ID"]=203,e[t[204]="INVALID_SCHEDULE_ACCOUNT_ID"]=204,e[t[205]="NO_NEW_VALID_SIGNATURES"]=205,e[t[206]="UNRESOLVABLE_REQUIRED_SIGNERS"]=206,e[t[207]="SCHEDULED_TRANSACTION_NOT_IN_WHITELIST"]=207,e[t[208]="SOME_SIGNATURES_WERE_INVALID"]=208,e[t[209]="TRANSACTION_ID_FIELD_NOT_ALLOWED"]=209,e[t[210]="IDENTICAL_SCHEDULE_ALREADY_CREATED"]=210,e[t[211]="INVALID_ZERO_BYTE_IN_STRING"]=211,e[t[212]="SCHEDULE_ALREADY_DELETED"]=212,e[t[213]="SCHEDULE_ALREADY_EXECUTED"]=213,e[t[214]="MESSAGE_SIZE_TOO_LARGE"]=214,e[t[215]="OPERATION_REPEATED_IN_BUCKET_GROUPS"]=215,e[t[216]="BUCKET_CAPACITY_OVERFLOW"]=216,e[t[217]="NODE_CAPACITY_NOT_SUFFICIENT_FOR_OPERATION"]=217,e[t[218]="BUCKET_HAS_NO_THROTTLE_GROUPS"]=218,e[t[219]="THROTTLE_GROUP_HAS_ZERO_OPS_PER_SEC"]=219,e[t[220]="SUCCESS_BUT_MISSING_EXPECTED_OPERATION"]=220,e[t[221]="UNPARSEABLE_THROTTLE_DEFINITIONS"]=221,e[t[222]="INVALID_THROTTLE_DEFINITIONS"]=222,e[t[223]="ACCOUNT_EXPIRED_AND_PENDING_REMOVAL"]=223,e[t[224]="INVALID_TOKEN_MAX_SUPPLY"]=224,e[t[225]="INVALID_TOKEN_NFT_SERIAL_NUMBER"]=225,e[t[226]="INVALID_NFT_ID"]=226,e[t[227]="METADATA_TOO_LONG"]=227,e[t[228]="BATCH_SIZE_LIMIT_EXCEEDED"]=228,e[t[229]="INVALID_QUERY_RANGE"]=229,e[t[230]="FRACTION_DIVIDES_BY_ZERO"]=230,e[t[231]="INSUFFICIENT_PAYER_BALANCE_FOR_CUSTOM_FEE"]=231,e[t[232]="CUSTOM_FEES_LIST_TOO_LONG"]=232,e[t[233]="INVALID_CUSTOM_FEE_COLLECTOR"]=233,e[t[234]="INVALID_TOKEN_ID_IN_CUSTOM_FEES"]=234,e[t[235]="TOKEN_NOT_ASSOCIATED_TO_FEE_COLLECTOR"]=235,e[t[236]="TOKEN_MAX_SUPPLY_REACHED"]=236,e[t[237]="SENDER_DOES_NOT_OWN_NFT_SERIAL_NO"]=237,e[t[238]="CUSTOM_FEE_NOT_FULLY_SPECIFIED"]=238,e[t[239]="CUSTOM_FEE_MUST_BE_POSITIVE"]=239,e[t[240]="TOKEN_HAS_NO_FEE_SCHEDULE_KEY"]=240,e[t[241]="CUSTOM_FEE_OUTSIDE_NUMERIC_RANGE"]=241,e[t[242]="ROYALTY_FRACTION_CANNOT_EXCEED_ONE"]=242,e[t[243]="FRACTIONAL_FEE_MAX_AMOUNT_LESS_THAN_MIN_AMOUNT"]=243,e[t[244]="CUSTOM_SCHEDULE_ALREADY_HAS_NO_FEES"]=244,e[t[245]="CUSTOM_FEE_DENOMINATION_MUST_BE_FUNGIBLE_COMMON"]=245,e[t[246]="CUSTOM_FRACTIONAL_FEE_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON"]=246,e[t[247]="INVALID_CUSTOM_FEE_SCHEDULE_KEY"]=247,e[t[248]="INVALID_TOKEN_MINT_METADATA"]=248,e[t[249]="INVALID_TOKEN_BURN_METADATA"]=249,e[t[250]="CURRENT_TREASURY_STILL_OWNS_NFTS"]=250,e[t[251]="ACCOUNT_STILL_OWNS_NFTS"]=251,e[t[252]="TREASURY_MUST_OWN_BURNED_NFT"]=252,e[t[253]="ACCOUNT_DOES_NOT_OWN_WIPED_NFT"]=253,e[t[254]="ACCOUNT_AMOUNT_TRANSFERS_ONLY_ALLOWED_FOR_FUNGIBLE_COMMON"]=254,e[t[255]="MAX_NFTS_IN_PRICE_REGIME_HAVE_BEEN_MINTED"]=255,e[t[256]="PAYER_ACCOUNT_DELETED"]=256,e[t[257]="CUSTOM_FEE_CHARGING_EXCEEDED_MAX_RECURSION_DEPTH"]=257,e[t[258]="CUSTOM_FEE_CHARGING_EXCEEDED_MAX_ACCOUNT_AMOUNTS"]=258,e[t[259]="INSUFFICIENT_SENDER_ACCOUNT_BALANCE_FOR_CUSTOM_FEE"]=259,e[t[260]="SERIAL_NUMBER_LIMIT_REACHED"]=260,e[t[261]="CUSTOM_ROYALTY_FEE_ONLY_ALLOWED_FOR_NON_FUNGIBLE_UNIQUE"]=261,e[t[262]="NO_REMAINING_AUTOMATIC_ASSOCIATIONS"]=262,e[t[263]="EXISTING_AUTOMATIC_ASSOCIATIONS_EXCEED_GIVEN_LIMIT"]=263,e[t[264]="REQUESTED_NUM_AUTOMATIC_ASSOCIATIONS_EXCEEDS_ASSOCIATION_LIMIT"]=264,e[t[265]="TOKEN_IS_PAUSED"]=265,e[t[266]="TOKEN_HAS_NO_PAUSE_KEY"]=266,e[t[267]="INVALID_PAUSE_KEY"]=267,e[t[268]="FREEZE_UPDATE_FILE_DOES_NOT_EXIST"]=268,e[t[269]="FREEZE_UPDATE_FILE_HASH_DOES_NOT_MATCH"]=269,e[t[270]="NO_UPGRADE_HAS_BEEN_PREPARED"]=270,e[t[271]="NO_FREEZE_IS_SCHEDULED"]=271,e[t[272]="UPDATE_FILE_HASH_CHANGED_SINCE_PREPARE_UPGRADE"]=272,e[t[273]="FREEZE_START_TIME_MUST_BE_FUTURE"]=273,e[t[274]="PREPARED_UPDATE_FILE_IS_IMMUTABLE"]=274,e[t[275]="FREEZE_ALREADY_SCHEDULED"]=275,e[t[276]="FREEZE_UPGRADE_IN_PROGRESS"]=276,e[t[277]="UPDATE_FILE_ID_DOES_NOT_MATCH_PREPARED"]=277,e[t[278]="UPDATE_FILE_HASH_DOES_NOT_MATCH_PREPARED"]=278,e[t[279]="CONSENSUS_GAS_EXHAUSTED"]=279,e[t[280]="REVERTED_SUCCESS"]=280,e[t[281]="MAX_STORAGE_IN_PRICE_REGIME_HAS_BEEN_USED"]=281,e[t[282]="INVALID_ALIAS_KEY"]=282,e[t[283]="UNEXPECTED_TOKEN_DECIMALS"]=283,e[t[284]="INVALID_PROXY_ACCOUNT_ID"]=284,e[t[285]="INVALID_TRANSFER_ACCOUNT_ID"]=285,e[t[286]="INVALID_FEE_COLLECTOR_ACCOUNT_ID"]=286,e[t[287]="ALIAS_IS_IMMUTABLE"]=287,e[t[288]="SPENDER_ACCOUNT_SAME_AS_OWNER"]=288,e[t[289]="AMOUNT_EXCEEDS_TOKEN_MAX_SUPPLY"]=289,e[t[290]="NEGATIVE_ALLOWANCE_AMOUNT"]=290,e[t[291]="CANNOT_APPROVE_FOR_ALL_FUNGIBLE_COMMON"]=291,e[t[292]="SPENDER_DOES_NOT_HAVE_ALLOWANCE"]=292,e[t[293]="AMOUNT_EXCEEDS_ALLOWANCE"]=293,e[t[294]="MAX_ALLOWANCES_EXCEEDED"]=294,e[t[295]="EMPTY_ALLOWANCES"]=295,e}(),ConsensusTopicInfo:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.memo="",t.prototype.runningHash=F.newBuffer([]),t.prototype.sequenceNumber=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.expirationTime=null,t.prototype.adminKey=null,t.prototype.submitKey=null,t.prototype.autoRenewPeriod=null,t.prototype.autoRenewAccount=null,t.prototype.ledgerId=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(10).string(t.memo),null!=t.runningHash&&Object.hasOwnProperty.call(t,"runningHash")&&e.uint32(18).bytes(t.runningHash),null!=t.sequenceNumber&&Object.hasOwnProperty.call(t,"sequenceNumber")&&e.uint32(24).uint64(t.sequenceNumber),null!=t.expirationTime&&Object.hasOwnProperty.call(t,"expirationTime")&&U.proto.Timestamp.encode(t.expirationTime,e.uint32(34).fork()).ldelim(),null!=t.adminKey&&Object.hasOwnProperty.call(t,"adminKey")&&U.proto.Key.encode(t.adminKey,e.uint32(42).fork()).ldelim(),null!=t.submitKey&&Object.hasOwnProperty.call(t,"submitKey")&&U.proto.Key.encode(t.submitKey,e.uint32(50).fork()).ldelim(),null!=t.autoRenewPeriod&&Object.hasOwnProperty.call(t,"autoRenewPeriod")&&U.proto.Duration.encode(t.autoRenewPeriod,e.uint32(58).fork()).ldelim(),null!=t.autoRenewAccount&&Object.hasOwnProperty.call(t,"autoRenewAccount")&&U.proto.AccountID.encode(t.autoRenewAccount,e.uint32(66).fork()).ldelim(),null!=t.ledgerId&&Object.hasOwnProperty.call(t,"ledgerId")&&e.uint32(74).bytes(t.ledgerId),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ConsensusTopicInfo;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.memo=t.string();break;case 2:F.runningHash=t.bytes();break;case 3:F.sequenceNumber=t.uint64();break;case 4:F.expirationTime=U.proto.Timestamp.decode(t,t.uint32());break;case 5:F.adminKey=U.proto.Key.decode(t,t.uint32());break;case 6:F.submitKey=U.proto.Key.decode(t,t.uint32());break;case 7:F.autoRenewPeriod=U.proto.Duration.decode(t,t.uint32());break;case 8:F.autoRenewAccount=U.proto.AccountID.decode(t,t.uint32());break;case 9:F.ledgerId=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),ConsensusService:function(){function t(t,Q,B){e.rpc.Service.call(this,t,Q,B)}return(t.prototype=Object.create(e.rpc.Service.prototype)).constructor=t,t.create=function(t,e,Q){return new this(t,e,Q)},Object.defineProperty(t.prototype.createTopic=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"createTopic"}),Object.defineProperty(t.prototype.updateTopic=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"updateTopic"}),Object.defineProperty(t.prototype.deleteTopic=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"deleteTopic"}),Object.defineProperty(t.prototype.getTopicInfo=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getTopicInfo"}),Object.defineProperty(t.prototype.submitMessage=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"submitMessage"}),t}(),Query:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.getByKey=null,t.prototype.getBySolidityID=null,t.prototype.contractCallLocal=null,t.prototype.contractGetInfo=null,t.prototype.contractGetBytecode=null,t.prototype.ContractGetRecords=null,t.prototype.cryptogetAccountBalance=null,t.prototype.cryptoGetAccountRecords=null,t.prototype.cryptoGetInfo=null,t.prototype.cryptoGetLiveHash=null,t.prototype.cryptoGetProxyStakers=null,t.prototype.fileGetContents=null,t.prototype.fileGetInfo=null,t.prototype.transactionGetReceipt=null,t.prototype.transactionGetRecord=null,t.prototype.transactionGetFastRecord=null,t.prototype.consensusGetTopicInfo=null,t.prototype.networkGetVersionInfo=null,t.prototype.tokenGetInfo=null,t.prototype.scheduleGetInfo=null,t.prototype.tokenGetAccountNftInfos=null,t.prototype.tokenGetNftInfo=null,t.prototype.tokenGetNftInfos=null,t.prototype.networkGetExecutionTime=null,Object.defineProperty(t.prototype,"query",{get:F.oneOfGetter(e=["getByKey","getBySolidityID","contractCallLocal","contractGetInfo","contractGetBytecode","ContractGetRecords","cryptogetAccountBalance","cryptoGetAccountRecords","cryptoGetInfo","cryptoGetLiveHash","cryptoGetProxyStakers","fileGetContents","fileGetInfo","transactionGetReceipt","transactionGetRecord","transactionGetFastRecord","consensusGetTopicInfo","networkGetVersionInfo","tokenGetInfo","scheduleGetInfo","tokenGetAccountNftInfos","tokenGetNftInfo","tokenGetNftInfos","networkGetExecutionTime"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.getByKey&&Object.hasOwnProperty.call(t,"getByKey")&&U.proto.GetByKeyQuery.encode(t.getByKey,e.uint32(10).fork()).ldelim(),null!=t.getBySolidityID&&Object.hasOwnProperty.call(t,"getBySolidityID")&&U.proto.GetBySolidityIDQuery.encode(t.getBySolidityID,e.uint32(18).fork()).ldelim(),null!=t.contractCallLocal&&Object.hasOwnProperty.call(t,"contractCallLocal")&&U.proto.ContractCallLocalQuery.encode(t.contractCallLocal,e.uint32(26).fork()).ldelim(),null!=t.contractGetInfo&&Object.hasOwnProperty.call(t,"contractGetInfo")&&U.proto.ContractGetInfoQuery.encode(t.contractGetInfo,e.uint32(34).fork()).ldelim(),null!=t.contractGetBytecode&&Object.hasOwnProperty.call(t,"contractGetBytecode")&&U.proto.ContractGetBytecodeQuery.encode(t.contractGetBytecode,e.uint32(42).fork()).ldelim(),null!=t.ContractGetRecords&&Object.hasOwnProperty.call(t,"ContractGetRecords")&&U.proto.ContractGetRecordsQuery.encode(t.ContractGetRecords,e.uint32(50).fork()).ldelim(),null!=t.cryptogetAccountBalance&&Object.hasOwnProperty.call(t,"cryptogetAccountBalance")&&U.proto.CryptoGetAccountBalanceQuery.encode(t.cryptogetAccountBalance,e.uint32(58).fork()).ldelim(),null!=t.cryptoGetAccountRecords&&Object.hasOwnProperty.call(t,"cryptoGetAccountRecords")&&U.proto.CryptoGetAccountRecordsQuery.encode(t.cryptoGetAccountRecords,e.uint32(66).fork()).ldelim(),null!=t.cryptoGetInfo&&Object.hasOwnProperty.call(t,"cryptoGetInfo")&&U.proto.CryptoGetInfoQuery.encode(t.cryptoGetInfo,e.uint32(74).fork()).ldelim(),null!=t.cryptoGetLiveHash&&Object.hasOwnProperty.call(t,"cryptoGetLiveHash")&&U.proto.CryptoGetLiveHashQuery.encode(t.cryptoGetLiveHash,e.uint32(82).fork()).ldelim(),null!=t.cryptoGetProxyStakers&&Object.hasOwnProperty.call(t,"cryptoGetProxyStakers")&&U.proto.CryptoGetStakersQuery.encode(t.cryptoGetProxyStakers,e.uint32(90).fork()).ldelim(),null!=t.fileGetContents&&Object.hasOwnProperty.call(t,"fileGetContents")&&U.proto.FileGetContentsQuery.encode(t.fileGetContents,e.uint32(98).fork()).ldelim(),null!=t.fileGetInfo&&Object.hasOwnProperty.call(t,"fileGetInfo")&&U.proto.FileGetInfoQuery.encode(t.fileGetInfo,e.uint32(106).fork()).ldelim(),null!=t.transactionGetReceipt&&Object.hasOwnProperty.call(t,"transactionGetReceipt")&&U.proto.TransactionGetReceiptQuery.encode(t.transactionGetReceipt,e.uint32(114).fork()).ldelim(),null!=t.transactionGetRecord&&Object.hasOwnProperty.call(t,"transactionGetRecord")&&U.proto.TransactionGetRecordQuery.encode(t.transactionGetRecord,e.uint32(122).fork()).ldelim(),null!=t.transactionGetFastRecord&&Object.hasOwnProperty.call(t,"transactionGetFastRecord")&&U.proto.TransactionGetFastRecordQuery.encode(t.transactionGetFastRecord,e.uint32(130).fork()).ldelim(),null!=t.consensusGetTopicInfo&&Object.hasOwnProperty.call(t,"consensusGetTopicInfo")&&U.proto.ConsensusGetTopicInfoQuery.encode(t.consensusGetTopicInfo,e.uint32(402).fork()).ldelim(),null!=t.networkGetVersionInfo&&Object.hasOwnProperty.call(t,"networkGetVersionInfo")&&U.proto.NetworkGetVersionInfoQuery.encode(t.networkGetVersionInfo,e.uint32(410).fork()).ldelim(),null!=t.tokenGetInfo&&Object.hasOwnProperty.call(t,"tokenGetInfo")&&U.proto.TokenGetInfoQuery.encode(t.tokenGetInfo,e.uint32(418).fork()).ldelim(),null!=t.scheduleGetInfo&&Object.hasOwnProperty.call(t,"scheduleGetInfo")&&U.proto.ScheduleGetInfoQuery.encode(t.scheduleGetInfo,e.uint32(426).fork()).ldelim(),null!=t.tokenGetAccountNftInfos&&Object.hasOwnProperty.call(t,"tokenGetAccountNftInfos")&&U.proto.TokenGetAccountNftInfosQuery.encode(t.tokenGetAccountNftInfos,e.uint32(434).fork()).ldelim(),null!=t.tokenGetNftInfo&&Object.hasOwnProperty.call(t,"tokenGetNftInfo")&&U.proto.TokenGetNftInfoQuery.encode(t.tokenGetNftInfo,e.uint32(442).fork()).ldelim(),null!=t.tokenGetNftInfos&&Object.hasOwnProperty.call(t,"tokenGetNftInfos")&&U.proto.TokenGetNftInfosQuery.encode(t.tokenGetNftInfos,e.uint32(450).fork()).ldelim(),null!=t.networkGetExecutionTime&&Object.hasOwnProperty.call(t,"networkGetExecutionTime")&&U.proto.NetworkGetExecutionTimeQuery.encode(t.networkGetExecutionTime,e.uint32(458).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.Query;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.getByKey=U.proto.GetByKeyQuery.decode(t,t.uint32());break;case 2:F.getBySolidityID=U.proto.GetBySolidityIDQuery.decode(t,t.uint32());break;case 3:F.contractCallLocal=U.proto.ContractCallLocalQuery.decode(t,t.uint32());break;case 4:F.contractGetInfo=U.proto.ContractGetInfoQuery.decode(t,t.uint32());break;case 5:F.contractGetBytecode=U.proto.ContractGetBytecodeQuery.decode(t,t.uint32());break;case 6:F.ContractGetRecords=U.proto.ContractGetRecordsQuery.decode(t,t.uint32());break;case 7:F.cryptogetAccountBalance=U.proto.CryptoGetAccountBalanceQuery.decode(t,t.uint32());break;case 8:F.cryptoGetAccountRecords=U.proto.CryptoGetAccountRecordsQuery.decode(t,t.uint32());break;case 9:F.cryptoGetInfo=U.proto.CryptoGetInfoQuery.decode(t,t.uint32());break;case 10:F.cryptoGetLiveHash=U.proto.CryptoGetLiveHashQuery.decode(t,t.uint32());break;case 11:F.cryptoGetProxyStakers=U.proto.CryptoGetStakersQuery.decode(t,t.uint32());break;case 12:F.fileGetContents=U.proto.FileGetContentsQuery.decode(t,t.uint32());break;case 13:F.fileGetInfo=U.proto.FileGetInfoQuery.decode(t,t.uint32());break;case 14:F.transactionGetReceipt=U.proto.TransactionGetReceiptQuery.decode(t,t.uint32());break;case 15:F.transactionGetRecord=U.proto.TransactionGetRecordQuery.decode(t,t.uint32());break;case 16:F.transactionGetFastRecord=U.proto.TransactionGetFastRecordQuery.decode(t,t.uint32());break;case 50:F.consensusGetTopicInfo=U.proto.ConsensusGetTopicInfoQuery.decode(t,t.uint32());break;case 51:F.networkGetVersionInfo=U.proto.NetworkGetVersionInfoQuery.decode(t,t.uint32());break;case 52:F.tokenGetInfo=U.proto.TokenGetInfoQuery.decode(t,t.uint32());break;case 53:F.scheduleGetInfo=U.proto.ScheduleGetInfoQuery.decode(t,t.uint32());break;case 54:F.tokenGetAccountNftInfos=U.proto.TokenGetAccountNftInfosQuery.decode(t,t.uint32());break;case 55:F.tokenGetNftInfo=U.proto.TokenGetNftInfoQuery.decode(t,t.uint32());break;case 56:F.tokenGetNftInfos=U.proto.TokenGetNftInfosQuery.decode(t,t.uint32());break;case 57:F.networkGetExecutionTime=U.proto.NetworkGetExecutionTimeQuery.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),GetByKeyQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.key=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.key&&Object.hasOwnProperty.call(t,"key")&&U.proto.Key.encode(t.key,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.GetByKeyQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.key=U.proto.Key.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),EntityID:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.accountID=null,t.prototype.liveHash=null,t.prototype.fileID=null,t.prototype.contractID=null,Object.defineProperty(t.prototype,"entity",{get:F.oneOfGetter(e=["accountID","liveHash","fileID","contractID"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(10).fork()).ldelim(),null!=t.liveHash&&Object.hasOwnProperty.call(t,"liveHash")&&U.proto.LiveHash.encode(t.liveHash,e.uint32(18).fork()).ldelim(),null!=t.fileID&&Object.hasOwnProperty.call(t,"fileID")&&U.proto.FileID.encode(t.fileID,e.uint32(26).fork()).ldelim(),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(34).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.EntityID;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 2:F.liveHash=U.proto.LiveHash.decode(t,t.uint32());break;case 3:F.fileID=U.proto.FileID.decode(t,t.uint32());break;case 4:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),GetByKeyResponse:function(){function t(t){if(this.entities=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.entities=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.entities&&t.entities.length)for(var Q=0;Q<t.entities.length;++Q)U.proto.EntityID.encode(t.entities[Q],e.uint32(18).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.GetByKeyResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.entities&&F.entities.length||(F.entities=[]),F.entities.push(U.proto.EntityID.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),GetBySolidityIDQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.solidityID="",t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.solidityID&&Object.hasOwnProperty.call(t,"solidityID")&&e.uint32(18).string(t.solidityID),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.GetBySolidityIDQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.solidityID=t.string();break;default:t.skipType(7&Q)}return F},t}(),GetBySolidityIDResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.accountID=null,t.prototype.fileID=null,t.prototype.contractID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(18).fork()).ldelim(),null!=t.fileID&&Object.hasOwnProperty.call(t,"fileID")&&U.proto.FileID.encode(t.fileID,e.uint32(26).fork()).ldelim(),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(34).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.GetBySolidityIDResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.fileID=U.proto.FileID.decode(t,t.uint32());break;case 4:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ContractLoginfo:function(){function t(t){if(this.topic=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.contractID=null,t.prototype.bloom=F.newBuffer([]),t.prototype.topic=F.emptyArray,t.prototype.data=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(10).fork()).ldelim(),null!=t.bloom&&Object.hasOwnProperty.call(t,"bloom")&&e.uint32(18).bytes(t.bloom),null!=t.topic&&t.topic.length)for(var Q=0;Q<t.topic.length;++Q)e.uint32(26).bytes(t.topic[Q]);return null!=t.data&&Object.hasOwnProperty.call(t,"data")&&e.uint32(34).bytes(t.data),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractLoginfo;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;case 2:F.bloom=t.bytes();break;case 3:F.topic&&F.topic.length||(F.topic=[]),F.topic.push(t.bytes());break;case 4:F.data=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),ContractFunctionResult:function(){function t(t){if(this.logInfo=[],this.createdContractIDs=[],this.stateChanges=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.contractID=null,t.prototype.contractCallResult=F.newBuffer([]),t.prototype.errorMessage="",t.prototype.bloom=F.newBuffer([]),t.prototype.gasUsed=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.logInfo=F.emptyArray,t.prototype.createdContractIDs=F.emptyArray,t.prototype.stateChanges=F.emptyArray,t.prototype.evmAddress=null,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(10).fork()).ldelim(),null!=t.contractCallResult&&Object.hasOwnProperty.call(t,"contractCallResult")&&e.uint32(18).bytes(t.contractCallResult),null!=t.errorMessage&&Object.hasOwnProperty.call(t,"errorMessage")&&e.uint32(26).string(t.errorMessage),null!=t.bloom&&Object.hasOwnProperty.call(t,"bloom")&&e.uint32(34).bytes(t.bloom),null!=t.gasUsed&&Object.hasOwnProperty.call(t,"gasUsed")&&e.uint32(40).uint64(t.gasUsed),null!=t.logInfo&&t.logInfo.length)for(var Q=0;Q<t.logInfo.length;++Q)U.proto.ContractLoginfo.encode(t.logInfo[Q],e.uint32(50).fork()).ldelim();if(null!=t.createdContractIDs&&t.createdContractIDs.length)for(Q=0;Q<t.createdContractIDs.length;++Q)U.proto.ContractID.encode(t.createdContractIDs[Q],e.uint32(58).fork()).ldelim();if(null!=t.stateChanges&&t.stateChanges.length)for(Q=0;Q<t.stateChanges.length;++Q)U.proto.ContractStateChange.encode(t.stateChanges[Q],e.uint32(66).fork()).ldelim();return null!=t.evmAddress&&Object.hasOwnProperty.call(t,"evmAddress")&&U.google.protobuf.BytesValue.encode(t.evmAddress,e.uint32(74).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractFunctionResult;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;case 2:F.contractCallResult=t.bytes();break;case 3:F.errorMessage=t.string();break;case 4:F.bloom=t.bytes();break;case 5:F.gasUsed=t.uint64();break;case 6:F.logInfo&&F.logInfo.length||(F.logInfo=[]),F.logInfo.push(U.proto.ContractLoginfo.decode(t,t.uint32()));break;case 7:F.createdContractIDs&&F.createdContractIDs.length||(F.createdContractIDs=[]),F.createdContractIDs.push(U.proto.ContractID.decode(t,t.uint32()));break;case 8:F.stateChanges&&F.stateChanges.length||(F.stateChanges=[]),F.stateChanges.push(U.proto.ContractStateChange.decode(t,t.uint32()));break;case 9:F.evmAddress=U.google.protobuf.BytesValue.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ContractCallLocalQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.contractID=null,t.prototype.gas=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.functionParameters=F.newBuffer([]),t.prototype.maxResultSize=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(18).fork()).ldelim(),null!=t.gas&&Object.hasOwnProperty.call(t,"gas")&&e.uint32(24).int64(t.gas),null!=t.functionParameters&&Object.hasOwnProperty.call(t,"functionParameters")&&e.uint32(34).bytes(t.functionParameters),null!=t.maxResultSize&&Object.hasOwnProperty.call(t,"maxResultSize")&&e.uint32(40).int64(t.maxResultSize),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractCallLocalQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;case 3:F.gas=t.int64();break;case 4:F.functionParameters=t.bytes();break;case 5:F.maxResultSize=t.int64();break;default:t.skipType(7&Q)}return F},t}(),ContractCallLocalResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.functionResult=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.functionResult&&Object.hasOwnProperty.call(t,"functionResult")&&U.proto.ContractFunctionResult.encode(t.functionResult,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractCallLocalResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.functionResult=U.proto.ContractFunctionResult.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ContractStateChange:function(){function t(t){if(this.storageChanges=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.contractID=null,t.prototype.storageChanges=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(10).fork()).ldelim(),null!=t.storageChanges&&t.storageChanges.length)for(var Q=0;Q<t.storageChanges.length;++Q)U.proto.StorageChange.encode(t.storageChanges[Q],e.uint32(18).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractStateChange;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;case 2:F.storageChanges&&F.storageChanges.length||(F.storageChanges=[]),F.storageChanges.push(U.proto.StorageChange.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),StorageChange:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.slot=F.newBuffer([]),t.prototype.valueRead=F.newBuffer([]),t.prototype.valueWritten=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.slot&&Object.hasOwnProperty.call(t,"slot")&&e.uint32(10).bytes(t.slot),null!=t.valueRead&&Object.hasOwnProperty.call(t,"valueRead")&&e.uint32(18).bytes(t.valueRead),null!=t.valueWritten&&Object.hasOwnProperty.call(t,"valueWritten")&&U.google.protobuf.BytesValue.encode(t.valueWritten,e.uint32(26).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.StorageChange;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.slot=t.bytes();break;case 2:F.valueRead=t.bytes();break;case 3:F.valueWritten=U.google.protobuf.BytesValue.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ContractGetInfoQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.contractID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractGetInfoQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ContractGetInfoResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.contractInfo=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.contractInfo&&Object.hasOwnProperty.call(t,"contractInfo")&&U.proto.ContractGetInfoResponse.ContractInfo.encode(t.contractInfo,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractGetInfoResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.contractInfo=U.proto.ContractGetInfoResponse.ContractInfo.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t.ContractInfo=function(){function t(t){if(this.tokenRelationships=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.contractID=null,t.prototype.accountID=null,t.prototype.contractAccountID="",t.prototype.adminKey=null,t.prototype.expirationTime=null,t.prototype.autoRenewPeriod=null,t.prototype.storage=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.memo="",t.prototype.balance=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.deleted=!1,t.prototype.tokenRelationships=F.emptyArray,t.prototype.ledgerId=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(10).fork()).ldelim(),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(18).fork()).ldelim(),null!=t.contractAccountID&&Object.hasOwnProperty.call(t,"contractAccountID")&&e.uint32(26).string(t.contractAccountID),null!=t.adminKey&&Object.hasOwnProperty.call(t,"adminKey")&&U.proto.Key.encode(t.adminKey,e.uint32(34).fork()).ldelim(),null!=t.expirationTime&&Object.hasOwnProperty.call(t,"expirationTime")&&U.proto.Timestamp.encode(t.expirationTime,e.uint32(42).fork()).ldelim(),null!=t.autoRenewPeriod&&Object.hasOwnProperty.call(t,"autoRenewPeriod")&&U.proto.Duration.encode(t.autoRenewPeriod,e.uint32(50).fork()).ldelim(),null!=t.storage&&Object.hasOwnProperty.call(t,"storage")&&e.uint32(56).int64(t.storage),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(66).string(t.memo),null!=t.balance&&Object.hasOwnProperty.call(t,"balance")&&e.uint32(72).uint64(t.balance),null!=t.deleted&&Object.hasOwnProperty.call(t,"deleted")&&e.uint32(80).bool(t.deleted),null!=t.tokenRelationships&&t.tokenRelationships.length)for(var Q=0;Q<t.tokenRelationships.length;++Q)U.proto.TokenRelationship.encode(t.tokenRelationships[Q],e.uint32(90).fork()).ldelim();return null!=t.ledgerId&&Object.hasOwnProperty.call(t,"ledgerId")&&e.uint32(98).bytes(t.ledgerId),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractGetInfoResponse.ContractInfo;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;case 2:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.contractAccountID=t.string();break;case 4:F.adminKey=U.proto.Key.decode(t,t.uint32());break;case 5:F.expirationTime=U.proto.Timestamp.decode(t,t.uint32());break;case 6:F.autoRenewPeriod=U.proto.Duration.decode(t,t.uint32());break;case 7:F.storage=t.int64();break;case 8:F.memo=t.string();break;case 9:F.balance=t.uint64();break;case 10:F.deleted=t.bool();break;case 11:F.tokenRelationships&&F.tokenRelationships.length||(F.tokenRelationships=[]),F.tokenRelationships.push(U.proto.TokenRelationship.decode(t,t.uint32()));break;case 12:F.ledgerId=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),t}(),ContractGetBytecodeQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.contractID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractGetBytecodeQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ContractGetBytecodeResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.bytecode=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.bytecode&&Object.hasOwnProperty.call(t,"bytecode")&&e.uint32(50).bytes(t.bytecode),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractGetBytecodeResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 6:F.bytecode=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),ContractGetRecordsQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.contractID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractGetRecordsQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ContractGetRecordsResponse:function(){function t(t){if(this.records=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.contractID=null,t.prototype.records=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(18).fork()).ldelim(),null!=t.records&&t.records.length)for(var Q=0;Q<t.records.length;++Q)U.proto.TransactionRecord.encode(t.records[Q],e.uint32(26).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ContractGetRecordsResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;case 3:F.records&&F.records.length||(F.records=[]),F.records.push(U.proto.TransactionRecord.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),TransactionRecord:function(){function t(t){if(this.tokenTransferLists=[],this.assessedCustomFees=[],this.automaticTokenAssociations=[],this.cryptoAdjustments=[],this.nftAdjustments=[],this.tokenAdjustments=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.receipt=null,t.prototype.transactionHash=F.newBuffer([]),t.prototype.consensusTimestamp=null,t.prototype.transactionID=null,t.prototype.memo="",t.prototype.transactionFee=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.contractCallResult=null,t.prototype.contractCreateResult=null,t.prototype.transferList=null,t.prototype.tokenTransferLists=F.emptyArray,t.prototype.scheduleRef=null,t.prototype.assessedCustomFees=F.emptyArray,t.prototype.automaticTokenAssociations=F.emptyArray,t.prototype.parentConsensusTimestamp=null,t.prototype.alias=F.newBuffer([]),t.prototype.cryptoAdjustments=F.emptyArray,t.prototype.nftAdjustments=F.emptyArray,t.prototype.tokenAdjustments=F.emptyArray,Object.defineProperty(t.prototype,"body",{get:F.oneOfGetter(e=["contractCallResult","contractCreateResult"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.receipt&&Object.hasOwnProperty.call(t,"receipt")&&U.proto.TransactionReceipt.encode(t.receipt,e.uint32(10).fork()).ldelim(),null!=t.transactionHash&&Object.hasOwnProperty.call(t,"transactionHash")&&e.uint32(18).bytes(t.transactionHash),null!=t.consensusTimestamp&&Object.hasOwnProperty.call(t,"consensusTimestamp")&&U.proto.Timestamp.encode(t.consensusTimestamp,e.uint32(26).fork()).ldelim(),null!=t.transactionID&&Object.hasOwnProperty.call(t,"transactionID")&&U.proto.TransactionID.encode(t.transactionID,e.uint32(34).fork()).ldelim(),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(42).string(t.memo),null!=t.transactionFee&&Object.hasOwnProperty.call(t,"transactionFee")&&e.uint32(48).uint64(t.transactionFee),null!=t.contractCallResult&&Object.hasOwnProperty.call(t,"contractCallResult")&&U.proto.ContractFunctionResult.encode(t.contractCallResult,e.uint32(58).fork()).ldelim(),null!=t.contractCreateResult&&Object.hasOwnProperty.call(t,"contractCreateResult")&&U.proto.ContractFunctionResult.encode(t.contractCreateResult,e.uint32(66).fork()).ldelim(),null!=t.transferList&&Object.hasOwnProperty.call(t,"transferList")&&U.proto.TransferList.encode(t.transferList,e.uint32(82).fork()).ldelim(),null!=t.tokenTransferLists&&t.tokenTransferLists.length)for(var Q=0;Q<t.tokenTransferLists.length;++Q)U.proto.TokenTransferList.encode(t.tokenTransferLists[Q],e.uint32(90).fork()).ldelim();if(null!=t.scheduleRef&&Object.hasOwnProperty.call(t,"scheduleRef")&&U.proto.ScheduleID.encode(t.scheduleRef,e.uint32(98).fork()).ldelim(),null!=t.assessedCustomFees&&t.assessedCustomFees.length)for(Q=0;Q<t.assessedCustomFees.length;++Q)U.proto.AssessedCustomFee.encode(t.assessedCustomFees[Q],e.uint32(106).fork()).ldelim();if(null!=t.automaticTokenAssociations&&t.automaticTokenAssociations.length)for(Q=0;Q<t.automaticTokenAssociations.length;++Q)U.proto.TokenAssociation.encode(t.automaticTokenAssociations[Q],e.uint32(114).fork()).ldelim();if(null!=t.parentConsensusTimestamp&&Object.hasOwnProperty.call(t,"parentConsensusTimestamp")&&U.proto.Timestamp.encode(t.parentConsensusTimestamp,e.uint32(122).fork()).ldelim(),null!=t.alias&&Object.hasOwnProperty.call(t,"alias")&&e.uint32(130).bytes(t.alias),null!=t.cryptoAdjustments&&t.cryptoAdjustments.length)for(Q=0;Q<t.cryptoAdjustments.length;++Q)U.proto.CryptoAllowance.encode(t.cryptoAdjustments[Q],e.uint32(138).fork()).ldelim();if(null!=t.nftAdjustments&&t.nftAdjustments.length)for(Q=0;Q<t.nftAdjustments.length;++Q)U.proto.NftAllowance.encode(t.nftAdjustments[Q],e.uint32(146).fork()).ldelim();if(null!=t.tokenAdjustments&&t.tokenAdjustments.length)for(Q=0;Q<t.tokenAdjustments.length;++Q)U.proto.TokenAllowance.encode(t.tokenAdjustments[Q],e.uint32(154).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TransactionRecord;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.receipt=U.proto.TransactionReceipt.decode(t,t.uint32());break;case 2:F.transactionHash=t.bytes();break;case 3:F.consensusTimestamp=U.proto.Timestamp.decode(t,t.uint32());break;case 4:F.transactionID=U.proto.TransactionID.decode(t,t.uint32());break;case 5:F.memo=t.string();break;case 6:F.transactionFee=t.uint64();break;case 7:F.contractCallResult=U.proto.ContractFunctionResult.decode(t,t.uint32());break;case 8:F.contractCreateResult=U.proto.ContractFunctionResult.decode(t,t.uint32());break;case 10:F.transferList=U.proto.TransferList.decode(t,t.uint32());break;case 11:F.tokenTransferLists&&F.tokenTransferLists.length||(F.tokenTransferLists=[]),F.tokenTransferLists.push(U.proto.TokenTransferList.decode(t,t.uint32()));break;case 12:F.scheduleRef=U.proto.ScheduleID.decode(t,t.uint32());break;case 13:F.assessedCustomFees&&F.assessedCustomFees.length||(F.assessedCustomFees=[]),F.assessedCustomFees.push(U.proto.AssessedCustomFee.decode(t,t.uint32()));break;case 14:F.automaticTokenAssociations&&F.automaticTokenAssociations.length||(F.automaticTokenAssociations=[]),F.automaticTokenAssociations.push(U.proto.TokenAssociation.decode(t,t.uint32()));break;case 15:F.parentConsensusTimestamp=U.proto.Timestamp.decode(t,t.uint32());break;case 16:F.alias=t.bytes();break;case 17:F.cryptoAdjustments&&F.cryptoAdjustments.length||(F.cryptoAdjustments=[]),F.cryptoAdjustments.push(U.proto.CryptoAllowance.decode(t,t.uint32()));break;case 18:F.nftAdjustments&&F.nftAdjustments.length||(F.nftAdjustments=[]),F.nftAdjustments.push(U.proto.NftAllowance.decode(t,t.uint32()));break;case 19:F.tokenAdjustments&&F.tokenAdjustments.length||(F.tokenAdjustments=[]),F.tokenAdjustments.push(U.proto.TokenAllowance.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),TransactionReceipt:function(){function t(t){if(this.serialNumbers=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.status=0,t.prototype.accountID=null,t.prototype.fileID=null,t.prototype.contractID=null,t.prototype.exchangeRate=null,t.prototype.topicID=null,t.prototype.topicSequenceNumber=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.topicRunningHash=F.newBuffer([]),t.prototype.topicRunningHashVersion=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.tokenID=null,t.prototype.newTotalSupply=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.scheduleID=null,t.prototype.scheduledTransactionID=null,t.prototype.serialNumbers=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.status&&Object.hasOwnProperty.call(t,"status")&&e.uint32(8).int32(t.status),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(18).fork()).ldelim(),null!=t.fileID&&Object.hasOwnProperty.call(t,"fileID")&&U.proto.FileID.encode(t.fileID,e.uint32(26).fork()).ldelim(),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(34).fork()).ldelim(),null!=t.exchangeRate&&Object.hasOwnProperty.call(t,"exchangeRate")&&U.proto.ExchangeRateSet.encode(t.exchangeRate,e.uint32(42).fork()).ldelim(),null!=t.topicID&&Object.hasOwnProperty.call(t,"topicID")&&U.proto.TopicID.encode(t.topicID,e.uint32(50).fork()).ldelim(),null!=t.topicSequenceNumber&&Object.hasOwnProperty.call(t,"topicSequenceNumber")&&e.uint32(56).uint64(t.topicSequenceNumber),null!=t.topicRunningHash&&Object.hasOwnProperty.call(t,"topicRunningHash")&&e.uint32(66).bytes(t.topicRunningHash),null!=t.topicRunningHashVersion&&Object.hasOwnProperty.call(t,"topicRunningHashVersion")&&e.uint32(72).uint64(t.topicRunningHashVersion),null!=t.tokenID&&Object.hasOwnProperty.call(t,"tokenID")&&U.proto.TokenID.encode(t.tokenID,e.uint32(82).fork()).ldelim(),null!=t.newTotalSupply&&Object.hasOwnProperty.call(t,"newTotalSupply")&&e.uint32(88).uint64(t.newTotalSupply),null!=t.scheduleID&&Object.hasOwnProperty.call(t,"scheduleID")&&U.proto.ScheduleID.encode(t.scheduleID,e.uint32(98).fork()).ldelim(),null!=t.scheduledTransactionID&&Object.hasOwnProperty.call(t,"scheduledTransactionID")&&U.proto.TransactionID.encode(t.scheduledTransactionID,e.uint32(106).fork()).ldelim(),null!=t.serialNumbers&&t.serialNumbers.length){e.uint32(114).fork();for(var Q=0;Q<t.serialNumbers.length;++Q)e.int64(t.serialNumbers[Q]);e.ldelim()}return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TransactionReceipt;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.status=t.int32();break;case 2:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.fileID=U.proto.FileID.decode(t,t.uint32());break;case 4:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;case 5:F.exchangeRate=U.proto.ExchangeRateSet.decode(t,t.uint32());break;case 6:F.topicID=U.proto.TopicID.decode(t,t.uint32());break;case 7:F.topicSequenceNumber=t.uint64();break;case 8:F.topicRunningHash=t.bytes();break;case 9:F.topicRunningHashVersion=t.uint64();break;case 10:F.tokenID=U.proto.TokenID.decode(t,t.uint32());break;case 11:F.newTotalSupply=t.uint64();break;case 12:F.scheduleID=U.proto.ScheduleID.decode(t,t.uint32());break;case 13:F.scheduledTransactionID=U.proto.TransactionID.decode(t,t.uint32());break;case 14:if(F.serialNumbers&&F.serialNumbers.length||(F.serialNumbers=[]),2==(7&Q))for(var n=t.uint32()+t.pos;t.pos<n;)F.serialNumbers.push(t.int64());else F.serialNumbers.push(t.int64());break;default:t.skipType(7&Q)}return F},t}(),ExchangeRate:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.hbarEquiv=0,t.prototype.centEquiv=0,t.prototype.expirationTime=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.hbarEquiv&&Object.hasOwnProperty.call(t,"hbarEquiv")&&e.uint32(8).int32(t.hbarEquiv),null!=t.centEquiv&&Object.hasOwnProperty.call(t,"centEquiv")&&e.uint32(16).int32(t.centEquiv),null!=t.expirationTime&&Object.hasOwnProperty.call(t,"expirationTime")&&U.proto.TimestampSeconds.encode(t.expirationTime,e.uint32(26).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ExchangeRate;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.hbarEquiv=t.int32();break;case 2:F.centEquiv=t.int32();break;case 3:F.expirationTime=U.proto.TimestampSeconds.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ExchangeRateSet:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.currentRate=null,t.prototype.nextRate=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.currentRate&&Object.hasOwnProperty.call(t,"currentRate")&&U.proto.ExchangeRate.encode(t.currentRate,e.uint32(10).fork()).ldelim(),null!=t.nextRate&&Object.hasOwnProperty.call(t,"nextRate")&&U.proto.ExchangeRate.encode(t.nextRate,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ExchangeRateSet;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.currentRate=U.proto.ExchangeRate.decode(t,t.uint32());break;case 2:F.nextRate=U.proto.ExchangeRate.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),CryptoGetAccountBalanceQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.header=null,t.prototype.accountID=null,t.prototype.contractID=null,Object.defineProperty(t.prototype,"balanceSource",{get:F.oneOfGetter(e=["accountID","contractID"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(18).fork()).ldelim(),null!=t.contractID&&Object.hasOwnProperty.call(t,"contractID")&&U.proto.ContractID.encode(t.contractID,e.uint32(26).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoGetAccountBalanceQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.contractID=U.proto.ContractID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),CryptoGetAccountBalanceResponse:function(){function t(t){if(this.tokenBalances=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.accountID=null,t.prototype.balance=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.tokenBalances=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(18).fork()).ldelim(),null!=t.balance&&Object.hasOwnProperty.call(t,"balance")&&e.uint32(24).uint64(t.balance),null!=t.tokenBalances&&t.tokenBalances.length)for(var Q=0;Q<t.tokenBalances.length;++Q)U.proto.TokenBalance.encode(t.tokenBalances[Q],e.uint32(34).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoGetAccountBalanceResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.balance=t.uint64();break;case 4:F.tokenBalances&&F.tokenBalances.length||(F.tokenBalances=[]),F.tokenBalances.push(U.proto.TokenBalance.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),CryptoGetAccountRecordsQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.accountID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoGetAccountRecordsQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),CryptoGetAccountRecordsResponse:function(){function t(t){if(this.records=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.accountID=null,t.prototype.records=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(18).fork()).ldelim(),null!=t.records&&t.records.length)for(var Q=0;Q<t.records.length;++Q)U.proto.TransactionRecord.encode(t.records[Q],e.uint32(26).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoGetAccountRecordsResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.records&&F.records.length||(F.records=[]),F.records.push(U.proto.TransactionRecord.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),CryptoGetInfoQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.accountID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoGetInfoQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),CryptoGetInfoResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.accountInfo=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.accountInfo&&Object.hasOwnProperty.call(t,"accountInfo")&&U.proto.CryptoGetInfoResponse.AccountInfo.encode(t.accountInfo,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoGetInfoResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.accountInfo=U.proto.CryptoGetInfoResponse.AccountInfo.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t.AccountInfo=function(){function t(t){if(this.liveHashes=[],this.tokenRelationships=[],this.cryptoAllowances=[],this.nftAllowances=[],this.tokenAllowances=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.accountID=null,t.prototype.contractAccountID="",t.prototype.deleted=!1,t.prototype.proxyAccountID=null,t.prototype.proxyReceived=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.key=null,t.prototype.balance=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.generateSendRecordThreshold=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.generateReceiveRecordThreshold=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.receiverSigRequired=!1,t.prototype.expirationTime=null,t.prototype.autoRenewPeriod=null,t.prototype.liveHashes=F.emptyArray,t.prototype.tokenRelationships=F.emptyArray,t.prototype.memo="",t.prototype.ownedNfts=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.maxAutomaticTokenAssociations=0,t.prototype.alias=F.newBuffer([]),t.prototype.ledgerId=F.newBuffer([]),t.prototype.cryptoAllowances=F.emptyArray,t.prototype.nftAllowances=F.emptyArray,t.prototype.tokenAllowances=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(10).fork()).ldelim(),null!=t.contractAccountID&&Object.hasOwnProperty.call(t,"contractAccountID")&&e.uint32(18).string(t.contractAccountID),null!=t.deleted&&Object.hasOwnProperty.call(t,"deleted")&&e.uint32(24).bool(t.deleted),null!=t.proxyAccountID&&Object.hasOwnProperty.call(t,"proxyAccountID")&&U.proto.AccountID.encode(t.proxyAccountID,e.uint32(34).fork()).ldelim(),null!=t.proxyReceived&&Object.hasOwnProperty.call(t,"proxyReceived")&&e.uint32(48).int64(t.proxyReceived),null!=t.key&&Object.hasOwnProperty.call(t,"key")&&U.proto.Key.encode(t.key,e.uint32(58).fork()).ldelim(),null!=t.balance&&Object.hasOwnProperty.call(t,"balance")&&e.uint32(64).uint64(t.balance),null!=t.generateSendRecordThreshold&&Object.hasOwnProperty.call(t,"generateSendRecordThreshold")&&e.uint32(72).uint64(t.generateSendRecordThreshold),null!=t.generateReceiveRecordThreshold&&Object.hasOwnProperty.call(t,"generateReceiveRecordThreshold")&&e.uint32(80).uint64(t.generateReceiveRecordThreshold),null!=t.receiverSigRequired&&Object.hasOwnProperty.call(t,"receiverSigRequired")&&e.uint32(88).bool(t.receiverSigRequired),null!=t.expirationTime&&Object.hasOwnProperty.call(t,"expirationTime")&&U.proto.Timestamp.encode(t.expirationTime,e.uint32(98).fork()).ldelim(),null!=t.autoRenewPeriod&&Object.hasOwnProperty.call(t,"autoRenewPeriod")&&U.proto.Duration.encode(t.autoRenewPeriod,e.uint32(106).fork()).ldelim(),null!=t.liveHashes&&t.liveHashes.length)for(var Q=0;Q<t.liveHashes.length;++Q)U.proto.LiveHash.encode(t.liveHashes[Q],e.uint32(114).fork()).ldelim();if(null!=t.tokenRelationships&&t.tokenRelationships.length)for(Q=0;Q<t.tokenRelationships.length;++Q)U.proto.TokenRelationship.encode(t.tokenRelationships[Q],e.uint32(122).fork()).ldelim();if(null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(130).string(t.memo),null!=t.ownedNfts&&Object.hasOwnProperty.call(t,"ownedNfts")&&e.uint32(136).int64(t.ownedNfts),null!=t.maxAutomaticTokenAssociations&&Object.hasOwnProperty.call(t,"maxAutomaticTokenAssociations")&&e.uint32(144).int32(t.maxAutomaticTokenAssociations),null!=t.alias&&Object.hasOwnProperty.call(t,"alias")&&e.uint32(154).bytes(t.alias),null!=t.ledgerId&&Object.hasOwnProperty.call(t,"ledgerId")&&e.uint32(162).bytes(t.ledgerId),null!=t.cryptoAllowances&&t.cryptoAllowances.length)for(Q=0;Q<t.cryptoAllowances.length;++Q)U.proto.CryptoAllowance.encode(t.cryptoAllowances[Q],e.uint32(170).fork()).ldelim();if(null!=t.nftAllowances&&t.nftAllowances.length)for(Q=0;Q<t.nftAllowances.length;++Q)U.proto.NftAllowance.encode(t.nftAllowances[Q],e.uint32(178).fork()).ldelim();if(null!=t.tokenAllowances&&t.tokenAllowances.length)for(Q=0;Q<t.tokenAllowances.length;++Q)U.proto.TokenAllowance.encode(t.tokenAllowances[Q],e.uint32(186).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoGetInfoResponse.AccountInfo;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 2:F.contractAccountID=t.string();break;case 3:F.deleted=t.bool();break;case 4:F.proxyAccountID=U.proto.AccountID.decode(t,t.uint32());break;case 6:F.proxyReceived=t.int64();break;case 7:F.key=U.proto.Key.decode(t,t.uint32());break;case 8:F.balance=t.uint64();break;case 9:F.generateSendRecordThreshold=t.uint64();break;case 10:F.generateReceiveRecordThreshold=t.uint64();break;case 11:F.receiverSigRequired=t.bool();break;case 12:F.expirationTime=U.proto.Timestamp.decode(t,t.uint32());break;case 13:F.autoRenewPeriod=U.proto.Duration.decode(t,t.uint32());break;case 14:F.liveHashes&&F.liveHashes.length||(F.liveHashes=[]),F.liveHashes.push(U.proto.LiveHash.decode(t,t.uint32()));break;case 15:F.tokenRelationships&&F.tokenRelationships.length||(F.tokenRelationships=[]),F.tokenRelationships.push(U.proto.TokenRelationship.decode(t,t.uint32()));break;case 16:F.memo=t.string();break;case 17:F.ownedNfts=t.int64();break;case 18:F.maxAutomaticTokenAssociations=t.int32();break;case 19:F.alias=t.bytes();break;case 20:F.ledgerId=t.bytes();break;case 21:F.cryptoAllowances&&F.cryptoAllowances.length||(F.cryptoAllowances=[]),F.cryptoAllowances.push(U.proto.CryptoAllowance.decode(t,t.uint32()));break;case 22:F.nftAllowances&&F.nftAllowances.length||(F.nftAllowances=[]),F.nftAllowances.push(U.proto.NftAllowance.decode(t,t.uint32()));break;case 23:F.tokenAllowances&&F.tokenAllowances.length||(F.tokenAllowances=[]),F.tokenAllowances.push(U.proto.TokenAllowance.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),t}(),CryptoGetLiveHashQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.accountID=null,t.prototype.hash=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(18).fork()).ldelim(),null!=t.hash&&Object.hasOwnProperty.call(t,"hash")&&e.uint32(26).bytes(t.hash),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoGetLiveHashQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.hash=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),CryptoGetLiveHashResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.liveHash=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.liveHash&&Object.hasOwnProperty.call(t,"liveHash")&&U.proto.LiveHash.encode(t.liveHash,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoGetLiveHashResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.liveHash=U.proto.LiveHash.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),CryptoGetStakersQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.accountID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoGetStakersQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ProxyStaker:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.accountID=null,t.prototype.amount=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(10).fork()).ldelim(),null!=t.amount&&Object.hasOwnProperty.call(t,"amount")&&e.uint32(16).int64(t.amount),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ProxyStaker;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 2:F.amount=t.int64();break;default:t.skipType(7&Q)}return F},t}(),AllProxyStakers:function(){function t(t){if(this.proxyStaker=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.accountID=null,t.prototype.proxyStaker=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(10).fork()).ldelim(),null!=t.proxyStaker&&t.proxyStaker.length)for(var Q=0;Q<t.proxyStaker.length;++Q)U.proto.ProxyStaker.encode(t.proxyStaker[Q],e.uint32(18).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.AllProxyStakers;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 2:F.proxyStaker&&F.proxyStaker.length||(F.proxyStaker=[]),F.proxyStaker.push(U.proto.ProxyStaker.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),CryptoGetStakersResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.stakers=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.stakers&&Object.hasOwnProperty.call(t,"stakers")&&U.proto.AllProxyStakers.encode(t.stakers,e.uint32(26).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.CryptoGetStakersResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 3:F.stakers=U.proto.AllProxyStakers.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),FileGetContentsQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.fileID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.fileID&&Object.hasOwnProperty.call(t,"fileID")&&U.proto.FileID.encode(t.fileID,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FileGetContentsQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.fileID=U.proto.FileID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),FileGetContentsResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.fileContents=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.fileContents&&Object.hasOwnProperty.call(t,"fileContents")&&U.proto.FileGetContentsResponse.FileContents.encode(t.fileContents,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FileGetContentsResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.fileContents=U.proto.FileGetContentsResponse.FileContents.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t.FileContents=function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.fileID=null,t.prototype.contents=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.fileID&&Object.hasOwnProperty.call(t,"fileID")&&U.proto.FileID.encode(t.fileID,e.uint32(10).fork()).ldelim(),null!=t.contents&&Object.hasOwnProperty.call(t,"contents")&&e.uint32(18).bytes(t.contents),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FileGetContentsResponse.FileContents;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.fileID=U.proto.FileID.decode(t,t.uint32());break;case 2:F.contents=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),t}(),FileGetInfoQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.fileID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.fileID&&Object.hasOwnProperty.call(t,"fileID")&&U.proto.FileID.encode(t.fileID,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FileGetInfoQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.fileID=U.proto.FileID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),FileGetInfoResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.fileInfo=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.fileInfo&&Object.hasOwnProperty.call(t,"fileInfo")&&U.proto.FileGetInfoResponse.FileInfo.encode(t.fileInfo,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FileGetInfoResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.fileInfo=U.proto.FileGetInfoResponse.FileInfo.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t.FileInfo=function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.fileID=null,t.prototype.size=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.expirationTime=null,t.prototype.deleted=!1,t.prototype.keys=null,t.prototype.memo="",t.prototype.ledgerId=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.fileID&&Object.hasOwnProperty.call(t,"fileID")&&U.proto.FileID.encode(t.fileID,e.uint32(10).fork()).ldelim(),null!=t.size&&Object.hasOwnProperty.call(t,"size")&&e.uint32(16).int64(t.size),null!=t.expirationTime&&Object.hasOwnProperty.call(t,"expirationTime")&&U.proto.Timestamp.encode(t.expirationTime,e.uint32(26).fork()).ldelim(),null!=t.deleted&&Object.hasOwnProperty.call(t,"deleted")&&e.uint32(32).bool(t.deleted),null!=t.keys&&Object.hasOwnProperty.call(t,"keys")&&U.proto.KeyList.encode(t.keys,e.uint32(42).fork()).ldelim(),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(50).string(t.memo),null!=t.ledgerId&&Object.hasOwnProperty.call(t,"ledgerId")&&e.uint32(58).bytes(t.ledgerId),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FileGetInfoResponse.FileInfo;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.fileID=U.proto.FileID.decode(t,t.uint32());break;case 2:F.size=t.int64();break;case 3:F.expirationTime=U.proto.Timestamp.decode(t,t.uint32());break;case 4:F.deleted=t.bool();break;case 5:F.keys=U.proto.KeyList.decode(t,t.uint32());break;case 6:F.memo=t.string();break;case 7:F.ledgerId=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),t}(),TransactionGetReceiptQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.transactionID=null,t.prototype.includeDuplicates=!1,t.prototype.includeChildReceipts=!1,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.transactionID&&Object.hasOwnProperty.call(t,"transactionID")&&U.proto.TransactionID.encode(t.transactionID,e.uint32(18).fork()).ldelim(),null!=t.includeDuplicates&&Object.hasOwnProperty.call(t,"includeDuplicates")&&e.uint32(24).bool(t.includeDuplicates),null!=t.includeChildReceipts&&Object.hasOwnProperty.call(t,"includeChildReceipts")&&e.uint32(32).bool(t.includeChildReceipts),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TransactionGetReceiptQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.transactionID=U.proto.TransactionID.decode(t,t.uint32());break;case 3:F.includeDuplicates=t.bool();break;case 4:F.includeChildReceipts=t.bool();break;default:t.skipType(7&Q)}return F},t}(),TransactionGetReceiptResponse:function(){function t(t){if(this.duplicateTransactionReceipts=[],this.childTransactionReceipts=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.receipt=null,t.prototype.duplicateTransactionReceipts=F.emptyArray,t.prototype.childTransactionReceipts=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.receipt&&Object.hasOwnProperty.call(t,"receipt")&&U.proto.TransactionReceipt.encode(t.receipt,e.uint32(18).fork()).ldelim(),null!=t.duplicateTransactionReceipts&&t.duplicateTransactionReceipts.length)for(var Q=0;Q<t.duplicateTransactionReceipts.length;++Q)U.proto.TransactionReceipt.encode(t.duplicateTransactionReceipts[Q],e.uint32(34).fork()).ldelim();if(null!=t.childTransactionReceipts&&t.childTransactionReceipts.length)for(Q=0;Q<t.childTransactionReceipts.length;++Q)U.proto.TransactionReceipt.encode(t.childTransactionReceipts[Q],e.uint32(42).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TransactionGetReceiptResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.receipt=U.proto.TransactionReceipt.decode(t,t.uint32());break;case 4:F.duplicateTransactionReceipts&&F.duplicateTransactionReceipts.length||(F.duplicateTransactionReceipts=[]),F.duplicateTransactionReceipts.push(U.proto.TransactionReceipt.decode(t,t.uint32()));break;case 5:F.childTransactionReceipts&&F.childTransactionReceipts.length||(F.childTransactionReceipts=[]),F.childTransactionReceipts.push(U.proto.TransactionReceipt.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),TransactionGetRecordQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.transactionID=null,t.prototype.includeDuplicates=!1,t.prototype.includeChildRecords=!1,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.transactionID&&Object.hasOwnProperty.call(t,"transactionID")&&U.proto.TransactionID.encode(t.transactionID,e.uint32(18).fork()).ldelim(),null!=t.includeDuplicates&&Object.hasOwnProperty.call(t,"includeDuplicates")&&e.uint32(24).bool(t.includeDuplicates),null!=t.includeChildRecords&&Object.hasOwnProperty.call(t,"includeChildRecords")&&e.uint32(32).bool(t.includeChildRecords),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TransactionGetRecordQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.transactionID=U.proto.TransactionID.decode(t,t.uint32());break;case 3:F.includeDuplicates=t.bool();break;case 4:F.includeChildRecords=t.bool();break;default:t.skipType(7&Q)}return F},t}(),TransactionGetRecordResponse:function(){function t(t){if(this.duplicateTransactionRecords=[],this.childTransactionRecords=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.transactionRecord=null,t.prototype.duplicateTransactionRecords=F.emptyArray,t.prototype.childTransactionRecords=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.transactionRecord&&Object.hasOwnProperty.call(t,"transactionRecord")&&U.proto.TransactionRecord.encode(t.transactionRecord,e.uint32(26).fork()).ldelim(),null!=t.duplicateTransactionRecords&&t.duplicateTransactionRecords.length)for(var Q=0;Q<t.duplicateTransactionRecords.length;++Q)U.proto.TransactionRecord.encode(t.duplicateTransactionRecords[Q],e.uint32(34).fork()).ldelim();if(null!=t.childTransactionRecords&&t.childTransactionRecords.length)for(Q=0;Q<t.childTransactionRecords.length;++Q)U.proto.TransactionRecord.encode(t.childTransactionRecords[Q],e.uint32(42).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TransactionGetRecordResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 3:F.transactionRecord=U.proto.TransactionRecord.decode(t,t.uint32());break;case 4:F.duplicateTransactionRecords&&F.duplicateTransactionRecords.length||(F.duplicateTransactionRecords=[]),F.duplicateTransactionRecords.push(U.proto.TransactionRecord.decode(t,t.uint32()));break;case 5:F.childTransactionRecords&&F.childTransactionRecords.length||(F.childTransactionRecords=[]),F.childTransactionRecords.push(U.proto.TransactionRecord.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),TransactionGetFastRecordQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.transactionID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.transactionID&&Object.hasOwnProperty.call(t,"transactionID")&&U.proto.TransactionID.encode(t.transactionID,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TransactionGetFastRecordQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.transactionID=U.proto.TransactionID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),TransactionGetFastRecordResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.transactionRecord=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.transactionRecord&&Object.hasOwnProperty.call(t,"transactionRecord")&&U.proto.TransactionRecord.encode(t.transactionRecord,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TransactionGetFastRecordResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.transactionRecord=U.proto.TransactionRecord.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),NetworkGetVersionInfoQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.NetworkGetVersionInfoQuery;t.pos<s;)1==(Q=t.uint32())>>>3?F.header=U.proto.QueryHeader.decode(t,t.uint32()):t.skipType(7&Q);return F},t}(),NetworkGetVersionInfoResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.hapiProtoVersion=null,t.prototype.hederaServicesVersion=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.hapiProtoVersion&&Object.hasOwnProperty.call(t,"hapiProtoVersion")&&U.proto.SemanticVersion.encode(t.hapiProtoVersion,e.uint32(18).fork()).ldelim(),null!=t.hederaServicesVersion&&Object.hasOwnProperty.call(t,"hederaServicesVersion")&&U.proto.SemanticVersion.encode(t.hederaServicesVersion,e.uint32(26).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.NetworkGetVersionInfoResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.hapiProtoVersion=U.proto.SemanticVersion.decode(t,t.uint32());break;case 3:F.hederaServicesVersion=U.proto.SemanticVersion.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),NetworkGetExecutionTimeQuery:function(){function t(t){if(this.transactionIds=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.transactionIds=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.transactionIds&&t.transactionIds.length)for(var Q=0;Q<t.transactionIds.length;++Q)U.proto.TransactionID.encode(t.transactionIds[Q],e.uint32(18).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.NetworkGetExecutionTimeQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.transactionIds&&F.transactionIds.length||(F.transactionIds=[]),F.transactionIds.push(U.proto.TransactionID.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),NetworkGetExecutionTimeResponse:function(){function t(t){if(this.executionTimes=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.executionTimes=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.executionTimes&&t.executionTimes.length){e.uint32(18).fork();for(var Q=0;Q<t.executionTimes.length;++Q)e.uint64(t.executionTimes[Q]);e.ldelim()}return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.NetworkGetExecutionTimeResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:if(F.executionTimes&&F.executionTimes.length||(F.executionTimes=[]),2==(7&Q))for(var n=t.uint32()+t.pos;t.pos<n;)F.executionTimes.push(t.uint64());else F.executionTimes.push(t.uint64());break;default:t.skipType(7&Q)}return F},t}(),TokenGetInfoQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.token=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.token&&Object.hasOwnProperty.call(t,"token")&&U.proto.TokenID.encode(t.token,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenGetInfoQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.token=U.proto.TokenID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),TokenInfo:function(){function t(t){if(this.customFees=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.tokenId=null,t.prototype.name="",t.prototype.symbol="",t.prototype.decimals=0,t.prototype.totalSupply=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.treasury=null,t.prototype.adminKey=null,t.prototype.kycKey=null,t.prototype.freezeKey=null,t.prototype.wipeKey=null,t.prototype.supplyKey=null,t.prototype.defaultFreezeStatus=0,t.prototype.defaultKycStatus=0,t.prototype.deleted=!1,t.prototype.autoRenewAccount=null,t.prototype.autoRenewPeriod=null,t.prototype.expiry=null,t.prototype.memo="",t.prototype.tokenType=0,t.prototype.supplyType=0,t.prototype.maxSupply=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.feeScheduleKey=null,t.prototype.customFees=F.emptyArray,t.prototype.pauseKey=null,t.prototype.pauseStatus=0,t.prototype.ledgerId=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.tokenId&&Object.hasOwnProperty.call(t,"tokenId")&&U.proto.TokenID.encode(t.tokenId,e.uint32(10).fork()).ldelim(),null!=t.name&&Object.hasOwnProperty.call(t,"name")&&e.uint32(18).string(t.name),null!=t.symbol&&Object.hasOwnProperty.call(t,"symbol")&&e.uint32(26).string(t.symbol),null!=t.decimals&&Object.hasOwnProperty.call(t,"decimals")&&e.uint32(32).uint32(t.decimals),null!=t.totalSupply&&Object.hasOwnProperty.call(t,"totalSupply")&&e.uint32(40).uint64(t.totalSupply),null!=t.treasury&&Object.hasOwnProperty.call(t,"treasury")&&U.proto.AccountID.encode(t.treasury,e.uint32(50).fork()).ldelim(),null!=t.adminKey&&Object.hasOwnProperty.call(t,"adminKey")&&U.proto.Key.encode(t.adminKey,e.uint32(58).fork()).ldelim(),null!=t.kycKey&&Object.hasOwnProperty.call(t,"kycKey")&&U.proto.Key.encode(t.kycKey,e.uint32(66).fork()).ldelim(),null!=t.freezeKey&&Object.hasOwnProperty.call(t,"freezeKey")&&U.proto.Key.encode(t.freezeKey,e.uint32(74).fork()).ldelim(),null!=t.wipeKey&&Object.hasOwnProperty.call(t,"wipeKey")&&U.proto.Key.encode(t.wipeKey,e.uint32(82).fork()).ldelim(),null!=t.supplyKey&&Object.hasOwnProperty.call(t,"supplyKey")&&U.proto.Key.encode(t.supplyKey,e.uint32(90).fork()).ldelim(),null!=t.defaultFreezeStatus&&Object.hasOwnProperty.call(t,"defaultFreezeStatus")&&e.uint32(96).int32(t.defaultFreezeStatus),null!=t.defaultKycStatus&&Object.hasOwnProperty.call(t,"defaultKycStatus")&&e.uint32(104).int32(t.defaultKycStatus),null!=t.deleted&&Object.hasOwnProperty.call(t,"deleted")&&e.uint32(112).bool(t.deleted),null!=t.autoRenewAccount&&Object.hasOwnProperty.call(t,"autoRenewAccount")&&U.proto.AccountID.encode(t.autoRenewAccount,e.uint32(122).fork()).ldelim(),null!=t.autoRenewPeriod&&Object.hasOwnProperty.call(t,"autoRenewPeriod")&&U.proto.Duration.encode(t.autoRenewPeriod,e.uint32(130).fork()).ldelim(),null!=t.expiry&&Object.hasOwnProperty.call(t,"expiry")&&U.proto.Timestamp.encode(t.expiry,e.uint32(138).fork()).ldelim(),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(146).string(t.memo),null!=t.tokenType&&Object.hasOwnProperty.call(t,"tokenType")&&e.uint32(152).int32(t.tokenType),null!=t.supplyType&&Object.hasOwnProperty.call(t,"supplyType")&&e.uint32(160).int32(t.supplyType),null!=t.maxSupply&&Object.hasOwnProperty.call(t,"maxSupply")&&e.uint32(168).int64(t.maxSupply),null!=t.feeScheduleKey&&Object.hasOwnProperty.call(t,"feeScheduleKey")&&U.proto.Key.encode(t.feeScheduleKey,e.uint32(178).fork()).ldelim(),null!=t.customFees&&t.customFees.length)for(var Q=0;Q<t.customFees.length;++Q)U.proto.CustomFee.encode(t.customFees[Q],e.uint32(186).fork()).ldelim();return null!=t.pauseKey&&Object.hasOwnProperty.call(t,"pauseKey")&&U.proto.Key.encode(t.pauseKey,e.uint32(194).fork()).ldelim(),null!=t.pauseStatus&&Object.hasOwnProperty.call(t,"pauseStatus")&&e.uint32(200).int32(t.pauseStatus),null!=t.ledgerId&&Object.hasOwnProperty.call(t,"ledgerId")&&e.uint32(210).bytes(t.ledgerId),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenInfo;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.tokenId=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.name=t.string();break;case 3:F.symbol=t.string();break;case 4:F.decimals=t.uint32();break;case 5:F.totalSupply=t.uint64();break;case 6:F.treasury=U.proto.AccountID.decode(t,t.uint32());break;case 7:F.adminKey=U.proto.Key.decode(t,t.uint32());break;case 8:F.kycKey=U.proto.Key.decode(t,t.uint32());break;case 9:F.freezeKey=U.proto.Key.decode(t,t.uint32());break;case 10:F.wipeKey=U.proto.Key.decode(t,t.uint32());break;case 11:F.supplyKey=U.proto.Key.decode(t,t.uint32());break;case 12:F.defaultFreezeStatus=t.int32();break;case 13:F.defaultKycStatus=t.int32();break;case 14:F.deleted=t.bool();break;case 15:F.autoRenewAccount=U.proto.AccountID.decode(t,t.uint32());break;case 16:F.autoRenewPeriod=U.proto.Duration.decode(t,t.uint32());break;case 17:F.expiry=U.proto.Timestamp.decode(t,t.uint32());break;case 18:F.memo=t.string();break;case 19:F.tokenType=t.int32();break;case 20:F.supplyType=t.int32();break;case 21:F.maxSupply=t.int64();break;case 22:F.feeScheduleKey=U.proto.Key.decode(t,t.uint32());break;case 23:F.customFees&&F.customFees.length||(F.customFees=[]),F.customFees.push(U.proto.CustomFee.decode(t,t.uint32()));break;case 24:F.pauseKey=U.proto.Key.decode(t,t.uint32());break;case 25:F.pauseStatus=t.int32();break;case 26:F.ledgerId=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),TokenGetInfoResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.tokenInfo=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.tokenInfo&&Object.hasOwnProperty.call(t,"tokenInfo")&&U.proto.TokenInfo.encode(t.tokenInfo,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenGetInfoResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.tokenInfo=U.proto.TokenInfo.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ScheduleGetInfoQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.scheduleID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.scheduleID&&Object.hasOwnProperty.call(t,"scheduleID")&&U.proto.ScheduleID.encode(t.scheduleID,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ScheduleGetInfoQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.scheduleID=U.proto.ScheduleID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),ScheduleInfo:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.scheduleID=null,t.prototype.deletionTime=null,t.prototype.executionTime=null,t.prototype.expirationTime=null,t.prototype.scheduledTransactionBody=null,t.prototype.memo="",t.prototype.adminKey=null,t.prototype.signers=null,t.prototype.creatorAccountID=null,t.prototype.payerAccountID=null,t.prototype.scheduledTransactionID=null,t.prototype.ledgerId=F.newBuffer([]),Object.defineProperty(t.prototype,"data",{get:F.oneOfGetter(e=["deletionTime","executionTime"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.scheduleID&&Object.hasOwnProperty.call(t,"scheduleID")&&U.proto.ScheduleID.encode(t.scheduleID,e.uint32(10).fork()).ldelim(),null!=t.deletionTime&&Object.hasOwnProperty.call(t,"deletionTime")&&U.proto.Timestamp.encode(t.deletionTime,e.uint32(18).fork()).ldelim(),null!=t.executionTime&&Object.hasOwnProperty.call(t,"executionTime")&&U.proto.Timestamp.encode(t.executionTime,e.uint32(26).fork()).ldelim(),null!=t.expirationTime&&Object.hasOwnProperty.call(t,"expirationTime")&&U.proto.Timestamp.encode(t.expirationTime,e.uint32(34).fork()).ldelim(),null!=t.scheduledTransactionBody&&Object.hasOwnProperty.call(t,"scheduledTransactionBody")&&U.proto.SchedulableTransactionBody.encode(t.scheduledTransactionBody,e.uint32(42).fork()).ldelim(),null!=t.memo&&Object.hasOwnProperty.call(t,"memo")&&e.uint32(50).string(t.memo),null!=t.adminKey&&Object.hasOwnProperty.call(t,"adminKey")&&U.proto.Key.encode(t.adminKey,e.uint32(58).fork()).ldelim(),null!=t.signers&&Object.hasOwnProperty.call(t,"signers")&&U.proto.KeyList.encode(t.signers,e.uint32(66).fork()).ldelim(),null!=t.creatorAccountID&&Object.hasOwnProperty.call(t,"creatorAccountID")&&U.proto.AccountID.encode(t.creatorAccountID,e.uint32(74).fork()).ldelim(),null!=t.payerAccountID&&Object.hasOwnProperty.call(t,"payerAccountID")&&U.proto.AccountID.encode(t.payerAccountID,e.uint32(82).fork()).ldelim(),null!=t.scheduledTransactionID&&Object.hasOwnProperty.call(t,"scheduledTransactionID")&&U.proto.TransactionID.encode(t.scheduledTransactionID,e.uint32(90).fork()).ldelim(),null!=t.ledgerId&&Object.hasOwnProperty.call(t,"ledgerId")&&e.uint32(98).bytes(t.ledgerId),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ScheduleInfo;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.scheduleID=U.proto.ScheduleID.decode(t,t.uint32());break;case 2:F.deletionTime=U.proto.Timestamp.decode(t,t.uint32());break;case 3:F.executionTime=U.proto.Timestamp.decode(t,t.uint32());break;case 4:F.expirationTime=U.proto.Timestamp.decode(t,t.uint32());break;case 5:F.scheduledTransactionBody=U.proto.SchedulableTransactionBody.decode(t,t.uint32());break;case 6:F.memo=t.string();break;case 7:F.adminKey=U.proto.Key.decode(t,t.uint32());break;case 8:F.signers=U.proto.KeyList.decode(t,t.uint32());break;case 9:F.creatorAccountID=U.proto.AccountID.decode(t,t.uint32());break;case 10:F.payerAccountID=U.proto.AccountID.decode(t,t.uint32());break;case 11:F.scheduledTransactionID=U.proto.TransactionID.decode(t,t.uint32());break;case 12:F.ledgerId=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),ScheduleGetInfoResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.scheduleInfo=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.scheduleInfo&&Object.hasOwnProperty.call(t,"scheduleInfo")&&U.proto.ScheduleInfo.encode(t.scheduleInfo,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ScheduleGetInfoResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.scheduleInfo=U.proto.ScheduleInfo.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),TokenGetAccountNftInfosQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.accountID=null,t.prototype.start=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.end=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(18).fork()).ldelim(),null!=t.start&&Object.hasOwnProperty.call(t,"start")&&e.uint32(24).int64(t.start),null!=t.end&&Object.hasOwnProperty.call(t,"end")&&e.uint32(32).int64(t.end),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenGetAccountNftInfosQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.start=t.int64();break;case 4:F.end=t.int64();break;default:t.skipType(7&Q)}return F},t}(),TokenGetAccountNftInfosResponse:function(){function t(t){if(this.nfts=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.nfts=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.nfts&&t.nfts.length)for(var Q=0;Q<t.nfts.length;++Q)U.proto.TokenNftInfo.encode(t.nfts[Q],e.uint32(18).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenGetAccountNftInfosResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.nfts&&F.nfts.length||(F.nfts=[]),F.nfts.push(U.proto.TokenNftInfo.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),NftID:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.tokenID=null,t.prototype.serialNumber=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.tokenID&&Object.hasOwnProperty.call(t,"tokenID")&&U.proto.TokenID.encode(t.tokenID,e.uint32(10).fork()).ldelim(),null!=t.serialNumber&&Object.hasOwnProperty.call(t,"serialNumber")&&e.uint32(16).int64(t.serialNumber),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.NftID;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.tokenID=U.proto.TokenID.decode(t,t.uint32());break;case 2:F.serialNumber=t.int64();break;default:t.skipType(7&Q)}return F},t}(),TokenGetNftInfoQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.nftID=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.nftID&&Object.hasOwnProperty.call(t,"nftID")&&U.proto.NftID.encode(t.nftID,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenGetNftInfoQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.nftID=U.proto.NftID.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),TokenNftInfo:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.nftID=null,t.prototype.accountID=null,t.prototype.creationTime=null,t.prototype.metadata=F.newBuffer([]),t.prototype.ledgerId=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.nftID&&Object.hasOwnProperty.call(t,"nftID")&&U.proto.NftID.encode(t.nftID,e.uint32(10).fork()).ldelim(),null!=t.accountID&&Object.hasOwnProperty.call(t,"accountID")&&U.proto.AccountID.encode(t.accountID,e.uint32(18).fork()).ldelim(),null!=t.creationTime&&Object.hasOwnProperty.call(t,"creationTime")&&U.proto.Timestamp.encode(t.creationTime,e.uint32(26).fork()).ldelim(),null!=t.metadata&&Object.hasOwnProperty.call(t,"metadata")&&e.uint32(34).bytes(t.metadata),null!=t.ledgerId&&Object.hasOwnProperty.call(t,"ledgerId")&&e.uint32(42).bytes(t.ledgerId),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenNftInfo;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.nftID=U.proto.NftID.decode(t,t.uint32());break;case 2:F.accountID=U.proto.AccountID.decode(t,t.uint32());break;case 3:F.creationTime=U.proto.Timestamp.decode(t,t.uint32());break;case 4:F.metadata=t.bytes();break;case 5:F.ledgerId=t.bytes();break;default:t.skipType(7&Q)}return F},t}(),TokenGetNftInfoResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.nft=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.nft&&Object.hasOwnProperty.call(t,"nft")&&U.proto.TokenNftInfo.encode(t.nft,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenGetNftInfoResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.nft=U.proto.TokenNftInfo.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),TokenGetNftInfosQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.tokenID=null,t.prototype.start=F.Long?F.Long.fromBits(0,0,!1):0,t.prototype.end=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.QueryHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.tokenID&&Object.hasOwnProperty.call(t,"tokenID")&&U.proto.TokenID.encode(t.tokenID,e.uint32(18).fork()).ldelim(),null!=t.start&&Object.hasOwnProperty.call(t,"start")&&e.uint32(24).int64(t.start),null!=t.end&&Object.hasOwnProperty.call(t,"end")&&e.uint32(32).int64(t.end),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenGetNftInfosQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.QueryHeader.decode(t,t.uint32());break;case 2:F.tokenID=U.proto.TokenID.decode(t,t.uint32());break;case 3:F.start=t.int64();break;case 4:F.end=t.int64();break;default:t.skipType(7&Q)}return F},t}(),TokenGetNftInfosResponse:function(){function t(t){if(this.nfts=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.header=null,t.prototype.tokenID=null,t.prototype.nfts=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.header&&Object.hasOwnProperty.call(t,"header")&&U.proto.ResponseHeader.encode(t.header,e.uint32(10).fork()).ldelim(),null!=t.tokenID&&Object.hasOwnProperty.call(t,"tokenID")&&U.proto.TokenID.encode(t.tokenID,e.uint32(18).fork()).ldelim(),null!=t.nfts&&t.nfts.length)for(var Q=0;Q<t.nfts.length;++Q)U.proto.TokenNftInfo.encode(t.nfts[Q],e.uint32(26).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TokenGetNftInfosResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.header=U.proto.ResponseHeader.decode(t,t.uint32());break;case 2:F.tokenID=U.proto.TokenID.decode(t,t.uint32());break;case 3:F.nfts&&F.nfts.length||(F.nfts=[]),F.nfts.push(U.proto.TokenNftInfo.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),Response:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}let e;return t.prototype.getByKey=null,t.prototype.getBySolidityID=null,t.prototype.contractCallLocal=null,t.prototype.contractGetBytecodeResponse=null,t.prototype.contractGetInfo=null,t.prototype.contractGetRecordsResponse=null,t.prototype.cryptogetAccountBalance=null,t.prototype.cryptoGetAccountRecords=null,t.prototype.cryptoGetInfo=null,t.prototype.cryptoGetLiveHash=null,t.prototype.cryptoGetProxyStakers=null,t.prototype.fileGetContents=null,t.prototype.fileGetInfo=null,t.prototype.transactionGetReceipt=null,t.prototype.transactionGetRecord=null,t.prototype.transactionGetFastRecord=null,t.prototype.consensusGetTopicInfo=null,t.prototype.networkGetVersionInfo=null,t.prototype.tokenGetInfo=null,t.prototype.scheduleGetInfo=null,t.prototype.tokenGetAccountNftInfos=null,t.prototype.tokenGetNftInfo=null,t.prototype.tokenGetNftInfos=null,t.prototype.networkGetExecutionTime=null,Object.defineProperty(t.prototype,"response",{get:F.oneOfGetter(e=["getByKey","getBySolidityID","contractCallLocal","contractGetBytecodeResponse","contractGetInfo","contractGetRecordsResponse","cryptogetAccountBalance","cryptoGetAccountRecords","cryptoGetInfo","cryptoGetLiveHash","cryptoGetProxyStakers","fileGetContents","fileGetInfo","transactionGetReceipt","transactionGetRecord","transactionGetFastRecord","consensusGetTopicInfo","networkGetVersionInfo","tokenGetInfo","scheduleGetInfo","tokenGetAccountNftInfos","tokenGetNftInfo","tokenGetNftInfos","networkGetExecutionTime"]),set:F.oneOfSetter(e)}),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.getByKey&&Object.hasOwnProperty.call(t,"getByKey")&&U.proto.GetByKeyResponse.encode(t.getByKey,e.uint32(10).fork()).ldelim(),null!=t.getBySolidityID&&Object.hasOwnProperty.call(t,"getBySolidityID")&&U.proto.GetBySolidityIDResponse.encode(t.getBySolidityID,e.uint32(18).fork()).ldelim(),null!=t.contractCallLocal&&Object.hasOwnProperty.call(t,"contractCallLocal")&&U.proto.ContractCallLocalResponse.encode(t.contractCallLocal,e.uint32(26).fork()).ldelim(),null!=t.contractGetInfo&&Object.hasOwnProperty.call(t,"contractGetInfo")&&U.proto.ContractGetInfoResponse.encode(t.contractGetInfo,e.uint32(34).fork()).ldelim(),null!=t.contractGetBytecodeResponse&&Object.hasOwnProperty.call(t,"contractGetBytecodeResponse")&&U.proto.ContractGetBytecodeResponse.encode(t.contractGetBytecodeResponse,e.uint32(42).fork()).ldelim(),null!=t.contractGetRecordsResponse&&Object.hasOwnProperty.call(t,"contractGetRecordsResponse")&&U.proto.ContractGetRecordsResponse.encode(t.contractGetRecordsResponse,e.uint32(50).fork()).ldelim(),null!=t.cryptogetAccountBalance&&Object.hasOwnProperty.call(t,"cryptogetAccountBalance")&&U.proto.CryptoGetAccountBalanceResponse.encode(t.cryptogetAccountBalance,e.uint32(58).fork()).ldelim(),null!=t.cryptoGetAccountRecords&&Object.hasOwnProperty.call(t,"cryptoGetAccountRecords")&&U.proto.CryptoGetAccountRecordsResponse.encode(t.cryptoGetAccountRecords,e.uint32(66).fork()).ldelim(),null!=t.cryptoGetInfo&&Object.hasOwnProperty.call(t,"cryptoGetInfo")&&U.proto.CryptoGetInfoResponse.encode(t.cryptoGetInfo,e.uint32(74).fork()).ldelim(),null!=t.cryptoGetLiveHash&&Object.hasOwnProperty.call(t,"cryptoGetLiveHash")&&U.proto.CryptoGetLiveHashResponse.encode(t.cryptoGetLiveHash,e.uint32(82).fork()).ldelim(),null!=t.cryptoGetProxyStakers&&Object.hasOwnProperty.call(t,"cryptoGetProxyStakers")&&U.proto.CryptoGetStakersResponse.encode(t.cryptoGetProxyStakers,e.uint32(90).fork()).ldelim(),null!=t.fileGetContents&&Object.hasOwnProperty.call(t,"fileGetContents")&&U.proto.FileGetContentsResponse.encode(t.fileGetContents,e.uint32(98).fork()).ldelim(),null!=t.fileGetInfo&&Object.hasOwnProperty.call(t,"fileGetInfo")&&U.proto.FileGetInfoResponse.encode(t.fileGetInfo,e.uint32(106).fork()).ldelim(),null!=t.transactionGetReceipt&&Object.hasOwnProperty.call(t,"transactionGetReceipt")&&U.proto.TransactionGetReceiptResponse.encode(t.transactionGetReceipt,e.uint32(114).fork()).ldelim(),null!=t.transactionGetRecord&&Object.hasOwnProperty.call(t,"transactionGetRecord")&&U.proto.TransactionGetRecordResponse.encode(t.transactionGetRecord,e.uint32(122).fork()).ldelim(),null!=t.transactionGetFastRecord&&Object.hasOwnProperty.call(t,"transactionGetFastRecord")&&U.proto.TransactionGetFastRecordResponse.encode(t.transactionGetFastRecord,e.uint32(130).fork()).ldelim(),null!=t.consensusGetTopicInfo&&Object.hasOwnProperty.call(t,"consensusGetTopicInfo")&&U.proto.ConsensusGetTopicInfoResponse.encode(t.consensusGetTopicInfo,e.uint32(1202).fork()).ldelim(),null!=t.networkGetVersionInfo&&Object.hasOwnProperty.call(t,"networkGetVersionInfo")&&U.proto.NetworkGetVersionInfoResponse.encode(t.networkGetVersionInfo,e.uint32(1210).fork()).ldelim(),null!=t.tokenGetInfo&&Object.hasOwnProperty.call(t,"tokenGetInfo")&&U.proto.TokenGetInfoResponse.encode(t.tokenGetInfo,e.uint32(1218).fork()).ldelim(),null!=t.scheduleGetInfo&&Object.hasOwnProperty.call(t,"scheduleGetInfo")&&U.proto.ScheduleGetInfoResponse.encode(t.scheduleGetInfo,e.uint32(1226).fork()).ldelim(),null!=t.tokenGetAccountNftInfos&&Object.hasOwnProperty.call(t,"tokenGetAccountNftInfos")&&U.proto.TokenGetAccountNftInfosResponse.encode(t.tokenGetAccountNftInfos,e.uint32(1234).fork()).ldelim(),null!=t.tokenGetNftInfo&&Object.hasOwnProperty.call(t,"tokenGetNftInfo")&&U.proto.TokenGetNftInfoResponse.encode(t.tokenGetNftInfo,e.uint32(1242).fork()).ldelim(),null!=t.tokenGetNftInfos&&Object.hasOwnProperty.call(t,"tokenGetNftInfos")&&U.proto.TokenGetNftInfosResponse.encode(t.tokenGetNftInfos,e.uint32(1250).fork()).ldelim(),null!=t.networkGetExecutionTime&&Object.hasOwnProperty.call(t,"networkGetExecutionTime")&&U.proto.NetworkGetExecutionTimeResponse.encode(t.networkGetExecutionTime,e.uint32(1258).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.Response;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.getByKey=U.proto.GetByKeyResponse.decode(t,t.uint32());break;case 2:F.getBySolidityID=U.proto.GetBySolidityIDResponse.decode(t,t.uint32());break;case 3:F.contractCallLocal=U.proto.ContractCallLocalResponse.decode(t,t.uint32());break;case 5:F.contractGetBytecodeResponse=U.proto.ContractGetBytecodeResponse.decode(t,t.uint32());break;case 4:F.contractGetInfo=U.proto.ContractGetInfoResponse.decode(t,t.uint32());break;case 6:F.contractGetRecordsResponse=U.proto.ContractGetRecordsResponse.decode(t,t.uint32());break;case 7:F.cryptogetAccountBalance=U.proto.CryptoGetAccountBalanceResponse.decode(t,t.uint32());break;case 8:F.cryptoGetAccountRecords=U.proto.CryptoGetAccountRecordsResponse.decode(t,t.uint32());break;case 9:F.cryptoGetInfo=U.proto.CryptoGetInfoResponse.decode(t,t.uint32());break;case 10:F.cryptoGetLiveHash=U.proto.CryptoGetLiveHashResponse.decode(t,t.uint32());break;case 11:F.cryptoGetProxyStakers=U.proto.CryptoGetStakersResponse.decode(t,t.uint32());break;case 12:F.fileGetContents=U.proto.FileGetContentsResponse.decode(t,t.uint32());break;case 13:F.fileGetInfo=U.proto.FileGetInfoResponse.decode(t,t.uint32());break;case 14:F.transactionGetReceipt=U.proto.TransactionGetReceiptResponse.decode(t,t.uint32());break;case 15:F.transactionGetRecord=U.proto.TransactionGetRecordResponse.decode(t,t.uint32());break;case 16:F.transactionGetFastRecord=U.proto.TransactionGetFastRecordResponse.decode(t,t.uint32());break;case 150:F.consensusGetTopicInfo=U.proto.ConsensusGetTopicInfoResponse.decode(t,t.uint32());break;case 151:F.networkGetVersionInfo=U.proto.NetworkGetVersionInfoResponse.decode(t,t.uint32());break;case 152:F.tokenGetInfo=U.proto.TokenGetInfoResponse.decode(t,t.uint32());break;case 153:F.scheduleGetInfo=U.proto.ScheduleGetInfoResponse.decode(t,t.uint32());break;case 154:F.tokenGetAccountNftInfos=U.proto.TokenGetAccountNftInfosResponse.decode(t,t.uint32());break;case 155:F.tokenGetNftInfo=U.proto.TokenGetNftInfoResponse.decode(t,t.uint32());break;case 156:F.tokenGetNftInfos=U.proto.TokenGetNftInfosResponse.decode(t,t.uint32());break;case 157:F.networkGetExecutionTime=U.proto.NetworkGetExecutionTimeResponse.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),CryptoService:function(){function t(t,Q,B){e.rpc.Service.call(this,t,Q,B)}return(t.prototype=Object.create(e.rpc.Service.prototype)).constructor=t,t.create=function(t,e,Q){return new this(t,e,Q)},Object.defineProperty(t.prototype.createAccount=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"createAccount"}),Object.defineProperty(t.prototype.updateAccount=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"updateAccount"}),Object.defineProperty(t.prototype.cryptoTransfer=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"cryptoTransfer"}),Object.defineProperty(t.prototype.cryptoDelete=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"cryptoDelete"}),Object.defineProperty(t.prototype.approveAllowances=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"approveAllowances"}),Object.defineProperty(t.prototype.adjustAllowance=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"adjustAllowance"}),Object.defineProperty(t.prototype.addLiveHash=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"addLiveHash"}),Object.defineProperty(t.prototype.deleteLiveHash=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"deleteLiveHash"}),Object.defineProperty(t.prototype.getLiveHash=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getLiveHash"}),Object.defineProperty(t.prototype.getAccountRecords=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getAccountRecords"}),Object.defineProperty(t.prototype.cryptoGetBalance=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"cryptoGetBalance"}),Object.defineProperty(t.prototype.getAccountInfo=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getAccountInfo"}),Object.defineProperty(t.prototype.getTransactionReceipts=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getTransactionReceipts"}),Object.defineProperty(t.prototype.getFastTransactionRecord=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getFastTransactionRecord"}),Object.defineProperty(t.prototype.getTxRecordByTxID=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getTxRecordByTxID"}),Object.defineProperty(t.prototype.getStakersByAccountID=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getStakersByAccountID"}),t}(),FileService:function(){function t(t,Q,B){e.rpc.Service.call(this,t,Q,B)}return(t.prototype=Object.create(e.rpc.Service.prototype)).constructor=t,t.create=function(t,e,Q){return new this(t,e,Q)},Object.defineProperty(t.prototype.createFile=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"createFile"}),Object.defineProperty(t.prototype.updateFile=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"updateFile"}),Object.defineProperty(t.prototype.deleteFile=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"deleteFile"}),Object.defineProperty(t.prototype.appendContent=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"appendContent"}),Object.defineProperty(t.prototype.getFileContent=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getFileContent"}),Object.defineProperty(t.prototype.getFileInfo=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getFileInfo"}),Object.defineProperty(t.prototype.systemDelete=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"systemDelete"}),Object.defineProperty(t.prototype.systemUndelete=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"systemUndelete"}),t}(),FreezeService:function(){function t(t,Q,B){e.rpc.Service.call(this,t,Q,B)}return(t.prototype=Object.create(e.rpc.Service.prototype)).constructor=t,t.create=function(t,e,Q){return new this(t,e,Q)},Object.defineProperty(t.prototype.freeze=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"freeze"}),t}(),ConsensusTopicQuery:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.topicID=null,t.prototype.consensusStartTime=null,t.prototype.consensusEndTime=null,t.prototype.limit=F.Long?F.Long.fromBits(0,0,!0):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.topicID&&Object.hasOwnProperty.call(t,"topicID")&&U.proto.TopicID.encode(t.topicID,e.uint32(10).fork()).ldelim(),null!=t.consensusStartTime&&Object.hasOwnProperty.call(t,"consensusStartTime")&&U.proto.Timestamp.encode(t.consensusStartTime,e.uint32(18).fork()).ldelim(),null!=t.consensusEndTime&&Object.hasOwnProperty.call(t,"consensusEndTime")&&U.proto.Timestamp.encode(t.consensusEndTime,e.uint32(26).fork()).ldelim(),null!=t.limit&&Object.hasOwnProperty.call(t,"limit")&&e.uint32(32).uint64(t.limit),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ConsensusTopicQuery;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.topicID=U.proto.TopicID.decode(t,t.uint32());break;case 2:F.consensusStartTime=U.proto.Timestamp.decode(t,t.uint32());break;case 3:F.consensusEndTime=U.proto.Timestamp.decode(t,t.uint32());break;case 4:F.limit=t.uint64();break;default:t.skipType(7&Q)}return F},t}(),ConsensusTopicResponse:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.consensusTimestamp=null,t.prototype.message=F.newBuffer([]),t.prototype.runningHash=F.newBuffer([]),t.prototype.sequenceNumber=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.runningHashVersion=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.chunkInfo=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.consensusTimestamp&&Object.hasOwnProperty.call(t,"consensusTimestamp")&&U.proto.Timestamp.encode(t.consensusTimestamp,e.uint32(10).fork()).ldelim(),null!=t.message&&Object.hasOwnProperty.call(t,"message")&&e.uint32(18).bytes(t.message),null!=t.runningHash&&Object.hasOwnProperty.call(t,"runningHash")&&e.uint32(26).bytes(t.runningHash),null!=t.sequenceNumber&&Object.hasOwnProperty.call(t,"sequenceNumber")&&e.uint32(32).uint64(t.sequenceNumber),null!=t.runningHashVersion&&Object.hasOwnProperty.call(t,"runningHashVersion")&&e.uint32(40).uint64(t.runningHashVersion),null!=t.chunkInfo&&Object.hasOwnProperty.call(t,"chunkInfo")&&U.proto.ConsensusMessageChunkInfo.encode(t.chunkInfo,e.uint32(50).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ConsensusTopicResponse;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.consensusTimestamp=U.proto.Timestamp.decode(t,t.uint32());break;case 2:F.message=t.bytes();break;case 3:F.runningHash=t.bytes();break;case 4:F.sequenceNumber=t.uint64();break;case 5:F.runningHashVersion=t.uint64();break;case 6:F.chunkInfo=U.proto.ConsensusMessageChunkInfo.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),MirrorConsensusService:function(){function t(t,Q,B){e.rpc.Service.call(this,t,Q,B)}return(t.prototype=Object.create(e.rpc.Service.prototype)).constructor=t,t.create=function(t,e,Q){return new this(t,e,Q)},Object.defineProperty(t.prototype.subscribeTopic=function t(e,Q){return this.rpcCall(t,U.proto.ConsensusTopicQuery,U.proto.ConsensusTopicResponse,e,Q)},"name",{value:"subscribeTopic"}),t}(),NetworkService:function(){function t(t,Q,B){e.rpc.Service.call(this,t,Q,B)}return(t.prototype=Object.create(e.rpc.Service.prototype)).constructor=t,t.create=function(t,e,Q){return new this(t,e,Q)},Object.defineProperty(t.prototype.getVersionInfo=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getVersionInfo"}),Object.defineProperty(t.prototype.getExecutionTime=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getExecutionTime"}),Object.defineProperty(t.prototype.uncheckedSubmit=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"uncheckedSubmit"}),t}(),ScheduleService:function(){function t(t,Q,B){e.rpc.Service.call(this,t,Q,B)}return(t.prototype=Object.create(e.rpc.Service.prototype)).constructor=t,t.create=function(t,e,Q){return new this(t,e,Q)},Object.defineProperty(t.prototype.createSchedule=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"createSchedule"}),Object.defineProperty(t.prototype.signSchedule=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"signSchedule"}),Object.defineProperty(t.prototype.deleteSchedule=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"deleteSchedule"}),Object.defineProperty(t.prototype.getScheduleInfo=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getScheduleInfo"}),t}(),SmartContractService:function(){function t(t,Q,B){e.rpc.Service.call(this,t,Q,B)}return(t.prototype=Object.create(e.rpc.Service.prototype)).constructor=t,t.create=function(t,e,Q){return new this(t,e,Q)},Object.defineProperty(t.prototype.createContract=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"createContract"}),Object.defineProperty(t.prototype.updateContract=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"updateContract"}),Object.defineProperty(t.prototype.contractCallMethod=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"contractCallMethod"}),Object.defineProperty(t.prototype.getContractInfo=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getContractInfo"}),Object.defineProperty(t.prototype.contractCallLocalMethod=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"contractCallLocalMethod"}),Object.defineProperty(t.prototype.contractGetBytecode=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"ContractGetBytecode"}),Object.defineProperty(t.prototype.getBySolidityID=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getBySolidityID"}),Object.defineProperty(t.prototype.getTxRecordByContractID=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getTxRecordByContractID"}),Object.defineProperty(t.prototype.deleteContract=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"deleteContract"}),Object.defineProperty(t.prototype.systemDelete=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"systemDelete"}),Object.defineProperty(t.prototype.systemUndelete=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"systemUndelete"}),t}(),ThrottleGroup:function(){function t(t){if(this.operations=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.operations=F.emptyArray,t.prototype.milliOpsPerSec=F.Long?F.Long.fromBits(0,0,!0):0,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.operations&&t.operations.length){e.uint32(10).fork();for(var Q=0;Q<t.operations.length;++Q)e.int32(t.operations[Q]);e.ldelim()}return null!=t.milliOpsPerSec&&Object.hasOwnProperty.call(t,"milliOpsPerSec")&&e.uint32(16).uint64(t.milliOpsPerSec),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ThrottleGroup;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:if(F.operations&&F.operations.length||(F.operations=[]),2==(7&Q))for(var n=t.uint32()+t.pos;t.pos<n;)F.operations.push(t.int32());else F.operations.push(t.int32());break;case 2:F.milliOpsPerSec=t.uint64();break;default:t.skipType(7&Q)}return F},t}(),ThrottleBucket:function(){function t(t){if(this.throttleGroups=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.name="",t.prototype.burstPeriodMs=F.Long?F.Long.fromBits(0,0,!0):0,t.prototype.throttleGroups=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.name&&Object.hasOwnProperty.call(t,"name")&&e.uint32(10).string(t.name),null!=t.burstPeriodMs&&Object.hasOwnProperty.call(t,"burstPeriodMs")&&e.uint32(16).uint64(t.burstPeriodMs),null!=t.throttleGroups&&t.throttleGroups.length)for(var Q=0;Q<t.throttleGroups.length;++Q)U.proto.ThrottleGroup.encode(t.throttleGroups[Q],e.uint32(26).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ThrottleBucket;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.name=t.string();break;case 2:F.burstPeriodMs=t.uint64();break;case 3:F.throttleGroups&&F.throttleGroups.length||(F.throttleGroups=[]),F.throttleGroups.push(U.proto.ThrottleGroup.decode(t,t.uint32()));break;default:t.skipType(7&Q)}return F},t}(),ThrottleDefinitions:function(){function t(t){if(this.throttleBuckets=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.throttleBuckets=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.throttleBuckets&&t.throttleBuckets.length)for(var Q=0;Q<t.throttleBuckets.length;++Q)U.proto.ThrottleBucket.encode(t.throttleBuckets[Q],e.uint32(10).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.ThrottleDefinitions;t.pos<s;)1==(Q=t.uint32())>>>3?(F.throttleBuckets&&F.throttleBuckets.length||(F.throttleBuckets=[]),F.throttleBuckets.push(U.proto.ThrottleBucket.decode(t,t.uint32()))):t.skipType(7&Q);return F},t}(),TokenService:function(){function t(t,Q,B){e.rpc.Service.call(this,t,Q,B)}return(t.prototype=Object.create(e.rpc.Service.prototype)).constructor=t,t.create=function(t,e,Q){return new this(t,e,Q)},Object.defineProperty(t.prototype.createToken=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"createToken"}),Object.defineProperty(t.prototype.updateToken=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"updateToken"}),Object.defineProperty(t.prototype.mintToken=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"mintToken"}),Object.defineProperty(t.prototype.burnToken=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"burnToken"}),Object.defineProperty(t.prototype.deleteToken=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"deleteToken"}),Object.defineProperty(t.prototype.wipeTokenAccount=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"wipeTokenAccount"}),Object.defineProperty(t.prototype.freezeTokenAccount=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"freezeTokenAccount"}),Object.defineProperty(t.prototype.unfreezeTokenAccount=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"unfreezeTokenAccount"}),Object.defineProperty(t.prototype.grantKycToTokenAccount=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"grantKycToTokenAccount"}),Object.defineProperty(t.prototype.revokeKycFromTokenAccount=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"revokeKycFromTokenAccount"}),Object.defineProperty(t.prototype.associateTokens=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"associateTokens"}),Object.defineProperty(t.prototype.dissociateTokens=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"dissociateTokens"}),Object.defineProperty(t.prototype.updateTokenFeeSchedule=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"updateTokenFeeSchedule"}),Object.defineProperty(t.prototype.getTokenInfo=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getTokenInfo"}),Object.defineProperty(t.prototype.getAccountNftInfos=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getAccountNftInfos"}),Object.defineProperty(t.prototype.getTokenNftInfo=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getTokenNftInfo"}),Object.defineProperty(t.prototype.getTokenNftInfos=function t(e,Q){return this.rpcCall(t,U.proto.Query,U.proto.Response,e,Q)},"name",{value:"getTokenNftInfos"}),Object.defineProperty(t.prototype.pauseToken=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"pauseToken"}),Object.defineProperty(t.prototype.unpauseToken=function t(e,Q){return this.rpcCall(t,U.proto.Transaction,U.proto.TransactionResponse,e,Q)},"name",{value:"unpauseToken"}),t}(),SignedTransaction:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.bodyBytes=F.newBuffer([]),t.prototype.sigMap=null,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.bodyBytes&&Object.hasOwnProperty.call(t,"bodyBytes")&&e.uint32(10).bytes(t.bodyBytes),null!=t.sigMap&&Object.hasOwnProperty.call(t,"sigMap")&&U.proto.SignatureMap.encode(t.sigMap,e.uint32(18).fork()).ldelim(),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.SignedTransaction;t.pos<s;)switch(Q=t.uint32(),Q>>>3){case 1:F.bodyBytes=t.bytes();break;case 2:F.sigMap=U.proto.SignatureMap.decode(t,t.uint32());break;default:t.skipType(7&Q)}return F},t}(),TransactionList:function(){function t(t){if(this.transactionList=[],t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.transactionList=F.emptyArray,t.create=function(e){return new t(e)},t.encode=function(t,e){if(e||(e=s.create()),null!=t.transactionList&&t.transactionList.length)for(var Q=0;Q<t.transactionList.length;++Q)U.proto.Transaction.encode(t.transactionList[Q],e.uint32(10).fork()).ldelim();return e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.TransactionList;t.pos<s;)1==(Q=t.uint32())>>>3?(F.transactionList&&F.transactionList.length||(F.transactionList=[]),F.transactionList.push(U.proto.Transaction.decode(t,t.uint32()))):t.skipType(7&Q);return F},t}(),DoubleValue:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(9).double(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.DoubleValue;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.double():t.skipType(7&Q);return F},t}(),FloatValue:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(13).float(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.FloatValue;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.float():t.skipType(7&Q);return F},t}(),Int64Value:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(8).int64(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.Int64Value;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.int64():t.skipType(7&Q);return F},t}(),UInt64Value:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=F.Long?F.Long.fromBits(0,0,!0):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(8).uint64(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.UInt64Value;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.uint64():t.skipType(7&Q);return F},t}(),Int32Value:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(8).int32(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.Int32Value;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.int32():t.skipType(7&Q);return F},t}(),UInt32Value:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(8).uint32(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.UInt32Value;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.uint32():t.skipType(7&Q);return F},t}(),BoolValue:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=!1,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(8).bool(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.BoolValue;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.bool():t.skipType(7&Q);return F},t}(),StringValue:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value="",t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(10).string(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.StringValue;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.string():t.skipType(7&Q);return F},t}(),BytesValue:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(10).bytes(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.proto.BytesValue;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.bytes():t.skipType(7&Q);return F},t}()};t.proto=n;const c=U.google={protobuf:{DoubleValue:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(9).double(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.google.protobuf.DoubleValue;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.double():t.skipType(7&Q);return F},t}(),FloatValue:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(13).float(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.google.protobuf.FloatValue;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.float():t.skipType(7&Q);return F},t}(),Int64Value:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=F.Long?F.Long.fromBits(0,0,!1):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(8).int64(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.google.protobuf.Int64Value;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.int64():t.skipType(7&Q);return F},t}(),UInt64Value:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=F.Long?F.Long.fromBits(0,0,!0):0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(8).uint64(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.google.protobuf.UInt64Value;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.uint64():t.skipType(7&Q);return F},t}(),Int32Value:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(8).int32(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.google.protobuf.Int32Value;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.int32():t.skipType(7&Q);return F},t}(),UInt32Value:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=0,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(8).uint32(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.google.protobuf.UInt32Value;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.uint32():t.skipType(7&Q);return F},t}(),BoolValue:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=!1,t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(8).bool(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.google.protobuf.BoolValue;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.bool():t.skipType(7&Q);return F},t}(),StringValue:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value="",t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(10).string(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.google.protobuf.StringValue;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.string():t.skipType(7&Q);return F},t}(),BytesValue:function(){function t(t){if(t)for(var e=Object.keys(t),Q=0;Q<e.length;++Q)null!=t[e[Q]]&&(this[e[Q]]=t[e[Q]])}return t.prototype.value=F.newBuffer([]),t.create=function(e){return new t(e)},t.encode=function(t,e){return e||(e=s.create()),null!=t.value&&Object.hasOwnProperty.call(t,"value")&&e.uint32(10).bytes(t.value),e},t.decode=function(t,e){t instanceof B||(t=B.create(t));for(var Q,s=void 0===e?t.len:t.pos+e,F=new U.google.protobuf.BytesValue;t.pos<s;)1==(Q=t.uint32())>>>3?F.value=t.bytes():t.skipType(7&Q);return F},t}()}};t.google=c}(proto),function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.NftTransfer=t.NftID=t.NftAllowance=t.NetworkService=t.NetworkGetVersionInfoResponse=t.NetworkGetVersionInfoQuery=t.MirrorConsensusService=t.LiveHash=t.KeyList=t.Key=t.HederaFunctionality=t.GetBySolidityIDResponse=t.GetBySolidityIDQuery=t.GetByKeyResponse=t.GetByKeyQuery=t.FreezeType=t.FreezeTransactionBody=t.FreezeService=t.FractionalFee=t.Fraction=t.FloatValue=t.FixedFee=t.FileUpdateTransactionBody=t.FileService=t.FileInfo=t.FileID=t.FileGetInfoResponse=t.FileGetInfoQuery=t.FileGetContentsResponse=t.FileGetContentsQuery=t.FileDeleteTransactionBody=t.FileCreateTransactionBody=t.FileContents=t.FileAppendTransactionBody=t.FeeSchedule=t.FeeData=t.FeeComponents=t.ExchangeRateSet=t.ExchangeRate=t.EntityID=t.Duration=t.DoubleValue=t.CustomFee=t.CurrentAndNextFeeSchedule=t.CryptoUpdateTransactionBody=t.CryptoTransferTransactionBody=t.CryptoService=t.CryptoGetStakersResponse=t.CryptoGetStakersQuery=t.CryptoGetLiveHashResponse=t.CryptoGetLiveHashQuery=t.CryptoGetInfoResponse=t.CryptoGetInfoQuery=t.CryptoGetAccountRecordsResponse=t.CryptoGetAccountRecordsQuery=t.CryptoGetAccountBalanceResponse=t.CryptoGetAccountBalanceQuery=t.CryptoDeleteTransactionBody=t.CryptoDeleteLiveHashTransactionBody=t.CryptoCreateTransactionBody=t.CryptoApproveAllowanceTransactionBody=t.CryptoAllowance=t.CryptoAdjustAllowanceTransactionBody=t.CryptoAddLiveHashTransactionBody=t.ContractUpdateTransactionBody=t.ContractStateChange=t.ContractLoginfo=t.ContractInfo=t.ContractID=t.ContractGetRecordsResponse=t.ContractGetRecordsQuery=t.ContractGetInfoResponse=t.ContractGetInfoQuery=t.ContractGetBytecodeResponse=t.ContractGetBytecodeQuery=t.ContractFunctionResult=t.ContractDeleteTransactionBody=t.ContractCreateTransactionBody=t.ContractCallTransactionBody=t.ContractCallLocalResponse=t.ContractCallLocalQuery=t.ConsensusUpdateTopicTransactionBody=t.ConsensusTopicResponse=t.ConsensusTopicQuery=t.ConsensusTopicInfo=t.ConsensusSubmitMessageTransactionBody=t.ConsensusService=t.ConsensusMessageChunkInfo=t.ConsensusGetTopicInfoResponse=t.ConsensusGetTopicInfoQuery=t.ConsensusDeleteTopicTransactionBody=t.ConsensusCreateTopicTransactionBody=t.BytesValue=t.BoolValue=t.AssessedCustomFee=t.AllProxyStakers=t.AllAccountBalances=t.AccountInfo=t.AccountID=t.AccountAmount=void 0,t.UInt32Value=t.TransferList=t.TransactionResponse=t.TransactionRecord=t.TransactionReceipt=t.TransactionList=t.TransactionID=t.TransactionGetRecordResponse=t.TransactionGetRecordQuery=t.TransactionGetReceiptResponse=t.TransactionGetReceiptQuery=t.TransactionGetFastRecordResponse=t.TransactionGetFastRecordQuery=t.TransactionFeeSchedule=t.TransactionBody=t.Transaction=t.TopicID=t.TokenWipeAccountTransactionBody=t.TokenUpdateTransactionBody=t.TokenUnpauseTransactionBody=t.TokenUnitBalance=t.TokenUnfreezeAccountTransactionBody=t.TokenType=t.TokenTransferList=t.TokenSupplyType=t.TokenService=t.TokenRevokeKycTransactionBody=t.TokenRelationship=t.TokenPauseTransactionBody=t.TokenPauseStatus=t.TokenNftInfo=t.TokenMintTransactionBody=t.TokenKycStatus=t.TokenInfo=t.TokenID=t.TokenGrantKycTransactionBody=t.TokenGetNftInfosResponse=t.TokenGetNftInfosQuery=t.TokenGetNftInfoResponse=t.TokenGetNftInfoQuery=t.TokenGetInfoResponse=t.TokenGetInfoQuery=t.TokenGetAccountNftInfosResponse=t.TokenGetAccountNftInfosQuery=t.TokenFreezeStatus=t.TokenFreezeAccountTransactionBody=t.TokenFeeScheduleUpdateTransactionBody=t.TokenDissociateTransactionBody=t.TokenDeleteTransactionBody=t.TokenCreateTransactionBody=t.TokenBurnTransactionBody=t.TokenBalances=t.TokenBalance=t.TokenAssociateTransactionBody=t.TokenAllowance=t.TimestampSeconds=t.Timestamp=t.ThrottleGroup=t.ThrottleDefinitions=t.ThrottleBucket=t.ThresholdSignature=t.ThresholdKey=t.SystemUndeleteTransactionBody=t.SystemDeleteTransactionBody=t.SubType=t.StringValue=t.StorageChange=t.SmartContractService=t.SingleAccountBalances=t.SignedTransaction=t.SignaturePair=t.SignatureMap=t.SignatureList=t.Signature=t.ShardID=t.Setting=t.ServicesConfigurationList=t.ServiceEndpoint=t.SemanticVersion=t.ScheduleSignTransactionBody=t.ScheduleService=t.ScheduleInfo=t.ScheduleID=t.ScheduleGetInfoResponse=t.ScheduleGetInfoQuery=t.ScheduleDeleteTransactionBody=t.ScheduleCreateTransactionBody=t.SchedulableTransactionBody=t.RoyaltyFee=t.ResponseType=t.ResponseHeader=t.ResponseCodeEnum=t.Response=t.RealmID=t.Reader=t.QueryHeader=t.Query=t.ProxyStaker=t.NodeAddressBook=t.NodeAddress=t.NftTransfer=t.NftID=t.NftAllowance=t.NetworkService=t.NetworkGetVersionInfoResponse=t.NetworkGetVersionInfoQuery=t.MirrorConsensusService=t.LiveHash=t.KeyList=t.Key=t.HederaFunctionality=t.GetBySolidityIDResponse=t.GetBySolidityIDQuery=t.GetByKeyResponse=t.GetByKeyQuery=t.FreezeType=t.FreezeTransactionBody=t.FreezeService=t.FractionalFee=t.Fraction=t.FloatValue=t.FixedFee=t.FileUpdateTransactionBody=t.FileService=t.FileInfo=t.FileID=t.FileGetInfoResponse=t.FileGetInfoQuery=t.FileGetContentsResponse=t.FileGetContentsQuery=t.FileDeleteTransactionBody=t.FileCreateTransactionBody=t.FileContents=t.FileAppendTransactionBody=t.FeeSchedule=t.FeeData=t.FeeComponents=t.ExchangeRateSet=t.ExchangeRate=t.EntityID=t.Duration=t.DoubleValue=t.CustomFee=t.CurrentAndNextFeeSchedule=t.CryptoUpdateTransactionBody=t.CryptoTransferTransactionBody=t.CryptoService=t.CryptoGetStakersResponse=t.CryptoGetStakersQuery=t.CryptoGetLiveHashResponse=t.CryptoGetLiveHashQuery=t.CryptoGetInfoResponse=t.CryptoGetInfoQuery=t.CryptoGetAccountRecordsResponse=t.CryptoGetAccountRecordsQuery=t.CryptoGetAccountBalanceResponse=t.CryptoGetAccountBalanceQuery=t.CryptoDeleteTransactionBody=t.CryptoDeleteLiveHashTransactionBody=t.CryptoCreateTransactionBody=t.CryptoApproveAllowanceTransactionBody=t.CryptoAllowance=t.CryptoAdjustAllowanceTransactionBody=t.CryptoAddLiveHashTransactionBody=t.ContractUpdateTransactionBody=t.ContractStateChange=t.ContractLoginfo=t.ContractInfo=t.ContractID=t.ContractGetRecordsResponse=t.ContractGetRecordsQuery=t.ContractGetInfoResponse=t.ContractGetInfoQuery=t.ContractGetBytecodeResponse=t.ContractGetBytecodeQuery=t.ContractFunctionResult=t.ContractDeleteTransactionBody=t.ContractCreateTransactionBody=t.ContractCallTransactionBody=t.ContractCallLocalResponse=t.ContractCallLocalQuery=t.ConsensusUpdateTopicTransactionBody=t.ConsensusTopicResponse=t.ConsensusTopicQuery=t.ConsensusTopicInfo=t.ConsensusSubmitMessageTransactionBody=t.ConsensusService=t.ConsensusMessageChunkInfo=t.ConsensusGetTopicInfoResponse=t.ConsensusGetTopicInfoQuery=t.ConsensusDeleteTopicTransactionBody=t.ConsensusCreateTopicTransactionBody=t.BytesValue=t.BoolValue=t.AssessedCustomFee=t.AllProxyStakers=t.AllAccountBalances=t.AccountInfo=t.AccountID=t.AccountAmount=void 0,t.Writer=t.UncheckedSubmitBody=t.UInt64Value=t.UInt32Value=t.TransferList=t.TransactionResponse=t.TransactionRecord=t.TransactionReceipt=t.TransactionList=t.TransactionID=t.TransactionGetRecordResponse=t.TransactionGetRecordQuery=t.TransactionGetReceiptResponse=t.TransactionGetReceiptQuery=t.TransactionGetFastRecordResponse=t.TransactionGetFastRecordQuery=t.TransactionFeeSchedule=t.TransactionBody=t.Transaction=t.TopicID=t.TokenWipeAccountTransactionBody=t.TokenUpdateTransactionBody=t.TokenUnpauseTransactionBody=t.TokenUnitBalance=t.TokenUnfreezeAccountTransactionBody=t.TokenType=t.TokenTransferList=t.TokenSupplyType=t.TokenService=t.TokenRevokeKycTransactionBody=t.TokenRelationship=t.TokenPauseTransactionBody=t.TokenPauseStatus=t.TokenNftInfo=t.TokenMintTransactionBody=t.TokenKycStatus=t.TokenInfo=t.TokenID=t.TokenGrantKycTransactionBody=t.TokenGetNftInfosResponse=t.TokenGetNftInfosQuery=t.TokenGetNftInfoResponse=t.TokenGetNftInfoQuery=t.TokenGetInfoResponse=t.TokenGetInfoQuery=t.TokenGetAccountNftInfosResponse=t.TokenGetAccountNftInfosQuery=t.TokenFreezeStatus=t.TokenFreezeAccountTransactionBody=t.TokenFeeScheduleUpdateTransactionBody=t.TokenDissociateTransactionBody=t.TokenDeleteTransactionBody=t.TokenCreateTransactionBody=t.TokenBurnTransactionBody=t.TokenBalances=t.TokenBalance=t.TokenAssociateTransactionBody=t.TokenAllowance=t.TimestampSeconds=t.Timestamp=t.ThrottleGroup=t.ThrottleDefinitions=t.ThrottleBucket=t.ThresholdSignature=t.ThresholdKey=t.SystemUndeleteTransactionBody=t.SystemDeleteTransactionBody=t.SubType=t.StringValue=t.StorageChange=t.SmartContractService=t.SingleAccountBalances=t.SignedTransaction=t.SignaturePair=t.SignatureMap=t.SignatureList=t.Signature=t.ShardID=t.Setting=t.ServicesConfigurationList=t.ServiceEndpoint=t.SemanticVersion=t.ScheduleSignTransactionBody=t.ScheduleService=t.ScheduleInfo=t.ScheduleID=t.ScheduleGetInfoResponse=t.ScheduleGetInfoQuery=t.ScheduleDeleteTransactionBody=t.ScheduleCreateTransactionBody=t.SchedulableTransactionBody=t.RoyaltyFee=t.ResponseType=t.ResponseHeader=t.ResponseCodeEnum=t.Response=t.RealmID=t.Reader=t.QueryHeader=t.Query=t.ProxyStaker=t.NodeAddressBook=t.NodeAddress=t.NftTransfer=t.NftID=t.NftAllowance=t.NetworkService=t.NetworkGetVersionInfoResponse=t.NetworkGetVersionInfoQuery=t.MirrorConsensusService=t.LiveHash=t.KeyList=t.Key=t.HederaFunctionality=t.GetBySolidityIDResponse=t.GetBySolidityIDQuery=t.GetByKeyResponse=t.GetByKeyQuery=t.FreezeType=t.FreezeTransactionBody=t.FreezeService=t.FractionalFee=t.Fraction=t.FloatValue=t.FixedFee=t.FileUpdateTransactionBody=t.FileService=t.FileInfo=t.FileID=t.FileGetInfoResponse=t.FileGetInfoQuery=t.FileGetContentsResponse=t.FileGetContentsQuery=t.FileDeleteTransactionBody=t.FileCreateTransactionBody=t.FileContents=t.FileAppendTransactionBody=t.FeeSchedule=t.FeeData=t.FeeComponents=t.ExchangeRateSet=t.ExchangeRate=t.EntityID=t.Duration=t.DoubleValue=t.CustomFee=t.CurrentAndNextFeeSchedule=t.CryptoUpdateTransactionBody=t.CryptoTransferTransactionBody=t.CryptoService=t.CryptoGetStakersResponse=t.CryptoGetStakersQuery=t.CryptoGetLiveHashResponse=t.CryptoGetLiveHashQuery=t.CryptoGetInfoResponse=t.CryptoGetInfoQuery=t.CryptoGetAccountRecordsResponse=t.CryptoGetAccountRecordsQuery=t.CryptoGetAccountBalanceResponse=t.CryptoGetAccountBalanceQuery=t.CryptoDeleteTransactionBody=t.CryptoDeleteLiveHashTransactionBody=t.CryptoCreateTransactionBody=t.CryptoApproveAllowanceTransactionBody=t.CryptoAllowance=t.CryptoAdjustAllowanceTransactionBody=t.CryptoAddLiveHashTransactionBody=t.ContractUpdateTransactionBody=t.ContractStateChange=t.ContractLoginfo=t.ContractInfo=t.ContractID=t.ContractGetRecordsResponse=t.ContractGetRecordsQuery=t.ContractGetInfoResponse=t.ContractGetInfoQuery=t.ContractGetBytecodeResponse=t.ContractGetBytecodeQuery=t.ContractFunctionResult=t.ContractDeleteTransactionBody=t.ContractCreateTransactionBody=t.ContractCallTransactionBody=t.ContractCallLocalResponse=t.ContractCallLocalQuery=t.ConsensusUpdateTopicTransactionBody=t.ConsensusTopicResponse=t.ConsensusTopicQuery=t.ConsensusTopicInfo=t.ConsensusSubmitMessageTransactionBody=t.ConsensusService=t.ConsensusMessageChunkInfo=t.ConsensusGetTopicInfoResponse=t.ConsensusGetTopicInfoQuery=t.ConsensusDeleteTopicTransactionBody=t.ConsensusCreateTopicTransactionBody=t.BytesValue=t.BoolValue=t.AssessedCustomFee=t.AllProxyStakers=t.AllAccountBalances=t.AccountInfo=t.AccountID=t.AccountAmount=void 0;var e=function(t,e){if(!e&&t&&t.__esModule)return t;if(null===t||"object"!=typeof t&&"function"!=typeof t)return{default:t};var Q=B(e);if(Q&&Q.has(t))return Q.get(t);var s={},F=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var U in t)if("default"!=U&&Object.prototype.hasOwnProperty.call(t,U)){var n=F?Object.getOwnPropertyDescriptor(t,U):null;n&&(n.get||n.set)?Object.defineProperty(s,U,n):s[U]=t[U]}return s.default=t,Q&&Q.set(t,s),s}(minimal),Q=proto;function B(t){if("function"!=typeof WeakMap)return null;var e=new WeakMap,Q=new WeakMap;return(B=function(t){return t?Q:e})(t)}const s=e.Reader;t.Reader=s;const F=e.Writer;t.Writer=F;const U=Q.proto.TokenUnitBalance;t.TokenUnitBalance=U;const n=Q.proto.SingleAccountBalances;t.SingleAccountBalances=n;const c=Q.proto.AllAccountBalances;t.AllAccountBalances=c;const o=Q.proto.ShardID;t.ShardID=o;const g=Q.proto.RealmID;t.RealmID=g;const l=Q.proto.AccountID;t.AccountID=l;const I=Q.proto.FileID;t.FileID=I;const i=Q.proto.ContractID;t.ContractID=i;const r=Q.proto.TransactionID;t.TransactionID=r;const a=Q.proto.AccountAmount;t.AccountAmount=a;const d=Q.proto.TransferList;t.TransferList=d;const u=Q.proto.NftTransfer;t.NftTransfer=u;const C=Q.proto.TokenTransferList;t.TokenTransferList=C;const y=Q.proto.Fraction;t.Fraction=y;const S=Q.proto.TopicID;t.TopicID=S;const b=Q.proto.TokenID;t.TokenID=b;const m=Q.proto.ScheduleID;t.ScheduleID=m;const G=Q.proto.TokenType;t.TokenType=G;const x=Q.proto.SubType;t.SubType=x;const L=Q.proto.TokenSupplyType;t.TokenSupplyType=L;const h=Q.proto.TokenFreezeStatus;t.TokenFreezeStatus=h;const A=Q.proto.TokenKycStatus;t.TokenKycStatus=A;const Z=Q.proto.Key;t.Key=Z;const R=Q.proto.ThresholdKey;t.ThresholdKey=R;const N=Q.proto.KeyList;t.KeyList=N;const V=Q.proto.Signature;t.Signature=V;const D=Q.proto.ThresholdSignature;t.ThresholdSignature=D;const E=Q.proto.SignatureList;t.SignatureList=E;const p=Q.proto.SignaturePair;t.SignaturePair=p;const J=Q.proto.SignatureMap;t.SignatureMap=J;const X=Q.proto.HederaFunctionality;t.HederaFunctionality=X;const H=Q.proto.FeeComponents;t.FeeComponents=H;const k=Q.proto.TransactionFeeSchedule;t.TransactionFeeSchedule=k;const W=Q.proto.FeeData;t.FeeData=W;const T=Q.proto.FeeSchedule;t.FeeSchedule=T;const Y=Q.proto.CurrentAndNextFeeSchedule;t.CurrentAndNextFeeSchedule=Y;const f=Q.proto.ServiceEndpoint;t.ServiceEndpoint=f;const M=Q.proto.NodeAddress;t.NodeAddress=M;const w=Q.proto.NodeAddressBook;t.NodeAddressBook=w;const v=Q.proto.SemanticVersion;t.SemanticVersion=v;const z=Q.proto.Setting;t.Setting=z;const K=Q.proto.ServicesConfigurationList;t.ServicesConfigurationList=K;const O=Q.proto.TokenRelationship;t.TokenRelationship=O;const P=Q.proto.TokenBalance;t.TokenBalance=P;const j=Q.proto.TokenBalances;t.TokenBalances=j;const _=Q.proto.Timestamp;t.Timestamp=_;const $=Q.proto.TimestampSeconds;t.TimestampSeconds=$;const q=Q.proto.ConsensusCreateTopicTransactionBody;t.ConsensusCreateTopicTransactionBody=q;const tt=Q.proto.Duration;t.Duration=tt;const et=Q.proto.ConsensusDeleteTopicTransactionBody;t.ConsensusDeleteTopicTransactionBody=et;const Qt=Q.proto.ConsensusGetTopicInfoQuery;t.ConsensusGetTopicInfoQuery=Qt;const Bt=Q.proto.ConsensusGetTopicInfoResponse;t.ConsensusGetTopicInfoResponse=Bt;const st=Q.proto.ResponseType;t.ResponseType=st;const Ft=Q.proto.QueryHeader;t.QueryHeader=Ft;const Ut=Q.proto.Transaction;t.Transaction=Ut;const nt=Q.proto.TransactionBody;t.TransactionBody=nt;const ct=Q.proto.SystemDeleteTransactionBody;t.SystemDeleteTransactionBody=ct;const ot=Q.proto.SystemUndeleteTransactionBody;t.SystemUndeleteTransactionBody=ot;const gt=Q.proto.FreezeTransactionBody;t.FreezeTransactionBody=gt;const lt=Q.proto.ContractCallTransactionBody;t.ContractCallTransactionBody=lt;const It=Q.proto.ContractCreateTransactionBody;t.ContractCreateTransactionBody=It;const it=Q.proto.ContractUpdateTransactionBody;t.ContractUpdateTransactionBody=it;const rt=Q.proto.LiveHash;t.LiveHash=rt;const at=Q.proto.CryptoAddLiveHashTransactionBody;t.CryptoAddLiveHashTransactionBody=at;const dt=Q.proto.CryptoCreateTransactionBody;t.CryptoCreateTransactionBody=dt;const ut=Q.proto.CryptoDeleteTransactionBody;t.CryptoDeleteTransactionBody=ut;const Ct=Q.proto.CryptoDeleteLiveHashTransactionBody;t.CryptoDeleteLiveHashTransactionBody=Ct;const yt=Q.proto.CryptoTransferTransactionBody;t.CryptoTransferTransactionBody=yt;const St=Q.proto.CryptoUpdateTransactionBody;t.CryptoUpdateTransactionBody=St;const bt=Q.proto.CryptoApproveAllowanceTransactionBody;t.CryptoApproveAllowanceTransactionBody=bt;const mt=Q.proto.CryptoAdjustAllowanceTransactionBody;t.CryptoAdjustAllowanceTransactionBody=mt;const Gt=Q.proto.FileAppendTransactionBody;t.FileAppendTransactionBody=Gt;const xt=Q.proto.FileCreateTransactionBody;t.FileCreateTransactionBody=xt;const Lt=Q.proto.FileDeleteTransactionBody;t.FileDeleteTransactionBody=Lt;const ht=Q.proto.FileUpdateTransactionBody;t.FileUpdateTransactionBody=ht;const At=Q.proto.ContractDeleteTransactionBody;t.ContractDeleteTransactionBody=At;const Zt=Q.proto.ConsensusUpdateTopicTransactionBody;t.ConsensusUpdateTopicTransactionBody=Zt;const Rt=Q.proto.ConsensusMessageChunkInfo;t.ConsensusMessageChunkInfo=Rt;const Nt=Q.proto.ConsensusSubmitMessageTransactionBody;t.ConsensusSubmitMessageTransactionBody=Nt;const Vt=Q.proto.UncheckedSubmitBody;t.UncheckedSubmitBody=Vt;const Dt=Q.proto.TokenCreateTransactionBody;t.TokenCreateTransactionBody=Dt;const Et=Q.proto.FractionalFee;t.FractionalFee=Et;const pt=Q.proto.FixedFee;t.FixedFee=pt;const Jt=Q.proto.CustomFee;t.CustomFee=Jt;const Xt=Q.proto.AssessedCustomFee;t.AssessedCustomFee=Xt;const Ht=Q.proto.RoyaltyFee;t.RoyaltyFee=Ht;const kt=Q.proto.TokenFreezeAccountTransactionBody;t.TokenFreezeAccountTransactionBody=kt;const Wt=Q.proto.TokenUnfreezeAccountTransactionBody;t.TokenUnfreezeAccountTransactionBody=Wt;const Tt=Q.proto.TokenGrantKycTransactionBody;t.TokenGrantKycTransactionBody=Tt;const Yt=Q.proto.TokenRevokeKycTransactionBody;t.TokenRevokeKycTransactionBody=Yt;const ft=Q.proto.TokenDeleteTransactionBody;t.TokenDeleteTransactionBody=ft;const Mt=Q.proto.TokenUpdateTransactionBody;t.TokenUpdateTransactionBody=Mt;const wt=Q.proto.TokenMintTransactionBody;t.TokenMintTransactionBody=wt;const vt=Q.proto.TokenBurnTransactionBody;t.TokenBurnTransactionBody=vt;const zt=Q.proto.TokenWipeAccountTransactionBody;t.TokenWipeAccountTransactionBody=zt;const Kt=Q.proto.TokenAssociateTransactionBody;t.TokenAssociateTransactionBody=Kt;const Ot=Q.proto.TokenDissociateTransactionBody;t.TokenDissociateTransactionBody=Ot;const Pt=Q.proto.TokenFeeScheduleUpdateTransactionBody;t.TokenFeeScheduleUpdateTransactionBody=Pt;const jt=Q.proto.ScheduleCreateTransactionBody;t.ScheduleCreateTransactionBody=jt;const _t=Q.proto.SchedulableTransactionBody;t.SchedulableTransactionBody=_t;const $t=Q.proto.ScheduleDeleteTransactionBody;t.ScheduleDeleteTransactionBody=$t;const qt=Q.proto.ScheduleSignTransactionBody;t.ScheduleSignTransactionBody=qt;const te=Q.proto.ResponseHeader;t.ResponseHeader=te;const ee=Q.proto.TransactionResponse;t.TransactionResponse=ee;const Qe=Q.proto.ResponseCodeEnum;t.ResponseCodeEnum=Qe;const Be=Q.proto.ConsensusTopicInfo;t.ConsensusTopicInfo=Be;const se=Q.proto.ConsensusService;t.ConsensusService=se;const Fe=Q.proto.Query;t.Query=Fe;const Ue=Q.proto.GetByKeyQuery;t.GetByKeyQuery=Ue;const ne=Q.proto.EntityID;t.EntityID=ne;const ce=Q.proto.GetByKeyResponse;t.GetByKeyResponse=ce;const oe=Q.proto.GetBySolidityIDQuery;t.GetBySolidityIDQuery=oe;const ge=Q.proto.GetBySolidityIDResponse;t.GetBySolidityIDResponse=ge;const le=Q.proto.ContractLoginfo;t.ContractLoginfo=le;const Ie=Q.proto.ContractFunctionResult;t.ContractFunctionResult=Ie;const ie=Q.proto.ContractCallLocalQuery;t.ContractCallLocalQuery=ie;const re=Q.proto.ContractCallLocalResponse;t.ContractCallLocalResponse=re;const ae=Q.proto.ContractGetInfoQuery;t.ContractGetInfoQuery=ae;const de=Q.proto.ContractGetInfoResponse;t.ContractGetInfoResponse=de;const ue=Q.proto.ContractGetInfoResponse.ContractInfo;t.ContractInfo=ue;const Ce=Q.proto.ContractGetBytecodeQuery;t.ContractGetBytecodeQuery=Ce;const ye=Q.proto.ContractGetBytecodeResponse;t.ContractGetBytecodeResponse=ye;const Se=Q.proto.ContractGetRecordsQuery;t.ContractGetRecordsQuery=Se;const be=Q.proto.ContractGetRecordsResponse;t.ContractGetRecordsResponse=be;const me=Q.proto.ContractStateChange;t.ContractStateChange=me;const Ge=Q.proto.StorageChange;t.StorageChange=Ge;const xe=Q.proto.TransactionRecord;t.TransactionRecord=xe;const Le=Q.proto.TransactionReceipt;t.TransactionReceipt=Le;const he=Q.proto.ExchangeRate;t.ExchangeRate=he;const Ae=Q.proto.ExchangeRateSet;t.ExchangeRateSet=Ae;const Ze=Q.proto.CryptoGetAccountBalanceQuery;t.CryptoGetAccountBalanceQuery=Ze;const Re=Q.proto.CryptoGetAccountBalanceResponse;t.CryptoGetAccountBalanceResponse=Re;const Ne=Q.proto.CryptoGetAccountRecordsQuery;t.CryptoGetAccountRecordsQuery=Ne;const Ve=Q.proto.CryptoGetAccountRecordsResponse;t.CryptoGetAccountRecordsResponse=Ve;const De=Q.proto.CryptoGetInfoQuery;t.CryptoGetInfoQuery=De;const Ee=Q.proto.CryptoGetInfoResponse;t.CryptoGetInfoResponse=Ee;const pe=Q.proto.CryptoGetInfoResponse.AccountInfo;t.AccountInfo=pe;const Je=Q.proto.CryptoAllowance;t.CryptoAllowance=Je;const Xe=Q.proto.TokenAllowance;t.TokenAllowance=Xe;const He=Q.proto.NftAllowance;t.NftAllowance=He;const ke=Q.proto.CryptoGetLiveHashQuery;t.CryptoGetLiveHashQuery=ke;const We=Q.proto.CryptoGetLiveHashResponse;t.CryptoGetLiveHashResponse=We;const Te=Q.proto.CryptoGetStakersQuery;t.CryptoGetStakersQuery=Te;const Ye=Q.proto.ProxyStaker;t.ProxyStaker=Ye;const fe=Q.proto.AllProxyStakers;t.AllProxyStakers=fe;const Me=Q.proto.CryptoGetStakersResponse;t.CryptoGetStakersResponse=Me;const we=Q.proto.FileGetContentsQuery;t.FileGetContentsQuery=we;const ve=Q.proto.FileGetContentsResponse;t.FileGetContentsResponse=ve;const ze=Q.proto.FileGetContentsResponse.FileContents;t.FileContents=ze;const Ke=Q.proto.FileGetInfoQuery;t.FileGetInfoQuery=Ke;const Oe=Q.proto.FileGetInfoResponse;t.FileGetInfoResponse=Oe;const Pe=Q.proto.FileGetInfoResponse.FileInfo;t.FileInfo=Pe;const je=Q.proto.TransactionGetReceiptQuery;t.TransactionGetReceiptQuery=je;const _e=Q.proto.TransactionGetReceiptResponse;t.TransactionGetReceiptResponse=_e;const $e=Q.proto.TransactionGetRecordQuery;t.TransactionGetRecordQuery=$e;const qe=Q.proto.TransactionGetRecordResponse;t.TransactionGetRecordResponse=qe;const tQ=Q.proto.TransactionGetFastRecordQuery;t.TransactionGetFastRecordQuery=tQ;const eQ=Q.proto.TransactionGetFastRecordResponse;t.TransactionGetFastRecordResponse=eQ;const QQ=Q.proto.NetworkGetVersionInfoQuery;t.NetworkGetVersionInfoQuery=QQ;const BQ=Q.proto.NetworkGetVersionInfoResponse;t.NetworkGetVersionInfoResponse=BQ;const sQ=Q.proto.TokenGetInfoQuery;t.TokenGetInfoQuery=sQ;const FQ=Q.proto.TokenInfo;t.TokenInfo=FQ;const UQ=Q.proto.TokenGetInfoResponse;t.TokenGetInfoResponse=UQ;const nQ=Q.proto.ScheduleGetInfoQuery;t.ScheduleGetInfoQuery=nQ;const cQ=Q.proto.ScheduleInfo;t.ScheduleInfo=cQ;const oQ=Q.proto.ScheduleGetInfoResponse;t.ScheduleGetInfoResponse=oQ;const gQ=Q.proto.TokenGetAccountNftInfosQuery;t.TokenGetAccountNftInfosQuery=gQ;const lQ=Q.proto.TokenGetAccountNftInfosResponse;t.TokenGetAccountNftInfosResponse=lQ;const IQ=Q.proto.NftID;t.NftID=IQ;const iQ=Q.proto.TokenGetNftInfoQuery;t.TokenGetNftInfoQuery=iQ;const rQ=Q.proto.TokenNftInfo;t.TokenNftInfo=rQ;const aQ=Q.proto.TokenGetNftInfoResponse;t.TokenGetNftInfoResponse=aQ;const dQ=Q.proto.TokenGetNftInfosQuery;t.TokenGetNftInfosQuery=dQ;const uQ=Q.proto.TokenGetNftInfosResponse;t.TokenGetNftInfosResponse=uQ;const CQ=Q.proto.Response;t.Response=CQ;const yQ=Q.proto.CryptoService;t.CryptoService=yQ;const SQ=Q.proto.FileService;t.FileService=SQ;const bQ=Q.proto.FreezeService;t.FreezeService=bQ;const mQ=Q.proto.ConsensusTopicQuery;t.ConsensusTopicQuery=mQ;const GQ=Q.proto.ConsensusTopicResponse;t.ConsensusTopicResponse=GQ;const xQ=Q.proto.MirrorConsensusService;t.MirrorConsensusService=xQ;const LQ=Q.proto.NetworkService;t.NetworkService=LQ;const hQ=Q.proto.ScheduleService;t.ScheduleService=hQ;const AQ=Q.proto.SmartContractService;t.SmartContractService=AQ;const ZQ=Q.proto.ThrottleGroup;t.ThrottleGroup=ZQ;const RQ=Q.proto.ThrottleBucket;t.ThrottleBucket=RQ;const NQ=Q.proto.ThrottleDefinitions;t.ThrottleDefinitions=NQ;const VQ=Q.proto.TokenService;t.TokenService=VQ;const DQ=Q.proto.SignedTransaction;t.SignedTransaction=DQ;const EQ=Q.proto.TransactionList;t.TransactionList=EQ;const pQ=Q.proto.DoubleValue;t.DoubleValue=pQ;const JQ=Q.proto.FloatValue;t.FloatValue=JQ;const XQ=Q.proto.UInt64Value;t.UInt64Value=XQ;const HQ=Q.proto.UInt32Value;t.UInt32Value=HQ;const kQ=Q.proto.BoolValue;t.BoolValue=kQ;const WQ=Q.proto.StringValue;t.StringValue=WQ;const TQ=Q.proto.BytesValue;t.BytesValue=TQ;const YQ=Q.proto.TokenPauseTransactionBody;t.TokenPauseTransactionBody=YQ;const fQ=Q.proto.TokenUnpauseTransactionBody;t.TokenUnpauseTransactionBody=fQ;const MQ=Q.proto.TokenPauseStatus;t.TokenPauseStatus=MQ;const wQ=Q.proto.FreezeType;t.FreezeType=wQ}(lib);class AccountId{constructor(t,e,Q,B){const s=constructor(t,e,Q);this.shard=s.shard,this.realm=s.realm,this.num=s.num,this.aliasKey=null!=B?B:null,this._checksum=null}static fromString(t){const e=fromStringSplitter(t);if(Number.isNaN(e.shard)||Number.isNaN(e.realm))throw new Error("invalid format for entity ID");const Q=null!=e.shard?long$1.fromString(e.shard):long$1.ZERO,B=null!=e.realm?long$1.fromString(e.realm):long$1.ZERO,[s,F]=e.numOrHex.length<20?[long$1.fromString(e.numOrHex),void 0]:[long$1.ZERO,PublicKey.fromString(e.numOrHex)];return new AccountId(Q,B,s,F)}static _fromProtobuf(t){let e=null!=t.alias&&t.alias.length>0?Key._fromProtobufKey(lib.Key.decode(t.alias)):void 0;return e instanceof PublicKey||(e=void 0),new AccountId(null!=t.shardNum?t.shardNum:0,null!=t.realmNum?t.realmNum:0,null!=t.accountNum?t.accountNum:0,e)}get checksum(){return this._checksum}validate(t){console.warn("Deprecated: Use `validateChecksum` instead"),this.validateChecksum(t)}validateChecksum(t){if(null!=this.aliasKey)throw new Error("cannot calculate checksum with an account ID that has a aliasKey");validateChecksum(this.shard,this.realm,this.num,this._checksum,t)}static fromBytes(t){return AccountId._fromProtobuf(lib.AccountID.decode(t))}static fromSolidityAddress(t){return new AccountId(...fromSolidityAddress(t))}toSolidityAddress(){return toSolidityAddress([this.shard,this.realm,this.num])}_toProtobuf(){return{alias:null!=this.aliasKey?lib.Key.encode(this.aliasKey._toProtobufKey()).finish():null,accountNum:this.num,shardNum:this.shard,realmNum:this.realm}}toBytes(){return lib.AccountID.encode(this._toProtobuf()).finish()}toString(){const t=null!=this.aliasKey?this.aliasKey.toString():this.num.toString();return`${this.shard.toString()}.${this.realm.toString()}.${t}`}toStringWithChecksum(t){if(null!=this.aliasKey)throw new Error("cannot calculate checksum with an account ID that has a aliasKey");return toStringWithChecksum(this.toString(),t)}equals(t){let e=!1;return null!=this.aliasKey&&null!=t.aliasKey?e=this.aliasKey.equals(t.aliasKey):null==this.aliasKey&&null==t.aliasKey&&(e=this.num.eq(t.num)),this.shard.eq(t.shard)&&this.realm.eq(t.realm)&&e}clone(){const t=new AccountId(this);return t._checksum=this._checksum,t}compare(t){let e=this.shard.compare(t.shard);if(0!=e)return e;if(e=this.realm.compare(t.realm),0!=e)return e;if(null!=this.aliasKey&&null!=t.aliasKey){const e=this.aliasKey.toString(),Q=t.aliasKey.toString();return e>Q?1:e<Q?-1:0}return null==this.aliasKey&&null==t.aliasKey?this.num.compare(t.num):0}}CACHE.accountIdConstructor=(t,e,Q)=>new AccountId(t,e,long$1.ZERO,Q);class GrpcStatus{constructor(t){this._code=t,Object.freeze(this)}static _fromValue(t){switch(t){case 0:return GrpcStatus.Ok;case 1:return GrpcStatus.Cancelled;case 2:return GrpcStatus.Unknown;case 3:return GrpcStatus.InvalidArgument;case 4:return GrpcStatus.DeadlineExceeded;case 5:return GrpcStatus.NotFound;case 6:return GrpcStatus.AlreadyExists;case 7:return GrpcStatus.PermissionDenied;case 16:return GrpcStatus.Unauthenticated;case 8:return GrpcStatus.ResourceExhausted;case 9:return GrpcStatus.FailedPrecondition;case 10:return GrpcStatus.Aborted;case 11:return GrpcStatus.OutOfRange;case 12:return GrpcStatus.Unimplemented;case 13:return GrpcStatus.Internal;case 14:return GrpcStatus.Unavailable;case 15:return GrpcStatus.DataLoss;default:throw new Error("(BUG) non-exhaustive GrpcStatus switch statement")}}toString(){switch(this){case GrpcStatus.Ok:return"OK";case GrpcStatus.Cancelled:return"CANCELLED";case GrpcStatus.Unknown:return"UNKNOWN";case GrpcStatus.InvalidArgument:return"INVALID_ARGUMENT";case GrpcStatus.DeadlineExceeded:return"DEADLINE_EXCEEDED";case GrpcStatus.NotFound:return"NOT_FOUND";case GrpcStatus.AlreadyExists:return"ALREADY_EXISTS";case GrpcStatus.PermissionDenied:return"PERMISSION_DENIED";case GrpcStatus.Unauthenticated:return"UNAUTHENTICATED";case GrpcStatus.ResourceExhausted:return"RESOURCE_EXHAUSTED";case GrpcStatus.FailedPrecondition:return"FAILED_PRECONDITION";case GrpcStatus.Aborted:return"ABORTED";case GrpcStatus.OutOfRange:return"OUT_OF_RANGE";case GrpcStatus.Unimplemented:return"UNIMPLEMENTED";case GrpcStatus.Internal:return"INTERNAL";case GrpcStatus.Unavailable:return"UNAVAILABLE";case GrpcStatus.DataLoss:return"DATA_LOSS";default:return`UNKNOWN (${this._code})`}}valueOf(){return this._code}}GrpcStatus.Ok=new GrpcStatus(0),GrpcStatus.Cancelled=new GrpcStatus(1),GrpcStatus.Unknown=new GrpcStatus(2),GrpcStatus.InvalidArgument=new GrpcStatus(3),GrpcStatus.DeadlineExceeded=new GrpcStatus(4),GrpcStatus.NotFound=new GrpcStatus(5),GrpcStatus.AlreadyExists=new GrpcStatus(6),GrpcStatus.PermissionDenied=new GrpcStatus(7),GrpcStatus.Unauthenticated=new GrpcStatus(16),GrpcStatus.ResourceExhausted=new GrpcStatus(8),GrpcStatus.FailedPrecondition=new GrpcStatus(9),GrpcStatus.Aborted=new GrpcStatus(10),GrpcStatus.OutOfRange=new GrpcStatus(11),GrpcStatus.Unimplemented=new GrpcStatus(12),GrpcStatus.Internal=new GrpcStatus(13),GrpcStatus.Unavailable=new GrpcStatus(14),GrpcStatus.DataLoss=new GrpcStatus(15);class GrpcServiceError extends Error{constructor(t){super(`gRPC service failed with status: ${t.toString()}`),this.status=t,this.name="GrpcServiceError",void 0!==Error.captureStackTrace&&Error.captureStackTrace(this,GrpcServiceError)}static _fromResponse(t){if(null!=t.code&&null!=t.details){const e=GrpcStatus._fromValue(t.code),Q=new GrpcServiceError(e);return Q.message=t.details,Q}return t}}class List{constructor(){this.list=[],this.locked=!1,this.index=0}setList(t){if(this.locked)throw new Error("list is locked");return this.list=t,this.index=0,this}push(...t){if(this.locked)throw new Error("list is locked");return this.list.push(...t),this}setLocked(){return this.locked=!0,this}clear(){if(this.locked)throw new Error("list is locked");this.list=[]}get(t){return this.list[t]}set(t,e){if(this.locked)throw new Error("list is locked");return t==this.length?this.list.push(e):this.list[t]=e,this}setIfAbsent(t,e){return t!=this.length&&null!=this.list[t]||this.set(t,e()),this}get next(){return this.get(this.advance())}get current(){let t=this.index-1;return t<0&&(t=this.length-1),this.get(t)}advance(){const t=this.index;return this.index=(this.index+1)%this.list.length,t}get isEmpty(){return 0===this.length}get length(){return this.list.length}}const ExecutionState={Finished:"Finished",Retry:"Retry",Error:"Error"},RST_STREAM=/\brst[^0-9a-zA-Z]stream\b/i;class Executable{constructor(){this._maxAttempts=10,this._nextNodeAccountIdIndex=0,this._nodeAccountIds=new List,this._signOnDemand=!1,this._minBackoff=null,this._maxBackoff=null,this._operator=null}get nodeAccountIds(){return this._nodeAccountIds.isEmpty?null:this._nodeAccountIds.list}setNodeAccountIds(t){return this._nodeAccountIds.setList(t).setLocked(),this}get maxRetries(){return console.warn("Deprecated: use maxAttempts instead"),this.maxAttempts}setMaxRetries(t){return console.warn("Deprecated: use setMaxAttempts() instead"),this.setMaxAttempts(t)}get maxAttempts(){return this._maxAttempts}setMaxAttempts(t){return this._maxAttempts=t,this}setMinBackoff(t){if(null==t)throw new Error("minBackoff cannot be null.");if(null!=this._maxBackoff&&t>this._maxBackoff)throw new Error("minBackoff cannot be larger than maxBackoff.");return this._minBackoff=t,this}get minBackoff(){return this._minBackoff}setMaxBackoff(t){if(null==t)throw new Error("maxBackoff cannot be null.");if(null!=this._minBackoff&&t<this._minBackoff)throw new Error("maxBackoff cannot be smaller than minBackoff.");return this._maxBackoff=t,this}get maxBackoff(){return this._maxBackoff}_beforeExecute(t){throw new Error("not implemented")}_makeRequestAsync(){throw new Error("not implemented")}_mapStatusError(t,e){throw new Error("not implemented")}_mapResponse(t,e,Q){throw new Error("not implemented")}_execute(t,e){throw new Error("not implemented")}_getNodeAccountId(){throw new Error("not implemented")}_getTransactionId(){throw new Error("not implemented")}_advanceRequest(){this._nextNodeAccountIdIndex=(this._nextNodeAccountIdIndex+1)%this._nodeAccountIds.length}_shouldRetry(t,e){throw new Error("not implemented")}_shouldRetryExceptionally(t){return t.status._code===GrpcStatus.Unavailable._code||t.status._code===GrpcStatus.ResourceExhausted._code||t.status._code===GrpcStatus.Internal._code&&RST_STREAM.test(t.message)}async execute(t){await this._beforeExecute(t),null==this._maxBackoff&&(this._maxBackoff=t.maxBackoff),null==this._minBackoff&&(this._minBackoff=t.minBackoff);const e=null!=t._maxAttempts?t._maxAttempts:this._maxAttempts;for(let Q=1;;Q+=1){const B=this._getNodeAccountId(),s=t._network.getNode(B);if(null==s)throw new Error(`NodeAccountId not recognized: ${B.toString()}`);const F=s.getChannel(),U=await this._makeRequestAsync();let n;this._advanceRequest(),s.isHealthy()||await s.wait();try{n=await this._execute(F,U)}catch(t){const B=GrpcServiceError._fromResponse(t);if(B instanceof GrpcServiceError&&this._shouldRetryExceptionally(B)&&Q<=e){s.increaseDelay();continue}throw t}switch(s.decreaseDelay(),this._shouldRetry(U,n)){case ExecutionState.Retry:await delayForAttempt(Q,this._minBackoff,this._maxBackoff);continue;case ExecutionState.Finished:return this._mapResponse(n,B,U);case ExecutionState.Error:throw this._mapStatusError(U,n);default:throw new Error("(BUG) non-exhuastive switch statement for `ExecutionState`")}}}}function delayForAttempt(t,e,Q){const B=Math.min(Math.floor(e*Math.pow(2,t)),Q);return new Promise((t=>setTimeout(t,B)))}const MAX_NS=long$1.fromNumber(1e9);class Timestamp{constructor(t,e){this.seconds=t instanceof long$1?t:long$1.fromNumber(t),this.nanos=e instanceof long$1?e:long$1.fromNumber(e),Object.freeze(this)}static generate(){const t=Math.floor(5e3*Math.random())+8e3,e=Date.now()-t,Q=Math.floor(e/1e3),B=1e6*Math.floor(e%1e3)+Math.floor(1e6*Math.random());return new Timestamp(Q,B)}static fromDate(t){let e;if("number"==typeof t)e=t;else if("string"==typeof t)e=Date.parse(t);else{if(!(t instanceof Date))throw new TypeError(`invalid type '${typeof t}' for 'data', expected 'Date'`);e=t.getTime()}const Q=Math.floor(e/1e3),B=1e6*Math.floor(e%1e3);return new Timestamp(Q,B)}toDate(){return new Date(1e3*this.seconds.toInt()+Math.floor(this.nanos.toInt()/1e6))}plusNanos(t){const e=this.nanos.add(t);return new Timestamp(this.seconds.add(e.div(MAX_NS)),e.mod(MAX_NS))}_toProtobuf(){return{seconds:this.seconds,nanos:this.nanos.toInt()}}static _fromProtobuf(t){return new Timestamp(t.seconds instanceof long$1?t.seconds.toInt():null!=t.seconds?t.seconds:0,null!=t.nanos?t.nanos:0)}toString(){return`${this.seconds.toString()}.${this.nanos.toString()}`}compare(t){const e=this.seconds.compare(t.seconds);return 0!=e?e:this.nanos.compare(t.nanos)}}class TransactionId{constructor(t,e,Q=!1,B=null){this.accountId=t,this.validStart=e,this.scheduled=Q,this.nonce=null,null!=B&&0!=B&&this.setNonce(B),Object.freeze(this)}setNonce(t){return this.nonce="number"==typeof t?long$1.fromNumber(t):t,this}static withValidStart(t,e){return new TransactionId(t,e,null)}static generate(t){return new TransactionId("string"==typeof t?AccountId.fromString(t):new AccountId(t),Timestamp.generate())}static fromString(t){let e,Q,B,s,F,U;return[e,U]=t.split("@"),[Q,U]=U.split("."),U.includes("?")?([B,U]=U.split("?scheduled"),s=!0,F=U.includes("/")?U.replace("/",""):null):U.includes("/")?([B,F]=U.split("/"),s=!1):B=U,new TransactionId(AccountId.fromString(e),new Timestamp(long$1.fromValue(Q),long$1.fromValue(B)),s,null!=F?long$1.fromString(F):null)}setScheduled(t){return this.scheduled=t,this}toString(){if(null!=this.accountId&&null!=this.validStart){const t=null!=this.nonce?"/".concat(this.nonce.toString()):"",e=this.scheduled?"?scheduled":"";return`${this.accountId.toString()}@${this.validStart.seconds.toString()}.${this.validStart.nanos.toString()}${e}${t}`}throw new Error("neither `accountId` nor `validStart` are set")}static _fromProtobuf(t){if(null!=t.accountID&&null!=t.transactionValidStart)return new TransactionId(AccountId._fromProtobuf(t.accountID),Timestamp._fromProtobuf(t.transactionValidStart),t.scheduled,t.nonce);throw new Error("Neither `nonce` or `accountID` and `transactionValidStart` are set")}_toProtobuf(){return{accountID:null!=this.accountId?this.accountId._toProtobuf():null,transactionValidStart:null!=this.validStart?this.validStart._toProtobuf():null,scheduled:this.scheduled,nonce:null!=this.nonce?this.nonce.toInt():null}}static fromBytes(t){return TransactionId._fromProtobuf(lib.TransactionID.decode(t))}toBytes(){return lib.TransactionID.encode(this._toProtobuf()).finish()}clone(){return new TransactionId(this.accountId,this.validStart,this.scheduled,this.nonce)}compare(t){const e=this.accountId.compare(t.accountId);return 0!=e?e:this.validStart.compare(t.validStart)}}class PrecheckStatusError extends StatusError{constructor(t){super(t,`transaction ${t.transactionId.toString()} failed precheck with status ${t.status.toString()}`)}}class MaxQueryPaymentExceeded extends Error{constructor(t,e){super(),this.message=`query cost of ${t.toString()} HBAR exceeds max set on client: ${e.toString()} HBAR`,this.name="MaxQueryPaymentExceededError",this.queryCost=t,this.maxQueryPayment=e}}const QUERY_REGISTRY=new Map;class Query extends Executable{constructor(){super(),this._paymentTransactionId=null,this._paymentTransactions=[],this._queryPayment=null,this._maxQueryPayment=null}static fromBytes(t){const e=lib.Query.decode(t);if(null==e.query)throw new Error("(BUG) query.query was not set in the protobuf");const Q=QUERY_REGISTRY.get(e.query);if(null==Q)throw new Error(`(BUG) Query.fromBytes() not implemented for type ${e.query}`);return Q(e)}toBytes(){return lib.Query.encode(this._makeRequest()).finish()}setQueryPayment(t){return this._queryPayment=t,this}setMaxQueryPayment(t){return this._maxQueryPayment=t,this}getCost(t){if(this._nodeAccountIds.isEmpty&&this._nodeAccountIds.setList(t._network.getNodeAccountIdsForExecute()),1!=COST_QUERY.length)throw new Error("CostQuery has not been loaded yet");return COST_QUERY[0](this).execute(t)}setPaymentTransactionId(t){return this._paymentTransactionId=t,this}get paymentTransactionId(){return this._paymentTransactionId}_getTransactionId(){if(null==this._paymentTransactionId)throw new Error("Query.PaymentTransactionId was not set duration execution");return this._paymentTransactionId}_isPaymentRequired(){return!0}_validateChecksums(t){}async _beforeExecute(t){if(this._paymentTransactions.length>0)return;t.isAutoValidateChecksumsEnabled()&&this._validateChecksums(t),this._nodeAccountIds.isEmpty&&this._nodeAccountIds.setList(t._network.getNodeAccountIdsForExecute());const e=t._operator;if(null==this._paymentTransactionId)if(this._isPaymentRequired()){if(null==e)throw new Error("`client` must have an `operator` or an explicit payment transaction must be provided");this._paymentTransactionId=TransactionId.generate(e.accountId)}else this._paymentTransactionId=TransactionId.generate(new AccountId(0));let Q=null!=this._queryPayment?this._queryPayment:t.maxQueryPayment;if(0===this._paymentTransactions.length&&this._isPaymentRequired()){if(null==this._queryPayment){const e=await this.getCost(t);if(Q.toTinybars().toInt()<e.toTinybars().toInt())throw new MaxQueryPaymentExceeded(Q,e);Q=e}}else Q=new Hbar(0);for(const t of this._nodeAccountIds.list)this._paymentTransactions.push(await _makePaymentTransaction(this._paymentTransactionId,t,this._isPaymentRequired()?e:null,Q))}_mapResponseHeader(t){throw new Error("not implemented")}_makeRequestHeader(){let t={};return this._isPaymentRequired()&&this._paymentTransactions.length>0&&(t={responseType:lib.ResponseType.ANSWER_ONLY,payment:this._paymentTransactions[this._nextNodeAccountIdIndex]}),t}_onMakeRequest(t){throw new Error("not implemented")}_makeRequest(){let t={};return this._isPaymentRequired()&&null!=this._paymentTransactions&&(t={payment:this._paymentTransactions[this._nextNodeAccountIdIndex],responseType:lib.ResponseType.ANSWER_ONLY}),this._onMakeRequest(t)}_makeRequestAsync(){return Promise.resolve(this._makeRequest())}_shouldRetry(t,e){const{nodeTransactionPrecheckCode:Q}=this._mapResponseHeader(e);switch(Status._fromCode(null!=Q?Q:lib.ResponseCodeEnum.OK)){case Status.Busy:case Status.Unknown:case Status.PlatformTransactionNotCreated:return ExecutionState.Retry;case Status.Ok:return ExecutionState.Finished;default:return ExecutionState.Error}}_mapStatusError(t,e){const{nodeTransactionPrecheckCode:Q}=this._mapResponseHeader(e),B=Status._fromCode(null!=Q?Q:lib.ResponseCodeEnum.OK);return new PrecheckStatusError({status:B,transactionId:this._getTransactionId()})}_getNodeAccountId(){if(this._nodeAccountIds.isEmpty)throw new Error("(BUG) nodeAccountIds were not set for query before executing");return this._nodeAccountIds.list[this._nextNodeAccountIdIndex]}_advanceRequest(){this._isPaymentRequired()&&this._paymentTransactions.length>0?super._nextNodeAccountIdIndex=(this._nextNodeAccountIdIndex+1)%this._paymentTransactions.length:super._advanceRequest()}}async function _makePaymentTransaction(t,e,Q,B){const s=[];null!=Q?(s.push({accountID:Q.accountId._toProtobuf(),amount:B.negated().toTinybars()}),s.push({accountID:e._toProtobuf(),amount:B.toTinybars()})):(s.push({accountID:new AccountId(0)._toProtobuf(),amount:B.negated().toTinybars()}),s.push({accountID:e._toProtobuf(),amount:B.toTinybars()}));const F={transactionID:t._toProtobuf(),nodeAccountID:e._toProtobuf(),transactionFee:new Hbar(1).toTinybars(),transactionValidDuration:{seconds:long$1.fromNumber(120)},cryptoTransfer:{transfers:{accountAmounts:s}}},U={bodyBytes:lib.TransactionBody.encode(F).finish()};if(null!=Q){const t=await Q.transactionSigner(U.bodyBytes);U.sigMap={sigPair:[Q.publicKey._toProtobufSignature(t)]}}return{signedTransactionBytes:lib.SignedTransaction.encode(U).finish()}}const COST_QUERY=[];class ContractId extends Key{constructor(t,e,Q,B){super();const s=constructor(t,e,Q);this.shard=s.shard,this.realm=s.realm,this.num=s.num,this.evmAddress=null!=B?B:null,this._checksum=null}static fromEvmAddress(t,e,Q){return new ContractId(t,e,0,decode$1(Q))}static fromString(t){const e=fromStringSplitter(t);if(Number.isNaN(e.shard)||Number.isNaN(e.realm))throw new Error("invalid format for entity ID");const Q=null!=e.shard?long$1.fromString(e.shard):long$1.ZERO,B=null!=e.realm?long$1.fromString(e.realm):long$1.ZERO,[s,F]=e.numOrHex.length<40?[long$1.fromString(e.numOrHex),void 0]:[long$1.ZERO,decode$1(e.numOrHex)];return new ContractId(Q,B,s,F)}static _fromProtobuf(t){return new ContractId(null!=t.shardNum?t.shardNum:0,null!=t.realmNum?t.realmNum:0,null!=t.contractNum?t.contractNum:0)}get checksum(){return this._checksum}validate(t){console.warn("Deprecated: Use `validateChecksum` instead"),this.validateChecksum(t)}validateChecksum(t){validateChecksum(this.shard,this.realm,this.num,this._checksum,t)}static fromBytes(t){return ContractId._fromProtobuf(lib.ContractID.decode(t))}static fromSolidityAddress(t){console.warn("Deprecated: use `ContractId.fromEvmAdress()` instead");const[e,Q,B]=fromSolidityAddress(t);return new ContractId(e,Q,B)}toSolidityAddress(){return null!=this.evmAddress?encode$1(this.evmAddress):toSolidityAddress([this.shard,this.realm,this.num])}_toProtobuf(){return{contractNum:this.num,shardNum:this.shard,realmNum:this.realm,evmAddress:this.evmAddress}}toString(){return null!=this.evmAddress?`${this.shard.toString()}.${this.realm.toString()}.${encode$1(this.evmAddress)}`:`${this.shard.toString()}.${this.realm.toString()}.${this.num.toString()}`}toStringWithChecksum(t){return toStringWithChecksum(this.toString(),t)}toBytes(){return lib.ContractID.encode(this._toProtobuf()).finish()}clone(){const t=new ContractId(this);return t._checksum=this._checksum,t.evmAddress=this.evmAddress,t}compare(t){return compare([this.shard,this.realm,this.num],[t.shard,t.realm,t.num])}_toProtobufKey(){return{contractID:this._toProtobuf()}}static __fromProtobufKey(t){return ContractId._fromProtobuf(t)}}CACHE.contractId=t=>ContractId.__fromProtobufKey(t);class FileId{constructor(t,e,Q){const B=constructor(t,e,Q);this.shard=B.shard,this.realm=B.realm,this.num=B.num,this._checksum=null}static fromString(t){const e=fromString$1(t),Q=new FileId(e);return Q._checksum=e.checksum,Q}static _fromProtobuf(t){return new FileId(null!=t.shardNum?t.shardNum:0,null!=t.realmNum?t.realmNum:0,null!=t.fileNum?t.fileNum:0)}get checksum(){return this._checksum}validate(t){console.warn("Deprecated: Use `validateChecksum` instead"),this.validateChecksum(t)}validateChecksum(t){validateChecksum(this.shard,this.realm,this.num,this._checksum,t)}static fromBytes(t){return FileId._fromProtobuf(lib.FileID.decode(t))}static fromSolidityAddress(t){const[e,Q,B]=fromSolidityAddress(t);return new FileId(e,Q,B)}toSolidityAddress(){return toSolidityAddress([this.shard,this.realm,this.num])}_toProtobuf(){return{fileNum:this.num,shardNum:this.shard,realmNum:this.realm}}toString(){return`${this.shard.toString()}.${this.realm.toString()}.${this.num.toString()}`}toStringWithChecksum(t){return toStringWithChecksum(this.toString(),t)}toBytes(){return lib.FileID.encode(this._toProtobuf()).finish()}clone(){const t=new FileId(this);return t._checksum=this._checksum,t}compare(t){return compare([this.shard,this.realm,this.num],[t.shard,t.realm,t.num])}}class TopicId{constructor(t,e,Q){const B=constructor(t,e,Q);this.shard=B.shard,this.realm=B.realm,this.num=B.num,this._checksum=null}static fromString(t){const e=fromString$1(t),Q=new TopicId(e);return Q._checksum=e.checksum,Q}static _fromProtobuf(t){return new TopicId(null!=t.shardNum?t.shardNum:0,null!=t.realmNum?t.realmNum:0,null!=t.topicNum?t.topicNum:0)}get checksum(){return this._checksum}validate(t){console.warn("Deprecated: Use `validateChecksum` instead"),this.validateChecksum(t)}validateChecksum(t){validateChecksum(this.shard,this.realm,this.num,this._checksum,t)}static fromBytes(t){return TopicId._fromProtobuf(lib.TopicID.decode(t))}static fromSolidityAddress(t){const[e,Q,B]=fromSolidityAddress(t);return new TopicId(e,Q,B)}toSolidityAddress(){return toSolidityAddress([this.shard,this.realm,this.num])}_toProtobuf(){return{topicNum:this.num,shardNum:this.shard,realmNum:this.realm}}toString(){return`${this.shard.toString()}.${this.realm.toString()}.${this.num.toString()}`}toStringWithChecksum(t){return toStringWithChecksum(this.toString(),t)}toBytes(){return lib.TopicID.encode(this._toProtobuf()).finish()}clone(){const t=new TopicId(this);return t._checksum=this._checksum,t}compare(t){return compare([this.shard,this.realm,this.num],[t.shard,t.realm,t.num])}}class TokenId{constructor(t,e,Q){const B=constructor(t,e,Q);this.shard=B.shard,this.realm=B.realm,this.num=B.num,this._checksum=null}static fromString(t){const e=fromString$1(t),Q=new TokenId(e);return Q._checksum=e.checksum,Q}static _fromProtobuf(t){return new TokenId(null!=t.shardNum?t.shardNum:0,null!=t.realmNum?t.realmNum:0,null!=t.tokenNum?t.tokenNum:0)}get checksum(){return this._checksum}validate(t){console.warn("Deprecated: Use `validateChecksum` instead"),this.validateChecksum(t)}validateChecksum(t){validateChecksum(this.shard,this.realm,this.num,this._checksum,t)}static fromBytes(t){return TokenId._fromProtobuf(lib.TokenID.decode(t))}static fromSolidityAddress(t){return new TokenId(...fromSolidityAddress(t))}toSolidityAddress(){return toSolidityAddress([this.shard,this.realm,this.num])}_toProtobuf(){return{tokenNum:this.num,shardNum:this.shard,realmNum:this.realm}}toString(){return`${this.shard.toString()}.${this.realm.toString()}.${this.num.toString()}`}toStringWithChecksum(t){return toStringWithChecksum(this.toString(),t)}toBytes(){return lib.TokenID.encode(this._toProtobuf()).finish()}clone(){const t=new TokenId(this);return t._checksum=this._checksum,t}compare(t){return compare([this.shard,this.realm,this.num],[t.shard,t.realm,t.num])}}class ScheduleId{constructor(t,e,Q){const B=constructor(t,e,Q);this.shard=B.shard,this.realm=B.realm,this.num=B.num,this._checksum=null}static fromString(t){const e=fromString$1(t),Q=new ScheduleId(e);return Q._checksum=e.checksum,Q}static _fromProtobuf(t){return new ScheduleId(null!=t.shardNum?t.shardNum:0,null!=t.realmNum?t.realmNum:0,null!=t.scheduleNum?t.scheduleNum:0)}get checksum(){return this._checksum}validate(t){console.warn("Deprecated: Use `validateChecksum` instead"),this.validateChecksum(t)}validateChecksum(t){validateChecksum(this.shard,this.realm,this.num,this._checksum,t)}static fromBytes(t){return ScheduleId._fromProtobuf(lib.ScheduleID.decode(t))}static fromSolidityAddress(t){return new ScheduleId(...fromSolidityAddress(t))}toSolidityAddress(){return toSolidityAddress([this.shard,this.realm,this.num])}_toProtobuf(){return{scheduleNum:this.num,shardNum:this.shard,realmNum:this.realm}}toString(){return`${this.shard.toString()}.${this.realm.toString()}.${this.num.toString()}`}toStringWithChecksum(t){return toStringWithChecksum(this.toString(),t)}toBytes(){return lib.ScheduleID.encode(this._toProtobuf()).finish()}clone(){const t=new ScheduleId(this);return t._checksum=this._checksum,t}compare(t){return compare([this.shard,this.realm,this.num],[t.shard,t.realm,t.num])}}class ExchangeRate{constructor(t){this.hbars=t.hbars,this.cents=t.cents,this.expirationTime=t.expirationTime,Object.freeze(this)}static _fromProtobuf(t){return new ExchangeRate({hbars:t.hbarEquiv,cents:t.centEquiv,expirationTime:new Date(null!=t.expirationTime&&null!=t.expirationTime.seconds?t.expirationTime.seconds instanceof long$1?t.expirationTime.seconds.toInt():t.expirationTime.seconds:0)})}_toProtobuf(){return{hbarEquiv:this.hbars,centEquiv:this.cents,expirationTime:{seconds:long$1.fromNumber(this.expirationTime.getSeconds())}}}}class TransactionReceipt{constructor(t){this.status=t.status,this.accountId=t.accountId,this.fileId=t.fileId,this.contractId=t.contractId,this.topicId=t.topicId,this.tokenId=t.tokenId,this.scheduleId=t.scheduleId,this.exchangeRate=t.exchangeRate,this.topicSequenceNumber=t.topicSequenceNumber,this.topicRunningHash=t.topicRunningHash,this.totalSupply=t.totalSupply,this.scheduledTransactionId=t.scheduledTransactionId,this.serials=t.serials,this.duplicates=t.duplicates,this.children=t.children,Object.freeze(this)}_toProtobuf(){return{duplicateTransactionReceipts:this.duplicates.map((t=>t._toProtobuf().receipt)),childTransactionReceipts:this.children.map((t=>t._toProtobuf().receipt)),receipt:{status:this.status.valueOf(),accountID:null!=this.accountId?this.accountId._toProtobuf():null,fileID:null!=this.fileId?this.fileId._toProtobuf():null,contractID:null!=this.contractId?this.contractId._toProtobuf():null,topicID:null!=this.topicId?this.topicId._toProtobuf():null,tokenID:null!=this.topicId?this.topicId._toProtobuf():null,scheduleID:null!=this.topicId?this.topicId._toProtobuf():null,topicRunningHash:null==this.topicRunningHash?null:this.topicRunningHash,topicSequenceNumber:this.topicSequenceNumber,exchangeRate:{nextRate:null,currentRate:null!=this.exchangeRate?this.exchangeRate._toProtobuf():null},scheduledTransactionID:null!=this.scheduledTransactionId?this.scheduledTransactionId._toProtobuf():null,serialNumbers:this.serials}}}static _fromProtobuf(t){const e=t.receipt,Q=e.exchangeRate,B=null!=t.childTransactionReceipts?t.childTransactionReceipts.map((t=>TransactionReceipt._fromProtobuf({receipt:t}))):[],s=null!=t.duplicateTransactionReceipts?t.duplicateTransactionReceipts.map((t=>TransactionReceipt._fromProtobuf({receipt:t}))):[];return new TransactionReceipt({status:Status._fromCode(null!=e.status?e.status:0),accountId:null!=e.accountID?AccountId._fromProtobuf(e.accountID):null,fileId:null!=e.fileID?FileId._fromProtobuf(e.fileID):null,contractId:null!=e.contractID?ContractId._fromProtobuf(e.contractID):null,topicId:null!=e.topicID?TopicId._fromProtobuf(e.topicID):null,tokenId:null!=e.tokenID?TokenId._fromProtobuf(e.tokenID):null,scheduleId:null!=e.scheduleID?ScheduleId._fromProtobuf(e.scheduleID):null,exchangeRate:null!=e.exchangeRate?ExchangeRate._fromProtobuf(Q.currentRate):null,topicSequenceNumber:null==e.topicSequenceNumber?null:long$1.fromValue(e.topicSequenceNumber),topicRunningHash:null!=e.topicRunningHash?e.topicRunningHash:null,totalSupply:null!=e.newTotalSupply?e.newTotalSupply:null,scheduledTransactionId:null!=e.scheduledTransactionID?TransactionId._fromProtobuf(e.scheduledTransactionID):null,serials:null!=e.serialNumbers?e.serialNumbers:[],children:B,duplicates:s})}static fromBytes(t){return TransactionReceipt._fromProtobuf(lib.TransactionGetReceiptResponse.decode(t))}toBytes(){return lib.TransactionGetReceiptResponse.encode(this._toProtobuf()).finish()}}class TransactionReceiptQuery extends Query{constructor(t={}){super(),this._transactionId=null,this._includeChildren=null,this._includeDuplicates=null,null!=t.transactionId&&this.setTransactionId(t.transactionId),null!=t.includeChildren&&this.setIncludeChildren(t.includeChildren),null!=t.includeDuplicates&&this.setIncludeDuplicates(t.includeDuplicates)}static _fromProtobuf(t){const e=t.transactionGetReceipt;return new TransactionReceiptQuery({transactionId:e.transactionID?TransactionId._fromProtobuf(e.transactionID):void 0,includeDuplicates:null!=e.includeDuplicates?e.includeDuplicates:void 0,includeChildren:null!=e.includeChildReceipts?e.includeChildReceipts:void 0})}get transactionId(){return this._transactionId}setTransactionId(t){return this._transactionId="string"==typeof t?TransactionId.fromString(t):t.clone(),this}setIncludeDuplicates(t){return this._includeDuplicates=t,this}get includeDuplicates(){return null!=this._includeDuplicates&&this._includeDuplicates}setIncludeChildren(t){return this._includeChildren=t,this}get includeChildren(){return null!=this._includeChildren&&this._includeChildren}_isPaymentRequired(){return!1}_shouldRetry(t,e){const{nodeTransactionPrecheckCode:Q}=this._mapResponseHeader(e);let B=Status._fromCode(null!=Q?Q:lib.ResponseCodeEnum.OK);switch(B){case Status.Busy:case Status.Unknown:case Status.ReceiptNotFound:return ExecutionState.Retry;case Status.Ok:break;default:return ExecutionState.Error}const s=e.transactionGetReceipt.receipt.status;switch(B=Status._fromCode(s),B){case Status.Busy:case Status.Unknown:case Status.ReceiptNotFound:return ExecutionState.Retry;case Status.Success:return ExecutionState.Finished;default:return ExecutionState.Error}}_mapStatusError(t,e){const{nodeTransactionPrecheckCode:Q}=this._mapResponseHeader(e);let B=Status._fromCode(null!=Q?Q:lib.ResponseCodeEnum.OK);if(B!==Status.Ok)return new PrecheckStatusError({status:B,transactionId:this._getTransactionId()});const s=e.transactionGetReceipt,F=s.receipt.status;return B=Status._fromCode(F),new ReceiptStatusError({status:B,transactionId:this._getTransactionId(),transactionReceipt:TransactionReceipt._fromProtobuf(s)})}_validateChecksums(t){null!=this._transactionId&&null!=this._transactionId.accountId&&this._transactionId.accountId.validateChecksum(t)}_execute(t,e){return t.crypto.getTransactionReceipts(e)}_mapResponseHeader(t){return t.transactionGetReceipt.header}_mapResponse(t,e,Q){const B=t.transactionGetReceipt;return Promise.resolve(TransactionReceipt._fromProtobuf(B))}_onMakeRequest(t){return{transactionGetReceipt:{header:t,transactionID:null!=this._transactionId?this._transactionId._toProtobuf():null,includeDuplicates:this._includeDuplicates,includeChildReceipts:this._includeChildren}}}}QUERY_REGISTRY.set("transactionGetReceipt",TransactionReceiptQuery._fromProtobuf);class Transfer{constructor(t){this.accountId=t.accountId instanceof AccountId?t.accountId:AccountId.fromString(t.accountId),this.amount=t.amount instanceof Hbar?t.amount:new Hbar(t.amount),this.isApproved=t.isApproved}static _fromProtobuf(t){const e=[];for(const Q of t)e.push(new Transfer({accountId:AccountId._fromProtobuf(Q.accountID),amount:Hbar.fromTinybars(null!=Q.amount?Q.amount:0),isApproved:Q.isApproval}));return e}_toProtobuf(){return{accountID:this.accountId._toProtobuf(),amount:this.amount.toTinybars(),isApproval:this.isApproved}}}class ContractLogInfo{constructor(t){this.contractId=t.contractId,this.bloom=t.bloom,this.topics=t.topics,this.data=t.data,Object.freeze(this)}static _fromProtobuf(t){return new ContractLogInfo({contractId:ContractId._fromProtobuf(t.contractID),bloom:null!=t.bloom?t.bloom:new Uint8Array,topics:null!=t.topic?t.topic:[],data:null!=t.data?t.data:new Uint8Array})}_toProtobuf(){return{contractID:this.contractId._toProtobuf(),bloom:this.bloom,topic:this.topics,data:this.data}}}function decode(t){return(new TextDecoder).decode(t)}function encode(t){return(new TextEncoder).encode(t)}class StorageChange{constructor(t){this.slot=t.slot,this.valueRead=t.valueRead,this.valueWritten=t.valueWritten}static _fromProtobuf(t){return new StorageChange({slot:t.slot,valueRead:t.valueRead,valueWritten:null!=t.valueWritten&&null!=t.valueWritten.value?t.valueWritten.value:null})}static fromBytes(t){return StorageChange._fromProtobuf(lib.StorageChange.decode(t))}_toProtobuf(){return{slot:this.slot,valueRead:this.valueRead,valueWritten:null!=this.valueWritten?{value:this.valueWritten}:null}}toBytes(){return lib.StorageChange.encode(this._toProtobuf()).finish()}}class ContractStateChange{constructor(t){this.contractId=t.contractId,this.storageChanges=t.storageChanges,Object.freeze(this)}static _fromProtobuf(t){return new ContractStateChange({contractId:ContractId._fromProtobuf(t.contractID),storageChanges:(null!=t.storageChanges?t.storageChanges:[]).map((t=>StorageChange._fromProtobuf(t)))})}static fromBytes(t){return ContractStateChange._fromProtobuf(lib.ContractStateChange.decode(t))}_toProtobuf(){const t=this.storageChanges.map((t=>t._toProtobuf()));return{contractID:this.contractId._toProtobuf(),storageChanges:t}}toBytes(){return lib.ContractStateChange.encode(this._toProtobuf()).finish()}}class ContractFunctionResult{constructor(t){this.contractId=t.contractId,this.bytes=t.bytes,this.errorMessage=t.errorMessage,this.bloom=t.bloom,this.gasUsed=t.gasUsed,this.logs=t.logs,this.createdContractIds=t.createdContractIds,this.evmAddress=t.evmAddress,this.stateChanges=t.stateChanges}static _fromProtobuf(t){const e=t.contractID,Q=t.gasUsed;return new ContractFunctionResult({bytes:t.contractCallResult,contractId:null!=e?ContractId._fromProtobuf(e):null,errorMessage:null!=t.errorMessage?t.errorMessage:null,bloom:t.bloom,gasUsed:Q instanceof long$1?Q:long$1.fromValue(Q),logs:(null!=t.logInfo?t.logInfo:[]).map((t=>ContractLogInfo._fromProtobuf(t))),createdContractIds:(null!=t.createdContractIDs?t.createdContractIDs:[]).map((t=>ContractId._fromProtobuf(t))),evmAddress:null!=t.evmAddress&&null!=t.evmAddress.value?t.evmAddress.value:null,stateChanges:(null!=t.stateChanges?t.stateChanges:[]).map((t=>ContractStateChange._fromProtobuf(t)))})}asBytes(){return this.bytes}getString(t){return decode(this.getBytes(t))}getBytes(t){const e=this.getInt32(t),Q=safeView(this.bytes).getInt32(e+28);return this.bytes.subarray(e+32,e+32+Q)}getBytes32(t){return this.bytes.subarray(32*(null!=t?t:0),32*(null!=t?t:0)+32)}getBool(t){return 0!==this.bytes[32*(null!=t?t:0)+31]}getInt8(t){return this.bytes[32*(null!=t?t:0)+31]}getInt32(t){const e=32*(null!=t?t:0)+28;return safeView(this.bytes).getInt32(e)}getInt64(t){return new BigNumber$1(encode$1(this._getBytes32(null!=t?t:0).subarray(24,32)),16)}getInt256(t){return new BigNumber$1(encode$1(this._getBytes32(null!=t?t:0)),16)}getUint8(t){return this.bytes[32*(null!=t?t:0)+31]}getUint32(t){const e=32*(null!=t?t:0)+28;return safeView(this.bytes).getUint32(e)}getUint64(t){return new BigNumber$1(encode$1(this._getBytes32(t).subarray(24,32)),16)}getUint256(t){return new BigNumber$1(encode$1(this._getBytes32(t)),16)}getAddress(t){return encode$1(this.bytes.subarray(32*(null!=t?t:0)+12,32*(null!=t?t:0)+32))}_getBytes32(t){return this.bytes.subarray(32*(null!=t?t:0),32*(null!=t?t:0)+32)}}class ObjectMap{constructor(t){this._map=new Map,this.__map=new Map,this._fromString=t}get(t){const e="string"==typeof t?t:t.toString(),Q=this._map.get(e);return null!=Q?Q:null}_set(t,e){const Q="string"==typeof t?t:t.toString();this._map.set(Q,e),this.__map.set(t,e)}values(){return this._map.values()}get size(){return this._map.size}keys(){return this.__map.keys()}[Symbol.iterator](){return this.__map[Symbol.iterator]()}toString(){const t={};for(const[e,Q]of this._map)t[e]=Q;return JSON.stringify(t)}}class TokenTransferAccountMap extends ObjectMap{constructor(){super((t=>AccountId.fromString(t)))}}class TokenTransferMap extends ObjectMap{constructor(){super((t=>TokenId.fromString(t)))}__set(t,e,Q){const B=t.toString();let s=this._map.get(B);null==s&&(s=new TokenTransferAccountMap,this._map.set(B,s),this.__map.set(t,s)),s._set(e,Q)}static _fromProtobuf(t){const e=new TokenTransferMap;for(const Q of t){const t=TokenId._fromProtobuf(Q.token);for(const B of null!=Q.transfers?Q.transfers:[]){const Q=AccountId._fromProtobuf(B.accountID);e.__set(t,Q,B.amount)}}return e}_toProtobuf(){const t=[];for(const[e,Q]of this){const B=[];for(const[t,e]of Q)B.push({accountID:t._toProtobuf(),amount:e});t.push({token:e._toProtobuf(),transfers:B})}return t}}class TokenNftTransferMap extends ObjectMap{constructor(){super((t=>TokenId.fromString(t)))}__set(t,e){const Q=t.toString();let B=this._map.get(Q);null==B&&(B=[],this._map.set(Q,B),this.__map.set(t,B)),B.push(e)}static _fromProtobuf(t){const e=new TokenNftTransferMap;for(const Q of t){const t=TokenId._fromProtobuf(Q.token);for(const B of null!=Q.nftTransfers?Q.nftTransfers:[]){const Q=AccountId._fromProtobuf(B.senderAccountID),s=AccountId._fromProtobuf(B.receiverAccountID);e.__set(t,{sender:Q,recipient:s,serial:long$1.fromValue(B.serialNumber),isApproved:!1})}}return e}_toProtobuf(){const t=[];for(const[e,Q]of this){const B=[];for(const t of Q)B.push({senderAccountID:t.sender._toProtobuf(),receiverAccountID:t.recipient._toProtobuf(),serialNumber:t.serial});t.push({token:e._toProtobuf(),nftTransfers:B})}return t}}class AssessedCustomFee{constructor(t={}){this._feeCollectorAccountId,null!=t.feeCollectorAccountId&&this.setFeeCollectorAccountId(t.feeCollectorAccountId),this._tokenId,null!=t.tokenId&&this.setTokenId(t.tokenId),this._amount,null!=t.amount&&this.setAmount(t.amount),this._payerAccountIds,null!=t.payerAccountIds&&this.setPayerAccountIds(t.payerAccountIds)}get feeCollectorAccountId(){return this._feeCollectorAccountId}setFeeCollectorAccountId(t){return this._feeCollectorAccountId="string"==typeof t?AccountId.fromString(t):t,this}get tokenId(){return this._tokenId}setTokenId(t){return this._tokenId="string"==typeof t?TokenId.fromString(t):t,this}get amount(){return this._amount}setAmount(t){return this._amount="number"==typeof t?long$1.fromNumber(t):t,this}get payerAccountIds(){return this._payerAccountIds}setPayerAccountIds(t){return this._payerAccountIds=t,this}static _fromProtobuf(t){return new AssessedCustomFee({feeCollectorAccountId:null!=t.feeCollectorAccountId?AccountId._fromProtobuf(t.feeCollectorAccountId):void 0,tokenId:null!=t.tokenId?TokenId._fromProtobuf(t.tokenId):void 0,amount:null!=t.amount?t.amount:void 0,payerAccountIds:null!=t.effectivePayerAccountId?t.effectivePayerAccountId.map((t=>AccountId._fromProtobuf(t))):void 0})}_toProtobuf(){return{feeCollectorAccountId:null!=this.feeCollectorAccountId?this.feeCollectorAccountId._toProtobuf():null,tokenId:null!=this._tokenId?this._tokenId._toProtobuf():null,amount:this._amount,effectivePayerAccountId:null!=this._payerAccountIds?this._payerAccountIds.map((t=>t._toProtobuf())):null}}}class TokenAssociation{constructor(t={}){this._accountId,null!=t.accountId&&this.setAccountId(t.accountId),this._tokenId,null!=t.tokenId&&this.setTokenId(t.tokenId)}get accountId(){return this._accountId}setAccountId(t){return this._accountId="string"==typeof t?AccountId.fromString(t):t,this}get tokenId(){return this._tokenId}setTokenId(t){return this._tokenId="string"==typeof t?TokenId.fromString(t):t,this}static _fromProtobuf(t){return new TokenAssociation({accountId:null!=t.accountId?AccountId._fromProtobuf(t.accountId):void 0,tokenId:null!=t.tokenId?TokenId._fromProtobuf(t.tokenId):void 0})}_toProtobuf(){return{accountId:null!=this._accountId?this._accountId._toProtobuf():void 0,tokenId:null!=this._tokenId?this._tokenId._toProtobuf():void 0}}}class TokenTransfer{constructor(t){this.tokenId=t.tokenId instanceof TokenId?t.tokenId:TokenId.fromString(t.tokenId),this.accountId=t.accountId instanceof AccountId?t.accountId:AccountId.fromString(t.accountId),this.expectedDecimals=t.expectedDecimals,this.amount=long$1.fromValue(t.amount),this.isApproved=t.isApproved}static _fromProtobuf(t){const e=[];for(const Q of t){const t=TokenId._fromProtobuf(Q.token),B=null!=Q.expectedDecimals?Q.expectedDecimals.value:null;for(const s of null!=Q.transfers?Q.transfers:[])e.push(new TokenTransfer({tokenId:t,accountId:AccountId._fromProtobuf(s.accountID),expectedDecimals:B,amount:null!=s.amount?s.amount:long$1.ZERO,isApproved:1==s.isApproval}))}return e}_toProtobuf(){return{accountID:this.accountId._toProtobuf(),amount:this.amount,isApproval:this.isApproved}}}class TransactionRecord{constructor(t){this.receipt=t.receipt,this.transactionHash=t.transactionHash,this.consensusTimestamp=t.consensusTimestamp,this.transactionId=t.transactionId,this.transactionMemo=t.transactionMemo,this.transactionFee=t.transactionFee,this.transfers=t.transfers,this.contractFunctionResult=null!=t.contractFunctionResult?t.contractFunctionResult:null,this.tokenTransfers=t.tokenTransfers,this.tokenTransfersList=t.tokenTransfersList,this.scheduleRef=t.scheduleRef,this.assessedCustomFees=t.assessedCustomFees,this.nftTransfers=t.nftTransfers,this.automaticTokenAssociations=t.automaticTokenAssociations,this.parentConsensusTimestamp=t.parentConsensusTimestamp,this.aliasKey=t.aliasKey,this.duplicates=t.duplicates,this.children=t.children,Object.freeze(this)}_toProtobuf(){const t=this.tokenTransfers._toProtobuf(),e=this.nftTransfers._toProtobuf(),Q=[];for(const B of t)for(const t of e)null!=B.token&&null!=t.token&&B.token.shardNum===t.token.shardNum&&B.token.realmNum===t.token.realmNum&&B.token.tokenNum===t.token.tokenNum?Q.push({token:B.token,transfers:B.transfers,nftTransfers:B.nftTransfers}):(Q.push(B),Q.push(t));return{duplicateTransactionRecords:this.duplicates.map((t=>t._toProtobuf().transactionRecord)),childTransactionRecords:this.children.map((t=>t._toProtobuf().transactionRecord)),transactionRecord:{receipt:this.receipt._toProtobuf().receipt,transactionHash:null!=this.transactionHash?this.transactionHash:null,consensusTimestamp:null!=this.consensusTimestamp?this.consensusTimestamp._toProtobuf():null,transactionID:null!=this.transactionId?this.transactionId._toProtobuf():null,memo:null!=this.transactionMemo?this.transactionMemo:null,transactionFee:null!=this.transactionFee?this.transactionFee.toTinybars():null,transferList:null!=this.transfers?{accountAmounts:this.transfers.map((t=>t._toProtobuf()))}:null,tokenTransferLists:Q,scheduleRef:null!=this.scheduleRef?this.scheduleRef._toProtobuf():null,assessedCustomFees:this.assessedCustomFees.map((t=>t._toProtobuf())),automaticTokenAssociations:this.automaticTokenAssociations.map((t=>t._toProtobuf())),parentConsensusTimestamp:null!=this.parentConsensusTimestamp?this.parentConsensusTimestamp._toProtobuf():null,alias:null!=this.aliasKey?lib.Key.encode(this.aliasKey._toProtobufKey()).finish():null}}}static _fromProtobuf(t){const e=t.transactionRecord;let Q=null!=e.alias&&e.alias.length>0?Key._fromProtobufKey(lib.Key.decode(e.alias)):null;Q instanceof PublicKey||(Q=null);const B=null!=t.childTransactionRecords?t.childTransactionRecords.map((t=>TransactionRecord._fromProtobuf({transactionRecord:t}))):[],s=null!=t.duplicateTransactionRecords?t.duplicateTransactionRecords.map((t=>TransactionRecord._fromProtobuf({transactionRecord:t}))):[],F=null!=e.contractCallResult?ContractFunctionResult._fromProtobuf(e.contractCallResult):null!=e.contractCreateResult?ContractFunctionResult._fromProtobuf(e.contractCreateResult):void 0;return new TransactionRecord({receipt:TransactionReceipt._fromProtobuf({receipt:e.receipt}),transactionHash:null!=e.transactionHash?e.transactionHash:new Uint8Array,consensusTimestamp:Timestamp._fromProtobuf(e.consensusTimestamp),transactionId:TransactionId._fromProtobuf(e.transactionID),transactionMemo:null!=e.memo?e.memo:"",transactionFee:Hbar.fromTinybars(null!=e.transactionFee?e.transactionFee:0),transfers:Transfer._fromProtobuf(null!=e.transferList&&null!=e.transferList.accountAmounts?e.transferList.accountAmounts:[]),contractFunctionResult:F,tokenTransfers:TokenTransferMap._fromProtobuf(null!=e.tokenTransferLists?e.tokenTransferLists:[]),tokenTransfersList:TokenTransfer._fromProtobuf(null!=e.tokenTransferLists?e.tokenTransferLists:[]),scheduleRef:null!=e.scheduleRef?ScheduleId._fromProtobuf(e.scheduleRef):null,assessedCustomFees:null!=e.assessedCustomFees?e.assessedCustomFees.map((t=>AssessedCustomFee._fromProtobuf(t))):[],nftTransfers:TokenNftTransferMap._fromProtobuf(null!=e.tokenTransferLists?e.tokenTransferLists:[]),automaticTokenAssociations:null!=e.automaticTokenAssociations?e.automaticTokenAssociations.map((t=>TokenAssociation._fromProtobuf(t))):[],parentConsensusTimestamp:null!=e.parentConsensusTimestamp?Timestamp._fromProtobuf(e.parentConsensusTimestamp):null,aliasKey:Q,duplicates:s,children:B})}static fromBytes(t){return TransactionRecord._fromProtobuf(lib.TransactionGetRecordResponse.decode(t))}toBytes(){return lib.TransactionGetRecordResponse.encode(this._toProtobuf()).finish()}}class TransactionRecordQuery extends Query{constructor(t={}){super(),this._transactionId=null,this._includeChildren=null,this._includeDuplicates=null,null!=t.transactionId&&this.setTransactionId(t.transactionId),null!=t.includeChildren&&this.setIncludeChildren(t.includeChildren),null!=t.includeDuplicates&&this.setIncludeDuplicates(t.includeDuplicates)}get transactionId(){return this._transactionId}static _fromProtobuf(t){const e=t.transactionGetRecord;return new TransactionRecordQuery({transactionId:e.transactionID?TransactionId._fromProtobuf(e.transactionID):void 0,includeChildren:null!=e.includeChildRecords?e.includeChildRecords:void 0,includeDuplicates:null!=e.includeDuplicates?e.includeDuplicates:void 0})}setTransactionId(t){return this._transactionId="string"==typeof t?TransactionId.fromString(t):t.clone(),this}setIncludeChildren(t){return this._includeChildren=t,this}get includeChildren(){return null!=this._includeChildren&&this._includeChildren}setIncludeDuplicates(t){return this._duplicates=t,this}get includeDuplicates(){return null!=this._duplicates&&this._duplicates}_shouldRetry(t,e){const{nodeTransactionPrecheckCode:Q}=this._mapResponseHeader(e);let B=Status._fromCode(null!=Q?Q:lib.ResponseCodeEnum.OK);switch(B){case Status.Busy:case Status.Unknown:case Status.ReceiptNotFound:case Status.RecordNotFound:return ExecutionState.Retry;case Status.Ok:break;default:return ExecutionState.Error}const s=e.transactionGetRecord;if(s.header.responseType===lib.ResponseType.COST_ANSWER)return ExecutionState.Finished;const F=s.transactionRecord.receipt.status;switch(B=Status._fromCode(F),B){case Status.Ok:case Status.Busy:case Status.Unknown:case Status.ReceiptNotFound:case Status.RecordNotFound:return ExecutionState.Retry;case Status.Success:return ExecutionState.Finished;default:return ExecutionState.Error}}_mapStatusError(t,e){const{nodeTransactionPrecheckCode:Q}=this._mapResponseHeader(e);let B=Status._fromCode(null!=Q?Q:lib.ResponseCodeEnum.OK);if(B!==Status.Ok)return new PrecheckStatusError({status:B,transactionId:this._getTransactionId()});const s=e.transactionGetRecord.transactionRecord.receipt,F=s.status;return B=Status._fromCode(F),new ReceiptStatusError({status:B,transactionId:this._getTransactionId(),transactionReceipt:TransactionReceipt._fromProtobuf({receipt:s})})}_validateChecksums(t){null!=this._transactionId&&null!=this._transactionId.accountId&&this._transactionId.accountId.validateChecksum(t)}_execute(t,e){return t.crypto.getTxRecordByTxID(e)}_mapResponseHeader(t){return t.transactionGetRecord.header}_mapResponse(t,e,Q){const B=t.transactionGetRecord;return Promise.resolve(TransactionRecord._fromProtobuf(B))}_onMakeRequest(t){return{transactionGetRecord:{header:t,transactionID:null!=this._transactionId?this._transactionId._toProtobuf():null,includeChildRecords:this._includeChildren,includeDuplicates:this._includeDuplicates}}}}QUERY_REGISTRY.set("transactionGetRecord",TransactionRecordQuery._fromProtobuf);class TransactionResponse{constructor(t){this.nodeId=t.nodeId,this.transactionHash=t.transactionHash,this.transactionId=t.transactionId,Object.freeze(this)}async getReceipt(t){const e=await(new TransactionReceiptQuery).setTransactionId(this.transactionId).setNodeAccountIds([this.nodeId]).execute(t);if(e.status!==Status.Success)throw new ReceiptStatusError({transactionReceipt:e,status:e.status,transactionId:this.transactionId});return e}async getRecord(t){return await this.getReceipt(t),(new TransactionRecordQuery).setTransactionId(this.transactionId).setNodeAccountIds([this.nodeId]).execute(t)}}async function digest(t){return new Uint8Array(await crypto.subtle.digest("SHA-384",t))}class TransactionHashMap extends ObjectMap{constructor(){super((t=>AccountId.fromString(t)))}static async _fromTransaction(t){const e=new TransactionHashMap;for(let Q=0;Q<t._nodeAccountIds.length;Q++){const B=t._nodeAccountIds.list[Q],s=t._transactions.get(Q),F=await digest(s.signedTransactionBytes);e._set(B,F)}return e}}class NodeAccountIdSignatureMap extends ObjectMap{constructor(){super((t=>PublicKey.fromString(t)))}static _fromTransactionSigMap(t){const e=new NodeAccountIdSignatureMap,Q=null!=t.sigPair?t.sigPair:[];for(const t of Q)null!=t.pubKeyPrefix&&(null!=t.ed25519?e._set(PublicKey.fromBytesED25519(t.pubKeyPrefix),t.ed25519):null!=t.ECDSASecp256k1&&e._set(PublicKey.fromBytesECDSA(t.pubKeyPrefix),t.ECDSASecp256k1));return e}}class SignatureMap extends ObjectMap{constructor(){super((t=>AccountId.fromString(t)))}static _fromTransaction(t){const e=new SignatureMap;for(let Q=0;Q<t._nodeAccountIds.length;Q++){const B=t._signedTransactions.get(Q).sigMap;null!=B&&e._set(t._nodeAccountIds.list[Q],NodeAccountIdSignatureMap._fromTransactionSigMap(B))}return e}}const DEFAULT_AUTO_RENEW_PERIOD=long$1.fromValue(7776e3),DEFAULT_RECORD_THRESHOLD=Hbar.fromTinybars(long$1.fromString("9223372036854775807")),DEFAULT_TRANSACTION_VALID_DURATION=120,CHUNK_SIZE=1024,TRANSACTION_REGISTRY=new Map;class Transaction extends Executable{constructor(){super(),this._transactions=new List,this._signedTransactions=new List,this._signerPublicKeys=new Set,this._nextTransactionIndex=0,this._transactionValidDuration=DEFAULT_TRANSACTION_VALID_DURATION,this._defaultMaxTransactionFee=new Hbar(2),this._maxTransactionFee=null,this._transactionMemo="",this._transactionIds=new List,this._operatorAccountId=null,this._publicKeys=[],this._transactionSigners=[],this._regenerateTransactionId=null}static fromBytes(t){const e=[],Q=[],B=[],s=[],F=[],U=[],n=lib.TransactionList.decode(t).transactionList;if(0===n.length){const e=lib.Transaction.decode(t);0!==e.signedTransactionBytes.length?n.push(e):n.push({signedTransactionBytes:lib.SignedTransaction.encode({bodyBytes:e.bodyBytes,sigMap:e.sigMap}).finish()})}for(const t of n){if(null==t.signedTransactionBytes)throw new Error("Transaction.signedTransactionBytes are null");const n=lib.SignedTransaction.decode(t.signedTransactionBytes);e.push(n);const c=lib.TransactionBody.decode(n.bodyBytes);if(null==c.data)throw new Error("(BUG) body.data was not set in the protobuf");if(U.push(c),null!=c.transactionID){const t=TransactionId._fromProtobuf(c.transactionID);s.includes(t.toString())||(Q.push(t),s.push(t.toString()))}if(null!=c.nodeAccountID){const t=AccountId._fromProtobuf(c.nodeAccountID);F.includes(t.toString())||(B.push(t),F.push(t.toString()))}}const c=U[0];if(null==c||null==c.data)throw new Error("No transaction found in bytes or failed to decode TransactionBody");const o=TRANSACTION_REGISTRY.get(c.data);if(null==o)throw new Error(`(BUG) Transaction.fromBytes() not implemented for type ${c.data}`);return o(n,e,Q,B,U)}schedule(){if(this._requireNotFrozen(),1!=SCHEDULE_CREATE_TRANSACTION.length)throw new Error("ScheduleCreateTransaction has not been loaded yet");return SCHEDULE_CREATE_TRANSACTION[0]()._setScheduledTransaction(this)}static _fromProtobufTransactions(t,e,Q,B,s,F){const U=F[0],n=new AccountId(0);for(let t=0;t<s.length;t++)s[t].equals(n)&&s.splice(t--,1);t._transactions.setList(e),t._signedTransactions.setList(Q).setLocked(),t._transactionIds.setList(B).setLocked(),t._nodeAccountIds.setList(s).setLocked(),t._nextNodeAccountIdIndex=0,t._nextTransactionIndex=0,t._transactionValidDuration=null!=U.transactionValidDuration&&null!=U.transactionValidDuration.seconds?long$1.fromValue(U.transactionValidDuration.seconds).toInt():DEFAULT_TRANSACTION_VALID_DURATION,t._maxTransactionFee=null!=U.transactionFee?Hbar.fromTinybars(U.transactionFee):new Hbar(0),t._transactionMemo=null!=U.memo?U.memo:"";for(let e=0;e<s.length;e++){const B=Q[e];if(null!=B.sigMap&&null!=B.sigMap.sigPair)for(const e of B.sigMap.sigPair)t._signerPublicKeys.add(encode$1(e.pubKeyPrefix)),t._publicKeys.push(PublicKey.fromBytes(e.pubKeyPrefix)),t._transactionSigners.push(null)}return t}setNodeAccountIds(t){return this._requireNotFrozen(),super.setNodeAccountIds(t),this}get transactionValidDuration(){return this._transactionValidDuration}setTransactionValidDuration(t){return this._requireNotFrozen(),this._transactionValidDuration=t,this}get maxTransactionFee(){return this._maxTransactionFee}setMaxTransactionFee(t){return this._requireNotFrozen(),this._maxTransactionFee=t instanceof Hbar?t:new Hbar(t),this}get regenerateTransactionId(){return this._regenerateTransactionId}setRegenerateTransactionId(t){return this._requireNotFrozen(),this._regenerateTransactionId=t,this}get transactionMemo(){return this._transactionMemo}setTransactionMemo(t){return this._requireNotFrozen(),this._transactionMemo=t,this}get transactionId(){if(this._transactionIds.setLocked(),this._transactionIds.isEmpty)throw new Error("transaction must have been frozen before getting the transaction ID, try calling `freeze`");return this._transactionIds.next}setTransactionId(t){return this._requireNotFrozen(),this._transactionIds.setList([t]).setLocked(),this}sign(t){return this.signWith(t.publicKey,(e=>Promise.resolve(t.sign(e))))}async signWith(t,e){this._signOnDemand||this._requireFrozen();const Q=encode$1(t.toBytesRaw());if(this._signerPublicKeys.has(Q))return this;if(this._transactions.clear(),this._signerPublicKeys.add(Q),this._signOnDemand)return this._publicKeys.push(t),this._transactionSigners.push(e),this;for(const Q of this._signedTransactions.list){const B=Q.bodyBytes,s=await e(B);null==Q.sigMap&&(Q.sigMap={}),null==Q.sigMap.sigPair&&(Q.sigMap.sigPair=[]),Q.sigMap.sigPair.push(t._toProtobufSignature(s))}return this}signWithOperator(t){const e=t._operator;if(null==e)throw new Error("`client` must have an operator to sign with the operator");return this._isFrozen()||this.freezeWith(t),this.signWith(e.publicKey,e.transactionSigner)}addSignature(t,e){this._requireOneNodeAccountId(),this.isFrozen()||this.freeze();const Q=encode$1(t.toBytesRaw());if(this._signerPublicKeys.has(Q))return this;this._transactions.clear(),this._transactionIds.setLocked(),this._nodeAccountIds.setLocked(),this._signedTransactions.setLocked();for(const Q of this._signedTransactions.list)null==Q.sigMap&&(Q.sigMap={}),null==Q.sigMap.sigPair&&(Q.sigMap.sigPair=[]),Q.sigMap.sigPair.push(t._toProtobufSignature(e));return this._signerPublicKeys.add(Q),this._publicKeys.push(t),this._transactionSigners.push(null),this}getSignatures(){return this._requireFrozen(),this._requireNotSignOnDemand(),this._buildAllTransactions(),this._transactionIds.setLocked(),this._nodeAccountIds.setLocked(),SignatureMap._fromTransaction(this)}async getSignaturesAsync(){return this._transactionIds.isEmpty||this._transactionIds.setLocked(),this._nodeAccountIds.isEmpty||this._nodeAccountIds.setLocked(),await this._buildAllTransactionsAsync(),this._transactions.setLocked(),this._signedTransactions.setLocked(),SignatureMap._fromTransaction(this)}_setTransactionId(){if(null==this._operator&&this._transactionIds.isEmpty)throw new Error("`transactionId` must be set or `client` must be provided with `freezeWith`")}_setNodeAccountIds(t){if(this._nodeAccountIds.isEmpty){if(null==t)throw new Error("`nodeAccountId` must be set or `client` must be provided with `freezeWith`");this._nodeAccountIds.setList(t._network.getNodeAccountIdsForExecute())}}_buildSignedTransactions(){this._signedTransactions.locked||this._signedTransactions.setList(this._nodeAccountIds.list.map((t=>this._makeSignedTransaction(t))))}freeze(){return this.freezeWith(null)}freezeWith(t){if(this._signOnDemand=null!=t&&t._signOnDemand,this._operator=null!=t?t._operator:null,this._maxTransactionFee=null==this._maxTransactionFee?null!=t&&null!=t.defaultMaxTransactionFee?t.defaultMaxTransactionFee:this._defaultMaxTransactionFee:this._maxTransactionFee,this._regenerateTransactionId=null!=t&&null==this._regenerateTransactionId?t.defaultRegenerateTransactionId:this._regenerateTransactionId,this._setNodeAccountIds(t),this._setTransactionId(),null!=t)for(const e of this._transactionIds.list)null!=e.accountId&&e.accountId.validateChecksum(t);return this._buildNewTransactionIdList(),this._signOnDemand||this._buildSignedTransactions(),this}toBytes(){return this._requireFrozen(),this._requireNotSignOnDemand(),this._transactionIds.setLocked(),this._nodeAccountIds.setLocked(),this._buildAllTransactions(),lib.TransactionList.encode({transactionList:this._transactions.list}).finish()}async toBytesAsync(){return this._requireFrozen(),this._transactionIds.setLocked(),this._nodeAccountIds.setLocked(),await this._buildAllTransactionsAsync(),this._transactions.setLocked(),this._signedTransactions.setLocked(),lib.TransactionList.encode({transactionList:this._transactions.list}).finish()}async getTransactionHash(){return this._requireFrozen(),this._transactionIds.isEmpty||this._transactionIds.setLocked(),this._nodeAccountIds.isEmpty||this._nodeAccountIds.setLocked(),await this._buildAllTransactionsAsync(),this._transactions.setLocked(),this._signedTransactions.setLocked(),digest(this._transactions.get(0).signedTransactionBytes)}async getTransactionHashPerNode(){return this._requireFrozen(),this._transactionIds.isEmpty||this._transactionIds.setLocked(),this._nodeAccountIds.isEmpty||this._nodeAccountIds.setLocked(),await this._buildAllTransactionsAsync(),await TransactionHashMap._fromTransaction(this)}isFrozen(){return this._signedTransactions.length>0}_getTransactionId(){return this.transactionId}_validateChecksums(t){}async _beforeExecute(t){this._isFrozen()||this.freezeWith(t),t.isAutoValidateChecksumsEnabled()&&this._validateChecksums(t),null!=this._operator&&await this.signWith(this._operator.publicKey,this._operator.transactionSigner)}async _makeRequestAsync(){const t=this._nextTransactionIndex*this._nodeAccountIds.length+this._nodeAccountIds.index;return this._signOnDemand?await this._buildTransactionAsync():(this._buildTransaction(t),this._transactions.get(t))}async _signTransaction(){const t=this._makeSignedTransaction(this._nodeAccountIds.next),e=t.bodyBytes;for(let Q=0;Q<this._publicKeys.length;Q++){const B=this._publicKeys[Q],s=this._transactionSigners[Q];if(null==s)continue;const F=await s(e);null==t.sigMap&&(t.sigMap={}),null==t.sigMap.sigPair&&(t.sigMap.sigPair=[]),t.sigMap.sigPair.push(B._toProtobufSignature(F))}return t}_buildNewTransactionIdList(){if(this._transactionIds.locked||null==this._operator)return;const t=TransactionId.withValidStart(this._operator.accountId,Timestamp.generate());this._transactionIds.set(this._nextTransactionIndex,t)}_buildAllTransactions(){for(let t=0;t<this._signedTransactions.length;t++)this._buildTransaction(t)}async _buildAllTransactionsAsync(){if(this._buildSignedTransactions(),!this._transactions.locked)for(let t=0;t<this._signedTransactions.length;t++)this._transactions.push(await this._buildTransactionAsync())}_buildTransaction(t){if(this._transactions.length<t)for(let e=this._transactions.length;e<t;e++)this._transactions.push(null);this._transactions.setIfAbsent(t,(()=>({signedTransactionBytes:lib.SignedTransaction.encode(this._signedTransactions.get(t)).finish()})))}async _buildTransactionAsync(){return{signedTransactionBytes:lib.SignedTransaction.encode(await this._signTransaction()).finish()}}_shouldRetry(t,e){const{nodeTransactionPrecheckCode:Q}=e;switch(Status._fromCode(null!=Q?Q:lib.ResponseCodeEnum.OK)){case Status.Busy:case Status.Unknown:case Status.PlatformTransactionNotCreated:return ExecutionState.Retry;case Status.Ok:return ExecutionState.Finished;case Status.TransactionExpired:return null==this._regenerateTransactionId||this._regenerateTransactionId?(this._buildNewTransactionIdList(),ExecutionState.Retry):ExecutionState.Error;default:return ExecutionState.Error}}_mapStatusError(t,e){const{nodeTransactionPrecheckCode:Q}=e,B=Status._fromCode(null!=Q?Q:lib.ResponseCodeEnum.OK);return new PrecheckStatusError({status:B,transactionId:this._getTransactionId()})}async _mapResponse(t,e,Q){const B=await digest(Q.signedTransactionBytes),s=this.transactionId;return this._nextTransactionIndex=(this._nextTransactionIndex+1)%this._transactionIds.length,this._transactionIds.advance(),new TransactionResponse({nodeId:e,transactionHash:B,transactionId:s})}_getNodeAccountId(){if(this._nodeAccountIds.isEmpty)throw new Error("(BUG) Transaction::_getNodeAccountId called before transaction has been frozen");return this._nodeAccountIds.list[this._nextNodeAccountIdIndex%this._nodeAccountIds.length]}_makeSignedTransaction(t){const e=this._makeTransactionBody(t);return{bodyBytes:lib.TransactionBody.encode(e).finish(),sigMap:{sigPair:[]}}}_makeTransactionBody(t){return{[this._getTransactionDataCase()]:this._makeTransactionData(),transactionFee:null!=this._maxTransactionFee?this._maxTransactionFee.toTinybars():null,memo:this._transactionMemo,transactionID:this._transactionIds.current._toProtobuf(),nodeAccountID:null!=t?t._toProtobuf():null,transactionValidDuration:{seconds:long$1.fromNumber(this._transactionValidDuration)}}}_getTransactionDataCase(){throw new Error("not implemented")}_getScheduledTransactionBody(){return{memo:this.transactionMemo,transactionFee:null!=this.maxTransactionFee?this.maxTransactionFee.toTinybars():null,[this._getTransactionDataCase()]:this._makeTransactionData()}}_makeTransactionData(){throw new Error("not implemented")}_isFrozen(){return this._signOnDemand||this._signedTransactions.length>0||this._transactions.length>0}_requireNotFrozen(){if(this._isFrozen())throw new Error("transaction is immutable; it has at least one signature or has been explicitly frozen")}_requireNotSignOnDemand(){if(this._signOnDemand)throw new Error("Please use `toBytesAsync()` if `signOnDemand` is enabled")}_requireFrozen(){if(!this._isFrozen())throw new Error("transaction must have been frozen before calculating the hash will be stable, try calling `freeze`")}_requireOneNodeAccountId(){if(1!=this._nodeAccountIds.length)throw"transaction did not have exactly one node ID set"}}const SCHEDULE_CREATE_TRANSACTION=[];class NftId{constructor(t,e){this.tokenId=t,this.serial="number"==typeof e?long$1.fromNumber(e):e,Object.freeze(this)}static fromString(t){const e=t.split("/").length>1?t.split("/"):t.split("@");for(const t of e)if(""===t)throw new Error("invalid format for NftId: use [token]/[serial] or [token]@[serial]");const Q=TokenId.fromString(e[0]),B=long$1.fromString(e[1]);return new NftId(Q,B)}static _fromProtobuf(t){return new NftId(TokenId._fromProtobuf(t.tokenID),null!=t.serialNumber?t.serialNumber:long$1.ZERO)}static fromBytes(t){return NftId._fromProtobuf(lib.NftID.decode(t))}_toProtobuf(){return{tokenID:this.tokenId._toProtobuf(),serialNumber:long$1.fromValue(void 0!==this.serial?this.serial:0)}}toString(){return`${this.serial.toString()}@${this.tokenId.toString()}`}toBytes(){return lib.NftID.encode(this._toProtobuf()).finish()}}class HbarAllowance{constructor(t){this.spenderAccountId=t.spenderAccountId,this.amount=t.amount,Object.freeze(this)}static _fromProtobuf(t){return new HbarAllowance({spenderAccountId:AccountId._fromProtobuf(t.spender),amount:Hbar.fromTinybars(null!=t.amount?t.amount:0)})}_toProtobuf(){return{spender:this.spenderAccountId._toProtobuf(),amount:this.amount.toTinybars()}}}class TokenAllowance{constructor(t){this.tokenId=t.tokenId,this.spenderAccountId=t.spenderAccountId,this.amount=t.amount,Object.freeze(this)}static _fromProtobuf(t){return new TokenAllowance({tokenId:TokenId._fromProtobuf(t.tokenId),spenderAccountId:AccountId._fromProtobuf(t.spender),amount:null!=t.amount?long$1.fromValue(t.amount):null})}_toProtobuf(){return{tokenId:this.tokenId._toProtobuf(),spender:this.spenderAccountId._toProtobuf(),amount:this.amount}}}class TokenNftAllowance{constructor(t){this.tokenId=t.tokenId,this.spenderAccountId=t.spenderAccountId,this.serialNumbers=t.serialNumbers,Object.freeze(this)}static _fromProtobuf(t){return new TokenNftAllowance({tokenId:TokenId._fromProtobuf(t.tokenId),spenderAccountId:AccountId._fromProtobuf(t.spender),serialNumbers:null!=t.approvedForAll&&t.approvedForAll.value?null:null!=t.serialNumbers?t.serialNumbers.map((t=>long$1.fromValue(t))):[]})}_toProtobuf(){return{tokenId:this.tokenId._toProtobuf(),spender:this.spenderAccountId._toProtobuf(),approvedForAll:null==this.serialNumbers?{value:!0}:null,serialNumbers:this.serialNumbers}}}class AccountAllowanceAdjustTransaction extends Transaction{constructor(t={}){super(),this._hbarAllowances=null!=t.hbarAllowances?t.hbarAllowances:[],this._tokenAllowances=null!=t.tokenAllowances?t.tokenAllowances:[],this._nftAllowances=null!=t.nftAllowances?t.nftAllowances:[]}static _fromProtobuf(t,e,Q,B,s){const F=s[0].cryptoAdjustAllowance;return Transaction._fromProtobufTransactions(new AccountAllowanceAdjustTransaction({hbarAllowances:(null!=F.cryptoAllowances?F.cryptoAllowances:[]).map((t=>HbarAllowance._fromProtobuf(t))),tokenAllowances:(null!=F.tokenAllowances?F.tokenAllowances:[]).map((t=>TokenAllowance._fromProtobuf(t))),nftAllowances:(null!=F.nftAllowances?F.nftAllowances:[]).map((t=>TokenNftAllowance._fromProtobuf(t)))}),t,e,Q,B,s)}get hbarAllowances(){return this._hbarAllowances}addHbarAllowance(t,e){return this._requireNotFrozen(),this._hbarAllowances.push(new HbarAllowance({spenderAccountId:"string"==typeof t?AccountId.fromString(t):t,amount:e instanceof Hbar?e:new Hbar(e)})),this}get tokenAllowances(){return this._tokenAllowances}addTokenAllowance(t,e,Q){return this._requireNotFrozen(),this._tokenAllowances.push(new TokenAllowance({tokenId:"string"==typeof t?TokenId.fromString(t):t,spenderAccountId:"string"==typeof e?AccountId.fromString(e):e,amount:"number"==typeof Q?long$1.fromNumber(Q):Q})),this}addTokenNftAllowance(t,e){this._requireNotFrozen();const Q="string"==typeof t?NftId.fromString(t):t,B="string"==typeof e?AccountId.fromString(e):e;let s=!1;for(const t of this._nftAllowances)if(0===t.tokenId.compare(Q.tokenId)&&0===t.spenderAccountId.compare(B)){null!=t.serialNumbers&&t.serialNumbers.push(Q.serial),s=!0;break}return s||this._nftAllowances.push(new TokenNftAllowance({tokenId:Q.tokenId,spenderAccountId:B,serialNumbers:[Q.serial]})),this}addAllTokenNftAllowance(t,e){return this._requireNotFrozen(),this._nftAllowances.push(new TokenNftAllowance({tokenId:"string"==typeof t?TokenId.fromString(t):t,spenderAccountId:"string"==typeof e?AccountId.fromString(e):e,serialNumbers:null})),this}_validateChecksums(t){this._hbarAllowances.map((e=>e.spenderAccountId.validateChecksum(t))),this._tokenAllowances.map((e=>{e.tokenId.validateChecksum(t),e.spenderAccountId.validateChecksum(t)}))}_execute(t,e){return t.crypto.adjustAllowance(e)}_getTransactionDataCase(){return"cryptoAdjustAllowance"}_makeTransactionData(){return{cryptoAllowances:this._hbarAllowances.map((t=>t._toProtobuf())),tokenAllowances:this._tokenAllowances.map((t=>t._toProtobuf())),nftAllowances:this._nftAllowances.map((t=>t._toProtobuf()))}}}TRANSACTION_REGISTRY.set("cryptoAdjustAllowance",AccountAllowanceAdjustTransaction._fromProtobuf);class AccountAllowanceApproveTransaction extends Transaction{constructor(t={}){super(),this._hbarApprovals=null!=t.hbarApprovals?t.hbarApprovals:[],this._tokenApprovals=null!=t.tokenApprovals?t.tokenApprovals:[],this._nftApprovals=null!=t.nftApprovals?t.nftApprovals:[]}static _fromProtobuf(t,e,Q,B,s){const F=s[0].cryptoApproveAllowance;return Transaction._fromProtobufTransactions(new AccountAllowanceApproveTransaction({hbarApprovals:(null!=F.cryptoAllowances?F.cryptoAllowances:[]).map((t=>HbarAllowance._fromProtobuf(t))),tokenApprovals:(null!=F.tokenAllowances?F.tokenAllowances:[]).map((t=>TokenAllowance._fromProtobuf(t))),nftApprovals:(null!=F.nftAllowances?F.nftAllowances:[]).map((t=>TokenNftAllowance._fromProtobuf(t)))}),t,e,Q,B,s)}get hbarApprovals(){return this._hbarApprovals}addHbarAllowance(t,e){return this._requireNotFrozen(),this._hbarApprovals.push(new HbarAllowance({spenderAccountId:"string"==typeof t?AccountId.fromString(t):t,amount:e instanceof Hbar?e:new Hbar(e)})),this}get tokenApprovals(){return this._tokenApprovals}addTokenAllowance(t,e,Q){return this._requireNotFrozen(),this._tokenApprovals.push(new TokenAllowance({tokenId:"string"==typeof t?TokenId.fromString(t):t,spenderAccountId:"string"==typeof e?AccountId.fromString(e):e,amount:"number"==typeof Q?long$1.fromNumber(Q):Q})),this}addTokenNftAllowance(t,e){this._requireNotFrozen();const Q="string"==typeof t?NftId.fromString(t):t,B="string"==typeof e?AccountId.fromString(e):e;let s=!1;for(const t of this._nftApprovals)if(0===t.tokenId.compare(Q.tokenId)&&0===t.spenderAccountId.compare(B)){null!=t.serialNumbers&&t.serialNumbers.push(Q.serial),s=!0;break}return s||this._nftApprovals.push(new TokenNftAllowance({tokenId:Q.tokenId,spenderAccountId:"string"==typeof e?AccountId.fromString(e):e,serialNumbers:[Q.serial]})),this}addAllTokenNftAllowance(t,e){return this._requireNotFrozen(),this._nftApprovals.push(new TokenNftAllowance({tokenId:"string"==typeof t?TokenId.fromString(t):t,spenderAccountId:"string"==typeof e?AccountId.fromString(e):e,serialNumbers:null})),this}_validateChecksums(t){this._hbarApprovals.map((e=>e.spenderAccountId.validateChecksum(t))),this._tokenApprovals.map((e=>{e.tokenId.validateChecksum(t),e.spenderAccountId.validateChecksum(t)}))}_execute(t,e){return t.crypto.approveAllowances(e)}_getTransactionDataCase(){return"cryptoApproveAllowance"}_makeTransactionData(){return{cryptoAllowances:this._hbarApprovals.map((t=>t._toProtobuf())),tokenAllowances:this._tokenApprovals.map((t=>t._toProtobuf())),nftAllowances:this._nftApprovals.map((t=>t._toProtobuf()))}}}TRANSACTION_REGISTRY.set("cryptoApproveAllowance",AccountAllowanceApproveTransaction._fromProtobuf);class TokenBalanceMap extends ObjectMap{constructor(){super((t=>TokenId.fromString(t)))}}class TokenDecimalMap extends ObjectMap{constructor(){super((t=>TokenId.fromString(t)))}}class AccountBalance{constructor(t){this.hbars=t.hbars,this.tokens=t.tokens,this.tokenDecimals=t.tokenDecimals,Object.freeze(this)}static _fromProtobuf(t){const e=new TokenBalanceMap,Q=new TokenDecimalMap;if(null!=t.tokenBalances)for(const B of t.tokenBalances){const t=TokenId._fromProtobuf(B.tokenId);Q._set(t,null!=B.decimals?B.decimals:0),e._set(t,long$1.fromValue(B.balance))}return new AccountBalance({hbars:Hbar.fromTinybars(t.balance),tokens:e,tokenDecimals:Q})}_toProtobuf(){const t=[];for(const[e,Q]of null!=this.tokens?this.tokens:[])t.push({tokenId:e._toProtobuf(),balance:Q,decimals:null!=this.tokenDecimals?this.tokenDecimals.get(e):null});return{balance:this.hbars.toTinybars(),tokenBalances:t}}toString(){return JSON.stringify(this.toJSON())}toJSON(){const t=[];for(const[e,Q]of null!=this.tokens?this.tokens:[]){const B=null!=this.tokenDecimals?this.tokenDecimals.get(e):null;t.push({tokenId:e.toString(),balance:Q.toString(),decimals:null!=B?B:0})}return{hbars:this.hbars.toString(),tokens:t}}}class AccountBalanceQuery extends Query{constructor(t={}){super(),this._accountId=null,this._contractId=null,null!=t.accountId&&this.setAccountId(t.accountId),null!=t.contractId&&this.setContractId(t.contractId)}static _fromProtobuf(t){const e=t.cryptogetAccountBalance;return new AccountBalanceQuery({accountId:null!=e.accountID?AccountId._fromProtobuf(e.accountID):void 0,contractId:null!=e.contractID?ContractId._fromProtobuf(e.contractID):void 0})}get accountId(){return this._accountId}setAccountId(t){return this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}get contractId(){return this._contractId}setContractId(t){return this._contractId="string"==typeof t?ContractId.fromString(t):t.clone(),this}_isPaymentRequired(){return!1}_validateChecksums(t){null!=this._accountId&&this._accountId.validateChecksum(t),null!=this._contractId&&this._contractId.validateChecksum(t)}_execute(t,e){return t.crypto.cryptoGetBalance(e)}_mapResponseHeader(t){return t.cryptogetAccountBalance.header}_mapResponse(t,e,Q){const B=t.cryptogetAccountBalance;return Promise.resolve(AccountBalance._fromProtobuf(B))}_onMakeRequest(t){return{cryptogetAccountBalance:{header:t,accountID:null!=this._accountId?this._accountId._toProtobuf():null,contractID:null!=this._contractId?this._contractId._toProtobuf():null}}}}QUERY_REGISTRY.set("cryptogetAccountBalance",AccountBalanceQuery._fromProtobuf);class Duration{constructor(t){this.seconds=t instanceof long$1?t:long$1.fromNumber(t),Object.freeze(this)}_toProtobuf(){return{seconds:this.seconds}}static _fromProtobuf(t){return new Duration(t.seconds)}}class AccountCreateTransaction extends Transaction{constructor(t={}){super(),this._key=null,this._initialBalance=null,this._sendRecordThreshold=DEFAULT_RECORD_THRESHOLD,this._receiveRecordThreshold=DEFAULT_RECORD_THRESHOLD,this._receiverSignatureRequired=!1,this._proxyAccountId=null,this._autoRenewPeriod=new Duration(DEFAULT_AUTO_RENEW_PERIOD),this._accountMemo=null,this._maxAutomaticTokenAssociations=null,null!=t.key&&this.setKey(t.key),null!=t.receiverSignatureRequired&&this.setReceiverSignatureRequired(t.receiverSignatureRequired),null!=t.initialBalance&&this.setInitialBalance(t.initialBalance),null!=t.proxyAccountId&&this.setProxyAccountId(t.proxyAccountId),null!=t.autoRenewPeriod&&this.setAutoRenewPeriod(t.autoRenewPeriod),null!=t.accountMemo&&this.setAccountMemo(t.accountMemo),null!=t.maxAutomaticTokenAssociations&&this.setMaxAutomaticTokenAssociations(t.maxAutomaticTokenAssociations)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].cryptoCreateAccount;return Transaction._fromProtobufTransactions(new AccountCreateTransaction({key:null!=F.key?Key._fromProtobufKey(F.key):void 0,initialBalance:null!=F.initialBalance?F.initialBalance:void 0,receiverSignatureRequired:null!=F.receiverSigRequired?F.receiverSigRequired:void 0,proxyAccountId:null!=F.proxyAccountID?AccountId._fromProtobuf(F.proxyAccountID):void 0,autoRenewPeriod:null!=F.autoRenewPeriod&&null!=F.autoRenewPeriod.seconds?F.autoRenewPeriod.seconds:void 0,accountMemo:null!=F.memo?F.memo:void 0,maxAutomaticTokenAssociations:null!=F.maxAutomaticTokenAssociations?F.maxAutomaticTokenAssociations:void 0}),t,e,Q,B,s)}get key(){return this._key}setKey(t){return this._requireNotFrozen(),this._key=t,this}get initialBalance(){return this._initialBalance}setInitialBalance(t){return this._requireNotFrozen(),this._initialBalance=t instanceof Hbar?t:new Hbar(t),this}get receiverSignatureRequired(){return this._receiverSignatureRequired}setReceiverSignatureRequired(t){return this._requireNotFrozen(),this._receiverSignatureRequired=t,this}get proxyAccountId(){return this._proxyAccountId}setProxyAccountId(t){return this._requireNotFrozen(),this._proxyAccountId=t,this}get autoRenewPeriod(){return this._autoRenewPeriod}setAutoRenewPeriod(t){return this._requireNotFrozen(),this._autoRenewPeriod=t instanceof Duration?t:new Duration(t),this}get accountMemo(){return this._accountMemo}setAccountMemo(t){return this._requireNotFrozen(),this._accountMemo=t,this}get maxAutomaticTokenAssociations(){return this._maxAutomaticTokenAssociations}setMaxAutomaticTokenAssociations(t){return this._requireNotFrozen(),this._maxAutomaticTokenAssociations="number"==typeof t?long$1.fromNumber(t):t,this}_validateChecksums(t){null!=this._proxyAccountId&&this._proxyAccountId.validateChecksum(t)}_execute(t,e){return t.crypto.createAccount(e)}_getTransactionDataCase(){return"cryptoCreateAccount"}_makeTransactionData(){return{key:null!=this._key?this._key._toProtobufKey():null,initialBalance:null!=this._initialBalance?this._initialBalance.toTinybars():null,autoRenewPeriod:this._autoRenewPeriod._toProtobuf(),proxyAccountID:null!=this._proxyAccountId?this._proxyAccountId._toProtobuf():null,receiveRecordThreshold:this._receiveRecordThreshold.toTinybars(),sendRecordThreshold:this._sendRecordThreshold.toTinybars(),receiverSigRequired:this._receiverSignatureRequired,memo:this._accountMemo,maxAutomaticTokenAssociations:null!=this._maxAutomaticTokenAssociations?this._maxAutomaticTokenAssociations.toInt():null}}}TRANSACTION_REGISTRY.set("cryptoCreateAccount",AccountCreateTransaction._fromProtobuf);class AccountDeleteTransaction extends Transaction{constructor(t={}){super(),this._accountId=null,this._transferAccountId=null,null!=t.accountId&&this.setAccountId(t.accountId),null!=t.transferAccountId&&this.setTransferAccountId(t.transferAccountId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].cryptoDelete;return Transaction._fromProtobufTransactions(new AccountDeleteTransaction({accountId:null!=F.deleteAccountID?AccountId._fromProtobuf(F.deleteAccountID):void 0,transferAccountId:null!=F.transferAccountID?AccountId._fromProtobuf(F.transferAccountID):void 0}),t,e,Q,B,s)}get accountId(){return this._accountId}setAccountId(t){return this._requireNotFrozen(),this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}get transferAccountId(){return this._transferAccountId}setTransferAccountId(t){return this._requireNotFrozen(),this._transferAccountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._accountId&&this._accountId.validateChecksum(t),null!=this._transferAccountId&&this._transferAccountId.validateChecksum(t)}_execute(t,e){return t.crypto.cryptoDelete(e)}_getTransactionDataCase(){return"cryptoDelete"}_makeTransactionData(){return{deleteAccountID:null!=this._accountId?this._accountId._toProtobuf():null,transferAccountID:null!=this._transferAccountId?this._transferAccountId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("cryptoDelete",AccountDeleteTransaction._fromProtobuf);class LiveHash{constructor(t){this.accountId=t.accountId,this.hash=t.hash,this.keys=t.keys,this.duration=t.duration,Object.freeze(this)}static _fromProtobuf(t){const e=t;return new LiveHash({accountId:AccountId._fromProtobuf(e.accountId),hash:null!=e.hash?e.hash:new Uint8Array,keys:null!=e.keys?KeyList.__fromProtobufKeyList(e.keys):new KeyList,duration:Duration._fromProtobuf(e.duration)})}_toProtobuf(){return{accountId:this.accountId._toProtobuf(),hash:this.hash,keys:this.keys._toProtobufKey().keyList,duration:this.duration._toProtobuf()}}}class TokenRelationship{constructor(t){this.tokenId=t.tokenId,this.symbol=t.symbol,this.balance=t.balance,this.isKycGranted=t.isKycGranted,this.isFrozen=t.isFrozen,this.automaticAssociation=t.automaticAssociation,Object.freeze(this)}static _fromProtobuf(t){const e=TokenId._fromProtobuf(t.tokenId),Q=null==t.kycStatus||0===t.kycStatus?null:1===t.kycStatus,B=null==t.freezeStatus||0===t.freezeStatus?null:1===t.freezeStatus;return new TokenRelationship({tokenId:e,symbol:t.symbol,balance:null!=t.balance?t.balance instanceof long$1?t.balance:long$1.fromValue(t.balance):long$1.ZERO,isKycGranted:Q,isFrozen:B,automaticAssociation:null!=t.automaticAssociation?t.automaticAssociation:null})}_toProtobuf(){return{tokenId:this.tokenId._toProtobuf(),symbol:this.symbol,balance:this.balance,kycStatus:null==this.isKycGranted?0:this.isKycGranted?1:2,freezeStatus:null==this.isFrozen?0:this.isFrozen?1:2,automaticAssociation:this.automaticAssociation}}}class TokenRelationshipMap extends ObjectMap{constructor(){super((t=>TokenId.fromString(t)))}static _fromProtobuf(t){const e=new TokenRelationshipMap;for(const Q of t){const t=TokenId._fromProtobuf(Q.tokenId);e._set(t,TokenRelationship._fromProtobuf(Q))}return e}_toProtobuf(){const t=[];for(const[e,Q]of this)t.push(Q._toProtobuf());return t}}class LedgerId{constructor(t){this._ledgerId=t,Object.freeze(this)}static fromString(t){switch(t){case NETNAMES[0]:case"0":return LedgerId.MAINNET;case NETNAMES[1]:case"1":return LedgerId.TESTNET;case NETNAMES[2]:case"2":return LedgerId.PREVIEWNET;default:{let e=decode$1(t);if(0==e.length&&0!=t.length)throw new Error("Default reached for fromString");return new LedgerId(e)}}}toString(){if(1!=this._ledgerId.length)return encode$1(this._ledgerId);switch(this._ledgerId[0]){case 0:return NETNAMES[0];case 1:return NETNAMES[1];case 2:return NETNAMES[2];default:return encode$1(this._ledgerId)}}_toStringForChecksum(){if(1!=this._ledgerId.length)return encode$1(this._ledgerId);switch(this._ledgerId[0]){case 0:return"0";case 1:return"1";case 2:return"2";default:return encode$1(this._ledgerId)}}static fromBytes(t){return new LedgerId(t)}toBytes(){return this._ledgerId}isMainnet(){return this.toString()==NETNAMES[0]}isTestnet(){return this.toString()==NETNAMES[1]}isPreviewnet(){return this.toString()==NETNAMES[2]}}const NETNAMES=["mainnet","testnet","previewnet"];LedgerId.MAINNET=new LedgerId(new Uint8Array([0])),LedgerId.TESTNET=new LedgerId(new Uint8Array([1])),LedgerId.PREVIEWNET=new LedgerId(new Uint8Array([2]));class AccountInfo{constructor(t){this.accountId=t.accountId,this.contractAccountId=t.contractAccountId,this.isDeleted=t.isDeleted,this.proxyAccountId=t.proxyAccountId,this.proxyReceived=t.proxyReceived,this.key=t.key,this.balance=t.balance,this.sendRecordThreshold=t.sendRecordThreshold,this.receiveRecordThreshold=t.receiveRecordThreshold,this.isReceiverSignatureRequired=t.isReceiverSignatureRequired,this.expirationTime=t.expirationTime,this.autoRenewPeriod=t.autoRenewPeriod,this.liveHashes=t.liveHashes,this.tokenRelationships=t.tokenRelationships,this.accountMemo=t.accountMemo,this.ownedNfts=t.ownedNfts,this.maxAutomaticTokenAssociations=t.maxAutomaticTokenAssociations,this.aliasKey=t.aliasKey,this.ledgerId=t.ledgerId,this.hbarAllowances=t.hbarAllowances,this.tokenAllowances=t.tokenAllowances,this.nftAllowances=t.nftAllowances,Object.freeze(this)}static _fromProtobuf(t){let e=null!=t.alias&&t.alias.length>0?Key._fromProtobufKey(lib.Key.decode(t.alias)):null;return e instanceof PublicKey||(e=null),new AccountInfo({accountId:AccountId._fromProtobuf(t.accountID),contractAccountId:null!=t.contractAccountID?t.contractAccountID:null,isDeleted:null!=t.deleted&&t.deleted,key:Key._fromProtobufKey(t.key),balance:Hbar.fromTinybars(null!=t.balance?t.balance:0),sendRecordThreshold:Hbar.fromTinybars(null!=t.generateSendRecordThreshold?t.generateSendRecordThreshold:0),receiveRecordThreshold:Hbar.fromTinybars(null!=t.generateReceiveRecordThreshold?t.generateReceiveRecordThreshold:0),isReceiverSignatureRequired:null!=t.receiverSigRequired&&t.receiverSigRequired,expirationTime:Timestamp._fromProtobuf(t.expirationTime),autoRenewPeriod:null!=t.autoRenewPeriod?new Duration(t.autoRenewPeriod.seconds):new Duration(0),proxyAccountId:null!=t.proxyAccountID&&0!==long$1.fromValue(t.proxyAccountID.shardNum).toInt()&&0!==long$1.fromValue(t.proxyAccountID.realmNum).toInt()&&0!==long$1.fromValue(t.proxyAccountID.accountNum).toInt()?AccountId._fromProtobuf(t.proxyAccountID):null,proxyReceived:Hbar.fromTinybars(null!=t.proxyReceived?t.proxyReceived:0),liveHashes:(null!=t.liveHashes?t.liveHashes:[]).map((t=>LiveHash._fromProtobuf(t))),tokenRelationships:TokenRelationshipMap._fromProtobuf(null!=t.tokenRelationships?t.tokenRelationships:[]),accountMemo:null!=t.memo?t.memo:"",ownedNfts:t.ownedNfts?t.ownedNfts:long$1.ZERO,maxAutomaticTokenAssociations:t.maxAutomaticTokenAssociations?long$1.fromNumber(t.maxAutomaticTokenAssociations):long$1.ZERO,aliasKey:e,ledgerId:null!=t.ledgerId?LedgerId.fromBytes(t.ledgerId):null,hbarAllowances:(null!=t.cryptoAllowances?t.cryptoAllowances:[]).map((t=>HbarAllowance._fromProtobuf(t))),tokenAllowances:(null!=t.tokenAllowances?t.tokenAllowances:[]).map((t=>TokenAllowance._fromProtobuf(t))),nftAllowances:(null!=t.nftAllowances?t.nftAllowances:[]).map((t=>TokenNftAllowance._fromProtobuf(t)))})}_toProtobuf(){return{accountID:this.accountId._toProtobuf(),contractAccountID:this.contractAccountId,deleted:this.isDeleted,proxyAccountID:null!=this.proxyAccountId?this.proxyAccountId._toProtobuf():null,proxyReceived:this.proxyReceived.toTinybars(),key:this.key._toProtobufKey(),balance:this.balance.toTinybars(),generateSendRecordThreshold:this.sendRecordThreshold.toTinybars(),generateReceiveRecordThreshold:this.receiveRecordThreshold.toTinybars(),receiverSigRequired:this.isReceiverSignatureRequired,expirationTime:this.expirationTime._toProtobuf(),autoRenewPeriod:this.autoRenewPeriod._toProtobuf(),liveHashes:this.liveHashes.map((t=>t._toProtobuf())),tokenRelationships:null!=this.tokenRelationships?this.tokenRelationships._toProtobuf():null,memo:this.accountMemo,ownedNfts:this.ownedNfts,maxAutomaticTokenAssociations:this.maxAutomaticTokenAssociations.toInt(),alias:null!=this.aliasKey?lib.Key.encode(this.aliasKey._toProtobufKey()).finish():null,ledgerId:null!=this.ledgerId?this.ledgerId.toBytes():null}}static fromBytes(t){return AccountInfo._fromProtobuf(lib.CryptoGetInfoResponse.AccountInfo.decode(t))}toBytes(){return lib.CryptoGetInfoResponse.AccountInfo.encode(this._toProtobuf()).finish()}}class AccountInfoQuery extends Query{constructor(t={}){super(),this._accountId=null,null!=t.accountId&&this.setAccountId(t.accountId)}static _fromProtobuf(t){const e=t.cryptoGetInfo;return new AccountInfoQuery({accountId:null!=e.accountID?AccountId._fromProtobuf(e.accountID):void 0})}get accountId(){return this._accountId}setAccountId(t){return this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._accountId&&this._accountId.validateChecksum(t)}_execute(t,e){return t.crypto.getAccountInfo(e)}async getCost(t){let e=await super.getCost(t);return e.toTinybars().greaterThan(25)?e:Hbar.fromTinybars(25)}_mapResponseHeader(t){return t.cryptoGetInfo.header}_mapResponse(t,e,Q){const B=t.cryptoGetInfo;return Promise.resolve(AccountInfo._fromProtobuf(B.accountInfo))}_onMakeRequest(t){return{cryptoGetInfo:{header:t,accountID:null!=this._accountId?this._accountId._toProtobuf():null}}}}QUERY_REGISTRY.set("cryptoGetInfo",AccountInfoQuery._fromProtobuf);class AccountRecordsQuery extends Query{constructor(t={}){super(),this._accountId=null,null!=t.accountId&&this.setAccountId(t.accountId)}static _fromProtobuf(t){const e=t.cryptoGetAccountRecords;return new AccountRecordsQuery({accountId:null!=e.accountID?AccountId._fromProtobuf(e.accountID):void 0})}get accountId(){return this._accountId}setAccountId(t){return this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._accountId&&this._accountId.validateChecksum(t)}_execute(t,e){return t.crypto.getAccountRecords(e)}_mapResponseHeader(t){return t.cryptoGetAccountRecords.header}_mapResponse(t,e,Q){const B=t.cryptoGetAccountRecords.records;return Promise.resolve(B.map((t=>TransactionRecord._fromProtobuf({transactionRecord:t}))))}_onMakeRequest(t){return{cryptoGetAccountRecords:{header:t,accountID:null!=this._accountId?this._accountId._toProtobuf():null}}}}QUERY_REGISTRY.set("cryptoGetAccountRecords",AccountRecordsQuery._fromProtobuf);class ProxyStaker{constructor(t){this.accountId=t.accountId,this.amount=t.amount instanceof Hbar?t.amount:new Hbar(t.amount),Object.freeze(this)}static _fromProtobuf(t){return new ProxyStaker({accountId:AccountId._fromProtobuf(t.accountID),amount:Hbar.fromTinybars(null!=t.amount?t.amount:0)})}_toProtobuf(){return{accountID:this.accountId._toProtobuf(),amount:this.amount.toTinybars()}}}class AccountStakersQuery extends Query{constructor(t={}){super(),this._accountId=null,null!=t.accountId&&this.setAccountId(t.accountId)}static _fromProtobuf(t){const e=t.cryptoGetProxyStakers;return new AccountStakersQuery({accountId:null!=e.accountID?AccountId._fromProtobuf(e.accountID):void 0})}get accountId(){return this._accountId}setAccountId(t){return this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._accountId&&this._accountId.validateChecksum(t)}_execute(t,e){return t.crypto.getStakersByAccountID(e)}_mapResponseHeader(t){return t.cryptoGetProxyStakers.header}_mapResponse(t){const e=t.cryptoGetProxyStakers.stakers;return Promise.resolve((null!=e.proxyStaker?e.proxyStaker:[]).map((t=>ProxyStaker._fromProtobuf(t))))}_onMakeRequest(t){return{cryptoGetProxyStakers:{header:t,accountID:null!=this._accountId?this._accountId._toProtobuf():null}}}}QUERY_REGISTRY.set("cryptoGetProxyStakers",AccountStakersQuery._fromProtobuf);class AccountUpdateTransaction extends Transaction{constructor(t={}){super(),this._accountId=null,this._key=null,this._receiverSignatureRequired=!1,this._proxyAccountId=null,this._autoRenewPeriod=null,this._expirationTime=null,this._accountMemo=null,this._maxAutomaticTokenAssociations=null,this._aliasKey=null,null!=t.accountId&&this.setAccountId(t.accountId),null!=t.key&&this.setKey(t.key),null!=t.receiverSignatureRequired&&this.setReceiverSignatureRequired(t.receiverSignatureRequired),null!=t.proxyAccountId&&this.setProxyAccountId(t.proxyAccountId),null!=t.autoRenewPeriod&&this.setAutoRenewPeriod(t.autoRenewPeriod),null!=t.expirationTime&&this.setExpirationTime(t.expirationTime),null!=t.accountMemo&&this.setAccountMemo(t.accountMemo),null!=t.maxAutomaticTokenAssociations&&this.setMaxAutomaticTokenAssociations(t.maxAutomaticTokenAssociations),null!=t.aliasKey&&this.setAliasKey(t.aliasKey)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].cryptoUpdateAccount;let U=null!=F.alias&&F.alias.length>0?Key._fromProtobufKey(lib.Key.decode(F.alias)):void 0;return U instanceof PublicKey||(U=void 0),Transaction._fromProtobufTransactions(new AccountUpdateTransaction({accountId:null!=F.accountIDToUpdate?AccountId._fromProtobuf(F.accountIDToUpdate):void 0,key:null!=F.key?Key._fromProtobufKey(F.key):void 0,receiverSignatureRequired:null!=F.receiverSigRequired?F.receiverSigRequired:void 0,proxyAccountId:null!=F.proxyAccountID?AccountId._fromProtobuf(F.proxyAccountID):void 0,autoRenewPeriod:null!=F.autoRenewPeriod&&null!=F.autoRenewPeriod.seconds?F.autoRenewPeriod.seconds:void 0,expirationTime:null!=F.expirationTime?Timestamp._fromProtobuf(F.expirationTime):void 0,accountMemo:null!=F.memo&&null!=F.memo.value?F.memo.value:void 0,maxAutomaticTokenAssociations:null!=F.maxAutomaticTokenAssociations&&null!=F.maxAutomaticTokenAssociations.value?long$1.fromNumber(F.maxAutomaticTokenAssociations.value):void 0,aliasKey:U}),t,e,Q,B,s)}get accountId(){return this._accountId}setAccountId(t){return this._requireNotFrozen(),this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}get key(){return this._key}setKey(t){return this._requireNotFrozen(),this._key=t,this}get receiverSignatureRequired(){return this._receiverSignatureRequired}setReceiverSignatureRequired(t){return this._requireNotFrozen(),this._receiverSignatureRequired=t,this}get proxyAccountId(){return this._proxyAccountId}setProxyAccountId(t){return this._requireNotFrozen(),this._proxyAccountId=t,this}get autoRenewPeriod(){return this._autoRenewPeriod}setAutoRenewPeriod(t){return this._requireNotFrozen(),this._autoRenewPeriod=t instanceof Duration?t:new Duration(t),this}get expirationTime(){return this._expirationTime}setExpirationTime(t){return this._requireNotFrozen(),this._expirationTime=t instanceof Date?Timestamp.fromDate(t):t,this}get accountMemo(){return this._accountMemo}setAccountMemo(t){return this._requireNotFrozen(),this._accountMemo=t,this}clearAccountMemo(){return this._requireNotFrozen(),this._accountMemo=null,this}get maxAutomaticTokenAssociations(){return this._maxAutomaticTokenAssociations}setMaxAutomaticTokenAssociations(t){return this._requireNotFrozen(),this._maxAutomaticTokenAssociations="number"==typeof t?long$1.fromNumber(t):t,this}get aliasKey(){return this._aliasKey}setAliasKey(t){return this._requireNotFrozen(),this._aliasKey=t,this}_validateChecksums(t){null!=this._accountId&&this._accountId.validateChecksum(t),null!=this._proxyAccountId&&this._proxyAccountId.validateChecksum(t)}_execute(t,e){return t.crypto.updateAccount(e)}_getTransactionDataCase(){return"cryptoUpdateAccount"}_makeTransactionData(){return{accountIDToUpdate:null!=this._accountId?this._accountId._toProtobuf():null,key:null!=this._key?this._key._toProtobufKey():null,expirationTime:null!=this._expirationTime?this._expirationTime._toProtobuf():null,proxyAccountID:null!=this._proxyAccountId?this._proxyAccountId._toProtobuf():null,autoRenewPeriod:null!=this._autoRenewPeriod?this._autoRenewPeriod._toProtobuf():null,receiverSigRequiredWrapper:null==this._receiverSignatureRequired?null:{value:this._receiverSignatureRequired},memo:null!=this._accountMemo?{value:this._accountMemo}:null,maxAutomaticTokenAssociations:null!=this._maxAutomaticTokenAssociations?{value:this._maxAutomaticTokenAssociations.toInt()}:null,alias:null!=this._key?lib.Key.encode(this._key._toProtobufKey()).finish():null}}}TRANSACTION_REGISTRY.set("cryptoUpdateAccount",AccountUpdateTransaction._fromProtobuf);class ContractByteCodeQuery extends Query{constructor(t={}){super(),this._contractId=null,null!=t.contractId&&this.setContractId(t.contractId)}static _fromProtobuf(t){const e=t.contractGetBytecode;return new ContractByteCodeQuery({contractId:null!=e.contractID?ContractId._fromProtobuf(e.contractID):void 0})}get contractId(){return this._contractId}setContractId(t){return this._contractId="string"==typeof t?ContractId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._contractId&&this._contractId.validateChecksum(t)}_execute(t,e){return t.smartContract.contractGetBytecode(e)}_mapResponseHeader(t){return t.contractGetBytecodeResponse.header}_mapResponse(t){const e=t.contractGetBytecodeResponse;return Promise.resolve(null!=e.bytecode?e.bytecode:new Uint8Array)}_onMakeRequest(t){return{contractGetBytecode:{header:t,contractID:null!=this._contractId?this._contractId._toProtobuf():null}}}}QUERY_REGISTRY.set("contractGetBytecode",ContractByteCodeQuery._fromProtobuf);const HEX_CHARS="0123456789abcdef".split(""),KECCAK_PADDING=[1,256,65536,16777216],SHIFT=[0,8,16,24],RC=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],Keccak=t=>({blocks:[],reset:!0,block:0,start:0,blockCount:1600-(t<<1)>>5,outputBlocks:t>>5,s:(t=>[].concat(t,t,t,t,t))([0,0,0,0,0,0,0,0,0,0])}),update=(t,e)=>{for(var Q,B,s=e.length,F=t.blocks,U=t.blockCount<<2,n=t.blockCount,c=t.outputBlocks,o=t.s,g=0;g<s;){if(t.reset)for(t.reset=!1,F[0]=t.block,Q=1;Q<n+1;++Q)F[Q]=0;if("string"!=typeof e)for(Q=t.start;g<s&&Q<U;++g)F[Q>>2]|=e[g]<<SHIFT[3&Q++];else for(Q=t.start;g<s&&Q<U;++g)(B=e.charCodeAt(g))<128?F[Q>>2]|=B<<SHIFT[3&Q++]:B<2048?(F[Q>>2]|=(192|B>>6)<<SHIFT[3&Q++],F[Q>>2]|=(128|63&B)<<SHIFT[3&Q++]):B<55296||B>=57344?(F[Q>>2]|=(224|B>>12)<<SHIFT[3&Q++],F[Q>>2]|=(128|B>>6&63)<<SHIFT[3&Q++],F[Q>>2]|=(128|63&B)<<SHIFT[3&Q++]):(B=65536+((1023&B)<<10|1023&e.charCodeAt(++g)),F[Q>>2]|=(240|B>>18)<<SHIFT[3&Q++],F[Q>>2]|=(128|B>>12&63)<<SHIFT[3&Q++],F[Q>>2]|=(128|B>>6&63)<<SHIFT[3&Q++],F[Q>>2]|=(128|63&B)<<SHIFT[3&Q++]);if(t.lastByteIndex=Q,Q>=U){for(t.start=Q-U,t.block=F[n],Q=0;Q<n;++Q)o[Q]^=F[Q];f(o),t.reset=!0}else t.start=Q}if(F[(Q=t.lastByteIndex)>>2]|=KECCAK_PADDING[3&Q],t.lastByteIndex===U)for(F[0]=F[n],Q=1;Q<n+1;++Q)F[Q]=0;for(F[n-1]|=2147483648,Q=0;Q<n;++Q)o[Q]^=F[Q];f(o);var l,I="",i=0;for(Q=0;i<c;){for(Q=0;Q<n&&i<c;++Q,++i)l=o[Q],I+=HEX_CHARS[l>>4&15]+HEX_CHARS[15&l]+HEX_CHARS[l>>12&15]+HEX_CHARS[l>>8&15]+HEX_CHARS[l>>20&15]+HEX_CHARS[l>>16&15]+HEX_CHARS[l>>28&15]+HEX_CHARS[l>>24&15];i%n==0&&(f(o),Q=0)}return"0x"+I},f=t=>{var e,Q,B,s,F,U,n,c,o,g,l,I,i,r,a,d,u,C,y,S,b,m,G,x,L,h,A,Z,R,N,V,D,E,p,J,X,H,k,W,T,Y,f,M,w,v,z,K,O,P,j,_,$,q,tt,et,Qt,Bt,st,Ft,Ut,nt,ct,ot;for(B=0;B<48;B+=2)s=t[0]^t[10]^t[20]^t[30]^t[40],F=t[1]^t[11]^t[21]^t[31]^t[41],U=t[2]^t[12]^t[22]^t[32]^t[42],n=t[3]^t[13]^t[23]^t[33]^t[43],c=t[4]^t[14]^t[24]^t[34]^t[44],o=t[5]^t[15]^t[25]^t[35]^t[45],g=t[6]^t[16]^t[26]^t[36]^t[46],l=t[7]^t[17]^t[27]^t[37]^t[47],e=(I=t[8]^t[18]^t[28]^t[38]^t[48])^(U<<1|n>>>31),Q=(i=t[9]^t[19]^t[29]^t[39]^t[49])^(n<<1|U>>>31),t[0]^=e,t[1]^=Q,t[10]^=e,t[11]^=Q,t[20]^=e,t[21]^=Q,t[30]^=e,t[31]^=Q,t[40]^=e,t[41]^=Q,e=s^(c<<1|o>>>31),Q=F^(o<<1|c>>>31),t[2]^=e,t[3]^=Q,t[12]^=e,t[13]^=Q,t[22]^=e,t[23]^=Q,t[32]^=e,t[33]^=Q,t[42]^=e,t[43]^=Q,e=U^(g<<1|l>>>31),Q=n^(l<<1|g>>>31),t[4]^=e,t[5]^=Q,t[14]^=e,t[15]^=Q,t[24]^=e,t[25]^=Q,t[34]^=e,t[35]^=Q,t[44]^=e,t[45]^=Q,e=c^(I<<1|i>>>31),Q=o^(i<<1|I>>>31),t[6]^=e,t[7]^=Q,t[16]^=e,t[17]^=Q,t[26]^=e,t[27]^=Q,t[36]^=e,t[37]^=Q,t[46]^=e,t[47]^=Q,e=g^(s<<1|F>>>31),Q=l^(F<<1|s>>>31),t[8]^=e,t[9]^=Q,t[18]^=e,t[19]^=Q,t[28]^=e,t[29]^=Q,t[38]^=e,t[39]^=Q,t[48]^=e,t[49]^=Q,r=t[0],a=t[1],z=t[11]<<4|t[10]>>>28,K=t[10]<<4|t[11]>>>28,Z=t[20]<<3|t[21]>>>29,R=t[21]<<3|t[20]>>>29,Ut=t[31]<<9|t[30]>>>23,nt=t[30]<<9|t[31]>>>23,f=t[40]<<18|t[41]>>>14,M=t[41]<<18|t[40]>>>14,p=t[2]<<1|t[3]>>>31,J=t[3]<<1|t[2]>>>31,d=t[13]<<12|t[12]>>>20,u=t[12]<<12|t[13]>>>20,O=t[22]<<10|t[23]>>>22,P=t[23]<<10|t[22]>>>22,N=t[33]<<13|t[32]>>>19,V=t[32]<<13|t[33]>>>19,ct=t[42]<<2|t[43]>>>30,ot=t[43]<<2|t[42]>>>30,tt=t[5]<<30|t[4]>>>2,et=t[4]<<30|t[5]>>>2,X=t[14]<<6|t[15]>>>26,H=t[15]<<6|t[14]>>>26,C=t[25]<<11|t[24]>>>21,y=t[24]<<11|t[25]>>>21,j=t[34]<<15|t[35]>>>17,_=t[35]<<15|t[34]>>>17,D=t[45]<<29|t[44]>>>3,E=t[44]<<29|t[45]>>>3,x=t[6]<<28|t[7]>>>4,L=t[7]<<28|t[6]>>>4,Qt=t[17]<<23|t[16]>>>9,Bt=t[16]<<23|t[17]>>>9,k=t[26]<<25|t[27]>>>7,W=t[27]<<25|t[26]>>>7,S=t[36]<<21|t[37]>>>11,b=t[37]<<21|t[36]>>>11,$=t[47]<<24|t[46]>>>8,q=t[46]<<24|t[47]>>>8,w=t[8]<<27|t[9]>>>5,v=t[9]<<27|t[8]>>>5,h=t[18]<<20|t[19]>>>12,A=t[19]<<20|t[18]>>>12,st=t[29]<<7|t[28]>>>25,Ft=t[28]<<7|t[29]>>>25,T=t[38]<<8|t[39]>>>24,Y=t[39]<<8|t[38]>>>24,m=t[48]<<14|t[49]>>>18,G=t[49]<<14|t[48]>>>18,t[0]=r^~d&C,t[1]=a^~u&y,t[10]=x^~h&Z,t[11]=L^~A&R,t[20]=p^~X&k,t[21]=J^~H&W,t[30]=w^~z&O,t[31]=v^~K&P,t[40]=tt^~Qt&st,t[41]=et^~Bt&Ft,t[2]=d^~C&S,t[3]=u^~y&b,t[12]=h^~Z&N,t[13]=A^~R&V,t[22]=X^~k&T,t[23]=H^~W&Y,t[32]=z^~O&j,t[33]=K^~P&_,t[42]=Qt^~st&Ut,t[43]=Bt^~Ft&nt,t[4]=C^~S&m,t[5]=y^~b&G,t[14]=Z^~N&D,t[15]=R^~V&E,t[24]=k^~T&f,t[25]=W^~Y&M,t[34]=O^~j&$,t[35]=P^~_&q,t[44]=st^~Ut&ct,t[45]=Ft^~nt&ot,t[6]=S^~m&r,t[7]=b^~G&a,t[16]=N^~D&x,t[17]=V^~E&L,t[26]=T^~f&p,t[27]=Y^~M&J,t[36]=j^~$&w,t[37]=_^~q&v,t[46]=Ut^~ct&tt,t[47]=nt^~ot&et,t[8]=m^~r&d,t[9]=G^~a&u,t[18]=D^~x&h,t[19]=E^~L&A,t[28]=f^~p&X,t[29]=M^~J&H,t[38]=$^~w&z,t[39]=q^~v&K,t[48]=ct^~tt&Qt,t[49]=ot^~et&Bt,t[0]^=RC[B],t[1]^=RC[B+1]},keccak=t=>e=>{var Q;if("0x"===e.slice(0,2)){Q=[];for(var B=2,s=e.length;B<s;B+=2)Q.push(parseInt(e.slice(B,B+2),16))}else Q=e;return update(Keccak(t),Q)},keccak256=keccak(256),ArgumentType={uint8:0,int8:1,uint16:2,int16:3,uint32:4,int32:5,uint64:6,int64:7,uint256:8,int256:9,string:10,bool:11,bytes:12,bytes32:13,address:14,func:15};class ContractFunctionSelector{constructor(t){this.name=null,this._params="",this._paramTypes=[],null!=t&&(this._name=t)}addString(){return this._addParam({ty:ArgumentType.string,array:!1})}addStringArray(){return this._addParam({ty:ArgumentType.string,array:!0})}addBytes(){return this._addParam({ty:ArgumentType.bytes,array:!1})}addBytes32(){return this._addParam({ty:ArgumentType.bytes32,array:!1})}addBytesArray(){return this._addParam({ty:ArgumentType.bytes,array:!0})}addBytes32Array(){return this._addParam({ty:ArgumentType.bytes32,array:!0})}addInt8(){return this._addParam({ty:ArgumentType.int8,array:!1})}addInt32(){return this._addParam({ty:ArgumentType.int32,array:!1})}addInt64(){return this._addParam({ty:ArgumentType.int64,array:!1})}addInt256(){return this._addParam({ty:ArgumentType.int256,array:!1})}addInt8Array(){return this._addParam({ty:ArgumentType.int8,array:!0})}addInt32Array(){return this._addParam({ty:ArgumentType.int32,array:!0})}addInt64Array(){return this._addParam({ty:ArgumentType.int64,array:!0})}addInt256Array(){return this._addParam({ty:ArgumentType.int256,array:!0})}addUint8(){return this._addParam({ty:ArgumentType.uint8,array:!1})}addUint32(){return this._addParam({ty:ArgumentType.uint32,array:!1})}addUint64(){return this._addParam({ty:ArgumentType.uint64,array:!1})}addUint256(){return this._addParam({ty:ArgumentType.uint256,array:!1})}addUint8Array(){return this._addParam({ty:ArgumentType.uint8,array:!0})}addUint32Array(){return this._addParam({ty:ArgumentType.uint32,array:!0})}addUint64Array(){return this._addParam({ty:ArgumentType.uint64,array:!0})}addUint256Array(){return this._addParam({ty:ArgumentType.uint256,array:!0})}addBool(){return this._addParam({ty:ArgumentType.bool,array:!1})}addAddress(){return this._addParam({ty:ArgumentType.address,array:!1})}addAddressArray(){return this._addParam({ty:ArgumentType.address,array:!0})}addFunction(){return this._addParam({ty:ArgumentType.func,array:!1})}_addParam(t){return this._paramTypes.length>0&&(this._params+=","),this._params+=solidityTypeToString(t),this._paramTypes.push(t),this}_build(t){if(null!=t)this._name=t;else if(null==this._name)throw new Error("`name` required for ContractFunctionSelector");const e=encode$1(encode(this.toString()));return decode$1(keccak256(`0x${e}`)).slice(0,4)}toString(){return`${null!=this._name?this._name.toString():""}(${this._params})`}}function solidityTypeToString(t){let e="";switch(t.ty){case ArgumentType.uint8:e="uint8";break;case ArgumentType.int8:e="int8";break;case ArgumentType.uint16:e="uint16";break;case ArgumentType.int16:e="int16";break;case ArgumentType.uint32:e="uint32";break;case ArgumentType.int32:e="int32";break;case ArgumentType.uint64:e="uint64";break;case ArgumentType.int64:e="int64";break;case ArgumentType.uint256:e="uint256";break;case ArgumentType.int256:e="int256";break;case ArgumentType.string:e="string";break;case ArgumentType.bool:e="bool";break;case ArgumentType.bytes:e="bytes";break;case ArgumentType.bytes32:e="bytes32";break;case ArgumentType.address:e="address";break;case ArgumentType.func:e="function";break;default:e=""}return t.array&&(e+="[]"),e}class ContractFunctionParameters$1{constructor(){this._selector=new ContractFunctionSelector,this._arguments=[]}addString(t){return this._selector.addString(),this._addParam(t,!0)}addStringArray(t){return this._selector.addStringArray(),this._addParam(t,!0)}addBytes(t){return this._selector.addBytes(),this._addParam(t,!0)}addBytes32(t){if(32!==t.length)throw new Error(`addBytes32 expected array to be of length 32, but received ${t.length}`);return this._selector.addBytes32(),this._addParam(t,!1)}addBytesArray(t){return this._selector.addBytesArray(),this._addParam(t,!0)}addBytes32Array(t){for(const[e,Q]of t.entries())if(32!==Q.length)throw new Error(`addBytes32 expected array to be of length 32, but received ${Q.length}`);return this._selector.addBytes32Array(),this._addParam(t,!0)}addBool(t){return this._selector.addBool(),this._addParam(t,!1)}addInt8(t){return this._selector.addInt8(),this._addParam(convertToBigNumber(t),!1)}addInt32(t){return this._selector.addInt32(),this._addParam(convertToBigNumber(t),!1)}addInt64(t){return this._selector.addInt64(),this._addParam(convertToBigNumber(t),!1)}addInt256(t){return this._selector.addInt256(),this._addParam(convertToBigNumber(t),!1)}addInt8Array(t){return this._selector.addInt8Array(),this._addParam(convertToBigNumberArray(t),!0)}addInt32Array(t){return this._selector.addInt32Array(),this._addParam(convertToBigNumberArray(t),!0)}addInt64Array(t){return this._selector.addInt64Array(),this._addParam(convertToBigNumberArray(t),!0)}addInt256Array(t){return this._selector.addInt256Array(),console.log("asdf"),this._addParam(convertToBigNumberArray(t),!0)}addUint8(t){return this._selector.addUint8(),this._addParam(convertToBigNumber(t),!1)}addUint32(t){return this._selector.addUint32(),this._addParam(convertToBigNumber(t),!1)}addUint64(t){return this._selector.addUint64(),this._addParam(convertToBigNumber(t),!1)}addUint256(t){return this._selector.addUint256(),this._addParam(convertToBigNumber(t),!1)}addUint8Array(t){return this._selector.addUint8Array(),this._addParam(convertToBigNumberArray(t),!0)}addUint32Array(t){return this._selector.addUint32Array(),this._addParam(convertToBigNumberArray(t),!0)}addUint64Array(t){return this._selector.addUint64Array(),this._addParam(convertToBigNumberArray(t),!0)}addUint256Array(t){return this._selector.addUint256Array(),this._addParam(convertToBigNumberArray(t),!0)}addAddress(t){if(40!==t.length&&42!==t.length)throw new Error("`address` type requires parameter to be 40 or 42 characters");const e=40===t.length?decode$1(t):decode$1(t.substring(2));return this._selector.addAddress(),this._addParam(e,!1)}addAddressArray(t){const e=[];for(const[Q,B]of t.entries()){if(40!==B.length&&42!==B.length)throw new Error("`address` type requires parameter to be 40 or 42 characters");const t=40===B.length?decode$1(B):decode$1(B.substring(2));e.push(t)}return this._selector.addAddressArray(),this._addParam(e,!0)}addFunction(t,e){const Q=decode$1(t),B=e._build();if(20!==Q.length)throw new Error("`function` type requires parameter `address` to be exactly 20 bytes");this._selector.addFunction();const s=new Uint8Array(24);return s.set(Q,0),s.set(B,20),this._addParam(s,!1)}_addParam(t,e){const Q=this._selector._paramTypes.length-1,B=argumentToBytes(t,this._selector._paramTypes[Q]);return this._arguments.push({dynamic:e,value:B}),this}_build(t){const e=null!=t,Q=e?4:0,B=0===this._arguments.length?Q:32*this._arguments.length+this._arguments.map((t=>t.dynamic?t.value.length:0)).reduce(((t,e)=>t+e))+Q,s=new Uint8Array(B);e&&s.set(this._selector._build(t),0);let F=32*this._arguments.length;for(const[t,{dynamic:e,value:B}]of this._arguments.entries())if(e){const e=safeView(s,Q+32*t+28);e.setUint32(0,F),s.set(B,e.getUint32(0)+Q),F+=B.length}else s.set(B,Q+32*t);return s}}function argumentToBytes(t,e){let Q,B=new Uint8Array(32),s=safeView(B);if(e.array){if(!Array.isArray(t))throw new TypeError("SolidityType indicates type is array, but parameter is not an array");const Q=[];for(const[B,s]of t.entries()){const t=argumentToBytes(s,{ty:e.ty,array:!1});Q.push(t)}const F=Q.map((t=>t.length)).reduce(((t,e)=>t+e));switch(e.ty){case ArgumentType.uint8:case ArgumentType.int8:case ArgumentType.uint16:case ArgumentType.int16:case ArgumentType.uint32:case ArgumentType.int32:case ArgumentType.uint64:case ArgumentType.int64:case ArgumentType.uint256:case ArgumentType.int256:case ArgumentType.bool:case ArgumentType.bytes32:case ArgumentType.address:case ArgumentType.func:B=new Uint8Array(F+32);break;case ArgumentType.bytes:case ArgumentType.string:B=new Uint8Array(32*Q.length+F+32);break;default:throw new TypeError(`Expected param type to be ArgumentType, but received ${e.ty}`)}s=safeView(B,28),s.setUint32(0,Q.length);let U=32*Q.length;for(const[t,s]of Q.entries())switch(e.ty){case ArgumentType.uint8:case ArgumentType.int8:case ArgumentType.uint16:case ArgumentType.int16:case ArgumentType.uint32:case ArgumentType.int32:case ArgumentType.uint64:case ArgumentType.int64:case ArgumentType.uint256:case ArgumentType.int256:case ArgumentType.bool:case ArgumentType.bytes32:case ArgumentType.address:case ArgumentType.func:B.set(s,32*t+32);break;case ArgumentType.bytes:case ArgumentType.string:const Q=safeView(B,32*(t+1)+28);Q.setUint32(0,U),B.set(s,Q.getUint32(0)+32),U+=s.length;break;default:throw new TypeError(`Expected param type to be ArgumentType, but received ${e.ty}`)}return B}switch(e.ty){case ArgumentType.uint8:return numberToBytes(t,31,s.setUint8.bind(s)),B;case ArgumentType.int8:return numberToBytes(t,31,s.setInt8.bind(s)),B;case ArgumentType.uint16:return numberToBytes(t,30,s.setUint16.bind(s)),B;case ArgumentType.int16:return numberToBytes(t,30,s.setInt16.bind(s)),B;case ArgumentType.uint32:return numberToBytes(t,28,s.setUint32.bind(s)),B;case ArgumentType.int32:return numberToBytes(t,28,s.setInt32.bind(s)),B;case ArgumentType.uint64:case ArgumentType.int64:if(BigNumber$1.isBigNumber(t)){let e=t.toString(16);if(e.length>16)throw new TypeError("uint64/int64 requires BigNumber to be less than or equal to 8 bytes");if(!t.isInteger())throw new TypeError("uint64/int64 requires BigNumber to be an integer");e.length%2==1&&(e=`0${e}`);const Q=decode$1(e);B.set(Q,32-Q.length)}return B;case ArgumentType.int256:case ArgumentType.uint256:if(BigNumber$1.isBigNumber(t)){let e=t.toString(16);e.length%2==1&&(e=`0${e}`);const Q=decode$1(e);B.set(Q,32-Q.length)}return B;case ArgumentType.address:return B.set(t,12),B;case ArgumentType.bool:return B[31]=t?1:0,B;case ArgumentType.func:return B.set(t,8),B;case ArgumentType.bytes32:return B.set(t,0),B;case ArgumentType.bytes:case ArgumentType.string:return Q=t instanceof Uint8Array?t:encode(t),B=Math.floor(Q.length/32)>=0&&0!==Math.floor(Q.length%32)?new Uint8Array(32*(Math.floor(Q.length/32)+1)+32):new Uint8Array(64),B.set(Q,32),s=safeView(B,28),s.setUint32(0,Q.length),B;default:throw new Error(`Unsupported argument type: ${e.toString()}`)}}function numberToBytes(t,e,Q){Q(e,BigNumber$1.isBigNumber(t)?t.toNumber():t)}class ContractCallQuery extends Query{constructor(t={}){super(),this._contractId=null,null!=t.contractId&&this.setContractId(t.contractId),this._gas=null,null!=t.gas&&this.setGas(t.gas),this._functionParameters=null,null!=t.functionParameters&&(t.functionParameters instanceof Uint8Array?this.setFunctionParameters(t.functionParameters):this.setFunction(t.functionParameters.name,t.functionParameters.parameters)),this._maxResultSize=null,null!=t.maxResultSize&&this.setMaxResultSize(t.maxResultSize)}static _fromProtobuf(t){const e=t.contractCallLocal;return new ContractCallQuery({contractId:null!=e.contractID?ContractId._fromProtobuf(e.contractID):void 0,gas:null!=e.gas?e.gas:void 0,functionParameters:null!=e.functionParameters?e.functionParameters:void 0,maxResultSize:null!=e.maxResultSize?e.maxResultSize:void 0})}get contractId(){return this._contractId}setContractId(t){return this._contractId="string"==typeof t?ContractId.fromString(t):t.clone(),this}get gas(){return this._gas}setGas(t){return this._gas=t instanceof long$1?t:long$1.fromValue(t),this}get functionParameters(){return this._functionParameters}setFunctionParameters(t){return this._functionParameters=t,this}setFunction(t,e){return this._functionParameters=(null!=e?e:new ContractFunctionParameters$1)._build(t),this}setMaxResultSize(t){return this._maxResultSize=t instanceof long$1?t:long$1.fromValue(t),this}_validateChecksums(t){null!=this._contractId&&this._contractId.validateChecksum(t)}_execute(t,e){return t.smartContract.contractCallLocalMethod(e)}_mapResponseHeader(t){return t.contractCallLocal.header}_mapResponse(t){const e=t.contractCallLocal;return Promise.resolve(ContractFunctionResult._fromProtobuf(e.functionResult))}_onMakeRequest(t){return{contractCallLocal:{header:t,contractID:null!=this._contractId?this._contractId._toProtobuf():null,gas:this._gas,maxResultSize:this._maxResultSize,functionParameters:this._functionParameters}}}}QUERY_REGISTRY.set("contractCallLocal",ContractCallQuery._fromProtobuf);class ContractCreateTransaction extends Transaction{constructor(t={}){super(),this._bytecodeFileId=null,this._adminKey=null,this._gas=null,this._initialBalance=null,this._proxyAccountId=null,this._autoRenewPeriod=new Duration(DEFAULT_AUTO_RENEW_PERIOD),this._constructorParameters=null,this._contractMemo=null,this._defaultMaxTransactionFee=new Hbar(20),null!=t.bytecodeFileId&&this.setBytecodeFileId(t.bytecodeFileId),null!=t.adminKey&&this.setAdminKey(t.adminKey),null!=t.gas&&this.setGas(t.gas),null!=t.initialBalance&&this.setInitialBalance(t.initialBalance),null!=t.proxyAccountId&&this.setProxyAccountId(t.proxyAccountId),null!=t.autoRenewPeriod&&this.setAutoRenewPeriod(t.autoRenewPeriod),null!=t.constructorParameters&&this.setConstructorParameters(t.constructorParameters),null!=t.contractMemo&&this.setContractMemo(t.contractMemo)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].contractCreateInstance;return Transaction._fromProtobufTransactions(new ContractCreateTransaction({bytecodeFileId:null!=F.fileID?FileId._fromProtobuf(F.fileID):void 0,adminKey:null!=F.adminKey?Key._fromProtobufKey(F.adminKey):void 0,gas:null!=F.gas?F.gas:void 0,initialBalance:null!=F.initialBalance?F.initialBalance:void 0,proxyAccountId:null!=F.proxyAccountID?AccountId._fromProtobuf(F.proxyAccountID):void 0,autoRenewPeriod:null!=F.autoRenewPeriod&&null!=F.autoRenewPeriod.seconds?F.autoRenewPeriod.seconds:void 0,constructorParameters:null!=F.constructorParameters?F.constructorParameters:void 0,contractMemo:null!=F.memo?F.memo:void 0}),t,e,Q,B,s)}get bytecodeFileId(){return this._bytecodeFileId}setBytecodeFileId(t){return this._requireNotFrozen(),this._bytecodeFileId="string"==typeof t?FileId.fromString(t):t.clone(),this}get adminKey(){return this._adminKey}setAdminKey(t){return this._requireNotFrozen(),this._adminKey=t,this}get gas(){return this._gas}setGas(t){return this._requireNotFrozen(),this._gas=t instanceof long$1?t:long$1.fromValue(t),this}get initialBalance(){return this._initialBalance}setInitialBalance(t){return this._requireNotFrozen(),this._initialBalance=t instanceof Hbar?t:new Hbar(t),this}get proxyAccountId(){return this._proxyAccountId}setProxyAccountId(t){return this._requireNotFrozen(),this._proxyAccountId=t instanceof AccountId?t:AccountId.fromString(t),this}get autoRenewPeriod(){return this._autoRenewPeriod}setAutoRenewPeriod(t){return this._requireNotFrozen(),this._autoRenewPeriod=t instanceof Duration?t:new Duration(t),this}get constructorParameters(){return this._constructorParameters}setConstructorParameters(t){return this._requireNotFrozen(),this._constructorParameters=t instanceof ContractFunctionParameters$1?t._build():t,this}get contractMemo(){return this._contractMemo}setContractMemo(t){return this._requireNotFrozen(),this._contractMemo=t,this}_validateChecksums(t){null!=this._bytecodeFileId&&this._bytecodeFileId.validateChecksum(t),null!=this._proxyAccountId&&this._proxyAccountId.validateChecksum(t)}_execute(t,e){return t.smartContract.createContract(e)}_getTransactionDataCase(){return"contractCreateInstance"}_makeTransactionData(){return{fileID:null!=this._bytecodeFileId?this._bytecodeFileId._toProtobuf():null,adminKey:null!=this._adminKey?this._adminKey._toProtobufKey():null,gas:this._gas,initialBalance:null!=this._initialBalance?this._initialBalance.toTinybars():null,proxyAccountID:null!=this._proxyAccountId?this._proxyAccountId._toProtobuf():null,autoRenewPeriod:this._autoRenewPeriod._toProtobuf(),constructorParameters:this._constructorParameters,memo:this._contractMemo}}}TRANSACTION_REGISTRY.set("contractCreateInstance",ContractCreateTransaction._fromProtobuf);class ContractDeleteTransaction extends Transaction{constructor(t={}){super(),this._contractId=null,this._transferAccountId=null,this._transferContractId=null,null!=t.contractId&&this.setContractId(t.contractId),null!=t.transferAccountId&&this.setTransferAccountId(t.transferAccountId),null!=t.transferContractId&&this.setTransferContractId(t.transferContractId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].contractDeleteInstance;return Transaction._fromProtobufTransactions(new ContractDeleteTransaction({contractId:null!=F.contractID?ContractId._fromProtobuf(F.contractID):void 0,transferAccountId:null!=F.transferAccountID?AccountId._fromProtobuf(F.transferAccountID):void 0,transferContractId:null!=F.transferContractID?ContractId._fromProtobuf(F.transferContractID):void 0}),t,e,Q,B,s)}get contractId(){return this._contractId}setContractId(t){return this._requireNotFrozen(),this._contractId="string"==typeof t?ContractId.fromString(t):t.clone(),this}get transferContractId(){return this._transferContractId}setTransferContractId(t){return this._requireNotFrozen(),this._transferContractId=t instanceof ContractId?t:ContractId.fromString(t),this}get transferAccountId(){return this._transferAccountId}setTransferAccountId(t){return this._requireNotFrozen(),this._transferAccountId=t instanceof AccountId?t:AccountId.fromString(t),this}_validateChecksums(t){null!=this._contractId&&this._contractId.validateChecksum(t),null!=this._transferAccountId&&this._transferAccountId.validateChecksum(t),null!=this._transferContractId&&this._transferContractId.validateChecksum(t)}_execute(t,e){return t.smartContract.deleteContract(e)}_getTransactionDataCase(){return"contractDeleteInstance"}_makeTransactionData(){return{contractID:null!=this._contractId?this._contractId._toProtobuf():null,transferAccountID:this._transferAccountId?this._transferAccountId._toProtobuf():null,transferContractID:null!=this._transferContractId?this._transferContractId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("contractDeleteInstance",ContractDeleteTransaction._fromProtobuf);class ContractExecuteTransaction extends Transaction{constructor(t={}){super(),this._contractId=null,this._gas=null,this._amount=null,this._functionParameters=null,null!=t.contractId&&this.setContractId(t.contractId),null!=t.gas&&this.setGas(t.gas),null!=t.amount&&this.setPayableAmount(t.amount),null!=t.functionParameters?this.setFunctionParameters(t.functionParameters):null!=t.function&&this.setFunction(t.function.name,t.function.parameters)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].contractCall;return Transaction._fromProtobufTransactions(new ContractExecuteTransaction({contractId:null!=F.contractID?ContractId._fromProtobuf(F.contractID):void 0,gas:null!=F.gas?F.gas:void 0,amount:F.amount?F.amount:void 0,functionParameters:null!=F.functionParameters?F.functionParameters:void 0}),t,e,Q,B,s)}get contractId(){return this._contractId}setContractId(t){return this._requireNotFrozen(),this._contractId="string"==typeof t?ContractId.fromString(t):t.clone(),this}get gas(){return this._gas}setGas(t){return this._requireNotFrozen(),this._gas=t instanceof long$1?t:long$1.fromValue(t),this}get payableAmount(){return this._amount}setPayableAmount(t){return this._requireNotFrozen(),this._amount=t instanceof Hbar?t:new Hbar(t),this}get functionParameters(){return this._functionParameters}setFunctionParameters(t){return this._requireNotFrozen(),this._functionParameters=t,this}setFunction(t,e){return this._requireNotFrozen(),this._functionParameters=null!=e?e._build(t):(new ContractFunctionParameters$1)._build(t),this}_validateChecksums(t){null!=this._contractId&&this._contractId.validateChecksum(t)}_execute(t,e){return t.smartContract.contractCallMethod(e)}_getTransactionDataCase(){return"contractCall"}_makeTransactionData(){return{contractID:null!=this._contractId?this._contractId._toProtobuf():null,gas:this._gas,amount:null!=this._amount?this._amount.toTinybars():null,functionParameters:this._functionParameters}}}TRANSACTION_REGISTRY.set("contractCall",ContractExecuteTransaction._fromProtobuf);class ContractInfo{constructor(t){this.contractId=t.contractId,this.accountId=t.accountId,this.contractAccountId=t.contractAccountId,this.adminKey=null!=t.adminKey?t.adminKey:null,this.expirationTime=t.expirationTime,this.autoRenewPeriod=t.autoRenewPeriod,this.storage=t.storage,this.contractMemo=t.contractMemo,this.balance=t.balance,this.isDeleted=t.isDeleted,this.tokenRelationships=t.tokenRelationships,this.ledgerId=t.ledgerId,Object.freeze(this)}static _fromProtobuf(t){const e=t.autoRenewPeriod.seconds;return new ContractInfo({contractId:ContractId._fromProtobuf(t.contractID),accountId:AccountId._fromProtobuf(t.accountID),contractAccountId:null!=t.contractAccountID?t.contractAccountID:"",adminKey:null!=t.adminKey?Key._fromProtobufKey(t.adminKey):null,expirationTime:Timestamp._fromProtobuf(t.expirationTime),autoRenewPeriod:new Duration(e),storage:null!=t.storage?t.storage instanceof long$1?t.storage:long$1.fromValue(t.storage):long$1.ZERO,contractMemo:null!=t.memo?t.memo:"",balance:Hbar.fromTinybars(null!=t.balance?t.balance:0),isDeleted:t.deleted,tokenRelationships:TokenRelationshipMap._fromProtobuf(null!=t.tokenRelationships?t.tokenRelationships:[]),ledgerId:null!=t.ledgerId?LedgerId.fromBytes(t.ledgerId):null})}_toProtobuf(){return{contractID:this.contractId._toProtobuf(),accountID:this.accountId._toProtobuf(),contractAccountID:this.contractAccountId,adminKey:null!=this.adminKey?this.adminKey._toProtobufKey():null,expirationTime:this.expirationTime._toProtobuf(),autoRenewPeriod:null!=this.autoRenewPeriod?this.autoRenewPeriod._toProtobuf():null,storage:this.storage,memo:this.contractMemo,balance:this.balance.toTinybars(),deleted:this.isDeleted,tokenRelationships:null!=this.tokenRelationships?this.tokenRelationships._toProtobuf():null,ledgerId:null!=this.ledgerId?this.ledgerId.toBytes():null}}static fromBytes(t){return ContractInfo._fromProtobuf(lib.ContractGetInfoResponse.ContractInfo.decode(t))}toBytes(){return lib.ContractGetInfoResponse.ContractInfo.encode(this._toProtobuf()).finish()}}class ContractInfoQuery extends Query{constructor(t={}){super(),this._contractId=null,null!=t.contractId&&this.setContractId(t.contractId)}static _fromProtobuf(t){const e=t.contractGetInfo;return new ContractInfoQuery({contractId:null!=e.contractID?ContractId._fromProtobuf(e.contractID):void 0})}get contractId(){return this._contractId}setContractId(t){return this._contractId="string"==typeof t?ContractId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._contractId&&this._contractId.validateChecksum(t)}_execute(t,e){return t.smartContract.getContractInfo(e)}async getCost(t){let e=await super.getCost(t);return e.toTinybars().greaterThan(25)?e:Hbar.fromTinybars(25)}_mapResponseHeader(t){return t.contractGetInfo.header}_mapResponse(t,e,Q){const B=t.contractGetInfo;return Promise.resolve(ContractInfo._fromProtobuf(B.contractInfo))}_onMakeRequest(t){return{contractGetInfo:{header:t,contractID:null!=this._contractId?this._contractId._toProtobuf():null}}}}QUERY_REGISTRY.set("contractGetInfo",ContractInfoQuery._fromProtobuf);class ContractUpdateTransaction extends Transaction{constructor(t={}){super(),this._contractId=null,this._expirationTime=null,this._adminKey=null,this._proxyAccountId=null,this._autoRenewPeriod=null,this._bytecodeFileId=null,this._contractMemo=null,null!=t.contractId&&this.setContractId(t.contractId),null!=t.expirationTime&&this.setExpirationTime(t.expirationTime),null!=t.adminKey&&this.setAdminKey(t.adminKey),null!=t.proxyAccountId&&this.setProxyAccountId(t.proxyAccountId),null!=t.autoRenewPeriod&&this.setAutoRenewPeriod(t.autoRenewPeriod),null!=t.bytecodeFileId&&this.setBytecodeFileId(t.bytecodeFileId),null!=t.contractMemo&&this.setContractMemo(t.contractMemo)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].contractUpdateInstance;let U,n;return null!=F.autoRenewPeriod&&null!=F.autoRenewPeriod.seconds&&(U=F.autoRenewPeriod.seconds),null!=F.memoWrapper&&null!=F.memoWrapper.value&&(n=F.memoWrapper.value),Transaction._fromProtobufTransactions(new ContractUpdateTransaction({contractId:null!=F.contractID?ContractId._fromProtobuf(F.contractID):void 0,bytecodeFileId:null!=F.fileID?FileId._fromProtobuf(F.fileID):void 0,expirationTime:null!=F.expirationTime?Timestamp._fromProtobuf(F.expirationTime):void 0,adminKey:null!=F.adminKey?Key._fromProtobufKey(F.adminKey):void 0,proxyAccountId:null!=F.proxyAccountID?AccountId._fromProtobuf(F.proxyAccountID):void 0,autoRenewPeriod:U,contractMemo:n}),t,e,Q,B,s)}get contractId(){return this._contractId}setContractId(t){return this._requireNotFrozen(),this._contractId="string"==typeof t?ContractId.fromString(t):t.clone(),this}get expirationTime(){return this._expirationTime}setExpirationTime(t){return this._requireNotFrozen(),this._expirationTime=t instanceof Timestamp?t:Timestamp.fromDate(t),this}get adminKey(){return this._adminKey}setAdminKey(t){return this._requireNotFrozen(),this._adminKey=t,this}get proxyAccountId(){return this._proxyAccountId}setProxyAccountId(t){return this._requireNotFrozen(),this._proxyAccountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}get autoRenewPeriod(){return this._autoRenewPeriod}setAutoRenewPeriod(t){return this._requireNotFrozen(),this._autoRenewPeriod=t instanceof Duration?t:new Duration(t),this}get bytecodeFileId(){return this._bytecodeFileId}setBytecodeFileId(t){return console.warn("Deprecated: there is no replacement"),this._requireNotFrozen(),this._bytecodeFileId="string"==typeof t?FileId.fromString(t):t.clone(),this}get contractMemo(){return this._contractMemo}setContractMemo(t){return this._requireNotFrozen(),this._contractMemo=t,this}clearContractMemo(){return this._requireNotFrozen(),this._contractMemo=null,this}_validateChecksums(t){null!=this._contractId&&this._contractId.validateChecksum(t),null!=this._bytecodeFileId&&this._bytecodeFileId.validateChecksum(t),null!=this._proxyAccountId&&this._proxyAccountId.validateChecksum(t)}_execute(t,e){return t.smartContract.updateContract(e)}_getTransactionDataCase(){return"contractUpdateInstance"}_makeTransactionData(){return{contractID:null!=this._contractId?this._contractId._toProtobuf():null,expirationTime:null!=this._expirationTime?this._expirationTime._toProtobuf():null,adminKey:null!=this._adminKey?this._adminKey._toProtobufKey():null,proxyAccountID:null!=this._proxyAccountId?this._proxyAccountId._toProtobuf():null,autoRenewPeriod:null!=this._autoRenewPeriod?this._autoRenewPeriod._toProtobuf():null,fileID:this._bytecodeFileId?this._bytecodeFileId._toProtobuf():null,memoWrapper:null!=this._contractMemo?{value:this._contractMemo}:null}}}TRANSACTION_REGISTRY.set("contractUpdateInstance",ContractUpdateTransaction._fromProtobuf);class CustomFee{constructor(t={}){this._feeCollectorAccountId,null!=t.feeCollectorAccountId&&this.setFeeCollectorAccountId(t.feeCollectorAccountId)}get feeCollectorAccountId(){return this._feeCollectorAccountId}setFeeCollectorAccountId(t){return this._feeCollectorAccountId="string"==typeof t?AccountId.fromString(t):t,this}static _fromProtobuf(t){throw new Error("not implemented")}_toProtobuf(){throw new Error("not implemented")}}class CustomFixedFee extends CustomFee{constructor(t={}){super(t),this._denominatingTokenId,null!=t.denominatingTokenId&&this.setDenominatingTokenId(t.denominatingTokenId),this._amount,null!=t.amount&&this.setAmount(t.amount)}setHbarAmount(t){return this._amount=t.toTinybars(),this._denominatingTokenId=null,this}get hbarAmount(){return null!=this._denominatingTokenId?null:Hbar.fromTinybars(null!=this._amount?this._amount:0)}setDenominatingTokenToSameToken(){return this._denominatingTokenId=new TokenId(0,0,0),this}get denominatingTokenId(){return this._denominatingTokenId}setDenominatingTokenId(t){return this._denominatingTokenId="string"==typeof t?TokenId.fromString(t):t,this}get amount(){return this._amount}setAmount(t){return this._amount="number"==typeof t?long$1.fromNumber(t):t,this}static _fromProtobuf(t){const e=t.fixedFee;return new CustomFixedFee({feeCollectorAccountId:null!=t.feeCollectorAccountId?AccountId._fromProtobuf(t.feeCollectorAccountId):void 0,denominatingTokenId:null!=e.denominatingTokenId?TokenId._fromProtobuf(e.denominatingTokenId):void 0,amount:null!=e.amount?e.amount:void 0})}_toProtobuf(){return{feeCollectorAccountId:null!=this.feeCollectorAccountId?this.feeCollectorAccountId._toProtobuf():null,fixedFee:{denominatingTokenId:null!=this._denominatingTokenId?this._denominatingTokenId._toProtobuf():null,amount:this._amount}}}}class CustomFractionalFee extends CustomFee{constructor(t={}){super(t),this._numerator,null!=t.numerator&&this.setNumerator(t.numerator),this._denominator,null!=t.denominator&&this.setDenominator(t.denominator),this._min,null!=t.min&&this.setMin(t.min),this._max,null!=t.max&&this.setMax(t.max),this._assessmentMethod,null!=t.assessmentMethod&&this.setAssessmentMethod(t.assessmentMethod)}get numerator(){return this._numerator}setNumerator(t){return this._numerator="number"==typeof t?long$1.fromNumber(t):t,this}get denominator(){return this._denominator}setDenominator(t){return this._denominator="number"==typeof t?long$1.fromNumber(t):t,this}get min(){return this._min}setMin(t){return this._min="number"==typeof t?long$1.fromNumber(t):t,this}get max(){return this._max}setMax(t){return this._max="number"==typeof t?long$1.fromNumber(t):t,this}get assessmentMethod(){return this._assessmentMethod}setAssessmentMethod(t){return this._assessmentMethod=t,this}static _fromProtobuf(t){const e=t.fractionalFee,Q=e.fractionalAmount;return new CustomFractionalFee({feeCollectorAccountId:null!=t.feeCollectorAccountId?AccountId._fromProtobuf(t.feeCollectorAccountId):void 0,numerator:null!=Q.numerator?Q.numerator:void 0,denominator:null!=Q.denominator?Q.denominator:void 0,min:null!=e.minimumAmount?e.minimumAmount:void 0,max:null!=e.maximumAmount?e.maximumAmount:void 0})}_toProtobuf(){return{feeCollectorAccountId:null!=this.feeCollectorAccountId?this.feeCollectorAccountId._toProtobuf():null,fractionalFee:{fractionalAmount:{numerator:this._numerator,denominator:this._denominator},minimumAmount:this._min,maximumAmount:this._max}}}}class CustomRoyalyFee extends CustomFee{constructor(t={}){super(t),this._fallbackFee,null!=t.fallbackFee&&this.setFallbackFee(t.fallbackFee),this._numerator,null!=t.numerator&&this.setNumerator(t.numerator),this._denominator,null!=t.denominator&&this.setDenominator(t.denominator)}get fallbackFee(){return this._fallbackFee}setFallbackFee(t){return this._fallbackFee=t,this}get numerator(){return this._numerator}setNumerator(t){return this._numerator="number"==typeof t?long$1.fromNumber(t):t,this}get denominator(){return this._denominator}setDenominator(t){return this._denominator="number"==typeof t?long$1.fromNumber(t):t,this}static _fromProtobuf(t){const e=t.royaltyFee,Q=e.exchangeValueFraction;return new CustomRoyalyFee({feeCollectorAccountId:null!=t.feeCollectorAccountId?AccountId._fromProtobuf(t.feeCollectorAccountId):void 0,fallbackFee:null!=e.fallbackFee?CustomFixedFee._fromProtobuf({fixedFee:e.fallbackFee}):void 0,numerator:null!=Q.numerator?Q.numerator:void 0,denominator:null!=Q.denominator?Q.denominator:void 0})}_toProtobuf(){return{feeCollectorAccountId:null!=this.feeCollectorAccountId?this.feeCollectorAccountId._toProtobuf():null,royaltyFee:{exchangeValueFraction:{numerator:this._numerator,denominator:this._denominator},fallbackFee:null!=this._fallbackFee?this._fallbackFee._toProtobuf().fixedFee:null}}}}class FileAppendTransaction extends Transaction{constructor(t={}){super(),this._fileId=null,this._contents=null,this._maxChunks=20,this._chunkSize=2048,this._defaultMaxTransactionFee=new Hbar(5),null!=t.fileId&&this.setFileId(t.fileId),null!=t.contents&&this.setContents(t.contents),null!=t.maxChunks&&this.setMaxChunks(t.maxChunks),null!=t.chunkSize&&this.setChunkSize(t.chunkSize),this._startIndex=0,this._transactionIds=new List}static _fromProtobuf(t,e,Q,B,s){const F=s[0].fileAppend;let U;for(let t=0;t<s.length;t+=B.length){const e=s[t].fileAppend;if(null==e.contents)break;if(null==U){U=new Uint8Array(e.contents);continue}const Q=new Uint8Array(U.length+e.contents.length);Q.set(U,0),Q.set(e.contents,U.length),U=Q}return Transaction._fromProtobufTransactions(new FileAppendTransaction({fileId:null!=F.fileID?FileId._fromProtobuf(F.fileID):void 0,contents:U}),t,e,Q,B,s)}setTransactionId(t){if(this._requireNotFrozen(),null==t.accountId||null==t.validStart)throw new Error("`FileAppendTransaction` does not support `TransactionId` built from `nonce`");return this._transactionIds.setList([t]),this}get fileId(){return this._fileId}setFileId(t){return this._requireNotFrozen(),this._fileId="string"==typeof t?FileId.fromString(t):t.clone(),this}get contents(){return this._contents}setContents(t){return this._requireNotFrozen(),this._contents=t instanceof Uint8Array?t:encode(t),this}get maxChunks(){return this._maxChunks}setMaxChunks(t){return this._requireNotFrozen(),this._maxChunks=t,this}get chunkSize(){return this._chunkSize}setChunkSize(t){return this._chunkSize=t,this}freezeWith(t){if(super.freezeWith(t),null==this._contents)return this;const e=Math.floor((this._contents.length+(this._chunkSize-1))/this._chunkSize);if(e>this._maxChunks)throw new Error(`Contents with size ${this._contents.length} too long for ${this._maxChunks} chunks`);let Q=this.transactionId;this._transactionIds.locked=!1,this._transactions.clear(),this._transactionIds.clear(),this._signedTransactions.clear(),super._nextTransactionIndex=0;for(let t=0;t<e;t++){this._startIndex=t*this._chunkSize,this._transactionIds.list.push(Q);for(const t of this._nodeAccountIds.list)this._signedTransactions.push(this._makeSignedTransaction(t));Q=new TransactionId(Q.accountId,new Timestamp(Q.validStart.seconds,Q.validStart.nanos.add(1))),super._nextTransactionIndex=this._nextTransactionIndex+1}return this._startIndex=0,super._nextTransactionIndex=0,this}schedule(){if(this._requireNotFrozen(),null!=this._contents&&this._contents.length>this._chunkSize)throw new Error(`cannot schedule \`FileAppendTransaction\` with message over ${this._chunkSize} bytes`);return super.schedule()}async execute(t){return(await this.executeAll(t))[0]}async executeAll(t){super._isFrozen()||this.freezeWith(t);const e=this.transactionId,Q=t.operatorAccountId;null!=Q&&Q.equals(e.accountId)&&await super.signWithOperator(t);const B=[];for(let e=0;e<this._transactionIds.length;e++){const e=await super.execute(t);await e.getReceipt(t),B.push(e)}return B}_validateChecksums(t){null!=this._fileId&&this._fileId.validateChecksum(t)}_execute(t,e){return t.file.appendContent(e)}_getTransactionDataCase(){return"fileAppend"}_makeTransactionData(){const t=null!=this._contents?this._contents.length:0;let e=this._startIndex+this._chunkSize;return e>t&&(e=t),{fileID:null!=this._fileId?this._fileId._toProtobuf():null,contents:null!=this._contents?this._contents.slice(this._startIndex,e):null}}}TRANSACTION_REGISTRY.set("fileAppend",FileAppendTransaction._fromProtobuf);class FileContentsQuery extends Query{constructor(t={}){super(),this._fileId=null,null!=t.fileId&&this.setFileId(t.fileId)}static _fromProtobuf(t){const e=t.fileGetContents;return new FileContentsQuery({fileId:null!=e.fileID?FileId._fromProtobuf(e.fileID):void 0})}_validateChecksums(t){null!=this._fileId&&this._fileId.validateChecksum(t)}_execute(t,e){return t.file.getFileContent(e)}get fileId(){return this._fileId}setFileId(t){return this._fileId="string"==typeof t?FileId.fromString(t):t.clone(),this}_mapResponseHeader(t){return t.fileGetContents.header}_mapResponse(t){const e=t.fileGetContents.fileContents.contents;return Promise.resolve(e)}_onMakeRequest(t){return{fileGetContents:{header:t,fileID:null!=this._fileId?this._fileId._toProtobuf():null}}}}QUERY_REGISTRY.set("fileGetContents",FileContentsQuery._fromProtobuf);class FileCreateTransaction extends Transaction{constructor(t={}){super(),this._keys=null,this._expirationTime=Timestamp.fromDate(Date.now()+1e3*DEFAULT_AUTO_RENEW_PERIOD.toInt()),this._contents=null,this._fileMemo=null,this._defaultMaxTransactionFee=new Hbar(5),null!=t.keys&&this.setKeys(t.keys),null!=t.expirationTime&&this.setExpirationTime(t.expirationTime),null!=t.contents&&this.setContents(t.contents),null!=t.fileMemo&&this.setFileMemo(t.fileMemo)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].fileCreate;return Transaction._fromProtobufTransactions(new FileCreateTransaction({keys:null!=F.keys&&null!=F.keys.keys?F.keys.keys.map((t=>Key._fromProtobufKey(t))):void 0,expirationTime:null!=F.expirationTime?Timestamp._fromProtobuf(F.expirationTime):void 0,contents:null!=F.contents?F.contents:void 0,fileMemo:null!=F.memo?F.memo:void 0}),t,e,Q,B,s)}get keys(){return this._keys}setKeys(t){if(this._requireNotFrozen(),t instanceof KeyList&&null!=t.threshold)throw new Error("Cannot set threshold key as file key");return this._keys=t instanceof KeyList?t.toArray():t,this}get expirationTime(){return this._expirationTime}setExpirationTime(t){return this._requireNotFrozen(),this._expirationTime=t instanceof Timestamp?t:Timestamp.fromDate(t),this}get contents(){return this._contents}setContents(t){return this._requireNotFrozen(),this._contents=t instanceof Uint8Array?t:encode(t),this}get fileMemo(){return this._fileMemo}setFileMemo(t){return this._requireNotFrozen(),this._fileMemo=t,this}_execute(t,e){return t.file.createFile(e)}_getTransactionDataCase(){return"fileCreate"}_makeTransactionData(){return{keys:null!=this._keys?{keys:this._keys.map((t=>t._toProtobufKey()))}:null,expirationTime:this._expirationTime._toProtobuf(),contents:this._contents,memo:this._fileMemo}}}TRANSACTION_REGISTRY.set("fileCreate",FileCreateTransaction._fromProtobuf);class FileDeleteTransaction extends Transaction{constructor(t={}){super(),this._fileId=null,null!=t.fileId&&this.setFileId(t.fileId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].fileDelete;return Transaction._fromProtobufTransactions(new FileDeleteTransaction({fileId:null!=F.fileID?FileId._fromProtobuf(F.fileID):void 0}),t,e,Q,B,s)}get fileId(){return this._fileId}setFileId(t){return this._requireNotFrozen(),this._fileId="string"==typeof t?FileId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._fileId&&this._fileId.validateChecksum(t)}_execute(t,e){return t.file.deleteFile(e)}_getTransactionDataCase(){return"fileDelete"}_makeTransactionData(){return{fileID:null!=this._fileId?this._fileId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("fileDelete",FileDeleteTransaction._fromProtobuf);class FileInfo{constructor(t){this.fileId=t.fileId,this.size=t.size,this.expirationTime=t.expirationTime,this.isDeleted=t.isDeleted,this.keys=t.keys,this.fileMemo=t.fileMemo,this.ledgerId=t.ledgerId,Object.freeze(this)}static _fromProtobuf(t){const e=t.size;return new FileInfo({fileId:FileId._fromProtobuf(t.fileID),size:e instanceof long$1?e:long$1.fromValue(e),expirationTime:Timestamp._fromProtobuf(t.expirationTime),isDeleted:t.deleted,keys:null!=t.keys?KeyList.__fromProtobufKeyList(t.keys):new KeyList,fileMemo:null!=t.memo?t.memo:"",ledgerId:null!=t.ledgerId?LedgerId.fromBytes(t.ledgerId):null})}_toProtobuf(){return{fileID:this.fileId._toProtobuf(),size:this.size,expirationTime:this.expirationTime._toProtobuf(),deleted:this.isDeleted,keys:this.keys._toProtobufKey().keyList,memo:this.fileMemo,ledgerId:null!=this.ledgerId?this.ledgerId.toBytes():null}}static fromBytes(t){return FileInfo._fromProtobuf(lib.FileGetInfoResponse.FileInfo.decode(t))}toBytes(){return lib.FileGetInfoResponse.FileInfo.encode(this._toProtobuf()).finish()}}class FileInfoQuery extends Query{constructor(t={}){super(),this._fileId=null,null!=t.fileId&&this.setFileId(t.fileId)}static _fromProtobuf(t){const e=t.fileGetInfo;return new FileInfoQuery({fileId:null!=e.fileID?FileId._fromProtobuf(e.fileID):void 0})}get fileId(){return this._fileId}setFileId(t){return this._fileId="string"==typeof t?FileId.fromString(t):t.clone(),this}async getCost(t){let e=await super.getCost(t);return e.toTinybars().greaterThan(25)?e:Hbar.fromTinybars(25)}_validateChecksums(t){null!=this._fileId&&this._fileId.validateChecksum(t)}_execute(t,e){return t.file.getFileInfo(e)}_mapResponseHeader(t){return t.fileGetInfo.header}_mapResponse(t,e,Q){const B=t.fileGetInfo;return Promise.resolve(FileInfo._fromProtobuf(B.fileInfo))}_onMakeRequest(t){return{fileGetInfo:{header:t,fileID:null!=this._fileId?this._fileId._toProtobuf():null}}}}QUERY_REGISTRY.set("fileGetInfo",FileInfoQuery._fromProtobuf);class FileUpdateTransaction extends Transaction{constructor(t={}){super(),this._fileId=null,this._keys=null,this._expirationTime=null,this._contents=null,this._fileMemo=null,null!=t.fileId&&this.setFileId(t.fileId),null!=t.keys&&this.setKeys(t.keys),null!=t.expirationTime&&this.setExpirationTime(t.expirationTime),null!=t.contents&&this.setContents(t.contents),null!=t.fileMemo&&this.setFileMemo(t.fileMemo)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].fileUpdate;return Transaction._fromProtobufTransactions(new FileUpdateTransaction({fileId:null!=F.fileID?FileId._fromProtobuf(F.fileID):void 0,keys:null!=F.keys&&null!=F.keys.keys?F.keys.keys.map((t=>Key._fromProtobufKey(t))):void 0,expirationTime:null!=F.expirationTime?Timestamp._fromProtobuf(F.expirationTime):void 0,contents:null!=F.contents?F.contents:void 0,fileMemo:null!=F.memo&&null!=F.memo.value?F.memo.value:void 0}),t,e,Q,B,s)}get fileId(){return this._fileId}setFileId(t){return this._requireNotFrozen(),this._fileId="string"==typeof t?FileId.fromString(t):t.clone(),this}get keys(){return this._keys}setKeys(t){if(this._requireNotFrozen(),t instanceof KeyList&&null!=t.threshold)throw new Error("Cannot set threshold key as file key");return this._keys=t instanceof KeyList?t.toArray():t,this}get expirationTime(){return this._expirationTime}setExpirationTime(t){return this._requireNotFrozen(),this._expirationTime=t instanceof Timestamp?t:Timestamp.fromDate(t),this}get contents(){return this._contents}setContents(t){return this._requireNotFrozen(),this._contents=t instanceof Uint8Array?t:encode(t),this}get fileMemo(){return this._fileMemo}setFileMemo(t){return this._requireNotFrozen(),this._fileMemo=t,this}clearFileMemo(){return this._requireNotFrozen(),this._fileMemo=null,this}_validateChecksums(t){null!=this._fileId&&this._fileId.validateChecksum(t)}_execute(t,e){return t.file.updateFile(e)}_getTransactionDataCase(){return"fileUpdate"}_makeTransactionData(){return{fileID:null!=this._fileId?this._fileId._toProtobuf():null,keys:null!=this._keys?{keys:this._keys.map((t=>t._toProtobufKey()))}:null,expirationTime:null!=this._expirationTime?this._expirationTime._toProtobuf():null,contents:this._contents,memo:null!=this._fileMemo?{value:this._fileMemo}:null}}}TRANSACTION_REGISTRY.set("fileUpdate",FileUpdateTransaction._fromProtobuf);class FreezeType{constructor(t){this._code=t,Object.freeze(this)}toString(){switch(this){case FreezeType.UnknownFreezeType:return"UNKNOWN_FREEZE_TYPE";case FreezeType.FreezeOnly:return"FREEZE_ONLY";case FreezeType.PrepareUpgrade:return"PREPARE_UPGRADE";case FreezeType.FreezeUpgrade:return"FREEZE_UPGRADE";case FreezeType.FreezeAbort:return"FREEZE_ABORT";case FreezeType.TelemetryUpgrade:return"TELEMETRY_UPGRADE";default:return`UNKNOWN (${this._code})`}}static _fromCode(t){switch(t){case 0:return FreezeType.UnknownFreezeType;case 1:return FreezeType.FreezeOnly;case 2:return FreezeType.PrepareUpgrade;case 3:return FreezeType.FreezeUpgrade;case 4:return FreezeType.FreezeAbort;case 5:return FreezeType.TelemetryUpgrade;default:throw new Error(`(BUG) Status.fromCode() does not handle code: ${t}`)}}valueOf(){return this._code}}FreezeType.UnknownFreezeType=new FreezeType(0),FreezeType.FreezeOnly=new FreezeType(1),FreezeType.PrepareUpgrade=new FreezeType(2),FreezeType.FreezeUpgrade=new FreezeType(3),FreezeType.FreezeAbort=new FreezeType(4),FreezeType.TelemetryUpgrade=new FreezeType(5);class FreezeTransaction extends Transaction{constructor(t={}){super(),this._startTime=null,this._startTimestamp=null,this._endTime=null,this._fileId=null,this._fileHash=null,this._freezeType=null,null!=t.startTime&&this.setStartTime(t.startTime.hour,t.startTime.minute),null!=t.endTime&&this.setEndTime(t.endTime.hour,t.endTime.minute),null!=t.startTimestamp&&this.setStartTimestamp(t.startTimestamp),null!=t.updateFileId&&this.setUpdateFileId(t.updateFileId),null!=t.fileId&&this.setFileId(t.fileId),null!=t.fileHash&&this.setFileHash(t.fileHash),null!=t.freezeType&&this.setFreezeType(t.freezeType)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].freeze;return Transaction._fromProtobufTransactions(new FreezeTransaction({startTime:null!=F.startHour&&null!=F.startMin?{hour:F.startHour,minute:F.startMin}:void 0,endTime:null!=F.endHour&&null!=F.endMin?{hour:F.endHour,minute:F.endMin}:void 0,startTimestamp:null!=F.startTime?Timestamp._fromProtobuf(F.startTime):void 0,updateFileId:null!=F.updateFile?FileId._fromProtobuf(F.updateFile):void 0,fileHash:null!=F.fileHash?F.fileHash:void 0,freezeType:null!=F.freezeType?FreezeType._fromCode(F.freezeType):void 0}),t,e,Q,B,s)}get startTime(){return null}setStartTime(t,e){if(this._requireNotFrozen(),"string"==typeof t){const e=t.split(":");this._startTime={hour:Number(e[0]),minute:Number(e[1])}}else this._startTime={hour:t,minute:e};return this}get startTimestamp(){return this._startTimestamp}setStartTimestamp(t){return this._requireNotFrozen(),this._startTimestamp=t,this}get endTime(){return console.warn("`FreezeTransaction.endTime` is deprecated"),this._endTime}setEndTime(t,e){if(console.warn("`FreezeTransaction.endTime` is deprecated"),this._requireNotFrozen(),"string"==typeof t){const e=t.split(":");this._endTime={hour:Number(e[0]),minute:Number(e[1])}}else this._endTime={hour:t,minute:e};return this}get updateFileId(){return this.fileId}setUpdateFileId(t){return this.setFileId(t)}get fileId(){return this._fileId}setFileId(t){return this._requireNotFrozen(),this._fileId=t,this}get fileHash(){return this._fileHash}setFileHash(t){return this._requireNotFrozen(),this._fileHash="string"==typeof t?decode$1(t):t,this}get freezeType(){return this._freezeType}setFreezeType(t){return this._requireNotFrozen(),this._freezeType=t,this}_getTransactionDataCase(){return"freeze"}_makeTransactionData(){return{startTime:null!=this._startTimestamp?this._startTimestamp._toProtobuf():null,updateFile:null!=this._fileId?this._fileId._toProtobuf():null,fileHash:this._fileHash,freezeType:null!=this._freezeType?this._freezeType.valueOf():null}}}TRANSACTION_REGISTRY.set("freeze",FreezeTransaction._fromProtobuf);class LiveHashAddTransaction extends Transaction{constructor(t={}){super(),this._hash=null,this._keys=null,this._duration=null,this._accountId=null,null!=t.hash&&this.setHash(t.hash),null!=t.keys&&this.setKeys(t.keys),null!=t.duration&&this.setDuration(t.duration),null!=t.accountId&&this.setAccountId(t.accountId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].cryptoAddLiveHash.liveHash;return Transaction._fromProtobufTransactions(new LiveHashAddTransaction({hash:null!=F.hash?F.hash:void 0,keys:null!=F.keys&&null!=F.keys.keys?F.keys.keys.map((t=>Key._fromProtobufKey(t))):void 0,duration:null!=F.duration&&null!=F.duration.seconds?F.duration.seconds:void 0,accountId:null!=F.accountId?AccountId._fromProtobuf(F.accountId):void 0}),t,e,Q,B,s)}get hash(){return this._hash}setHash(t){return this._requireNotFrozen(),this._hash=t,this}get keys(){return this._keys}setKeys(t){return this._requireNotFrozen(),this._keys=t instanceof KeyList?t.toArray():t,this}get duration(){return this._duration}setDuration(t){return this._requireNotFrozen(),this._duration=t instanceof Duration?t:new Duration(t),this}get accountId(){return this._accountId}setAccountId(t){return this._requireNotFrozen(),this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._accountId&&this._accountId.validateChecksum(t)}_execute(t,e){return t.crypto.addLiveHash(e)}_getTransactionDataCase(){return"cryptoAddLiveHash"}_makeTransactionData(){return{liveHash:{hash:this._hash,keys:null!=this._keys?{keys:this._keys.map((t=>t._toProtobufKey()))}:void 0,duration:null!=this._duration?this._duration._toProtobuf():null,accountId:null!=this._accountId?this._accountId._toProtobuf():null}}}}TRANSACTION_REGISTRY.set("cryptoAddLiveHash",LiveHashAddTransaction._fromProtobuf);class LiveHashDeleteTransaction extends Transaction{constructor(t={}){super(),this._hash=null,this._accountId=null,null!=t.hash&&this.setHash(t.hash),null!=t.accountId&&this.setAccountId(t.accountId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].cryptoDeleteLiveHash;return Transaction._fromProtobufTransactions(new LiveHashDeleteTransaction({hash:null!=F.liveHashToDelete?F.liveHashToDelete:void 0,accountId:null!=F.accountOfLiveHash?AccountId._fromProtobuf(F.accountOfLiveHash):void 0}),t,e,Q,B,s)}get hash(){return this._hash}setHash(t){return this._requireNotFrozen(),this._hash=t,this}get accountId(){return this._accountId}setAccountId(t){return this._requireNotFrozen(),this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._accountId&&this._accountId.validateChecksum(t)}_execute(t,e){return t.crypto.deleteLiveHash(e)}_getTransactionDataCase(){return"cryptoDeleteLiveHash"}_makeTransactionData(){return{liveHashToDelete:this._hash,accountOfLiveHash:null!=this._accountId?this._accountId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("cryptoDeleteLiveHash",LiveHashDeleteTransaction._fromProtobuf);class LiveHashQuery extends Query{constructor(t={}){super(),this._accountId=null,null!=t.accountId&&this.setAccountId(t.accountId),this._hash=null,null!=t.hash&&this.setHash(t.hash)}static _fromProtobuf(t){const e=t.cryptoGetLiveHash;return new LiveHashQuery({accountId:null!=e.accountID?AccountId._fromProtobuf(e.accountID):void 0,hash:null!=e.hash?e.hash:void 0})}get accountId(){return this._accountId}setAccountId(t){return this._accountId=t instanceof AccountId?t:AccountId.fromString(t),this}get liveHash(){return this._hash}setHash(t){return this._hash=t,this}_validateChecksums(t){null!=this._accountId&&this._accountId.validateChecksum(t)}_execute(t,e){return t.crypto.getLiveHash(e)}_mapResponseHeader(t){return t.cryptoGetLiveHash.header}_mapResponse(t){const e=t.cryptoGetLiveHash;return Promise.resolve(LiveHash._fromProtobuf(e.liveHash))}_onMakeRequest(t){return{cryptoGetLiveHash:{header:t,accountID:null!=this._accountId?this._accountId._toProtobuf():null,hash:this._hash}}}}QUERY_REGISTRY.set("cryptoGetLiveHash",LiveHashQuery._fromProtobuf);class SemanticVersion{constructor(t){this.major=t.major,this.minor=t.minor,this.patch=t.patch,Object.freeze(this)}static _fromProtobuf(t){return new SemanticVersion({major:t.major,minor:t.minor,patch:t.patch})}_toProtobuf(){return{major:this.major,minor:this.minor,patch:this.patch}}static fromBytes(t){return SemanticVersion._fromProtobuf(lib.SemanticVersion.decode(t))}toBytes(){return lib.SemanticVersion.encode(this._toProtobuf()).finish()}}class NetworkVersionInfo{constructor(t){this.protobufVersion=t.protobufVersion,this.servicesVesion=t.servicesVesion,Object.freeze(this)}static _fromProtobuf(t){return new NetworkVersionInfo({protobufVersion:SemanticVersion._fromProtobuf(t.hapiProtoVersion),servicesVesion:SemanticVersion._fromProtobuf(t.hederaServicesVersion)})}_toProtobuf(){return{hapiProtoVersion:this.protobufVersion._toProtobuf(),hederaServicesVersion:this.servicesVesion._toProtobuf()}}static fromBytes(t){return NetworkVersionInfo._fromProtobuf(lib.NetworkGetVersionInfoResponse.decode(t))}toBytes(){return lib.NetworkGetVersionInfoResponse.encode(this._toProtobuf()).finish()}}class NetworkVersionInfoQuery extends Query{constructor(){super()}static _fromProtobuf(t){return new NetworkVersionInfoQuery}_execute(t,e){return t.network.getVersionInfo(e)}_mapResponseHeader(t){return t.networkGetVersionInfo.header}_mapResponse(t){const e=t.networkGetVersionInfo;return Promise.resolve(NetworkVersionInfo._fromProtobuf(e))}_onMakeRequest(t){return{networkGetVersionInfo:{header:t}}}}QUERY_REGISTRY.set("networkGetVersionInfo",NetworkVersionInfoQuery._fromProtobuf);class ScheduleCreateTransaction extends Transaction{constructor(t={}){super(),this._adminKey=null,this._scheduledTransaction=null,this._payerAccountId=null,this._scheduleMemo=null,this._scheduledSignerPublicKeys=new Set,null!=t.adminKey&&this.setAdminKey(t.adminKey),null!=t.payerAccountID&&this.setPayerAccountId(t.payerAccountID),null!=t.scheduleMemo&&this.setScheduleMemo(t.scheduleMemo)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].scheduleCreate;return Transaction._fromProtobufTransactions(new ScheduleCreateTransaction({adminKey:null!=F.adminKey?Key._fromProtobufKey(F.adminKey):void 0,payerAccountID:null!=F.payerAccountID?AccountId._fromProtobuf(F.payerAccountID):void 0,scheduleMemo:null!=F.memo?F.memo:void 0}),t,e,Q,B,s)}_setScheduledTransaction(t){return this._scheduledTransaction=t,this}get adminKey(){return this._adminKey}setAdminKey(t){return this._requireNotFrozen(),this._adminKey=t,this}get payerAccountId(){return this._payerAccountId}setPayerAccountId(t){return this._requireNotFrozen(),this._payerAccountId=t,this}setScheduleMemo(t){return this._requireNotFrozen(),this._scheduleMemo=t,this}get getScheduleMemo(){return this._requireNotFrozen(),this._scheduleMemo}setScheduledTransaction(t){return this._requireNotFrozen(),t._requireNotFrozen(),this._scheduledTransaction=t.schedule()._scheduledTransaction,this}_validateChecksums(t){null!=this._payerAccountId&&this._payerAccountId.validateChecksum(t)}_execute(t,e){return t.schedule.createSchedule(e)}_getTransactionDataCase(){return"scheduleCreate"}_makeTransactionData(){return{adminKey:null!=this._adminKey?this._adminKey._toProtobufKey():null,payerAccountID:null!=this._payerAccountId?this._payerAccountId._toProtobuf():null,scheduledTransactionBody:null!=this._scheduledTransaction?this._scheduledTransaction._getScheduledTransactionBody():null,memo:this._scheduleMemo}}}TRANSACTION_REGISTRY.set("scheduleCreate",ScheduleCreateTransaction._fromProtobuf),SCHEDULE_CREATE_TRANSACTION.push((()=>new ScheduleCreateTransaction));class ScheduleDeleteTransaction extends Transaction{constructor(t={}){super(),this._scheduleId=null,null!=t.scheduleId&&this.setScheduleId(t.scheduleId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].scheduleDelete;return Transaction._fromProtobufTransactions(new ScheduleDeleteTransaction({scheduleId:null!=F.scheduleID?ScheduleId._fromProtobuf(F.scheduleID):void 0}),t,e,Q,B,s)}get scheduleId(){return this._scheduleId}setScheduleId(t){return this._requireNotFrozen(),this._scheduleId="string"==typeof t?ScheduleId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._scheduleId&&this._scheduleId.validateChecksum(t)}_execute(t,e){return t.schedule.deleteSchedule(e)}_getTransactionDataCase(){return"scheduleDelete"}_makeTransactionData(){return{scheduleID:null!=this._scheduleId?this._scheduleId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("scheduleDelete",ScheduleDeleteTransaction._fromProtobuf);class ScheduleInfo{constructor(t){this.scheduleId=t.scheduleId,this.creatorAccountId=t.creatorAccountID,this.payerAccountId=t.payerAccountID,this.schedulableTransactionBody=t.schedulableTransactionBody,this.signers=t.signers,this.scheduleMemo=t.scheduleMemo,this.adminKey=null!=t.adminKey?t.adminKey:null,this.expirationTime=t.expirationTime,this.executed=t.executed,this.deleted=t.deleted,this.scheduledTransactionId=t.scheduledTransactionId,Object.freeze(this)}static _fromProtobuf(t){return new ScheduleInfo({scheduleId:ScheduleId._fromProtobuf(t.scheduleID),creatorAccountID:null!=t.creatorAccountID?AccountId._fromProtobuf(t.creatorAccountID):null,payerAccountID:null!=t.payerAccountID?AccountId._fromProtobuf(t.payerAccountID):null,schedulableTransactionBody:null!=t.scheduledTransactionBody?t.scheduledTransactionBody:null,adminKey:null!=t.adminKey?Key._fromProtobufKey(t.adminKey):null,signers:null!=t.signers?KeyList.__fromProtobufKeyList(t.signers):null,scheduleMemo:null!=t.memo?t.memo:null,expirationTime:null!=t.expirationTime?Timestamp._fromProtobuf(t.expirationTime):null,executed:null!=t.executionTime?Timestamp._fromProtobuf(t.executionTime):null,deleted:null!=t.deletionTime?Timestamp._fromProtobuf(t.deletionTime):null,scheduledTransactionId:null!=t.scheduledTransactionID?TransactionId._fromProtobuf(t.scheduledTransactionID):null})}_toProtobuf(){return{scheduleID:null!=this.scheduleId?this.scheduleId._toProtobuf():null,creatorAccountID:null!=this.creatorAccountId?this.creatorAccountId._toProtobuf():null,payerAccountID:null!=this.payerAccountId?this.payerAccountId._toProtobuf():null,scheduledTransactionBody:null!=this.schedulableTransactionBody?this.schedulableTransactionBody:null,adminKey:null!=this.adminKey?this.adminKey._toProtobufKey():null,signers:null!=this.signers?this.signers._toProtobufKey().keyList:null,memo:null!=this.scheduleMemo?this.scheduleMemo:"",expirationTime:null!=this.expirationTime?this.expirationTime._toProtobuf():null,scheduledTransactionID:null!=this.scheduledTransactionId?this.scheduledTransactionId._toProtobuf():null}}get scheduledTransaction(){if(null==this.schedulableTransactionBody)throw new Error("Scheduled transaction body is empty");const t=new lib.SchedulableTransactionBody(this.schedulableTransactionBody),e=t.data;return Transaction.fromBytes(lib.TransactionList.encode({transactionList:[{signedTransactionBytes:lib.SignedTransaction.encode({bodyBytes:lib.TransactionBody.encode({transactionFee:this.schedulableTransactionBody.transactionFee,memo:this.schedulableTransactionBody.memo,[e]:t[e]}).finish()}).finish()}]}).finish())}}class ScheduleInfoQuery extends Query{constructor(t={}){super(),this._scheduleId=null,null!=t.scheduleId&&this.setScheduleId(t.scheduleId)}static _fromProtobuf(t){const e=t.scheduleGetInfo;return new ScheduleInfoQuery({scheduleId:null!=e.scheduleID?ScheduleId._fromProtobuf(e.scheduleID):void 0})}get scheduleId(){return this._scheduleId}setScheduleId(t){return this._scheduleId="string"==typeof t?ScheduleId.fromString(t):t.clone(),this}async getCost(t){let e=await super.getCost(t);return e.toTinybars().greaterThan(25)?e:Hbar.fromTinybars(25)}_validateChecksums(t){null!=this._scheduleId&&this._scheduleId.validateChecksum(t)}_execute(t,e){return t.schedule.getScheduleInfo(e)}_mapResponseHeader(t){return t.scheduleGetInfo.header}_mapResponse(t,e,Q){const B=t.scheduleGetInfo;return Promise.resolve(ScheduleInfo._fromProtobuf(B.scheduleInfo))}_onMakeRequest(t){return{scheduleGetInfo:{header:t,scheduleID:null!=this._scheduleId?this._scheduleId._toProtobuf():null}}}}QUERY_REGISTRY.set("scheduleGetInfo",ScheduleInfoQuery._fromProtobuf);class ScheduleSignTransaction extends Transaction{constructor(t={}){super(),this._scheduleId=null,null!=t.scheduleId&&this.setScheduleId(t.scheduleId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].scheduleSign;return Transaction._fromProtobufTransactions(new ScheduleSignTransaction({scheduleId:null!=F.scheduleID?ScheduleId._fromProtobuf(F.scheduleID):void 0}),t,e,Q,B,s)}get scheduleId(){return this._scheduleId}setScheduleId(t){return this._requireNotFrozen(),this._scheduleId="string"==typeof t?ScheduleId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._scheduleId&&this._scheduleId.validateChecksum(t)}_execute(t,e){return t.schedule.signSchedule(e)}_getTransactionDataCase(){return"scheduleSign"}_makeTransactionData(){return{scheduleID:null!=this._scheduleId?this._scheduleId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("scheduleSign",ScheduleSignTransaction._fromProtobuf);class SystemDeleteTransaction extends Transaction{constructor(t={}){super(),this._fileId=null,this._contractId=null,this._expirationTime=null,null!=t.fileId&&this.setFileId(t.fileId),null!=t.contractId&&this.setContractId(t.contractId),null!=t.expirationTime&&this.setExpirationTime(t.expirationTime)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].systemDelete;return Transaction._fromProtobufTransactions(new SystemDeleteTransaction({fileId:null!=F.fileID?FileId._fromProtobuf(F.fileID):void 0,contractId:null!=F.contractID?ContractId._fromProtobuf(F.contractID):void 0,expirationTime:null!=F.expirationTime?Timestamp._fromProtobuf(F.expirationTime):void 0}),t,e,Q,B,s)}get fileId(){return this._fileId}setFileId(t){return this._requireNotFrozen(),this._fileId=t instanceof FileId?t:FileId.fromString(t),this}get contractId(){return this._contractId}setContractId(t){return this._requireNotFrozen(),this._contractId=t instanceof ContractId?t:ContractId.fromString(t),this}get expirationTime(){return this._expirationTime}setExpirationTime(t){return this._requireNotFrozen(),this._expirationTime=t,this}_execute(t,e){return null!=this._fileId?t.file.systemDelete(e):t.smartContract.systemDelete(e)}_getTransactionDataCase(){return"systemDelete"}_makeTransactionData(){return{fileID:null!=this._fileId?this._fileId._toProtobuf():null,contractID:null!=this._contractId?this._contractId._toProtobuf():null,expirationTime:null!=this._expirationTime?this._expirationTime._toProtobuf():null}}}TRANSACTION_REGISTRY.set("systemDelete",SystemDeleteTransaction._fromProtobuf);class SystemUndeleteTransaction extends Transaction{constructor(t={}){super(),this._fileId=null,this._contractId=null,null!=t.fileId&&this.setFileId(t.fileId),null!=t.contractId&&this.setContractId(t.contractId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].systemUndelete;return Transaction._fromProtobufTransactions(new SystemUndeleteTransaction({fileId:null!=F.fileID?FileId._fromProtobuf(F.fileID):void 0,contractId:null!=F.contractID?ContractId._fromProtobuf(F.contractID):void 0}),t,e,Q,B,s)}get fileId(){return this._fileId}setFileId(t){return this._requireNotFrozen(),this._fileId=t instanceof FileId?t:FileId.fromString(t),this}get contractId(){return this._contractId}setContractId(t){return this._requireNotFrozen(),this._contractId=t instanceof ContractId?t:ContractId.fromString(t),this}_execute(t,e){return null!=this._fileId?t.file.systemUndelete(e):t.smartContract.systemUndelete(e)}_getTransactionDataCase(){return"systemUndelete"}_makeTransactionData(){return{fileID:null!=this._fileId?this._fileId._toProtobuf():null,contractID:null!=this._contractId?this._contractId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("systemUndelete",SystemUndeleteTransaction._fromProtobuf);class TokenAssociateTransaction extends Transaction{constructor(t={}){super(),this._tokenIds=null,this._accountId=null,this._defaultMaxTransactionFee=new Hbar(5),null!=t.tokenIds&&this.setTokenIds(t.tokenIds),null!=t.accountId&&this.setAccountId(t.accountId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].tokenAssociate;return Transaction._fromProtobufTransactions(new TokenAssociateTransaction({tokenIds:null!=F.tokens?F.tokens.map((t=>TokenId._fromProtobuf(t))):void 0,accountId:null!=F.account?AccountId._fromProtobuf(F.account):void 0}),t,e,Q,B,s)}get tokenIds(){return this._tokenIds}setTokenIds(t){return this._requireNotFrozen(),this._tokenIds=t.map((t=>"string"==typeof t?TokenId.fromString(t):t.clone())),this}get accountId(){return this._accountId}setAccountId(t){return this._requireNotFrozen(),this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._accountId&&this._accountId.validateChecksum(t);for(const e of null!=this._tokenIds?this._tokenIds:[])null!=e&&e.validateChecksum(t)}_execute(t,e){return t.token.associateTokens(e)}_getTransactionDataCase(){return"tokenAssociate"}_makeTransactionData(){return{tokens:null!=this._tokenIds?this._tokenIds.map((t=>t._toProtobuf())):null,account:null!=this._accountId?this._accountId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("tokenAssociate",TokenAssociateTransaction._fromProtobuf);class TokenBurnTransaction extends Transaction{constructor(t={}){super(),this._tokenId=null,this._amount=null,this._serials=[],null!=t.tokenId&&this.setTokenId(t.tokenId),null!=t.amount&&this.setAmount(t.amount),null!=t.serials&&this.setSerials(t.serials)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].tokenBurn;return Transaction._fromProtobufTransactions(new TokenBurnTransaction({tokenId:null!=F.token?TokenId._fromProtobuf(F.token):void 0,amount:null!=F.amount?F.amount:void 0,serials:null!=F.serialNumbers?F.serialNumbers:void 0}),t,e,Q,B,s)}get tokenId(){return this._tokenId}setTokenId(t){return this._requireNotFrozen(),this._tokenId="string"==typeof t?TokenId.fromString(t):t.clone(),this}get amount(){return this._amount}setAmount(t){return this._requireNotFrozen(),this._amount=t instanceof long$1?t:long$1.fromValue(t),this}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t)}get serials(){return this._serials}setSerials(t){return this._requireNotFrozen(),this._serials=t.map((t=>t instanceof long$1?t:long$1.fromValue(t))),this}_execute(t,e){return t.token.burnToken(e)}_getTransactionDataCase(){return"tokenBurn"}_makeTransactionData(){return{amount:this._amount,serialNumbers:this._serials,token:null!=this._tokenId?this._tokenId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("tokenBurn",TokenBurnTransaction._fromProtobuf);class TokenType$1{constructor(t){this._code=t,Object.freeze(this)}toString(){switch(this){case TokenType$1.FungibleCommon:return"FUNGIBLE_COMMON";case TokenType$1.NonFungibleUnique:return"NON_FUNGIBLE_UNIQUE";default:return`UNKNOWN (${this._code})`}}static _fromCode(t){switch(t){case 0:return TokenType$1.FungibleCommon;case 1:return TokenType$1.NonFungibleUnique}throw new Error(`(BUG) TokenType.fromCode() does not handle code: ${t}`)}valueOf(){return this._code}}TokenType$1.FungibleCommon=new TokenType$1(0),TokenType$1.NonFungibleUnique=new TokenType$1(1);class TokenSupplyType{constructor(t){this._code=t,Object.freeze(this)}toString(){switch(this){case TokenSupplyType.Infinite:return"INFINITE";case TokenSupplyType.Finite:return"FINITE";default:return`UNKNOWN (${this._code})`}}static _fromCode(t){switch(t){case 0:return TokenSupplyType.Infinite;case 1:return TokenSupplyType.Finite}throw new Error(`(BUG) TokenSupplyType.fromCode() does not handle code: ${t}`)}valueOf(){return this._code}}TokenSupplyType.Infinite=new TokenSupplyType(0),TokenSupplyType.Finite=new TokenSupplyType(1);class TokenCreateTransaction extends Transaction{constructor(t={}){super(),this._tokenName=null,this._tokenSymbol=null,this._decimals=null,this._initialSupply=null,this._treasuryAccountId=null,this._adminKey=null,this._kycKey=null,this._freezeKey=null,this._pauseKey=null,this._wipeKey=null,this._supplyKey=null,this._feeScheduleKey=null,this._freezeDefault=null,this._autoRenewAccountId=null,this._expirationTime=null,this._autoRenewPeriod=new Duration(DEFAULT_AUTO_RENEW_PERIOD),this._tokenMemo=null,this._customFees=[],this._tokenType=null,this._supplyType=null,this._maxSupply=null,this._defaultMaxTransactionFee=new Hbar(30),null!=t.tokenName&&this.setTokenName(t.tokenName),null!=t.tokenSymbol&&this.setTokenSymbol(t.tokenSymbol),null!=t.decimals&&this.setDecimals(t.decimals),null!=t.initialSupply&&this.setInitialSupply(t.initialSupply),null!=t.treasuryAccountId&&this.setTreasuryAccountId(t.treasuryAccountId),null!=t.adminKey&&this.setAdminKey(t.adminKey),null!=t.kycKey&&this.setKycKey(t.kycKey),null!=t.freezeKey&&this.setFreezeKey(t.freezeKey),null!=t.pauseKey&&this.setPauseKey(t.pauseKey),null!=t.wipeKey&&this.setWipeKey(t.wipeKey),null!=t.supplyKey&&this.setSupplyKey(t.supplyKey),null!=t.feeScheduleKey&&this.setFeeScheduleKey(t.feeScheduleKey),null!=t.freezeDefault&&this.setFreezeDefault(t.freezeDefault),null!=t.autoRenewAccountId&&this.setAutoRenewAccountId(t.autoRenewAccountId),null!=t.expirationTime&&this.setExpirationTime(t.expirationTime),null!=t.autoRenewPeriod&&this.setAutoRenewPeriod(t.autoRenewPeriod),null!=t.tokenMemo&&this.setTokenMemo(t.tokenMemo),null!=t.customFees&&this.setCustomFees(t.customFees),null!=t.tokenType&&this.setTokenType(t.tokenType),null!=t.supplyType&&this.setSupplyType(t.supplyType),null!=t.maxSupply&&this.setMaxSupply(t.maxSupply)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].tokenCreation;return Transaction._fromProtobufTransactions(new TokenCreateTransaction({tokenName:null!=F.name?F.name:void 0,tokenSymbol:null!=F.symbol?F.symbol:void 0,decimals:null!=F.decimals?F.decimals:void 0,initialSupply:null!=F.initialSupply?F.initialSupply:void 0,treasuryAccountId:null!=F.treasury?AccountId._fromProtobuf(F.treasury):void 0,adminKey:null!=F.adminKey?Key._fromProtobufKey(F.adminKey):void 0,kycKey:null!=F.kycKey?Key._fromProtobufKey(F.kycKey):void 0,freezeKey:null!=F.freezeKey?Key._fromProtobufKey(F.freezeKey):void 0,pauseKey:null!=F.pauseKey?Key._fromProtobufKey(F.pauseKey):void 0,wipeKey:null!=F.wipeKey?Key._fromProtobufKey(F.wipeKey):void 0,supplyKey:null!=F.supplyKey?Key._fromProtobufKey(F.supplyKey):void 0,feeScheduleKey:null!=F.feeScheduleKey?Key._fromProtobufKey(F.feeScheduleKey):void 0,freezeDefault:null!=F.freezeDefault?F.freezeDefault:void 0,autoRenewAccountId:null!=F.autoRenewAccount?AccountId._fromProtobuf(F.autoRenewAccount):void 0,expirationTime:null!=F.expiry?Timestamp._fromProtobuf(F.expiry):void 0,autoRenewPeriod:null!=F.autoRenewPeriod?Duration._fromProtobuf(F.autoRenewPeriod):void 0,tokenMemo:null!=F.memo?F.memo:void 0,customFees:null!=F.customFees?F.customFees.map((t=>null!=t.fixedFee?CustomFixedFee._fromProtobuf(t):null!=t.fractionalFee?CustomFractionalFee._fromProtobuf(t):CustomRoyalyFee._fromProtobuf(t))):void 0,tokenType:null!=F.tokenType?TokenType$1._fromCode(F.tokenType):void 0,supplyType:null!=F.supplyType?TokenSupplyType._fromCode(F.supplyType):void 0,maxSupply:null!=F.maxSupply?F.maxSupply:void 0}),t,e,Q,B,s)}get tokenName(){return this._tokenName}setTokenName(t){return this._requireNotFrozen(),this._tokenName=t,this}get tokenSymbol(){return this._tokenSymbol}setTokenSymbol(t){return this._requireNotFrozen(),this._tokenSymbol=t,this}get decimals(){return this._decimals}setDecimals(t){return this._requireNotFrozen(),this._decimals=t instanceof long$1?t:long$1.fromValue(t),this}get initialSupply(){return this._initialSupply}setInitialSupply(t){return this._requireNotFrozen(),this._initialSupply=long$1.fromValue(t),this}get treasuryAccountId(){return this._treasuryAccountId}setTreasuryAccountId(t){return this._requireNotFrozen(),this._treasuryAccountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}get adminKey(){return this._adminKey}setAdminKey(t){return this._requireNotFrozen(),this._adminKey=t,this}get kycKey(){return this._kycKey}setKycKey(t){return this._requireNotFrozen(),this._kycKey=t,this}get freezeKey(){return this._freezeKey}setFreezeKey(t){return this._requireNotFrozen(),this._freezeKey=t,this}get pauseKey(){return this._pauseKey}setPauseKey(t){return this._requireNotFrozen(),this._pauseKey=t,this}get wipeKey(){return this._wipeKey}setWipeKey(t){return this._requireNotFrozen(),this._wipeKey=t,this}get supplyKey(){return this._supplyKey}setSupplyKey(t){return this._requireNotFrozen(),this._supplyKey=t,this}get feeScheduleKey(){return this._feeScheduleKey}setFeeScheduleKey(t){return this._requireNotFrozen(),this._feeScheduleKey=t,this}get freezeDefault(){return this._freezeDefault}setFreezeDefault(t){return this._requireNotFrozen(),this._freezeDefault=t,this}get expirationTime(){return this._expirationTime}setExpirationTime(t){return this._requireNotFrozen(),this._autoRenewPeriod=null,this._expirationTime=t instanceof Timestamp?t:Timestamp.fromDate(t),this}get autoRenewAccountId(){return this._autoRenewAccountId}setAutoRenewAccountId(t){return this._requireNotFrozen(),this._autoRenewAccountId=t instanceof AccountId?t:AccountId.fromString(t),this}get autoRenewPeriod(){return this._autoRenewPeriod}setAutoRenewPeriod(t){return this._requireNotFrozen(),this._autoRenewPeriod=t instanceof Duration?t:new Duration(t),this}get tokenMemo(){return this._tokenMemo}setTokenMemo(t){return this._requireNotFrozen(),this._tokenMemo=t,this}get customFees(){return this._customFees}setCustomFees(t){return this._customFees=t,this}get tokenType(){return this._tokenType}setTokenType(t){return this._tokenType=t,this}get supplyType(){return this._supplyType}setSupplyType(t){return this._supplyType=t,this}get maxSupply(){return this._maxSupply}setMaxSupply(t){return this._maxSupply="number"==typeof t?long$1.fromNumber(t):t,this}freezeWith(t){return null!=this._autoRenewPeriod&&null!=t&&t.operatorAccountId&&(this._autoRenewAccountId=t.operatorAccountId),super.freezeWith(t)}_validateChecksums(t){null!=this._treasuryAccountId&&this._treasuryAccountId.validateChecksum(t),null!=this._autoRenewAccountId&&this._autoRenewAccountId.validateChecksum(t)}_execute(t,e){return t.token.createToken(e)}_getTransactionDataCase(){return"tokenCreation"}_makeTransactionData(){return{name:this._tokenName,symbol:this._tokenSymbol,decimals:null!=this._decimals?this._decimals.toInt():null,initialSupply:this._initialSupply,treasury:null!=this._treasuryAccountId?this._treasuryAccountId._toProtobuf():null,adminKey:null!=this._adminKey?this._adminKey._toProtobufKey():null,kycKey:null!=this._kycKey?this._kycKey._toProtobufKey():null,freezeKey:null!=this._freezeKey?this._freezeKey._toProtobufKey():null,pauseKey:null!=this._pauseKey?this._pauseKey._toProtobufKey():null,wipeKey:null!=this._wipeKey?this._wipeKey._toProtobufKey():null,supplyKey:null!=this._supplyKey?this._supplyKey._toProtobufKey():null,feeScheduleKey:null!=this._feeScheduleKey?this._feeScheduleKey._toProtobufKey():null,freezeDefault:this._freezeDefault,autoRenewAccount:null!=this._autoRenewAccountId?this._autoRenewAccountId._toProtobuf():null,expiry:null!=this._expirationTime?this._expirationTime._toProtobuf():null,autoRenewPeriod:null!=this._autoRenewPeriod?this._autoRenewPeriod._toProtobuf():null,memo:this._tokenMemo,customFees:this.customFees.map((t=>t._toProtobuf())),tokenType:null!=this._tokenType?this._tokenType._code:null,supplyType:null!=this._supplyType?this._supplyType._code:null,maxSupply:this.maxSupply}}}TRANSACTION_REGISTRY.set("tokenCreation",TokenCreateTransaction._fromProtobuf);class TokenDeleteTransaction extends Transaction{constructor(t={}){super(),this._tokenId=null,null!=t.tokenId&&this.setTokenId(t.tokenId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].tokenDeletion;return Transaction._fromProtobufTransactions(new TokenDeleteTransaction({tokenId:null!=F.token?TokenId._fromProtobuf(F.token):void 0}),t,e,Q,B,s)}get tokenId(){return this._tokenId}setTokenId(t){return this._requireNotFrozen(),this._tokenId="string"==typeof t?TokenId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t)}_execute(t,e){return t.token.deleteToken(e)}_getTransactionDataCase(){return"tokenDeletion"}_makeTransactionData(){return{token:null!=this._tokenId?this._tokenId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("tokenDeletion",TokenDeleteTransaction._fromProtobuf);class TokenDissociateTransaction extends Transaction{constructor(t={}){super(),this._tokenIds=null,this._accountId=null,this._defaultMaxTransactionFee=new Hbar(5),null!=t.tokenIds&&this.setTokenIds(t.tokenIds),null!=t.accountId&&this.setAccountId(t.accountId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].tokenDissociate;return Transaction._fromProtobufTransactions(new TokenDissociateTransaction({tokenIds:null!=F.tokens?F.tokens.map((t=>TokenId._fromProtobuf(t))):void 0,accountId:null!=F.account?AccountId._fromProtobuf(F.account):void 0}),t,e,Q,B,s)}get tokenIds(){return this._tokenIds}setTokenIds(t){return this._requireNotFrozen(),this._tokenIds=t.map((t=>"string"==typeof t?TokenId.fromString(t):t.clone())),this}get accountId(){return this._accountId}setAccountId(t){return this._requireNotFrozen(),this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._accountId&&this._accountId.validateChecksum(t);for(const e of null!=this._tokenIds?this._tokenIds:[])null!=e&&e.validateChecksum(t)}_execute(t,e){return t.token.dissociateTokens(e)}_getTransactionDataCase(){return"tokenDissociate"}_makeTransactionData(){return{tokens:null!=this._tokenIds?this._tokenIds.map((t=>t._toProtobuf())):null,account:null!=this._accountId?this._accountId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("tokenDissociate",TokenDissociateTransaction._fromProtobuf);class TokenFeeScheduleUpdateTransaction extends Transaction{constructor(t={}){super(),this._tokenId=null,this._customFees=[],null!=t.tokenId&&this.setTokenId(t.tokenId),null!=t.customFees&&this.setCustomFees(t.customFees)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].tokenFeeScheduleUpdate;return Transaction._fromProtobufTransactions(new TokenFeeScheduleUpdateTransaction({tokenId:null!=F.tokenId?TokenId._fromProtobuf(F.tokenId):void 0,customFees:null!=F.customFees?F.customFees.map((t=>null!=t.fixedFee?CustomFixedFee._fromProtobuf(t):null!=t.fractionalFee?CustomFractionalFee._fromProtobuf(t):CustomRoyalyFee._fromProtobuf(t))):void 0}),t,e,Q,B,s)}get tokenId(){return this._tokenId}setTokenId(t){return this._requireNotFrozen(),this._tokenId="string"==typeof t?TokenId.fromString(t):TokenId._fromProtobuf(t._toProtobuf()),this}get customFees(){return this._customFees}setCustomFees(t){return this._requireNotFrozen(),this._customFees=t,this}_execute(t,e){return t.token.updateTokenFeeSchedule(e)}_getTransactionDataCase(){return"tokenFeeScheduleUpdate"}_makeTransactionData(){return{tokenId:null!=this._tokenId?this._tokenId._toProtobuf():null,customFees:this._customFees.map((t=>t._toProtobuf()))}}}TRANSACTION_REGISTRY.set("tokenFeeScheduleUpdate",TokenFeeScheduleUpdateTransaction._fromProtobuf);class TokenFreezeTransaction extends Transaction{constructor(t={}){super(),this._tokenId=null,this._accountId=null,null!=t.tokenId&&this.setTokenId(t.tokenId),null!=t.accountId&&this.setAccountId(t.accountId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].tokenFreeze;return Transaction._fromProtobufTransactions(new TokenFreezeTransaction({tokenId:null!=F.token?TokenId._fromProtobuf(F.token):void 0,accountId:null!=F.account?AccountId._fromProtobuf(F.account):void 0}),t,e,Q,B,s)}get tokenId(){return this._tokenId}setTokenId(t){return this._requireNotFrozen(),this._tokenId="string"==typeof t?TokenId.fromString(t):t.clone(),this}get accountId(){return this._accountId}setAccountId(t){return this._requireNotFrozen(),this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t),null!=this._accountId&&this._accountId.validateChecksum(t)}_execute(t,e){return t.token.freezeTokenAccount(e)}_getTransactionDataCase(){return"tokenFreeze"}_makeTransactionData(){return{token:null!=this._tokenId?this._tokenId._toProtobuf():null,account:null!=this._accountId?this._accountId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("tokenFreeze",TokenFreezeTransaction._fromProtobuf);class TokenGrantKycTransaction extends Transaction{constructor(t={}){super(),this._tokenId=null,this._accountId=null,null!=t.tokenId&&this.setTokenId(t.tokenId),null!=t.accountId&&this.setAccountId(t.accountId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].tokenGrantKyc;return Transaction._fromProtobufTransactions(new TokenGrantKycTransaction({tokenId:null!=F.token?TokenId._fromProtobuf(F.token):void 0,accountId:null!=F.account?AccountId._fromProtobuf(F.account):void 0}),t,e,Q,B,s)}get tokenId(){return this._tokenId}setTokenId(t){return this._requireNotFrozen(),this._tokenId="string"==typeof t?TokenId.fromString(t):t.clone(),this}get accountId(){return this._accountId}setAccountId(t){return this._requireNotFrozen(),this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t),null!=this._accountId&&this._accountId.validateChecksum(t)}_execute(t,e){return t.token.grantKycToTokenAccount(e)}_getTransactionDataCase(){return"tokenGrantKyc"}_makeTransactionData(){return{token:null!=this._tokenId?this._tokenId._toProtobuf():null,account:null!=this._accountId?this._accountId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("tokenGrantKyc",TokenGrantKycTransaction._fromProtobuf);class TokenInfo{constructor(t){this.tokenId=t.tokenId,this.name=t.name,this.symbol=t.symbol,this.decimals=t.decimals,this.totalSupply=t.totalSupply,this.treasuryAccountId=t.treasuryAccountId,this.adminKey=t.adminKey,this.kycKey=t.kycKey,this.freezeKey=t.freezeKey,this.pauseKey=t.pauseKey,this.wipeKey=t.wipeKey,this.supplyKey=t.supplyKey,this.feeScheduleKey=t.feeScheduleKey,this.defaultFreezeStatus=t.defaultFreezeStatus,this.defaultKycStatus=t.defaultKycStatus,this.pauseStatus=t.pauseStatus,this.isDeleted=t.isDeleted,this.autoRenewAccountId=t.autoRenewAccountId,this.autoRenewPeriod=t.autoRenewPeriod,this.expirationTime=t.expirationTime,this.tokenMemo=t.tokenMemo,this.customFees=t.customFees,this.tokenType=t.tokenType,this.supplyType=t.supplyType,this.maxSupply=t.maxSupply,this.ledgerId=t.ledgerId}static _fromProtobuf(t){const e=t.defaultFreezeStatus,Q=t.defaultKycStatus,B=t.pauseStatus,s=null!=t.autoRenewAccount?AccountId._fromProtobuf(t.autoRenewAccount):new AccountId(0);return new TokenInfo({tokenId:TokenId._fromProtobuf(t.tokenId),name:t.name,symbol:t.symbol,decimals:t.decimals,totalSupply:long$1.fromValue(t.totalSupply),treasuryAccountId:null!=t.treasury?AccountId._fromProtobuf(t.treasury):null,adminKey:null!=t.adminKey?Key._fromProtobufKey(t.adminKey):null,kycKey:null!=t.kycKey?Key._fromProtobufKey(t.kycKey):null,freezeKey:null!=t.freezeKey?Key._fromProtobufKey(t.freezeKey):null,pauseKey:null!=t.pauseKey?Key._fromProtobufKey(t.pauseKey):null,wipeKey:null!=t.wipeKey?Key._fromProtobufKey(t.wipeKey):null,supplyKey:null!=t.supplyKey?Key._fromProtobufKey(t.supplyKey):null,feeScheduleKey:null!=t.feeScheduleKey?Key._fromProtobufKey(t.feeScheduleKey):null,defaultFreezeStatus:0===e?null:1==e,defaultKycStatus:0===Q?null:1==Q,pauseStatus:0===B?null:1==B,isDeleted:t.deleted,autoRenewAccountId:0!=s.shard.toInt()||0!=s.realm.toInt()||0!=s.num.toInt()?s:null,autoRenewPeriod:null!=t.autoRenewPeriod?Duration._fromProtobuf(t.autoRenewPeriod):null,expirationTime:null!=t.expiry?Timestamp._fromProtobuf(t.expiry):null,tokenMemo:null!=t.memo?t.memo:"",customFees:null!=t.customFees?t.customFees.map((t=>null!=t.fixedFee?CustomFixedFee._fromProtobuf(t):null!=t.fractionalFee?CustomFractionalFee._fromProtobuf(t):CustomRoyalyFee._fromProtobuf(t))):[],tokenType:null!=t.tokenType?TokenType$1._fromCode(t.tokenType):null,supplyType:null!=t.supplyType?TokenSupplyType._fromCode(t.supplyType):null,maxSupply:null!=t.maxSupply?t.maxSupply:null,ledgerId:null!=t.ledgerId?LedgerId.fromBytes(t.ledgerId):null})}_toProtobuf(){return{tokenId:this.tokenId._toProtobuf(),name:this.name,symbol:this.symbol,decimals:this.decimals,totalSupply:this.totalSupply,treasury:null!=this.treasuryAccountId?this.treasuryAccountId._toProtobuf():null,adminKey:null!=this.adminKey?this.adminKey._toProtobufKey():null,kycKey:null!=this.kycKey?this.kycKey._toProtobufKey():null,freezeKey:null!=this.freezeKey?this.freezeKey._toProtobufKey():null,pauseKey:null!=this.pauseKey?this.pauseKey._toProtobufKey():null,wipeKey:null!=this.wipeKey?this.wipeKey._toProtobufKey():null,supplyKey:null!=this.supplyKey?this.supplyKey._toProtobufKey():null,feeScheduleKey:null!=this.feeScheduleKey?this.feeScheduleKey._toProtobufKey():null,defaultFreezeStatus:null==this.defaultFreezeStatus?0:this.defaultFreezeStatus?1:2,defaultKycStatus:null==this.defaultKycStatus?0:this.defaultKycStatus?1:2,pauseStatus:null==this.pauseStatus?0:this.pauseStatus?1:2,deleted:this.isDeleted,autoRenewAccount:null!=this.autoRenewAccountId?this.autoRenewAccountId._toProtobuf():void 0,autoRenewPeriod:null!=this.autoRenewPeriod?this.autoRenewPeriod._toProtobuf():null,expiry:null!=this.expirationTime?this.expirationTime._toProtobuf():null,memo:this.tokenMemo,customFees:this.customFees.map((t=>t._toProtobuf())),tokenType:null!=this.tokenType?this.tokenType._code:null,supplyType:null!=this.supplyType?this.supplyType._code:null,maxSupply:this.maxSupply,ledgerId:null!=this.ledgerId?this.ledgerId.toBytes():null}}static fromBytes(t){return TokenInfo._fromProtobuf(lib.TokenInfo.decode(t))}toBytes(){return lib.TokenInfo.encode(this._toProtobuf()).finish()}}class TokenInfoQuery extends Query{constructor(t={}){super(),this._tokenId=null,null!=t.tokenId&&this.setTokenId(t.tokenId)}static _fromProtobuf(t){const e=t.tokenGetInfo;return new TokenInfoQuery({tokenId:null!=e.token?TokenId._fromProtobuf(e.token):void 0})}get tokenId(){return this._tokenId}setTokenId(t){return this._tokenId="string"==typeof t?TokenId.fromString(t):t.clone(),this}async getCost(t){let e=await super.getCost(t);return e.toTinybars().greaterThan(25)?e:Hbar.fromTinybars(25)}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t)}_execute(t,e){return t.token.getTokenInfo(e)}_mapResponseHeader(t){return t.tokenGetInfo.header}_mapResponse(t,e,Q){const B=t.tokenGetInfo;return Promise.resolve(TokenInfo._fromProtobuf(B.tokenInfo))}_onMakeRequest(t){return{tokenGetInfo:{header:t,token:null!=this._tokenId?this._tokenId._toProtobuf():null}}}}QUERY_REGISTRY.set("tokenGetInfo",TokenInfoQuery._fromProtobuf);class TokenMintTransaction extends Transaction{constructor(t={}){super(),this._tokenId=null,this._amount=null,this._metadata=[],null!=t.tokenId&&this.setTokenId(t.tokenId),null!=t.amount&&this.setAmount(t.amount),null!=t.metadata&&this.setMetadata(t.metadata)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].tokenMint;return Transaction._fromProtobufTransactions(new TokenMintTransaction({tokenId:null!=F.token?TokenId._fromProtobuf(F.token):void 0,amount:null!=F.amount?F.amount:void 0,metadata:null!=F.metadata?F.metadata:void 0}),t,e,Q,B,s)}get tokenId(){return this._tokenId}setTokenId(t){return this._requireNotFrozen(),this._tokenId="string"==typeof t?TokenId.fromString(t):t.clone(),this}get amount(){return this._amount}setAmount(t){return this._requireNotFrozen(),this._amount=t instanceof long$1?t:long$1.fromValue(t),this}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t)}get metadata(){return this._metadata}addMetadata(t){return this._requireNotFrozen(),"string"==typeof t&&console.warn("Passing a `string` for token metadata is considered a bug, and has been removed. Please provide a `Uint8Array` instead."),this._metadata.push("string"==typeof t?decode$1(t):t),this}setMetadata(t){this._requireNotFrozen();for(const e of t)if("string"==typeof e){console.warn("Passing a `string` for token metadata is considered a bug, and has been removed. Please provide a `Uint8Array` instead.");break}return this._metadata=t.map((t=>"string"==typeof t?decode$1(t):t)),this}_execute(t,e){return t.token.mintToken(e)}_getTransactionDataCase(){return"tokenMint"}_makeTransactionData(){return{amount:this._amount,token:null!=this._tokenId?this._tokenId._toProtobuf():null,metadata:this._metadata}}}TRANSACTION_REGISTRY.set("tokenMint",TokenMintTransaction._fromProtobuf);class TokenNftInfo{constructor(t){this.nftId=t.nftId,this.accountId=t.accountId,this.creationTime=t.creationTime,this.metadata=t.metadata,this.ledgerId=t.ledgerId,Object.freeze(this)}static _fromProtobuf(t){return new TokenNftInfo({nftId:NftId._fromProtobuf(t.nftID),accountId:AccountId._fromProtobuf(t.accountID),creationTime:Timestamp._fromProtobuf(t.creationTime),metadata:void 0!==t.metadata?t.metadata:null,ledgerId:null!=t.ledgerId?LedgerId.fromBytes(t.ledgerId):null})}_toProtobuf(){return{nftID:this.nftId._toProtobuf(),accountID:this.accountId._toProtobuf(),creationTime:this.creationTime._toProtobuf(),metadata:this.metadata,ledgerId:null!=this.ledgerId?this.ledgerId.toBytes():null}}toJson(){return{nftId:this.nftId.toString(),accountId:this.accountId.toString(),creationTime:this.creationTime.toString(),metadata:null!=this.metadata?encode$1(this.metadata):null,ledgerId:null!=this.ledgerId?this.ledgerId.toString():null}}toString(){return JSON.stringify(this.toJson())}}class TokenNftInfoQuery extends Query{constructor(t={}){super(),this._nftId=null,null!=t.nftId&&this.setNftId(t.nftId),this._accountId=null,null!=t.accountId&&this.setAccountId(t.accountId),this._tokenId=null,null!=t.tokenId&&this.setTokenId(t.tokenId),this._start=null,null!=t.start&&this.setStart(t.start),this._end=null,null!=t.end&&this.setEnd(t.end)}static _fromProtobuf(t){if(null!=t.tokenGetNftInfo){const e=t.tokenGetNftInfo;return new TokenNftInfoQuery({nftId:null!=e.nftID?NftId._fromProtobuf(e.nftID):void 0})}if(null!=t.tokenGetAccountNftInfos){const e=t.tokenGetAccountNftInfos;return new TokenNftInfoQuery({accountId:null!=e.accountID?AccountId._fromProtobuf(e.accountID):void 0,start:null!=e.start?e.start:void 0,end:null!=e.end?e.end:void 0})}{const e=t.tokenGetNftInfos;return new TokenNftInfoQuery({tokenId:null!=e.tokenID?TokenId._fromProtobuf(e.tokenID):void 0,start:null!=e.start?e.start:void 0,end:null!=e.end?e.end:void 0})}}get nftId(){return this._nftId}setNftId(t){return this._nftId="string"==typeof t?NftId.fromString(t):NftId._fromProtobuf(t._toProtobuf()),this}get accountId(){return console.warn("`TokenNftInfoQuery.accountId` is deprecated with no replacement"),this._accountId}setAccountId(t){return console.warn("`TokenNftInfoQuery.setAccountId()` is deprecated with no replacement"),this._accountId="string"==typeof t?AccountId.fromString(t):AccountId._fromProtobuf(t._toProtobuf()),this}get tokenId(){return console.warn("`TokenNftInfoQuery.tokenId` is deprecated with no replacement"),this._tokenId}setTokenId(t){return console.warn("`TokenNftInfoQuery.setTokenId()` is deprecated with no replacement"),this._tokenId="string"==typeof t?TokenId.fromString(t):TokenId._fromProtobuf(t._toProtobuf()),this}get start(){return console.warn("`TokenNftInfoQuery.start` is deprecated with no replacement"),this._start}setStart(t){return console.warn("`TokenNftInfoQuery.setStart()` is deprecated with no replacement"),this._start="number"==typeof t?long$1.fromNumber(t):t,this}get end(){return console.warn("`TokenNftInfoQuery.end` is deprecated with no replacement"),this._end}setEnd(t){return console.warn("`TokenNftInfoQuery.setEnd()` is deprecated with no replacement"),this._end="number"==typeof t?long$1.fromNumber(t):t,this}async getCost(t){let e=await super.getCost(t);return e.toTinybars().greaterThan(25)?e:Hbar.fromTinybars(25)}_execute(t,e){return t.token.getTokenNftInfo(e)}_mapResponseHeader(t){return t.tokenGetNftInfo.header}_mapResponse(t,e,Q){const B=[t.tokenGetNftInfo.nft];return Promise.resolve(B.map((t=>TokenNftInfo._fromProtobuf(t))))}_onMakeRequest(t){return{tokenGetNftInfo:{header:t,nftID:null!=this._nftId?this._nftId._toProtobuf():null}}}}QUERY_REGISTRY.set("tokenGetNftInfo",TokenNftInfoQuery._fromProtobuf);class TokenPauseTransaction extends Transaction{constructor(t={}){super(),this._tokenId=null,null!=t.tokenId&&this.setTokenId(t.tokenId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].tokenPause;return Transaction._fromProtobufTransactions(new TokenPauseTransaction({tokenId:null!=F.token?TokenId._fromProtobuf(F.token):void 0}),t,e,Q,B,s)}get tokenId(){return this._tokenId}setTokenId(t){return this._requireNotFrozen(),this._tokenId="string"==typeof t?TokenId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t)}_execute(t,e){return t.token.pauseToken(e)}_getTransactionDataCase(){return"tokenPause"}_makeTransactionData(){return{token:null!=this._tokenId?this._tokenId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("tokenPause",TokenPauseTransaction._fromProtobuf);class TokenRevokeKycTransaction extends Transaction{constructor(t={}){super(),this._tokenId=null,this._accountId=null,null!=t.tokenId&&this.setTokenId(t.tokenId),null!=t.accountId&&this.setAccountId(t.accountId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].tokenRevokeKyc;return Transaction._fromProtobufTransactions(new TokenRevokeKycTransaction({tokenId:null!=F.token?TokenId._fromProtobuf(F.token):void 0,accountId:null!=F.account?AccountId._fromProtobuf(F.account):void 0}),t,e,Q,B,s)}get tokenId(){return this._tokenId}setTokenId(t){return this._requireNotFrozen(),this._tokenId="string"==typeof t?TokenId.fromString(t):t.clone(),this}get accountId(){return this._accountId}setAccountId(t){return this._requireNotFrozen(),this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t),null!=this._accountId&&this._accountId.validateChecksum(t)}_execute(t,e){return t.token.revokeKycFromTokenAccount(e)}_getTransactionDataCase(){return"tokenRevokeKyc"}_makeTransactionData(){return{token:null!=this._tokenId?this._tokenId._toProtobuf():null,account:null!=this._accountId?this._accountId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("tokenRevokeKyc",TokenRevokeKycTransaction._fromProtobuf);class TokenUnfreezeTransaction extends Transaction{constructor(t={}){super(),this._tokenId=null,this._accountId=null,null!=t.tokenId&&this.setTokenId(t.tokenId),null!=t.accountId&&this.setAccountId(t.accountId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].tokenUnfreeze;return Transaction._fromProtobufTransactions(new TokenUnfreezeTransaction({tokenId:null!=F.token?TokenId._fromProtobuf(F.token):void 0,accountId:null!=F.account?AccountId._fromProtobuf(F.account):void 0}),t,e,Q,B,s)}get tokenId(){return this._tokenId}setTokenId(t){return this._requireNotFrozen(),this._tokenId="string"==typeof t?TokenId.fromString(t):t.clone(),this}get accountId(){return this._accountId}setAccountId(t){return this._requireNotFrozen(),this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t),null!=this._accountId&&this._accountId.validateChecksum(t)}_execute(t,e){return t.token.unfreezeTokenAccount(e)}_getTransactionDataCase(){return"tokenUnfreeze"}_makeTransactionData(){return{token:null!=this._tokenId?this._tokenId._toProtobuf():null,account:null!=this._accountId?this._accountId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("tokenUnfreeze",TokenUnfreezeTransaction._fromProtobuf);class TokenUnpauseTransaction extends Transaction{constructor(t={}){super(),this._tokenId=null,null!=t.tokenId&&this.setTokenId(t.tokenId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].tokenUnpause;return Transaction._fromProtobufTransactions(new TokenUnpauseTransaction({tokenId:null!=F.token?TokenId._fromProtobuf(F.token):void 0}),t,e,Q,B,s)}get tokenId(){return this._tokenId}setTokenId(t){return this._requireNotFrozen(),this._tokenId="string"==typeof t?TokenId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t)}_execute(t,e){return t.token.unpauseToken(e)}_getTransactionDataCase(){return"tokenUnpause"}_makeTransactionData(){return{token:null!=this._tokenId?this._tokenId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("tokenUnpause",TokenUnpauseTransaction._fromProtobuf);class TokenUpdateTransaction extends Transaction{constructor(t={}){super(),this._tokenId=null,this._tokenName=null,this._tokenSymbol=null,this._treasuryAccountId=null,this._adminKey=null,this._kycKey=null,this._freezeKey=null,this._wipeKey=null,this._supplyKey=null,this._autoRenewAccountId=null,this._expirationTime=null,this._autoRenewPeriod=null,this._tokenMemo=null,this._feeScheduleKey=null,this._pauseKey=null,null!=t.tokenId&&this.setTokenId(t.tokenId),null!=t.tokenName&&this.setTokenName(t.tokenName),null!=t.tokenSymbol&&this.setTokenSymbol(t.tokenSymbol),null!=t.treasuryAccountId&&this.setTreasuryAccountId(t.treasuryAccountId),null!=t.adminKey&&this.setAdminKey(t.adminKey),null!=t.kycKey&&this.setKycKey(t.kycKey),null!=t.freezeKey&&this.setFreezeKey(t.freezeKey),null!=t.wipeKey&&this.setWipeKey(t.wipeKey),null!=t.supplyKey&&this.setSupplyKey(t.supplyKey),null!=t.autoRenewAccountId&&this.setAutoRenewAccountId(t.autoRenewAccountId),null!=t.expirationTime&&this.setExpirationTime(t.expirationTime),null!=t.autoRenewPeriod&&this.setAutoRenewPeriod(t.autoRenewPeriod),null!=t.tokenMemo&&this.setTokenMemo(t.tokenMemo),null!=t.feeScheduleKey&&this.setFeeScheduleKey(t.feeScheduleKey),null!=t.pauseKey&&this.setPauseKey(t.pauseKey)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].tokenUpdate;return Transaction._fromProtobufTransactions(new TokenUpdateTransaction({tokenId:null!=F.token?TokenId._fromProtobuf(F.token):void 0,tokenName:null!=F.name?F.name:void 0,tokenSymbol:null!=F.symbol?F.symbol:void 0,treasuryAccountId:null!=F.treasury?AccountId._fromProtobuf(F.treasury):void 0,adminKey:null!=F.adminKey?Key._fromProtobufKey(F.adminKey):void 0,kycKey:null!=F.kycKey?Key._fromProtobufKey(F.kycKey):void 0,freezeKey:null!=F.freezeKey?Key._fromProtobufKey(F.freezeKey):void 0,wipeKey:null!=F.wipeKey?Key._fromProtobufKey(F.wipeKey):void 0,supplyKey:null!=F.supplyKey?Key._fromProtobufKey(F.supplyKey):void 0,autoRenewAccountId:null!=F.autoRenewAccount?AccountId._fromProtobuf(F.autoRenewAccount):void 0,expirationTime:null!=F.expiry?Timestamp._fromProtobuf(F.expiry):void 0,autoRenewPeriod:null!=F.autoRenewPeriod?Duration._fromProtobuf(F.autoRenewPeriod):void 0,tokenMemo:null!=F.memo&&null!=F.memo.value?F.memo.value:void 0,feeScheduleKey:null!=F.feeScheduleKey?Key._fromProtobufKey(F.feeScheduleKey):void 0}),t,e,Q,B,s)}get tokenId(){return this._tokenId}setTokenId(t){return this._requireNotFrozen(),this._tokenId="string"==typeof t?TokenId.fromString(t):t.clone(),this}get tokenName(){return this._tokenName}setTokenName(t){return this._requireNotFrozen(),this._tokenName=t,this}get tokenSymbol(){return this._tokenSymbol}setTokenSymbol(t){return this._requireNotFrozen(),this._tokenSymbol=t,this}get treasuryAccountId(){return this._treasuryAccountId}setTreasuryAccountId(t){return this._requireNotFrozen(),this._treasuryAccountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}get adminKey(){return this._adminKey}setAdminKey(t){return this._requireNotFrozen(),this._adminKey=t,this}get kycKey(){return this._kycKey}setKycKey(t){return this._requireNotFrozen(),this._kycKey=t,this}get freezeKey(){return this._freezeKey}setFreezeKey(t){return this._requireNotFrozen(),this._freezeKey=t,this}get wipeKey(){return this._wipeKey}setWipeKey(t){return this._requireNotFrozen(),this._wipeKey=t,this}get supplyKey(){return this._supplyKey}setSupplyKey(t){return this._requireNotFrozen(),this._supplyKey=t,this}setsupplyKey(t){return this._requireNotFrozen(),this._supplyKey=t,this}get expirationTime(){return this._expirationTime}setExpirationTime(t){return this._requireNotFrozen(),this._expirationTime=t instanceof Timestamp?t:Timestamp.fromDate(t),this}get autoRenewAccountId(){return this._autoRenewAccountId}setAutoRenewAccountId(t){return this._requireNotFrozen(),this._autoRenewAccountId=t instanceof AccountId?t:AccountId.fromString(t),this}get autoRenewPeriod(){return this._autoRenewPeriod}setAutoRenewPeriod(t){return this._requireNotFrozen(),this._autoRenewPeriod=t instanceof Duration?t:new Duration(t),this}get tokenMemo(){return this._tokenMemo}setTokenMemo(t){return this._requireNotFrozen(),this._tokenMemo=t,this}get feeScheduleKey(){return this._feeScheduleKey}setFeeScheduleKey(t){return this._requireNotFrozen(),this._feeScheduleKey=t,this}get pauseKey(){return this._pauseKey}setPauseKey(t){return this._requireNotFrozen(),this._pauseKey=t,this}clearTokenMemo(){return this._requireNotFrozen(),this._tokenMemo=null,this}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t),null!=this._treasuryAccountId&&this._treasuryAccountId.validateChecksum(t),null!=this._autoRenewAccountId&&this._autoRenewAccountId.validateChecksum(t)}_execute(t,e){return t.token.updateToken(e)}_getTransactionDataCase(){return"tokenUpdate"}_makeTransactionData(){return{token:null!=this._tokenId?this._tokenId._toProtobuf():null,name:this.tokenName,symbol:this.tokenSymbol,treasury:null!=this._treasuryAccountId?this._treasuryAccountId._toProtobuf():null,adminKey:null!=this._adminKey?this._adminKey._toProtobufKey():null,kycKey:null!=this._kycKey?this._kycKey._toProtobufKey():null,freezeKey:null!=this._freezeKey?this._freezeKey._toProtobufKey():null,wipeKey:null!=this._wipeKey?this._wipeKey._toProtobufKey():null,supplyKey:null!=this._supplyKey?this._supplyKey._toProtobufKey():null,autoRenewAccount:null!=this._autoRenewAccountId?this._autoRenewAccountId._toProtobuf():null,expiry:null!=this._expirationTime?this._expirationTime._toProtobuf():null,autoRenewPeriod:null!=this._autoRenewPeriod?this._autoRenewPeriod._toProtobuf():null,memo:null!=this._tokenMemo?{value:this._tokenMemo}:null,feeScheduleKey:null!=this._feeScheduleKey?this._feeScheduleKey._toProtobufKey():null}}}TRANSACTION_REGISTRY.set("tokenUpdate",TokenUpdateTransaction._fromProtobuf);class TokenWipeTransaction extends Transaction{constructor(t={}){super(),this._tokenId=null,this._accountId=null,this._serials=[],this._amount=null,null!=t.tokenId&&this.setTokenId(t.tokenId),null!=t.accountId&&this.setAccountId(t.accountId),null!=t.amount&&this.setAmount(t.amount),null!=t.serials&&this.setSerials(t.serials)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].tokenWipe;return Transaction._fromProtobufTransactions(new TokenWipeTransaction({tokenId:null!=F.token?TokenId._fromProtobuf(F.token):void 0,accountId:null!=F.account?AccountId._fromProtobuf(F.account):void 0,amount:null!=F.amount?F.amount:void 0}),t,e,Q,B,s)}get tokenId(){return this._tokenId}setTokenId(t){return this._requireNotFrozen(),this._tokenId="string"==typeof t?TokenId.fromString(t):t.clone(),this}get accountId(){return this._accountId}setAccountId(t){return this._requireNotFrozen(),this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}get amount(){return this._amount}setAmount(t){return this._requireNotFrozen(),this._amount=t instanceof long$1?t:long$1.fromValue(t),this}_validateChecksums(t){null!=this._tokenId&&this._tokenId.validateChecksum(t),null!=this._accountId&&this._accountId.validateChecksum(t)}get serials(){return this._serials}setSerials(t){return this._requireNotFrozen(),this._serials=t.map((t=>"number"==typeof t?long$1.fromNumber(t):t)),this}_execute(t,e){return t.token.wipeTokenAccount(e)}_getTransactionDataCase(){return"tokenWipe"}_makeTransactionData(){return{amount:this._amount,token:null!=this._tokenId?this._tokenId._toProtobuf():null,account:null!=this._accountId?this._accountId._toProtobuf():null,serialNumbers:this.serials}}}TRANSACTION_REGISTRY.set("tokenWipe",TokenWipeTransaction._fromProtobuf);class TopicCreateTransaction extends Transaction{constructor(t={}){super(),this._adminKey=null,this._submitKey=null,this._autoRenewAccountId=null,this._autoRenewPeriod=new Duration(DEFAULT_AUTO_RENEW_PERIOD),this._topicMemo=null,null!=t.adminKey&&this.setAdminKey(t.adminKey),null!=t.submitKey&&this.setSubmitKey(t.submitKey),null!=t.autoRenewAccountId&&this.setAutoRenewAccountId(t.autoRenewAccountId),null!=t.autoRenewPeriod&&this.setAutoRenewPeriod(t.autoRenewPeriod),null!=t.topicMemo&&this.setTopicMemo(t.topicMemo)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].consensusCreateTopic;return Transaction._fromProtobufTransactions(new TopicCreateTransaction({adminKey:null!=F.adminKey?Key._fromProtobufKey(F.adminKey):void 0,submitKey:null!=F.submitKey?Key._fromProtobufKey(F.submitKey):void 0,autoRenewAccountId:null!=F.autoRenewAccount?AccountId._fromProtobuf(F.autoRenewAccount):void 0,autoRenewPeriod:null!=F.autoRenewPeriod&&null!=F.autoRenewPeriod.seconds?F.autoRenewPeriod.seconds:void 0,topicMemo:null!=F.memo?F.memo:void 0}),t,e,Q,B,s)}get topicMemo(){return this._topicMemo}setTopicMemo(t){return this._requireNotFrozen(),this._topicMemo=t,this}get adminKey(){return this._adminKey}setAdminKey(t){return this._requireNotFrozen(),this._adminKey=t,this}get submitKey(){return this._submitKey}setSubmitKey(t){return this._requireNotFrozen(),this._submitKey=t,this}get autoRenewAccountId(){return this._autoRenewAccountId}setAutoRenewAccountId(t){return this._requireNotFrozen(),this._autoRenewAccountId=t instanceof AccountId?t:AccountId.fromString(t),this}get autoRenewPeriod(){return this._autoRenewPeriod}setAutoRenewPeriod(t){return this._requireNotFrozen(),this._autoRenewPeriod=t instanceof Duration?t:new Duration(t),this}_validateChecksums(t){null!=this._autoRenewAccountId&&this._autoRenewAccountId.validateChecksum(t)}_execute(t,e){return t.consensus.createTopic(e)}_getTransactionDataCase(){return"consensusCreateTopic"}_makeTransactionData(){return{adminKey:null!=this._adminKey?this._adminKey._toProtobufKey():null,submitKey:null!=this._submitKey?this._submitKey._toProtobufKey():null,autoRenewAccount:null!=this._autoRenewAccountId?this._autoRenewAccountId._toProtobuf():null,autoRenewPeriod:this._autoRenewPeriod._toProtobuf(),memo:this._topicMemo}}}TRANSACTION_REGISTRY.set("consensusCreateTopic",TopicCreateTransaction._fromProtobuf);class TopicDeleteTransaction extends Transaction{constructor(t={}){super(),this._topicId=null,null!=t.topicId&&this.setTopicId(t.topicId)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].consensusDeleteTopic;return Transaction._fromProtobufTransactions(new TopicDeleteTransaction({topicId:null!=F.topicID?TopicId._fromProtobuf(F.topicID):void 0}),t,e,Q,B,s)}get topicId(){return this._topicId}setTopicId(t){return this._requireNotFrozen(),this._topicId="string"==typeof t?TopicId.fromString(t):t.clone(),this}_validateChecksums(t){null!=this._topicId&&this._topicId.validateChecksum(t)}_execute(t,e){return t.consensus.deleteTopic(e)}_getTransactionDataCase(){return"consensusDeleteTopic"}_makeTransactionData(){return{topicID:null!=this._topicId?this._topicId._toProtobuf():null}}}TRANSACTION_REGISTRY.set("consensusDeleteTopic",TopicDeleteTransaction._fromProtobuf);class TopicInfo{constructor(t){this.topicId=t.topicId,this.topicMemo=t.topicMemo,this.runningHash=t.runningHash,this.sequenceNumber=t.sequenceNumber,this.expirationTime=t.expirationTime,this.adminKey=t.adminKey,this.submitKey=t.submitKey,this.autoRenewPeriod=t.autoRenewPeriod,this.autoRenewAccountId=t.autoRenewAccountId,this.ledgerId=t.ledgerId,Object.freeze(this)}static _fromProtobuf(t){const e=t.topicInfo;return new TopicInfo({topicId:TopicId._fromProtobuf(t.topicID),topicMemo:null!=e.memo?e.memo:"",runningHash:null!=e.runningHash?e.runningHash:new Uint8Array,sequenceNumber:null!=e.sequenceNumber?e.sequenceNumber instanceof long$1?e.sequenceNumber:long$1.fromValue(e.sequenceNumber):long$1.ZERO,expirationTime:null!=e.expirationTime?Timestamp._fromProtobuf(e.expirationTime):null,adminKey:null!=e.adminKey?Key._fromProtobufKey(e.adminKey):null,submitKey:null!=e.submitKey?Key._fromProtobufKey(e.submitKey):null,autoRenewPeriod:null!=e.autoRenewPeriod?new Duration(e.autoRenewPeriod.seconds):null,autoRenewAccountId:null!=e.autoRenewAccount?AccountId._fromProtobuf(e.autoRenewAccount):null,ledgerId:null!=e.ledgerId?LedgerId.fromBytes(e.ledgerId):null})}_toProtobuf(){return{topicID:this.topicId._toProtobuf(),topicInfo:{memo:this.topicMemo,runningHash:this.runningHash,sequenceNumber:this.sequenceNumber,expirationTime:null!=this.expirationTime?this.expirationTime._toProtobuf():null,adminKey:null!=this.adminKey?this.adminKey._toProtobufKey():null,submitKey:null!=this.submitKey?this.submitKey._toProtobufKey():null,autoRenewPeriod:null!=this.autoRenewPeriod?this.autoRenewPeriod._toProtobuf():null,autoRenewAccount:null!=this.autoRenewAccountId?this.autoRenewAccountId._toProtobuf():null}}}static fromBytes(t){return TopicInfo._fromProtobuf({topicInfo:lib.ConsensusTopicInfo.decode(t)})}toBytes(){return lib.ConsensusTopicInfo.encode(this._toProtobuf().topicInfo).finish()}}class TopicInfoQuery extends Query{constructor(t={}){super(),this._topicId=null,null!=t.topicId&&this.setTopicId(t.topicId)}static _fromProtobuf(t){const e=t.consensusGetTopicInfo;return new TopicInfoQuery({topicId:null!=e.topicID?TopicId._fromProtobuf(e.topicID):void 0})}get topicId(){return this._topicId}setTopicId(t){return this._topicId="string"==typeof t?TopicId.fromString(t):t.clone(),this}async getCost(t){let e=await super.getCost(t);return e.toTinybars().greaterThan(25)?e:Hbar.fromTinybars(25)}_validateChecksums(t){null!=this._topicId&&this._topicId.validateChecksum(t)}_execute(t,e){return t.consensus.getTopicInfo(e)}_mapResponseHeader(t){return t.consensusGetTopicInfo.header}_mapResponse(t,e,Q){return Promise.resolve(TopicInfo._fromProtobuf(t.consensusGetTopicInfo))}_onMakeRequest(t){return{consensusGetTopicInfo:{header:t,topicID:null!=this._topicId?this._topicId._toProtobuf():null}}}}QUERY_REGISTRY.set("consensusGetTopicInfo",TopicInfoQuery._fromProtobuf);class TopicMessageSubmitTransaction extends Transaction{constructor(t={}){super(),this._topicId=null,null!=t.topicId&&this.setTopicId(t.topicId),this._message=null,null!=t.message&&this.setMessage(t.message),this._maxChunks=20,this._chunkSize=CHUNK_SIZE,null!=t.maxChunks&&this.setMaxChunks(t.maxChunks),null!=t.chunkSize&&this.setChunkSize(t.chunkSize),this._chunkInfo=null}static _fromProtobuf(t,e,Q,B,s){const F=s[0].consensusSubmitMessage;return Transaction._fromProtobufTransactions(new TopicMessageSubmitTransaction({topicId:null!=F.topicID?TopicId._fromProtobuf(F.topicID):void 0,message:null!=F.message?F.message:void 0}),t,e,Q,B,s)}setTransactionId(t){if(this._requireNotFrozen(),null==t.accountId||null==t.validStart)throw new Error("`TopicMessageSubmitTransaction` does not support `TransactionId` built from `nonce`");return this._transactionIds.setList([t]),this}get topicId(){return this._topicId}setTopicId(t){return this._requireNotFrozen(),this._topicId="string"==typeof t?TopicId.fromString(t):t.clone(),this}get message(){return this._message}setMessage(t){return this._requireNotFrozen(),t=requireStringOrUint8Array(t),this._message=t instanceof Uint8Array?t:encode(t),this}get maxChunks(){return this._maxChunks}setMaxChunks(t){return this._requireNotFrozen(),this._maxChunks=t,this}get chunkSize(){return this._chunkSize}setChunkSize(t){return this._chunkSize=t,this}freezeWith(t){if(super.freezeWith(t),null==this._message)return this;const e=Math.floor((this._message.length+(this._chunkSize-1))/this._chunkSize);if(e>this._maxChunks)throw new Error(`Message with size ${this._message.length} too long for ${this._maxChunks} chunks`);const Q=this.transactionId._toProtobuf();let B=this.transactionId;this._transactionIds.locked=!1,this._transactions.clear(),this._transactionIds.clear(),this._signedTransactions.clear(),super._nextTransactionIndex=0;for(let t=0;t<e;t++){this._chunkInfo={initialTransactionID:Q,total:e,number:t+1},this._transactionIds.list.push(B);for(const t of this._nodeAccountIds.list)this._signedTransactions.push(this._makeSignedTransaction(t));B=new TransactionId(B.accountId,new Timestamp(B.validStart.seconds,B.validStart.nanos.add(1))),super._nextTransactionIndex=this._nextTransactionIndex+1}return this._chunkInfo=null,super._nextTransactionIndex=0,this}schedule(){if(this._requireNotFrozen(),null!=this._message&&this._message.length>this._chunkSize)throw new Error(`cannot schedule \`TopicMessageSubmitTransaction\` with message over ${this._chunkSize} bytes`);return super.schedule()}async execute(t){return(await this.executeAll(t))[0]}async executeAll(t){super._isFrozen()||this.freezeWith(t);const e=this.transactionId,Q=t.operatorAccountId;null!=Q&&Q.equals(e.accountId)&&await super.signWithOperator(t);const B=[];for(let e=0;e<this._transactionIds.length;e++)B.push(await super.execute(t));return B}_execute(t,e){return t.consensus.submitMessage(e)}_getTransactionDataCase(){return"consensusSubmitMessage"}_makeTransactionData(){if(null!=this._chunkInfo&&null!=this._message){const t=(this._chunkInfo.number-1)*this._chunkSize;let e=t+this._chunkSize;return e>this._message.length&&(e=this._message.length),{topicID:null!=this._topicId?this._topicId._toProtobuf():null,message:this._message.slice(t,e),chunkInfo:this._chunkInfo}}return{topicID:null!=this._topicId?this._topicId._toProtobuf():null,message:this._message}}}TRANSACTION_REGISTRY.set("consensusSubmitMessage",TopicMessageSubmitTransaction._fromProtobuf);class TopicUpdateTransaction extends Transaction{constructor(t={}){super(),this._topicId=null,null!=t.topicId&&this.setTopicId(t.topicId),this._topicMemo=null,null!=t.topicMemo&&this.setTopicMemo(t.topicMemo),this._submitKey=null,null!=t.submitKey&&this.setSubmitKey(t.submitKey),this._adminKey=null,null!=t.adminKey&&this.setAdminKey(t.adminKey),this._autoRenewAccountId=null,null!=t.autoRenewAccountId&&this.setAutoRenewAccountId(t.autoRenewAccountId),this._autoRenewPeriod=null,null!=t.autoRenewPeriod&&this.setAutoRenewPeriod(t.autoRenewPeriod)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].consensusUpdateTopic;return Transaction._fromProtobufTransactions(new TopicUpdateTransaction({topicId:null!=F.topicID?TopicId._fromProtobuf(F.topicID):void 0,adminKey:null!=F.adminKey?Key._fromProtobufKey(F.adminKey):void 0,submitKey:null!=F.submitKey?Key._fromProtobufKey(F.submitKey):void 0,autoRenewAccountId:null!=F.autoRenewAccount?AccountId._fromProtobuf(F.autoRenewAccount):void 0,autoRenewPeriod:null!=F.autoRenewPeriod&&null!=F.autoRenewPeriod.seconds?F.autoRenewPeriod.seconds:void 0,topicMemo:null!=F.memo&&null!=F.memo.value?F.memo.value:void 0}),t,e,Q,B,s)}get topicId(){return this._topicId}setTopicId(t){return this._requireNotFrozen(),this._topicId="string"==typeof t?TopicId.fromString(t):t.clone(),this}clearTopicId(){return this._requireNotFrozen(),this._topicId=null,this}get topicMemo(){return this._topicMemo}setTopicMemo(t){return this._requireNotFrozen(),this._topicMemo=t,this}clearTopicMemo(){return this._requireNotFrozen(),this._topicMemo=null,this}get adminKey(){return this._adminKey}setAdminKey(t){return this._requireNotFrozen(),this._adminKey=t,this}clearAdminKey(){return this._requireNotFrozen(),this._adminKey=null,this}get submitKey(){return this._submitKey}setSubmitKey(t){return this._requireNotFrozen(),this._submitKey=t,this}clearSubmitKey(){return this._requireNotFrozen(),this._submitKey=null,this}get autoRenewAccountId(){return this._autoRenewAccountId}setAutoRenewAccountId(t){return this._requireNotFrozen(),this._autoRenewAccountId=t instanceof AccountId?t:AccountId.fromString(t),this}clearAutoRenewAccountId(){return this._requireNotFrozen(),this._autoRenewAccountId=null,this}get autoRenewPeriod(){return this._autoRenewPeriod}setAutoRenewPeriod(t){return this._requireNotFrozen(),this._autoRenewPeriod=t instanceof Duration?t:new Duration(t),this}_validateChecksums(t){null!=this._topicId&&this._topicId.validateChecksum(t),null!=this._autoRenewAccountId&&this._autoRenewAccountId.validateChecksum(t)}_execute(t,e){return t.consensus.updateTopic(e)}_getTransactionDataCase(){return"consensusUpdateTopic"}_makeTransactionData(){return{topicID:null!=this._topicId?this._topicId._toProtobuf():null,adminKey:null!=this._adminKey?this._adminKey._toProtobufKey():null,submitKey:null!=this._submitKey?this._submitKey._toProtobufKey():null,memo:null!=this._topicMemo?{value:this._topicMemo}:null,autoRenewAccount:null!=this._autoRenewAccountId?this._autoRenewAccountId._toProtobuf():null,autoRenewPeriod:null!=this._autoRenewPeriod?this._autoRenewPeriod._toProtobuf():null}}}TRANSACTION_REGISTRY.set("consensusUpdateTopic",TopicUpdateTransaction._fromProtobuf);class NullableTokenDecimalMap extends ObjectMap{constructor(){super((t=>TokenId.fromString(t)))}}class HbarTransferMap extends ObjectMap{constructor(){super((t=>AccountId.fromString(t)))}static _fromProtobuf(t){const e=new HbarTransferMap;for(const Q of null!=t.accountAmounts?t.accountAmounts:[]){const t=AccountId._fromProtobuf(Q.accountID);e._set(t,Hbar.fromTinybars(Q.amount))}return e}}class TokenNftTransfer{constructor(t){this.tokenId=t.tokenId instanceof TokenId?t.tokenId:TokenId.fromString(t.tokenId),this.senderAccountId=t.senderAccountId instanceof AccountId?t.senderAccountId:AccountId.fromString(t.senderAccountId),this.receiverAccountId=t.receiverAccountId instanceof AccountId?t.receiverAccountId:AccountId.fromString(t.receiverAccountId),this.serialNumber=long$1.fromValue(t.serialNumber),this.isApproved=t.isApproved}static _fromProtobuf(t){const e=[];for(const Q of t){const t=TokenId._fromProtobuf(Q.token);for(const B of null!=Q.nftTransfers?Q.nftTransfers:[])e.push(new TokenNftTransfer({tokenId:t,senderAccountId:AccountId._fromProtobuf(B.senderAccountID),receiverAccountId:AccountId._fromProtobuf(B.receiverAccountID),serialNumber:null!=B.serialNumber?B.serialNumber:long$1.ZERO,isApproved:1==B.isApproval}))}return e}_toProtobuf(){return{senderAccountID:this.senderAccountId._toProtobuf(),receiverAccountID:this.receiverAccountId._toProtobuf(),serialNumber:this.serialNumber,isApproval:this.isApproved}}}class TransferTransaction extends Transaction{constructor(t={}){super(),this._tokenTransfers=[],this._hbarTransfers=[],this._nftTransfers=[],this._defaultMaxTransactionFee=new Hbar(1);for(const e of null!=t.tokenTransfers?t.tokenTransfers:[])this.addTokenTransfer(e.tokenId,e.accountId,e.amount);for(const e of null!=t.hbarTransfers?t.hbarTransfers:[])this.addHbarTransfer(e.accountId,e.amount);for(const e of null!=t.nftTransfers?t.nftTransfers:[])this.addNftTransfer(e.tokenId,e.serial,e.sender,e.recipient)}static _fromProtobuf(t,e,Q,B,s){const F=s[0].cryptoTransfer,U=new TransferTransaction;return U._tokenTransfers=TokenTransfer._fromProtobuf(null!=F.tokenTransfers?F.tokenTransfers:[]),U._hbarTransfers=Transfer._fromProtobuf(null!=F.transfers&&null!=F.transfers.accountAmounts?F.transfers.accountAmounts:[]),U._nftTransfers=TokenNftTransfer._fromProtobuf(null!=F.tokenTransfers?F.tokenTransfers:[]),Transaction._fromProtobufTransactions(U,t,e,Q,B,s)}get tokenTransfers(){const t=new TokenTransferMap;for(const e of this._tokenTransfers){let Q=t.get(e.tokenId);null!=Q?Q._set(e.accountId,e.amount):(Q=new TokenTransferAccountMap,Q._set(e.accountId,e.amount),t._set(e.tokenId,Q))}return t}addTokenTransfer(t,e,Q){this._requireNotFrozen();const B=t instanceof TokenId?t:TokenId.fromString(t),s=e instanceof AccountId?e:AccountId.fromString(e),F=Q instanceof long$1?Q:long$1.fromNumber(Q);for(const t of this._tokenTransfers)if(0===t.tokenId.compare(B)&&0===t.accountId.compare(s))return t.amount=t.amount.add(F),t.expectedDecimals=null,this;return this._tokenTransfers.push(new TokenTransfer({tokenId:t,accountId:e,expectedDecimals:null,amount:Q,isApproved:!1})),this}addTokenTransferWithDecimals(t,e,Q,B){this._requireNotFrozen();const s=t instanceof TokenId?t:TokenId.fromString(t),F=e instanceof AccountId?e:AccountId.fromString(e),U=Q instanceof long$1?Q:long$1.fromNumber(Q);let n=!1;for(const t of this._tokenTransfers)if(0===t.tokenId.compare(s)){if(null!=t.expectedDecimals&&t.expectedDecimals!==B)throw new Error("expected decimals mis-match");t.expectedDecimals=B,0===t.accountId.compare(F)&&(t.amount=t.amount.add(U),t.expectedDecimals=B,n=!0)}return n||this._tokenTransfers.push(new TokenTransfer({tokenId:t,accountId:e,expectedDecimals:B,amount:Q,isApproved:!1})),this}get tokenIdDecimals(){const t=new NullableTokenDecimalMap;for(const e of this._tokenTransfers)t._set(e.tokenId,e.expectedDecimals);return t}get hbarTransfers(){const t=new HbarTransferMap;for(const e of this._hbarTransfers)t._set(e.accountId,e.amount);return t}addHbarTransfer(t,e){this._requireNotFrozen();const Q=t instanceof AccountId?t:AccountId.fromString(t),B=e instanceof Hbar?e:new Hbar(e);for(const t of this._hbarTransfers)if(0===t.accountId.compare(Q))return t.amount=Hbar.fromTinybars(t.amount.toTinybars().add(B.toTinybars())),this;return this._hbarTransfers.push(new Transfer({accountId:Q,amount:B,isApproved:!1})),this}_validateChecksums(t){for(const e of this._hbarTransfers)e.accountId.validateChecksum(t);for(const e of this._tokenTransfers)e.tokenId.validateChecksum(t),e.accountId.validateChecksum(t);for(const e of this._nftTransfers)e.tokenId.validateChecksum(t),e.senderAccountId.validateChecksum(t),e.receiverAccountId.validateChecksum(t)}get nftTransfers(){const t=new TokenNftTransferMap;for(const e of this._nftTransfers){const Q=t.get(e.tokenId),B={sender:e.senderAccountId,recipient:e.receiverAccountId,serial:e.serialNumber,isApproved:e.isApproved};null!=Q?Q.push(B):t._set(e.tokenId,[B])}return t}addNftTransfer(t,e,Q,B){let s,F,U;if(this._requireNotFrozen(),t instanceof NftId)s=t,F="string"==typeof e?AccountId.fromString(e):e,U="string"==typeof Q?AccountId.fromString(Q):Q;else if(t instanceof TokenId)s=new NftId(t,e),F="string"==typeof Q?AccountId.fromString(Q):Q,U="string"==typeof B?AccountId.fromString(B):B;else try{s=NftId.fromString(t),F="string"==typeof e?AccountId.fromString(e):e,U="string"==typeof Q?AccountId.fromString(Q):Q}catch(n){const c=TokenId.fromString(t);s=new NftId(c,e),F="string"==typeof Q?AccountId.fromString(Q):Q,U="string"==typeof B?AccountId.fromString(B):B}for(const t of this._nftTransfers)if(0===t.tokenId.compare(s.tokenId)&&0===t.serialNumber.compare(s.serial))return t.senderAccountId=F,t.receiverAccountId=U,this;return this._nftTransfers.push(new TokenNftTransfer({tokenId:s.tokenId,serialNumber:s.serial,senderAccountId:F,receiverAccountId:U,isApproved:!1})),this}setHbarTransferApproval(t,e){const Q="string"==typeof t?AccountId.fromString(t):t;for(const t of this._hbarTransfers)0===t.accountId.compare(Q)&&(t.isApproved=e);return this}setTokenTransferApproval(t,e,Q){const B="string"==typeof t?TokenId.fromString(t):t,s="string"==typeof e?AccountId.fromString(e):e;for(const t of this._tokenTransfers)0===t.tokenId.compare(B)&&0===t.accountId.compare(s)&&(t.isApproved=Q);return this}setNftTransferApproval(t,e){const Q="string"==typeof t?NftId.fromString(t):t;for(const t of this._nftTransfers)0===t.tokenId.compare(Q.tokenId)&&0===t.serialNumber.compare(Q.serial)&&(t.isApproved=e);return this}_execute(t,e){return t.crypto.cryptoTransfer(e)}_getTransactionDataCase(){return"cryptoTransfer"}_makeTransactionData(){const t=[];this._tokenTransfers.sort(((t,e)=>{const Q=t.tokenId.compare(e.tokenId);return 0!==Q?Q:t.accountId.compare(e.accountId)})),this._nftTransfers.sort(((t,e)=>{const Q=t.senderAccountId.compare(e.senderAccountId);if(0!=Q)return Q;const B=t.receiverAccountId.compare(e.receiverAccountId);return 0!=B?B:t.serialNumber.compare(e.serialNumber)}));let e=0,Q=0;for(;e<this._tokenTransfers.length||Q<this._nftTransfers.length;)if(e<this._tokenTransfers.length&&Q<this._nftTransfers.length){const B=this._tokenTransfers[e].tokenId,s=this._nftTransfers[Q].tokenId,F=t.length>0?t[t.length-1]:null,U=null!=F?F.tokenId:null;if(null!=F&&null!=U&&0===U.compare(B)){F.transfers.push(this._tokenTransfers[e++]);continue}if(null!=F&&null!=U&&0===U.compare(s)){F.nftTransfers.push(this._nftTransfers[Q++]);continue}const n=B.compare(s);0===n?t.push({tokenId:B,expectedDecimals:this._tokenTransfers[e].expectedDecimals,transfers:[this._tokenTransfers[e++]],nftTransfers:[this._nftTransfers[Q++]]}):n<=0?t.push({tokenId:B,expectedDecimals:this._tokenTransfers[e].expectedDecimals,transfers:[this._tokenTransfers[e++]],nftTransfers:[]}):t.push({tokenId:B,expectedDecimals:null,transfers:[],nftTransfers:[this._nftTransfers[Q++]]})}else if(e<this._tokenTransfers.length){const Q=this._tokenTransfers[e].tokenId,B=t.length>0?t[t.length-1]:null,s=null!=B?B.tokenId:null;if(null!=B&&null!=s&&0===s.compare(Q)){B.transfers.push(this._tokenTransfers[e++]);continue}t.push({tokenId:Q,expectedDecimals:this._tokenTransfers[e].expectedDecimals,transfers:[this._tokenTransfers[e++]],nftTransfers:[]})}else if(Q<this._nftTransfers.length){const e=this._nftTransfers[Q].tokenId,B=t.length>0?t[t.length-1]:null,s=null!=B?B.tokenId:null;if(null!=B&&null!=s&&0===s.compare(e)){B.nftTransfers.push(this._nftTransfers[Q++]);continue}t.push({tokenId:e,expectedDecimals:null,transfers:[],nftTransfers:[this._nftTransfers[Q++]]})}return this._hbarTransfers.sort(((t,e)=>t.accountId.compare(e.accountId))),{transfers:{accountAmounts:this._hbarTransfers.map((t=>({accountID:t.accountId._toProtobuf(),amount:t.amount.toTinybars(),isApproval:t.isApproved})))},tokenTransfers:t.map((t=>({token:t.tokenId._toProtobuf(),expectedDecimals:null!=t.expectedDecimals?{value:t.expectedDecimals}:null,transfers:t.transfers.map((t=>t._toProtobuf())),nftTransfers:t.nftTransfers.map((t=>t._toProtobuf()))})))}}}TRANSACTION_REGISTRY.set("cryptoTransfer",TransferTransaction._fromProtobuf);class CostQuery extends Executable{constructor(t){super(),this._query=t,this._nodeAccountIds.setList(t._nodeAccountIds.list),this._header=null}_getTransactionId(){return this._query._getTransactionId()}async _beforeExecute(t){if(null==t)throw new Error("Cannot do CostQuery without Client");const e=t._operator;if(null==e)throw new Error("`client` must have an `operator` or an explicit payment transaction must be provided");this._query._nodeAccountIds.isEmpty&&this._query._nodeAccountIds.setList(t._network.getNodeAccountIdsForExecute()),this._header={payment:await _makePaymentTransaction(TransactionId.generate(new AccountId(0)),new AccountId(0),e,new Hbar(0)),responseType:lib.ResponseType.COST_ANSWER}}_makeRequestAsync(){return Promise.resolve(this._query._onMakeRequest(this._header))}_shouldRetry(t,e){return this._query._shouldRetry(t,e)}_mapStatusError(t,e){return this._query._mapStatusError(t,e)}_mapResponse(t,e,Q){const B=this._query._mapResponseHeader(t).cost;return Promise.resolve(Hbar.fromTinybars(B))}_execute(t,e){return this._query._execute(t,e)}_getNodeAccountId(){if(this._nodeAccountIds.isEmpty)throw new Error("(BUG) nodeAccountIds were not set for query before executing");return this._nodeAccountIds.list[this._nextNodeAccountIdIndex]}}COST_QUERY.push((t=>new CostQuery(t)));const HOST_AND_PORT=/^(\S+):(\d+)$/;class ManagedNodeAddress{constructor(t={}){if(null!=t.address){const e=HOST_AND_PORT.exec(t.address);if(null==e)throw new Error(`failed to parse address: ${t.address}`);this._address=e[1],this._port=null!=e[2]?parseInt(e[2]):null}else{if(null==t.host||null==t.port)throw new Error(`failed to create a managed node address: ${JSON.stringify(t)}`);this._address=t.host,this._port=t.port}Object.freeze(this)}static fromString(t){return new ManagedNodeAddress({address:t})}toInsecure(){let t=this.port;switch(this.port){case 50212:t=50211;break;case 443:t=5600}return new ManagedNodeAddress({host:this.address,port:t})}toSecure(){let t=this.port;switch(this.port){case 50211:t=50212;break;case 5600:t=443}return new ManagedNodeAddress({host:this.address,port:t})}get address(){return this._address}get port(){return this._port}isTransportSecurity(){return 50212==this._port||443==this._port}toString(){return null==this.port?this.address:`${this.address}:${this.port}`}}class ManagedNode{constructor(t={}){if(null!=t.newNode)this._address="string"==typeof t.newNode.address?ManagedNodeAddress.fromString(t.newNode.address):t.newNode.address,this._cert=void 0,this._channel=null,this._channelInitFunction=t.newNode.channelInitFunction,this._currentBackoff=250,this._lastUsed=Date.now(),this._backoffUntil=Date.now(),this._useCount=0,this._attempts=0,this._minBackoff=250,this._maxBackoff=8e3;else{if(null==t.cloneNode)throw new Error(`failed to create ManagedNode: ${JSON.stringify(t)}`);this._address=t.cloneNode.address,this._cert=t.cloneNode.node._cert,this._channel=t.cloneNode.node._channel,this._channelInitFunction=t.cloneNode.node._channelInitFunction,this._currentBackoff=t.cloneNode.node._currentBackoff,this._lastUsed=t.cloneNode.node._lastUsed,this._backoffUntil=t.cloneNode.node._backoffUntil,this._useCount=t.cloneNode.node._useCount,this._attempts=t.cloneNode.node._attempts,this._minBackoff=t.cloneNode.node._minBackoff,this._maxBackoff=t.cloneNode.node._minBackoff}}getKey(){throw new Error("not implemented")}toInsecure(){throw new Error("not implemented")}toSecure(){throw new Error("not implemented")}setCert(t){return this}get address(){return this._address}get attempts(){return this._attempts}get minBackoff(){return this._minBackoff}setMinBackoff(t){return this._currentBackoff<=t&&(this._currentBackoff=t),this._minBackoff=t,this}get maxBackoff(){return this._maxBackoff}setmaxBackoff(t){return this._currentBackoff<=t&&(this._currentBackoff=t),this._maxBackoff=t,this}getChannel(){return this._useCount++,this.__lastUsed=Date.now(),null!=this._channel||(this._channel=this._channelInitFunction(this.address.toString(),this._cert)),this._channel}isHealthy(){return this._backoffUntil<=Date.now()}increaseDelay(){this._currentBackoff=Math.min(2*this._currentBackoff,this._maxBackoff),this._backoffUntil=Date.now()+this._currentBackoff}decreaseDelay(){this._currentBackoff=Math.max(this._currentBackoff/2,this._minBackoff)}wait(){const t=this._backoffUntil-this._lastUsed;return new Promise((e=>setTimeout(e,t)))}compare(t){return this.isHealthy()&&t.isHealthy()?this._useCount<t._useCount?-1:this._useCount>t._useCount?1:this._lastUsed<t._lastUsed?-1:this._lastUsed>t._lastUsed?1:0:this.isHealthy()&&!t.isHealthy()?-1:!this.isHealthy()&&t.isHealthy()?1:this._useCount<t._useCount?-1:this._useCount>t._useCount?1:this._lastUsed<t._lastUsed?-1:this._lastUsed>t._lastUsed?1:0}close(){null!=this._channel&&this._channel.close(),this._channel=null}}const PREVIEWNET_CERTS={"0.0.3":"-----BEGIN CERTIFICATE-----\nMIICnzCCAiWgAwIBAgIUenyqJ4UaFBbwokatcUqAwW3o3rswCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDAxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMTU4WhgPMjI5NTA2MDcyMjIxNThaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAwMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEm5b1+oG9R0qt\nzM7UZnS5l/xxUNHIHq5+NAvtlviCpJL19jrW9+/UOy00Qqc6vS6tS1hS+dNJmpiZ\nFN0EHew4VDR7ACnL4LDJKmIHWjQ0iwvZo5kCpO0r9BtPN5FvaSxyo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUeciBviJtjeuue0GPf1xllNw7qvYwCgYIKoZIzj0EAwMDaAAwZQIw\nJeG0H2HdsI1VhOYmJmYlNeKCNgAk+LMorzPmsIInVBO2HK2IrKfpReWDS/m5j51V\nAjEAxKBxDezJDqAZHTkTXCg+X9Q9V6J6M5yDy5IS90aCWEo+W8C1Hc6hkn2/NrvT\nPhwK\n-----END CERTIFICATE-----\n","0.0.4":"-----BEGIN CERTIFICATE-----\nMIICnjCCAiWgAwIBAgIUUfjO8LyXBdzrzbAe1Yl+d34IDsIwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDExHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMTU5WhgPMjI5NTA2MDcyMjIxNTlaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAxMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAERwfj4ZtD/wRb\nf8h9NEMu2sQoLFK9Gc4SQ8o6j4ccLYGdgOoVoq4zzy4Jr7ZtCTuACfCfhp7wy8ra\n+6cugccaSd6AzOKRSVZvQvkUTFKIoAOKwp6IhlU48rmi80MT07eyo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUCGhfVMP72Y0G5XUksE3dPgFHrzkwCgYIKoZIzj0EAwMDZwAwZAIw\ncpX7irZWyuujWRYUs9kLNgB2YLQK+n8r1fH+tJg3+zkcZ2pzhGWmpUUZWOzsDqGC\nAjBUbhlmrTc4LrEBN0EMiRYzfPD2kBZxusLBDIg/aDYERCMcsFvF1T9SsuasF/B+\ncI8=\n-----END CERTIFICATE-----\n","0.0.5":"-----BEGIN CERTIFICATE-----\nMIICnjCCAiWgAwIBAgIUIo4L+7xe/mUmpKy4qOAQEIxz8UMwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDIxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMTU5WhgPMjI5NTA2MDcyMjIxNTlaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAyMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEoFgCjb1/7BUJ\nEXKIPJLlsOSp/39G8l92wOSr7h+Py7iwVwu68H2ykftMOq3tRwDRXZHz7ViqcIZ9\nlfMcS8sbRtVm9tBbNciVUqTLWX9nHr/c4PhKEi+LdgtSUr2+hHiWo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUMR89BHC3yKC4YwUgyBVQUGBCprQwCgYIKoZIzj0EAwMDZwAwZAIw\nUs2BdslcScIwcmxoB60K7/1BPfQI8ccDZIMosas6U2zhinTnRKik1T0i+uHhLl8e\nAjA5apAwSPTnP7j3Bo/FOCkfjTqOjwp2lUqzDJYKolKsHX2sy8hX9MkYiY46SaJ1\nP+0=\n-----END CERTIFICATE-----\n","0.0.6":"-----BEGIN CERTIFICATE-----\nMIICnzCCAiWgAwIBAgIUWpji03mJsR/16MP8BrOfpNz7aQMwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDMxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMTU5WhgPMjI5NTA2MDcyMjIxNTlaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAzMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE+KDMC99Q1rWi\n+FwlytGMS5qzTDytCvk+PzdONnDZ/weNSv4j3BXSo588IwhIxLtfcBlyo/+PmE1c\n5qGFXuMoZjGr22VpvogkRgPejD+Gawb4A2XHkMCD8NmO66uPw97po1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUN1qEI4eQ+WHavb9ypGV417NvhGowCgYIKoZIzj0EAwMDaAAwZQIw\nL0khkiDOiFRa3wx9l5JNjaSRePPc3ZaTaJQkPYeauMaLWEvmC/0e2/e9gPm5qJ8E\nAjEAgXQMko3vNB8VRN4XjyFJa8p/muZ/tLA15wPnb/boUmiZ+njDDSaiu8tIQrTB\ngHW6\n-----END CERTIFICATE-----\n","0.0.7":"-----BEGIN CERTIFICATE-----\nMIICnjCCAiWgAwIBAgIUEJ7AJvrqDUBNKbssGoJtww3v+WowCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDQxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMjAwWhgPMjI5NTA2MDcyMjIyMDBaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDA0MR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEfgJ8w9GUWM3y\nyusedZOFQrgXFVsdtRsMSHbqyVCN6+Wow6SIjy29GRMSP5R2aswupFgh6lXJRqnr\ntY+hpRumFKsmSo+5+l8DBcql4rzs4utESTehM+Cq9LYc4A1z0UIRo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUMCm3UqSbT01Zr23hLzCGnXbDa+MwCgYIKoZIzj0EAwMDZwAwZAIw\nFNcN7mKJo/bwpRT+y/KbYkCJsvljdbXzJOXXQ3e6J6R+0vLqcT25J/ry6pBZMUwR\nAjAswu29z8KJCSxnWwnPpHDmkRT15zG/xS+pAmx3oeQSqp6ZD7qpdJE8zzhbfe5x\nwAc=\n-----END CERTIFICATE-----\n"},TESTNET_CERTS={"0.0.3":"-----BEGIN CERTIFICATE-----\nMIICoDCCAiWgAwIBAgIUMkNeM6Sbk9ZFYmRWZmSgTQHHWyUwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDAxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMjU4WhgPMjI5NTA2MDcyMjIyNThaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAwMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAETLLoIMZjEhDP\nKLHS7bJT4OTYGgR/8mB65yfx3KqMLYFF+q2SpWkIrYgUQLVEUEibVSnLlxRUzH7R\nszcKynpTwh0W0yfWanZKQg+RWoKkEYlu2GvkUtJb8cRVM9NLmJUeo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUSrIepwFx8gZ8/G+WGaxs6GgkMtQwCgYIKoZIzj0EAwMDaQAwZgIx\nAJxC0fjB1OrF9vkCKsfnPS3Z+1hscrZhEDG38NxdLEAfPQ5VmyrSBgJy11FBp8yB\n0QIxAKzbge3Lf7iBMwYwm+2M/GiVgmHNMLdtrYuerWpdbYOHgRNAkyt57JoThn0u\nTzkd5Q==\n-----END CERTIFICATE-----\n","0.0.4":"-----BEGIN CERTIFICATE-----\nMIICnzCCAiWgAwIBAgIUGLriiLPacglp6U+BtJcF9TI7xEUwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDExHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMjU4WhgPMjI5NTA2MDcyMjIyNThaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAxMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEXhR9cb6mH9AE\nGNSGk3OkxN1C/JW49ddYZ/XWD4InjS8D1kXmB1Y39v1mF0L1loG6lDT8Zp46zrj7\n5zMONXZeD2b0mx5hHhtllPTpJ10Tlt9FDoyFbKwPRQ/SAPNADfuzo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUCaKtx8RZ1XJO9rmZMbIcFJZkcv4wCgYIKoZIzj0EAwMDaAAwZQIx\nAPhDW0VrNSmq8hODdhIVV4GyvpYhp3Fksg+sZr3DmUatwn+ptj+X+9IzgPl9QYE3\nkAIwcy2ixgNkjC/DYVmgT4MpUnLneLK0gA23Vj2QwACaTH99H/ybqUH7srj0POB9\n5wvV\n-----END CERTIFICATE-----\n","0.0.5":"-----BEGIN CERTIFICATE-----\nMIICoDCCAiWgAwIBAgIUEMduome38hvAuIKoGjg/tHatQZMwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDIxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMjU4WhgPMjI5NTA2MDcyMjIyNThaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAyMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEl1olzP1L4WgX\nd7aujOXmTQZt3tEOGzkMa3S6qJwISLBI7Tb9KaW8zYIe9xWBVAwphCbD0wn9xpPV\nwMr4uTn+JocugYBbe2YoUGzWTkxWnOEKXbh/nQJCe3XE/C0FY8fAo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQULfw7LVtTiUDVIvZwhhWW0soQtSQwCgYIKoZIzj0EAwMDaQAwZgIx\nAID5v3Lo2zlnpFzTdJFqBpw6fV+vmpI+JBj61f264J/uHMbELiu2dwxhwWaMElX7\nwQIxAJxccFr7Bf1KjaMyT2dq75zQzFuKDMj9x92yAqM2Gas/Yay+Ccpm8FBn7BFl\nke1Qwg==\n-----END CERTIFICATE-----\n","0.0.6":"-----BEGIN CERTIFICATE-----\nMIICnzCCAiWgAwIBAgIUcCg/gZGxk/UjYkhW1jg4Zki+jfwwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDMxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMjU5WhgPMjI5NTA2MDcyMjIyNTlaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAzMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEOSsXBZicyrxy\ntHJHKh04Mvu6SKM49IC7rAXw5CjlOod5OTeHg0fa5vVoBME4mlWP+LsMMqf8welC\n20b4wMwUC1Hnd66v8crX8L1wvZ9EmKLTvhTd65bS5zloMiSbpdF2o1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUgMMwqaGuUT6JCH0gsbqullaW6/QwCgYIKoZIzj0EAwMDaAAwZQIx\nAMggJ1eMmT7C14z7wHCsOdDOgmzg733+a5dsuAcxknoz/sQLN8wqy1JxShWgEIA/\nxwIweTDAX/4JZnr3mlSC57lYXbHk/c319VfN9Ybxg0FaDXa8tOqg7Ml6Uu3IGujQ\na3eY\n-----END CERTIFICATE-----\n","0.0.7":"-----BEGIN CERTIFICATE-----\nMIICoDCCAiWgAwIBAgIUXADwhiD5acpA66GPoXuAevBfZBIwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDQxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjIyMjU5WhgPMjI5NTA2MDcyMjIyNTlaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDA0MR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEBgLhLiGz8qWu\n50vzxSyQkrmhpxuHBJhpGzA0WaUJdAUlaUOL1753ZxxA08wUmcozILNEnMaQ+ROn\n+fuGctv90ZcrSekODjxjbKH2ntVLP8xwkBRCTJ0WRBNenxxBD438o1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUhYOOD/z3ty9O5GuSTXnyujIqBRgwCgYIKoZIzj0EAwMDaQAwZgIx\nAMxbZ4gvkXaORauQFUPRYwOJrihWIA+3ttGDua//YfEbshytQ8b4L65W/1Xs8eOd\nDwIxAImwTzRam8tScdOzmuGgPcML2lkETMpMA2rZYVyEL/VNktIxvB2oE+4M0v5l\nr8IbTA==\n-----END CERTIFICATE-----\n"},MAINNET_CERTS={"0.0.3":"-----BEGIN CERTIFICATE-----\nMIICnjCCAiWgAwIBAgIUZWoT9TlgbZy+syLbqZhO5++1cVgwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDAxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjQ3WhgPMjI5NTA2MDcyMjQyNDdaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAwMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE8NhDGK/dgWvD\nRHEJ8af7CBDdhvujH5XIrLen33GTLY8DbJwJW2jdsLGx3+DRVVmeNQZxCbcGj0e2\nIyypkG6s0mtnmeymD8mI3JU8m1aZiuIptZSH3Bw1BNn2hKU4x42co1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUbYGliiNtMkGaroQxXWCl+kYHDBwwCgYIKoZIzj0EAwMDZwAwZAIw\nImTOEYu0y73Ggt4NAjFFsN2sV7CsEL3NoJqJ7MZ6U+b3Ax1hnc1eE0oei6xH4VNF\nAjBB4iZNvAn6Esiu4k+JPlYuMesplgMv33fU5GsfvLIovN8pOJDe0c+CUmsnfGbP\nOsQ=\n-----END CERTIFICATE-----\n","0.0.4":"-----BEGIN CERTIFICATE-----\nMIICnjCCAiWgAwIBAgIUEGWU0F4aKffY+le55ahQaScDYDwwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDExHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjQ3WhgPMjI5NTA2MDcyMjQyNDdaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAxMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEqW6TqxMmjL3h\n9AVBgfVaFRZlXUcyWa+QYhzxr8sksgJqfDbmGtdaHIdiL1qCPuC4v4G3qrAbXZRm\nTYNo5Lz0X2ic5pES6DbacdjOgHH7TAY4BVKkuVrydln2jjhh7SmBo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUcBlY5a1rV0H1iQuJMwWxrTEWQ6MwCgYIKoZIzj0EAwMDZwAwZAIw\nR+mY9B2U26yD44s03hjz4TlpkyXbVfmgL3Elqo3lrWDJtvT4zpjGjxg3Q1P3SpZQ\nAjAy9DRVrZPzq8iq5Ir7B8XgLQH5QL7SQ3tUL1HzXJYOukvn9Ofr+QADhpb0oJLB\nKug=\n-----END CERTIFICATE-----\n","0.0.5":"-----BEGIN CERTIFICATE-----\nMIICnjCCAiWgAwIBAgIUbxzfD3ihIK5snumqqKtqtcBPSSQwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDIxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjQ3WhgPMjI5NTA2MDcyMjQyNDdaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAyMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEWoAjWmW7vpUr\nU69wRbK9Firons4kRoin6N8lMjCD+xzsrsT6/wycpzC0F8fxfIvOYSMWRtinhOKl\nZAxp60OWYP87iH7RqWBAnHIJZj/znKTGd+8Sqp/RVQmButFHg/+Go1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUTMtwuDzI4Hun7SPp2Nb3scjUUXkwCgYIKoZIzj0EAwMDZwAwZAIw\nHKAgaX39Lgc+4/xHXzZR9mi2p3pf6CDO85Xm56UR/t48HnBkRorR3TFCBXACeIIs\nAjBtXglpDnRf6M+nVBlxLdwCQXiwr6vQJ9+dUo+suNkZ1JBmtHypyIqkG2yT4z9C\nLcs=\n-----END CERTIFICATE-----\n","0.0.6":"-----BEGIN CERTIFICATE-----\nMIICoDCCAiWgAwIBAgIUPwXdJvpCJYO9lm6uQN3S1aBi3PswCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDMxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjQ4WhgPMjI5NTA2MDcyMjQyNDhaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDAzMR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE8PwBQ0ywu+0t\neIYbaiKwzGEScQMOYFYAMw49++6bGRiH/XZjsypqlJWy3F/mB3+HNVZsqgB61Jpj\n2p98Afkl57MYWhWM29t/x5qAQ8LhKGu2k+BOnCcvHDU2pR+fmFSOo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUgI4r3/iwzFN2wh76y/4XDBk7wgkwCgYIKoZIzj0EAwMDaQAwZgIx\nANAjwHdTWYMCCjrtb2NWzDpsKjf3m6ZcaxbEcM1ta/Zji/4x0+VRZa917CkfaEsr\nLAIxAK/erPvIXRU9eNaK/TAQqppSRaF35G6iNnYjQZzfjTU2DczhT4oCjKzGoCHT\nkI1zOg==\n-----END CERTIFICATE-----\n","0.0.7":"-----BEGIN CERTIFICATE-----\nMIICnzCCAiWgAwIBAgIUXUGzJj13Ck2Cp0BKauLOdzgCPwIwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDQxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjQ4WhgPMjI5NTA2MDcyMjQyNDhaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDA0MR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE8Ee64Tbu53i/\nKsuLOJG3GQ4e9gQ+9BtEy7U8kfFzRHh6Ejn7LOW38ZdKX1HP4zXuUusjNvytqDvr\n7eclitqnegcEOkIeFK3wQwBoNILuq+r4LRVi19V+AIcl5w3qkJvIo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQU2tbfu7hd7USgbS2WsG/6BduKEAMwCgYIKoZIzj0EAwMDaAAwZQIw\nRw/BOLoScmU7P/1JnNPsGarmnvcuJrokAv1wk6j8s5LGuQHReX+d+O3RPLggwcAY\nAjEAjoZnt9simul4cVcVy4G/0f39atanUva17gyzlYXEYx7B6UloxLeEcZhlbBf8\nGjRf\n-----END CERTIFICATE-----\n","0.0.8":"","0.0.9":"","0.0.10":"-----BEGIN CERTIFICATE-----\nMIICnzCCAiWgAwIBAgIUNauEDBCmP9igXLWtRpzkQqIGo/wwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDcxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjQ5WhgPMjI5NTA2MDcyMjQyNDlaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDA3MR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEjbkoJBshQXUy\nqm5K8ldpTDR94Wk8iEM7QwHfceIxK5pPgaVGRkoJyVLSK5LMH4jyaIHUrtA0lIBQ\no0MsYkq7TOOm7+vo1Yrd8EMbu5StMb3gsXUrj7E/SBKIxULak6hCo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUyKHMzIBPRV/mrgG7tIjzOiw2xbUwCgYIKoZIzj0EAwMDaAAwZQIx\nANsigVtLgTdKWBPVJPstWA0H8yihf0/dmM3GO4qp5keGTWz/O3tnom4iDB6eSrcA\njwIwU82Dh+Wxl3kAD3YJH5VhlfHTm1rPlJETBHZgvPBOYqippao6+WZFEpn2/IDC\nNTjn\n-----END CERTIFICATE-----\n","0.0.11":"-----BEGIN CERTIFICATE-----\nMIICnjCCAiWgAwIBAgIUWtnJm2kswnXYu7/S5BnnTQiDRcUwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDgxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjUwWhgPMjI5NTA2MDcyMjQyNTBaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDA4MR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEjY9Rl+s00xFV\ntdTpAixLR4kJIGLfSLOdm+ofU/KuKMRSz5x1ORhIicppKZK24U5WLGXQU1fKLvxX\nOmqwqL+6oAONmiHszqVdhWne4QPUba0yw7rf1/OI+IFF1HRK3shQo1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUb/htoTodbq5hjP5RNlQ0rkKwWB0wCgYIKoZIzj0EAwMDZwAwZAIw\nbO+9yArr21XKXjYHPadEAYINDxgXEC3W8e3X6MJsHCIZITddWWOyXRNFhz504vN0\nAjB8aBuhrKcg1b4CrQDZQcosyVPUGIZKkXdQFfbVdivKrGZvqLS+GdPLd3v2MmHY\norA=\n-----END CERTIFICATE-----\n","0.0.12":"-----BEGIN CERTIFICATE-----\nMIICoDCCAiWgAwIBAgIUHBsegV0bKtwpHRoOnnhbK7CTHxMwCgYIKoZIzj0EAwMw\ngYQxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExEDAOBgNVBAMMBzAw\nMDAwMDkxHzAdBgkqhkiG9w0BCQEWEGFkbWluQGhlZGVyYS5jb20wIBcNMjEwODIz\nMjI0MjUwWhgPMjI5NTA2MDcyMjQyNTBaMIGEMQswCQYDVQQGEwJVUzELMAkGA1UE\nCAwCVFgxEzARBgNVBAcMClJpY2hhcmRzb24xDzANBgNVBAoMBkhlZGVyYTEPMA0G\nA1UECwwGSGVkZXJhMRAwDgYDVQQDDAcwMDAwMDA5MR8wHQYJKoZIhvcNAQkBFhBh\nZG1pbkBoZWRlcmEuY29tMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEK+ZAs/00RXaj\nbuQJJy4zwr/YTj9h5V+vbY7sq9Z1RByEwTRRQOI3OuzzMq1EWKkVJKF/QF5b4yda\nx6W9O/NT4EjBXH5XR5X1V6h7aT01YBqsxgMxuUP7kw9K+fW4k6Zao1QwUjAPBgNV\nHREECDAGhwR/AAABMAsGA1UdDwQEAwIEsDATBgNVHSUEDDAKBggrBgEFBQcDATAd\nBgNVHQ4EFgQUKbecoYirLjf2O2oPkoggEE2P7FcwCgYIKoZIzj0EAwMDaQAwZgIx\nAP67wsVOkeFo/9QRo+PnZhzEvjOZ/+IUoUhimdljcVwn79tzNP+obf7VW3Oq1wH7\n4wIxAL65+WmMTMoI2cN7TCiL7G/W2ChDsASeHfaP/4e4ZViNONWotlY9i9aS3Kwt\nLTea1Q==\n-----END CERTIFICATE-----\n","0.0.13":"-----BEGIN CERTIFICATE-----\nMIICoDCCAiegAwIBAgIUBNxMZRKru9jzFA8zsOAI4xkMFCMwCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDEwMR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1MFoYDzIyOTUwNjA3MjI0MjUwWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTAxHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAShUi9sglwb\n0U8QUrGOXJuHRXA9HP8RypkgNBwNRs1YcmPLcuwK70unWlkB81M44IQ7z/dG/0cW\nhfFdRI5x4jAeiUFivmWmMLT6lJMPxJ0BkWTGVFVwI3SKcgSvHP9pNS2jVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBSqIMCDzCKKwJJLCXhu9YJYPw6lsDAKBggqhkjOPQQDAwNnADBk\nAjBl0bJG2A3443ybvrkKjWu8do6nDSR08/M49+19QfA1aDw0nb2sdCOE+xNitpQ9\n7ngCMGuQHmnKA2EyOIVpNl2EtRoG+vdmLJQaoukhmCWjkGrQHkai473tGa9cRZ/8\n+RZFzw==\n-----END CERTIFICATE-----\n","0.0.14":"-----BEGIN CERTIFICATE-----\nMIICoTCCAiegAwIBAgIUJcQrEmPlIh0KWwiC2X6lZ/OdNs8wCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDExMR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1MVoYDzIyOTUwNjA3MjI0MjUxWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTExHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASxRizKJSbB\nHmG2amvTHLCyExJngCh42agaFkv5Ab9mZYbqZPe0nUn/8RlVAvEiRNggCMYXC6MU\ne4J6D1aeLhYaa0UY8Fmxd20NUjAOWhJgUXds4ILMMVG+pevofeC8AsujVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBS2Ic+LU/6Wssns4Yyf3N6E666xDzAKBggqhkjOPQQDAwNoADBl\nAjAH0JMX48GD6vThA6FUsVnJmBID376PRZgxhuZvn9C0HawvNjZVQTkpzpYCwmia\ndO4CMQCotakNxyiOxu/BbnPx6ld5+dqVCugsfqClhUhy8ROpNHfKxp3rW7HopowT\nWiMlIyI=\n-----END CERTIFICATE-----\n","0.0.15":"-----BEGIN CERTIFICATE-----\nMIICoDCCAiegAwIBAgIUSFFNFv1iquxd5txlWA3PlkNju2EwCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDEyMR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1MVoYDzIyOTUwNjA3MjI0MjUxWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTIxHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQus3nAPZkb\nja4Efo7iD4s8NLsFwEwQXQBgBGIJwtA2JRgLyXeWpuu125ib6qJzT8CHvQZhel3b\ncwYWi4f2JpabMDepHELLxwZ9fILnAQ8GiHlzhrVq2NI15DI84dXVe4OjVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBSEO/JFC5/fDcT2gtipDMYMMTd96DAKBggqhkjOPQQDAwNnADBk\nAjBalAU47XQL4ziHD8lj21pcp3+R5FKzn96HclMT/vraknCT1Sl+vCf6EYsqmi6Z\n+RwCMDpxL6P6OMqyE+HzAeYQ4Fa7MYEQfZGMjka4zxetBLvIpwUCT4EAO8gv9GoU\nwCBUzQ==\n-----END CERTIFICATE-----\n","0.0.16":"-----BEGIN CERTIFICATE-----\nMIICoDCCAiegAwIBAgIUdnkil4P+VthVMnqygVwGKLt7VfAwCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDEzMR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1MVoYDzIyOTUwNjA3MjI0MjUxWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTMxHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAARUdz9ig/iA\nhEAth2YinHKY6WM63BAxUVItzgk65l1T4wTzwoK4XEwclY5vIeFmZy2e0s95lWgq\nSI68VS9gmJ3xp8Q9wOel/bvuF2tvNZmF393TeoNQQVHrQM1yJAx+nPyjVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBTBFdNwHKSRDo6CxfA1aglY0N8joTAKBggqhkjOPQQDAwNnADBk\nAjAqPIel58Rcl2kDxZxJPD9mK9xW4TU+d2NuP3n140TQ6nPlw1OwCPI7a4i3wfEe\n08ICMBbrpNRdFZcvy76KoLPfTPvqbtWWaR/0tLZg4Rjj3x7SYgUg3vrVDmodHGkb\n4T2Raw==\n-----END CERTIFICATE-----\n","0.0.17":"-----BEGIN CERTIFICATE-----\nMIICoDCCAiegAwIBAgIUDg+G4Ep+KEmIo+nCOY8DjFX60swwCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDE0MR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1MloYDzIyOTUwNjA3MjI0MjUyWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTQxHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASCQRL5xUUh\n1bsTXRPAf/qVFWEOxsJTiMlF3+UJ4MajWE5zmc2QNIzqj7NE24z3fNxgjViNK/8+\noBNQeqXfyJ/4etNMzTyG4JTsvWRAQ3aR1J4WDbfwpcgw6AIOKq9OLP6jVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBQB9V2fygf48zyyVL3bnAxCLDUV9zAKBggqhkjOPQQDAwNnADBk\nAjBonlThjjvi3fg7ODQcatPHBkp8Yon/p1ukm3YzYA3kitqroXU7BkmwRae2fbqD\nTTICMHI+fAy+xWGwXAFNcvNTop11IIoszcgJJY+1Mc2Q/USk3pP6iezta+rvnaWu\n7JySHg==\n-----END CERTIFICATE-----\n","0.0.18":"-----BEGIN CERTIFICATE-----\nMIICojCCAiegAwIBAgIUBvI2Vq6O8yXNzbQlj6uQOdpd1lIwCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDE1MR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1MloYDzIyOTUwNjA3MjI0MjUyWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTUxHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAR+jFDSzCdn\nmMQpgz/vrmD/xioMioumUmyLAkB+voTNsMAOtiaDVbvJty3b4SJETv5tuZyaF5Gb\nQAYuKsP7X8siCCVLZC9i9nCg46NHtuQkEmw1pzUUDmYFDfSV2tWedNqjVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBSqvCmoaVEp2d9WPctby+ooPMGmvTAKBggqhkjOPQQDAwNpADBm\nAjEA9fQ2OFZa7fAQGGYydfVaUF0ObxKj3T+hyl0jiCKLe+hyxJSrXCFS2BM71UiG\nZMVxAjEAmCzESBzTVvl4Uv3TyActGTijTCqTNpN3gJmQbZYjKVtqf8Wxj9WeH0pM\nE8BlA/qE\n-----END CERTIFICATE-----\n","0.0.19":"-----BEGIN CERTIFICATE-----\nMIICojCCAiegAwIBAgIUZBwp7UPLJkDgngbUIx5xjbAn+7YwCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDE2MR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1M1oYDzIyOTUwNjA3MjI0MjUzWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTYxHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASCVYu2uF3T\nkCkyRP0FfXVyyTA1z8DFqCKGrcODgGJuVAk59H6u8FIRsNipkb3BXFI0xGccok5X\nT+t5bMaGDHYJ4fjU78UtPNmankQ5HoiMRJpy7Vn8mzizUzUqGpnhu6GjVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBQzE6RGn4YlIbdrl0niKWTtJzfXoTAKBggqhkjOPQQDAwNpADBm\nAjEAobnXnwlNGNWoHscbl/ytUBSyjC7V11sLYJqtORSRX3k2+bFGsg4ltmOVjTdd\nlXatAjEA/Ja3jufmdruqfLa6qigXuYI00YaI96sOwNhdHlnksYfqF41nDe4BsSW6\neQ6N5M9d\n-----END CERTIFICATE-----\n","0.0.20":"-----BEGIN CERTIFICATE-----\nMIICoTCCAiegAwIBAgIUE1ZRB5n+Yby+Mwgb2xAcVfTZ53kwCgYIKoZIzj0EAwMw\ngYUxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDETMBEGA1UEBwwKUmljaGFyZHNv\nbjEPMA0GA1UECgwGSGVkZXJhMQ8wDQYDVQQLDAZIZWRlcmExETAPBgNVBAMMCDAw\nMDAwMDE3MR8wHQYJKoZIhvcNAQkBFhBhZG1pbkBoZWRlcmEuY29tMCAXDTIxMDgy\nMzIyNDI1M1oYDzIyOTUwNjA3MjI0MjUzWjCBhTELMAkGA1UEBhMCVVMxCzAJBgNV\nBAgMAlRYMRMwEQYDVQQHDApSaWNoYXJkc29uMQ8wDQYDVQQKDAZIZWRlcmExDzAN\nBgNVBAsMBkhlZGVyYTERMA8GA1UEAwwIMDAwMDAwMTcxHzAdBgkqhkiG9w0BCQEW\nEGFkbWluQGhlZGVyYS5jb20wdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAR0OfTmHjxT\nkBiU3GMa/bTvlTswCDAuFQGIIpMWHaf6V4ighzmn20jCg0AVFStb2q7YLRr4HUx8\nToMzsd7/yjl74BwJgfZnL75T/JInwyMgOBiCTXEf6qVDvhNzL4QJuVujVDBSMA8G\nA1UdEQQIMAaHBH8AAAEwCwYDVR0PBAQDAgSwMBMGA1UdJQQMMAoGCCsGAQUFBwMB\nMB0GA1UdDgQWBBQFKRUUmdFcDFQzBN9XqMvLgPd7NzAKBggqhkjOPQQDAwNoADBl\nAjEA5MUUXSehY3KVIv/2LMgrqo1kPiV39fwYuLSnsMJ67wK8yN1NAkkycg6q2K6g\nrBIvAjB3J3a40TINOZTYG+eQs+MSWyfANJLRuJTEOorXzMWM6+05+JYhPnLA8hke\nCRfzmSw=\n-----END CERTIFICATE-----\n"};class Node extends ManagedNode{constructor(t={}){if(super(t),null!=t.newNode)this._accountId=t.newNode.accountId,this._nodeAddress=null;else{if(null==t.cloneNode)throw new Error(`failed to create node: ${JSON.stringify(t)}`);this._accountId=t.cloneNode.node._accountId,this._nodeAddress=t.cloneNode.node._nodeAddress}}getKey(){return this._accountId.toString()}toInsecure(){return new Node({cloneNode:{node:this,address:this._address.toInsecure()}})}toSecure(){return new Node({cloneNode:{node:this,address:this._address.toSecure()}})}setCert(t){switch(t.toString()){case"previewnet":this._cert=PREVIEWNET_CERTS[this._accountId.toString()];break;case"testnet":this._cert=TESTNET_CERTS[this._accountId.toString()];break;case"mainnet":this._cert=MAINNET_CERTS[this._accountId.toString()]}return this}get accountId(){return this._accountId}get nodeAddress(){return this._nodeAddress}setNodeAddress(t){return this._nodeAddress=t,this}}class IPv4AddressPart{constructor(t={}){this._left=null,null!=t.left&&this.setLeft(t.left),this._right=null,null!=t.right&&this.setRight(t.right)}get left(){return this._left}setLeft(t){return this._left=t,this}get right(){return this._right}setRight(t){return this._right=t,this}toString(){return null!=this._left&&null!=this._right?`${this._left.toString()}.${this._right.toString()}`:""}}class IPv4Address{constructor(t={}){this._network=null,null!=t.network&&this.setNetwork(t.network),this._host=null,null!=t.host&&this.setHost(t.host)}get newtork(){return this._network}setNetwork(t){return this._network=t,this}get host(){return this._host}setHost(t){return this._host=t,this}static _fromProtobuf(t){return new IPv4Address({network:(new IPv4AddressPart).setLeft(t[0]).setRight(t[1]),host:(new IPv4AddressPart).setLeft(t[2]).setRight(t[3])})}_toProtobuf(){return Uint8Array.of(null!=this._network&&null!=this._network._left?this._network._left:0,null!=this._network&&null!=this._network.right?this._network.right:0,null!=this._host&&null!=this._host.left?this._host.left:0,null!=this._host&&null!=this._host.right?this._host.right:0)}toString(){return null!=this._network&&null!=this._host?`${this._network.toString()}.${this._host.toString()}`:""}}class EndPoint{constructor(t={}){this._address=null,null!=t.address&&this.setAddress(t.address),this._port=null,null!=t.port&&this.setPort(t.port)}get address(){return this.address}setAddress(t){return this._address=t,this}get port(){return this._port}setPort(t){return this._port=t,this}static _fromProtobuf(t){return new EndPoint({address:null!=t.ipAddressV4?IPv4Address._fromProtobuf(t.ipAddressV4):void 0,port:null!=t.port?t.port:void 0})}_toProtobuf(){return{ipAddressV4:null!=this._address?this._address._toProtobuf():null,port:this._port}}toString(){return JSON.stringify(this.toJSON())}toJSON(){return{address:null!=this._address?this._address.toString():null,port:null!=this._port?this._port.toString():null}}}class NodeAddress{constructor(t={}){this._publicKey=null,null!=t.publicKey&&this.setPublicKey(t.publicKey),this._nodeId=null,null!=t.nodeId&&this.setNodeId(t.nodeId),this._accountId=null,null!=t.accountId&&this.setAccountId(t.accountId),this._certHash=null,null!=t.certHash&&this.setCertHash(t.certHash),this._addresses=[],null!=t.addresses&&this.setAddresses(t.addresses),this._description=null,null!=t.description&&this.setDescription(t.description),this._stake=null,null!=t.stake&&this.setStake(t.stake)}get publicKey(){return this._publicKey}setPublicKey(t){return this._publicKey=t,this}get nodeId(){return this._nodeId}setNodeId(t){return this._nodeId=t,this}get accountId(){return this._accountId}setAccountId(t){return this._accountId="string"==typeof t?AccountId.fromString(t):t.clone(),this}get certHash(){return this._certHash}setCertHash(t){return this._certHash=t,this}get addresses(){return this._addresses}setAddresses(t){return this._addresses=t,this}get description(){return this._description}setDescription(t){return this._description=t,this}get stake(){return this._stake}setStake(t){return this._stake=t,this}static _fromProtobuf(t){return new NodeAddress({publicKey:null!=t.RSA_PubKey?t.RSA_PubKey:void 0,nodeId:null!=t.nodeId?t.nodeId:void 0,accountId:null!=t.nodeAccountId?AccountId._fromProtobuf(t.nodeAccountId):void 0,certHash:null!=t.nodeCertHash?t.nodeCertHash:void 0,addresses:null!=t.serviceEndpoint?t.serviceEndpoint.map((t=>EndPoint._fromProtobuf(t))):void 0,description:null!=t.description?t.description:void 0,stake:null!=t.stake?t.stake:void 0})}_toProtobuf(){return{RSA_PubKey:this._publicKey,nodeId:this._nodeId,nodeAccountId:null!=this._accountId?this._accountId._toProtobuf():null,nodeCertHash:this._certHash,serviceEndpoint:this._addresses.map((t=>t._toProtobuf())),description:this._description,stake:this._stake}}toString(){return JSON.stringify(this.toJSON())}toJSON(){return{publicKey:this._publicKey,nodeId:null!=this._nodeId?this._nodeId.toString():null,accountId:null!=this._accountId?this._accountId.toString():null,certHash:null!=this._certHash?decode(this._certHash):null,addresses:this._addresses.map((t=>t.toJSON())),description:this._description,stake:null!=this._stake?this._stake.toString():null}}}class NodeAddressBook{constructor(t={}){this._nodeAddresses=[],null!=t.nodeAddresses&&this.setNodeAddresses(t.nodeAddresses)}get nodeAddresses(){return this._nodeAddresses}setNodeAddresses(t){return this._nodeAddresses=t,this}static _fromProtobuf(t){return new NodeAddressBook({nodeAddresses:null!=t.nodeAddress?t.nodeAddress.map((t=>NodeAddress._fromProtobuf(t))):void 0})}_toProtobuf(){return{nodeAddress:this._nodeAddresses.map((t=>t._toProtobuf()))}}toString(){return JSON.stringify(this.toJSON())}toJSON(){return{nodeAddresses:this._nodeAddresses.map((t=>t.toJSON()))}}}const PREVIEWNET_ADDRESS_BOOK=NodeAddressBook._fromProtobuf(lib.NodeAddressBook.decode(decode$1(""))),TESTNET_ADDRESS_BOOK=NodeAddressBook._fromProtobuf(lib.NodeAddressBook.decode(decode$1("0a7f0a0c33342e39342e3130362e363110a388031a05302e302e33320218033a606131373165336261383334373637343761656232653261633464306531313563616161623931383230336230646665316364656162343433343338666332383961626338626138613661666638336462356631623333343034366461383863380a80010a0d35302e31382e3133322e32313110a388031a05302e302e33320218033a606131373165336261383334373637343761656232653261633464306531313563616161623931383230336230646665316364656162343433343338666332383961626338626138613661666638336462356631623333343034366461383863380a81010a0e3133382e39312e3134322e32313910a388031a05302e302e33320218033a606131373165336261383334373637343761656232653261633464306531313563616161623931383230336230646665316364656162343433343338666332383961626338626138613661666638336462356631623333343034366461383863380a82010a0d33352e3233372e3131392e353510a388031a05302e302e342801320218043a603734303964656332653439346236323765653439633639623239346265316365616562636133666463616633363738396538386663376435623065656635353631663532623832643335313931613339633266626564363032373236373136360a7f0a0a332e3231322e362e313310a388031a05302e302e342801320218043a603734303964656332653439346236323765653439633639623239346265316365616562636133666463616633363738396538386663376435623065656635353631663532623832643335313931613339633266626564363032373236373136360a82010a0d35322e3136382e37362e32343110a388031a05302e302e342801320218043a603734303964656332653439346236323765653439633639623239346265316365616562636133666463616633363738396538386663376435623065656635353631663532623832643335313931613339633266626564363032373236373136360a82010a0d33352e3234352e32372e31393310a388031a05302e302e352802320218053a603962313431363538346134613338306262383661366337643732303764386165646462633362363365613330353939383235356263653833353162613462356463613532633932383261353461366265643630646536336365303361616132340a80010a0b35322e32302e31382e383610a388031a05302e302e352802320218053a603962313431363538346134613338306262383661366337643732303764386165646462633362363365613330353939383235356263653833353162613462356463613532633932383261353461366265643630646536336365303361616132340a81010a0c34302e37392e38332e31323410a388031a05302e302e352802320218053a603962313431363538346134613338306262383661366337643732303764386165646462633362363365613330353939383235356263653833353162613462356463613532633932383261353461366265643630646536336365303361616132340a82010a0d33342e38332e3131322e31313610a388031a05302e302e362803320218063a603634383636383562346536653063623936333437326330316665393939333166643965346334343838376261383334323361653766656564323264363438343834636638613362633563636361366133373338376266393664333836373238300a81010a0c35342e37302e3139322e333310a388031a05302e302e362803320218063a603634383636383562346536653063623936333437326330316665393939333166643965346334343838376261383334323361653766656564323264363438343834636638613362633563636361366133373338376266393664333836373238300a81010a0c35322e3138332e34352e363510a388031a05302e302e362803320218063a603634383636383562346536653063623936333437326330316665393939333166643965346334343838376261383334323361653766656564323264363438343834636638613362633563636361366133373338376266393664333836373238300a80010a0b33342e39342e3136302e3410a388031a05302e302e372804320218073a603339653930393931356138353238303330313534613663373730393530633762343737376261343031333537633065363138373635343231356363323061616363646438653566663239653963346439356366343130316661363862653435630a83010a0e35342e3137362e3139392e31303910a388031a05302e302e372804320218073a603339653930393931356138353238303330313534613663373730393530633762343737376261343031333537633065363138373635343231356363323061616363646438653566663239653963346439356366343130316661363862653435630a82010a0d31332e36342e3138312e31333610a388031a05302e302e372804320218073a603339653930393931356138353238303330313534613663373730393530633762343737376261343031333537633065363138373635343231356363323061616363646438653566663239653963346439356366343130316661363862653435630a83010a0e33342e3130362e3130322e32313810a388031a05302e302e382805320218083a606134343837346137616131623337373431613037316164616165373866623135326236393664316335386438646566626531643832333034353332613063303139656539366363313964373536383635373864333961316536633331613165650a82010a0d33352e3135352e34392e31343710a388031a05302e302e382805320218083a606134343837346137616131623337373431613037316164616165373866623135326236393664316335386438646566626531643832333034353332613063303139656539366363313964373536383635373864333961316536633331613165650a81010a0c31332e37382e3233382e333210a388031a05302e302e382805320218083a606134343837346137616131623337373431613037316164616165373866623135326236393664316335386438646566626531643832333034353332613063303139656539366363313964373536383635373864333961316536633331613165650a83010a0e33342e3133332e3139372e32333010a388031a05302e302e392806320218093a603639383332613733613336303265386431666265356164353864316332363337613162363732643731656538376166313064623634386562393161666232323832353362316634376535376433643461343466663534376233333934616132320a82010a0d35322e31342e3235322e32303710a388031a05302e302e392806320218093a603639383332613733613336303265386431666265356164353864316332363337613162363732643731656538376166313064623634386562393161666232323832353362316634376535376433643461343466663534376233333934616132320a82010a0d35322e3136352e31372e32333110a388031a05302e302e392806320218093a60363938333261373361333630326538643166626535616435386431633236333761316236373264373165653837616631306462363438656239316166623232383235336231663437653537643364346134346666353437623333393461613232"))),MAINNET_ADDRESS_BOOK=NodeAddressBook._fromProtobuf(lib.NodeAddressBook.decode(decode$1("")));class MangedNetwork{constructor(t){this._network=new Map,this._nodes=[],this._createNetworkChannel=t,this._ledgerId=null,this._minBackoff=250,this._maxNodeAttempts=-1,this._transportSecurity=!1}isTransportSecurity(){return this._transportSecurity}setTransportSecurity(t){if(this._transportSecurity!=t){this._network.clear();for(let e=0;e<this._nodes.length;e++){let Q=this._nodes[e];Q.close(),Q=t?Q.toSecure().setCert(null!=this._ledgerId?this._ledgerId._toStringForChecksum():""):Q.toInsecure(),this._nodes[e]=Q;const B=null!=this._network.get(Q.getKey())?this._network.get(Q.getKey()):[];B.push(Q),this._network.set(Q.getKey(),B)}}return this._transportSecurity=t,this}setNetworkName(t){return console.warn("Deprecated: Use `setLedgerId` instead"),this.setLedgerId(t)}get networkName(){return console.warn("Deprecated: Use `ledgerId` instead"),null!=this.ledgerId?this.ledgerId.toString():null}setLedgerId(t){return this._ledgerId="string"==typeof t?LedgerId.fromString(t):t,this}get ledgerId(){return null!=this._ledgerId?this._ledgerId:null}_createNodeFromNetworkEntry(t){throw new Error("not implemented")}_getNodesToRemove(t){throw new Error("not implemented")}_removeDeadNodes(){if(this._maxNodeAttempts>0)for(let t=this._nodes.length-1;t>=0;t--){this._nodes[t]._attempts<this._maxNodeAttempts||this._closeNode(t)}}_getNumberOfMostHealthyNodes(t){this._removeDeadNodes(),this._nodes.sort(((t,e)=>t.compare(e)));for(const[,t]of this._network)t.sort(((t,e)=>t.compare(e)));const e=[],Q=new Set;for(const B of this._nodes){if(Q.size>=t)break;Q.has(B.getKey())||e.push(B)}return e}_closeNode(t){const e=this._nodes[t];e.close(),this._removeNodeFromNetwork(e),this._nodes.splice(t,1)}_removeNodeFromNetwork(t){const e=this._network.get(t.getKey());for(let Q=0;Q<e.length;Q++)if(e[Q]===t){e.splice(Q,1);break}0===e.length&&this._network.delete(t.getKey())}_setNetwork(t){for(const e of this._getNodesToRemove(t))this._closeNode(e);for(const[e,Q]of t){const t=this._createNodeFromNetworkEntry([e,Q]);this._nodes.push(t);const B=this._network.has(t.getKey())?this._network.get(t.getKey()):[];B.push(t),this._network.set(t.getKey(),B)}shuffle(this._nodes);for(const[,t]of this._network)shuffle(t);return this._ledgerId=null,this}get maxNodeAttempts(){return this._maxNodeAttempts}setMaxNodeAttempts(t){return this._maxNodeAttempts=t,this}get minBackoff(){return this._minBackoff}setMinBackoff(t){this._minBackoff=t;for(const e of this._nodes)e.setMinBackoff(t);return this}getNode(t){return this._network.get(t.toString())[0]}close(){for(const t of this._nodes)t.close();this._network.clear(),this._nodes=[]}}function shuffle(t){for(var e,Q,B=t.length;0!==B;)Q=Math.floor(Math.random()*B),e=t[B-=1],t[B]=t[Q],t[Q]=e}class Network$1 extends MangedNetwork{constructor(t){super(t),this._maxNodesPerTransaction=-1,this._addressBook=null}setNetwork(t){this._setNetwork(new Map(Object.entries(t).map((([t,e])=>[t,"string"==typeof e?AccountId.fromString(e):e]))))}get network(){var t={};for(const e of this._nodes)t[e.address.toString()]=e.accountId;return t}setNetworkName(t){switch(super.setLedgerId(t),t){case"mainnet":this._addressBook=MAINNET_ADDRESS_BOOK;break;case"testnet":this._addressBook=TESTNET_ADDRESS_BOOK;break;case"previewnet":this._addressBook=PREVIEWNET_ADDRESS_BOOK}if(null!=this._addressBook)for(const t of this._nodes)for(const e of this._addressBook.nodeAddresses)null!=e.accountId&&e.accountId.toString()===t.accountId.toString()&&t.setNodeAddress(e);return this}get networkName(){return null!=this._ledgerId?this._ledgerId.toString():null}_createNodeFromNetworkEntry(t){const e="string"==typeof t[1]?AccountId.fromString(t[1]):t[1];return new Node({newNode:{address:t[0],accountId:e,channelInitFunction:this._createNetworkChannel}}).setMinBackoff(this._minBackoff)}_getNodesToRemove(t){const e=[];for(let Q=this._nodes.length-1;Q>=0;Q--){const B=this._nodes[Q],s=t.get(B.address.toString());null!=s&&s.toString()===B.accountId.toString()||e.push(Q)}return e}_checkNetworkContainsEntry(t){for(const e of this._nodes)if(e.address.toString()===t[0])return!0;return!1}get maxNodesPerTransaction(){return this._maxNodesPerTransaction}setMaxNodesPerTransaction(t){return this._maxNodesPerTransaction=t,this}get maxNodeAttempts(){return this._maxNodeAttempts}setMaxNodeAttempts(t){return this._maxNodeAttempts=t,this}get minBackoff(){return this._minBackoff}setMinBackoff(t){this._minBackoff=t;for(const e of this._nodes)e.setMinBackoff(t);return this}getNumberOfNodesForTransaction(){return this._maxNodesPerTransaction>0?this._maxNodesPerTransaction:(this._nodes.length+3-1)/3}getNodeAccountIdsForExecute(){return this._getNumberOfMostHealthyNodes(this.getNumberOfNodesForTransaction()).map((t=>t.accountId))}}class MirrorNode extends ManagedNode{constructor(t={}){super(t)}getKey(){return this._address.toString()}toInsecure(){return new MirrorNode({cloneNode:{node:this,address:this._address.toInsecure()}})}toSecure(){return new MirrorNode({cloneNode:{node:this,address:this._address.toSecure()}})}}class MirrorNetwork extends MangedNetwork{constructor(t){super(t)}setNetwork(t){this._setNetwork(new Map(t.map((t=>[t,t]))))}get network(){var t=[];for(const e of this._nodes)t.push(e.address.toString());return t}_createNodeFromNetworkEntry(t){return new MirrorNode({newNode:{address:t[1],channelInitFunction:this._createNetworkChannel}}).setMinBackoff(this._minBackoff)}_getNodesToRemove(t){const e=[],Q=Object.values(t);for(let t=this._nodes.length-1;t>=0;t--){const B=this._nodes[t];Q.includes(B.address.toString())||e.push(t)}return e}getNextMirrorNode(){if(null==this._createNetworkChannel)throw new Error("mirror network not supported on browser");return this._getNumberOfMostHealthyNodes(1)[0]}}class Client{constructor(t){this._mirrorNetwork=new MirrorNetwork(this._createMirrorNetworkChannel()),this._network=new Network$1(this._createNetworkChannel()),this._operator=null,this._defaultMaxTransactionFee=null,this._maxQueryPayment=new Hbar(1),null!=t&&null!=t.operator&&this.setOperator(t.operator.accountId,t.operator.privateKey),this._signOnDemand=!1,this._autoValidateChecksums=!1,this._maxAttempts=null,this._minBackoff=250,this._maxBackoff=8e3,this._defaultRegenerateTransactionId=!0}setNetworkName(t){return console.warn("Deprecated: Use `setLedgerId` instead"),this.setLedgerId(t)}get networkName(){return console.warn("Deprecated: Use `ledgerId` instead"),null!=this.ledgerId?this.ledgerId.toString():null}setLedgerId(t){return this._network.setLedgerId("string"==typeof t?LedgerId.fromString(t):t),this}get ledgerId(){return null!=this._network._ledgerId?this._network.ledgerId:null}setNetwork(t){throw new Error("not implemented")}get network(){return this._network.network}setMirrorNetwork(t){throw new Error("not implemented")}get mirrorNetwork(){return this._mirrorNetwork.network}get signOnDemand(){return this._signOnDemand}setSignOnDemand(t){this._signOnDemand=t}isTransportSecurity(){return this._network.isTransportSecurity()}setTransportSecurity(t){return this._network.setTransportSecurity(t),this._mirrorNetwork.setTransportSecurity(t),this}setOperator(t,e){const Q="string"==typeof e?PrivateKey.fromString(e):e;return this.setOperatorWith(t,Q.publicKey,(t=>Promise.resolve(Q.sign(t))))}setOperatorWith(t,e,Q){const B=t instanceof AccountId?t:AccountId.fromString(t);return null!=this._network._ledgerId&&B.validateChecksum(this),this._operator={transactionSigner:Q,accountId:B,publicKey:e instanceof PublicKey?e:PublicKey.fromString(e)},this}setAutoValidateChecksums(t){return this._autoValidateChecksums=t,this}isAutoValidateChecksumsEnabled(){return this._autoValidateChecksums}get operatorAccountId(){return null!=this._operator?this._operator.accountId:null}get operatorPublicKey(){return null!=this._operator?this._operator.publicKey:null}get maxTransactionFee(){return this._defaultMaxTransactionFee}setMaxTransactionFee(t){return this._defaultMaxTransactionFee=t,this}get defaultMaxTransactionFee(){return this._defaultMaxTransactionFee}setDefaultMaxTransactionFee(t){return this._defaultMaxTransactionFee=t,this}get defaultRegenerateTransactionId(){return this._defaultRegenerateTransactionId}setDefaultRegenerateTransactionId(t){return this._defaultRegenerateTransactionId=t,this}get maxQueryPayment(){return this._maxQueryPayment}setMaxQueryPayment(t){return this._maxQueryPayment=t,this}get maxAttempts(){return null!=this._maxAttempts?this._maxAttempts:10}setMaxAttempts(t){return this._maxAttempts=t,this}get maxNodeAttempts(){return this._network.maxNodeAttempts}setMaxNodeAttempts(t){return this._network.setMaxNodeAttempts(t),this}get nodeWaitTime(){return this._network.minBackoff}setNodeWaitTime(t){return this._network.setMinBackoff(t),this}get maxNodesPerTransaction(){return this._network.maxNodesPerTransaction}setMaxNodesPerTransaction(t){return this._network.setMaxNodesPerTransaction(t),this}setMinBackoff(t){if(null==t)throw new Error("minBackoff cannot be null.");if(t>this._maxBackoff)throw new Error("minBackoff cannot be larger than maxBackoff.");return this._minBackoff=t,this}get minBackoff(){return this._minBackoff}setMaxBackoff(t){if(null==t)throw new Error("maxBackoff cannot be null.");if(t<this._minBackoff)throw new Error("maxBackoff cannot be smaller than minBackoff.");return this._maxBackoff=t,this}get maxBackoff(){return this._maxBackoff}async ping(t){try{await new AccountBalanceQuery({accountId:t}).setNodeAccountIds([t instanceof AccountId?t:AccountId.fromString(t)]).execute(this)}catch(t){}}async pingAll(){for(const t of Object.values(this._network.network))await this.ping(t)}close(){this._network.close(),this._mirrorNetwork.close()}_createNetworkChannel(){throw new Error("not implemented")}_createMirrorNetworkChannel(){throw new Error("not implemented")}}class Channel{constructor(){this._crypto=null,this._smartContract=null,this._file=null,this._consensus=null,this._freeze=null,this._network=null,this._token=null,this._schedule=null}close(){throw new Error("not implemented")}get crypto(){return null!=this._crypto||(this._crypto=lib.CryptoService.create(this._createUnaryClient("CryptoService"))),this._crypto}get smartContract(){return null!=this._smartContract||(this._smartContract=lib.SmartContractService.create(this._createUnaryClient("SmartContractService"))),this._smartContract}get file(){return null!=this._file||(this._file=lib.FileService.create(this._createUnaryClient("FileService"))),this._file}get consensus(){return null!=this._consensus||(this._consensus=lib.ConsensusService.create(this._createUnaryClient("ConsensusService"))),this._consensus}get freeze(){return null!=this._freeze||(this._freeze=lib.FreezeService.create(this._createUnaryClient("FreezeService"))),this._freeze}get network(){return null!=this._network||(this._network=lib.NetworkService.create(this._createUnaryClient("NetworkService"))),this._network}get token(){return null!=this._token||(this._token=lib.TokenService.create(this._createUnaryClient("TokenService"))),this._token}get schedule(){return null!=this._schedule||(this._schedule=lib.ScheduleService.create(this._createUnaryClient("ScheduleService"))),this._schedule}_createUnaryClient(t){throw new Error("not implemented")}}function encodeRequest(t){const e=new ArrayBuffer(t.byteLength+5);return new DataView(e,1,4).setUint32(0,t.length),new Uint8Array(e,5).set(t),e}function decodeUnaryResponse(t,e=0,Q=t.byteLength){const B=new DataView(t,e,Q);let s=0,F=null,U=0;for(;s<B.byteLength;){const e=B.getUint8(s+0)>>7,Q=B.getUint32(s+1),n=s+5;if(n+Q>B.byteLength)throw new Error("(BUG) unexpected frame length past the boundary");const c=new Uint8Array(t,B.byteOffset+n,Q);if(0===e){if(null!=F)throw new Error("(BUG) unexpectedly received more than one data frame");F=c}else{if(1!==e)throw new Error(`(BUG) unexpected frame type: ${e}`);{const t=decode(c),[e,Q]=t.split(":");if("grpc-status"!==e)throw new Error(`(BUG) unhandled trailer, ${t}`);U=parseInt(Q)}}s+=Q+5}if(0!==U)throw new Error(`(BUG) unhandled grpc-status: ${U}`);if(null==F)throw new Error("(BUG) unexpectedly received no response");return F}class WebChannel extends Channel{constructor(t){super(),this._address=t}close(){}_createUnaryClient(t){return async(e,Q,B)=>{const s=await fetch(`${this._address}/proto.${t}/${e.name}`,{method:"POST",headers:{"content-type":"application/grpc-web+proto","x-user-agent":"hedera-sdk-js/v2","x-grpc-web":"1"},body:encodeRequest(Q)});B(null,decodeUnaryResponse(await s.arrayBuffer()))}}}const Network={fromName(t){switch(t){case"mainnet":return Network.MAINNET;case"testnet":return Network.TESTNET;case"previewnet":return Network.PREVIEWNET;default:throw new Error(`unknown network name: ${t}`)}},MAINNET:{"https://grpc-web.myhbarwallet.com:443":new AccountId(3)},TESTNET:{"https://grpc-web.testnet.myhbarwallet.com:443":new AccountId(3)},PREVIEWNET:{"https://grpc-web.previewnet.myhbarwallet.com:443":new AccountId(3)}};class WebClient extends Client{constructor(t){if(super(t),null!=t)if("string"==typeof t.network)switch(t.network){case"mainnet":this.setNetwork(Network.MAINNET),this.setLedgerId(LedgerId.MAINNET);break;case"testnet":this.setNetwork(Network.TESTNET),this.setLedgerId(LedgerId.TESTNET);break;case"previewnet":this.setNetwork(Network.PREVIEWNET),this.setLedgerId(LedgerId.PREVIEWNET);break;default:throw new Error(`unknown network: ${t.network}`)}else null!=t.network&&this.setNetwork(t.network)}static fromConfig(t){return new WebClient("string"==typeof t?JSON.parse(t):t)}static forNetwork(t){return new WebClient({network:t})}static forName(t){return new WebClient({network:t})}static forMainnet(){return new WebClient({network:"mainnet"})}static forTestnet(){return new WebClient({network:"testnet"})}static forPreviewnet(){return new WebClient({network:"previewnet"})}setNetwork(t){if("string"==typeof t)switch(t){case"previewnet":this._network.setNetwork(Network.PREVIEWNET);break;case"testnet":this._network.setNetwork(Network.TESTNET);break;case"mainnet":this._network.setNetwork(Network.MAINNET)}else this._network.setNetwork(t)}setMirrorNetwork(t){return"string"==typeof t?this._mirrorNetwork.setNetwork([]):this._mirrorNetwork.setNetwork(t),this}_createNetworkChannel(){return t=>new WebChannel(t)}_createMirrorNetworkChannel(){return()=>{throw new Error("mirror support is not supported in browsers")}}}function _arrayLikeToArray$1(t,e){(null==e||e>t.length)&&(e=t.length);for(var Q=0,B=new Array(e);Q<e;Q++)B[Q]=t[Q];return B}function _arrayWithoutHoles(t){if(Array.isArray(t))return _arrayLikeToArray$1(t)}function _iterableToArray(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}function _unsupportedIterableToArray$1(t,e){if(t){if("string"==typeof t)return _arrayLikeToArray$1(t,e);var Q=Object.prototype.toString.call(t).slice(8,-1);return"Object"===Q&&t.constructor&&(Q=t.constructor.name),"Map"===Q||"Set"===Q?Array.from(t):"Arguments"===Q||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(Q)?_arrayLikeToArray$1(t,e):void 0}}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_unsupportedIterableToArray$1(t)||_nonIterableSpread()}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function _setPrototypeOf(t,e){return _setPrototypeOf=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},_setPrototypeOf(t,e)}function _inherits(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&_setPrototypeOf(t,e)}function _typeof(t){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_typeof(t)}function _possibleConstructorReturn(t,e){if(e&&("object"===_typeof(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(t)}function _getPrototypeOf(t){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},_getPrototypeOf(t)}var long=Long,wasm=null;try{wasm=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(t){}function Long(t,e,Q){this.low=0|t,this.high=0|e,this.unsigned=!!Q}function isLong(t){return!0===(t&&t.__isLong__)}Long.prototype.__isLong__,Object.defineProperty(Long.prototype,"__isLong__",{value:!0}),Long.isLong=isLong;var INT_CACHE={},UINT_CACHE={};function fromInt(t,e){var Q,B,s;return e?(s=0<=(t>>>=0)&&t<256)&&(B=UINT_CACHE[t])?B:(Q=fromBits(t,(0|t)<0?-1:0,!0),s&&(UINT_CACHE[t]=Q),Q):(s=-128<=(t|=0)&&t<128)&&(B=INT_CACHE[t])?B:(Q=fromBits(t,t<0?-1:0,!1),s&&(INT_CACHE[t]=Q),Q)}function fromNumber(t,e){if(isNaN(t))return e?UZERO:ZERO;if(e){if(t<0)return UZERO;if(t>=TWO_PWR_64_DBL)return MAX_UNSIGNED_VALUE}else{if(t<=-TWO_PWR_63_DBL)return MIN_VALUE;if(t+1>=TWO_PWR_63_DBL)return MAX_VALUE}return t<0?fromNumber(-t,e).neg():fromBits(t%TWO_PWR_32_DBL|0,t/TWO_PWR_32_DBL|0,e)}function fromBits(t,e,Q){return new Long(t,e,Q)}Long.fromInt=fromInt,Long.fromNumber=fromNumber,Long.fromBits=fromBits;var pow_dbl=Math.pow;function fromString(t,e,Q){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return ZERO;if("number"==typeof e?(Q=e,e=!1):e=!!e,(Q=Q||10)<2||36<Q)throw RangeError("radix");var B;if((B=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===B)return fromString(t.substring(1),e,Q).neg();for(var s=fromNumber(pow_dbl(Q,8)),F=ZERO,U=0;U<t.length;U+=8){var n=Math.min(8,t.length-U),c=parseInt(t.substring(U,U+n),Q);if(n<8){var o=fromNumber(pow_dbl(Q,n));F=F.mul(o).add(fromNumber(c))}else F=(F=F.mul(s)).add(fromNumber(c))}return F.unsigned=e,F}function fromValue(t,e){return"number"==typeof t?fromNumber(t,e):"string"==typeof t?fromString(t,e):fromBits(t.low,t.high,"boolean"==typeof e?e:t.unsigned)}Long.fromString=fromString,Long.fromValue=fromValue;var TWO_PWR_16_DBL=65536,TWO_PWR_24_DBL=1<<24,TWO_PWR_32_DBL=TWO_PWR_16_DBL*TWO_PWR_16_DBL,TWO_PWR_64_DBL=TWO_PWR_32_DBL*TWO_PWR_32_DBL,TWO_PWR_63_DBL=TWO_PWR_64_DBL/2,TWO_PWR_24=fromInt(TWO_PWR_24_DBL),ZERO=fromInt(0);Long.ZERO=ZERO;var UZERO=fromInt(0,!0);Long.UZERO=UZERO;var ONE=fromInt(1);Long.ONE=ONE;var UONE=fromInt(1,!0);Long.UONE=UONE;var NEG_ONE=fromInt(-1);Long.NEG_ONE=NEG_ONE;var MAX_VALUE=fromBits(-1,2147483647,!1);Long.MAX_VALUE=MAX_VALUE;var MAX_UNSIGNED_VALUE=fromBits(-1,-1,!0);Long.MAX_UNSIGNED_VALUE=MAX_UNSIGNED_VALUE;var MIN_VALUE=fromBits(0,-2147483648,!1);Long.MIN_VALUE=MIN_VALUE;var LongPrototype=Long.prototype;LongPrototype.toInt=function(){return this.unsigned?this.low>>>0:this.low},LongPrototype.toNumber=function(){return this.unsigned?(this.high>>>0)*TWO_PWR_32_DBL+(this.low>>>0):this.high*TWO_PWR_32_DBL+(this.low>>>0)},LongPrototype.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(MIN_VALUE)){var e=fromNumber(t),Q=this.div(e),B=Q.mul(e).sub(this);return Q.toString(t)+B.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var s=fromNumber(pow_dbl(t,6),this.unsigned),F=this,U="";;){var n=F.div(s),c=(F.sub(n.mul(s)).toInt()>>>0).toString(t);if((F=n).isZero())return c+U;for(;c.length<6;)c="0"+c;U=""+c+U}},LongPrototype.getHighBits=function(){return this.high},LongPrototype.getHighBitsUnsigned=function(){return this.high>>>0},LongPrototype.getLowBits=function(){return this.low},LongPrototype.getLowBitsUnsigned=function(){return this.low>>>0},LongPrototype.getNumBitsAbs=function(){if(this.isNegative())return this.eq(MIN_VALUE)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},LongPrototype.isZero=function(){return 0===this.high&&0===this.low},LongPrototype.eqz=LongPrototype.isZero,LongPrototype.isNegative=function(){return!this.unsigned&&this.high<0},LongPrototype.isPositive=function(){return this.unsigned||this.high>=0},LongPrototype.isOdd=function(){return 1==(1&this.low)},LongPrototype.isEven=function(){return 0==(1&this.low)},LongPrototype.equals=function(t){return isLong(t)||(t=fromValue(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&(this.high===t.high&&this.low===t.low)},LongPrototype.eq=LongPrototype.equals,LongPrototype.notEquals=function(t){return!this.eq(t)},LongPrototype.neq=LongPrototype.notEquals,LongPrototype.ne=LongPrototype.notEquals,LongPrototype.lessThan=function(t){return this.comp(t)<0},LongPrototype.lt=LongPrototype.lessThan,LongPrototype.lessThanOrEqual=function(t){return this.comp(t)<=0},LongPrototype.lte=LongPrototype.lessThanOrEqual,LongPrototype.le=LongPrototype.lessThanOrEqual,LongPrototype.greaterThan=function(t){return this.comp(t)>0},LongPrototype.gt=LongPrototype.greaterThan,LongPrototype.greaterThanOrEqual=function(t){return this.comp(t)>=0},LongPrototype.gte=LongPrototype.greaterThanOrEqual,LongPrototype.ge=LongPrototype.greaterThanOrEqual,LongPrototype.compare=function(t){if(isLong(t)||(t=fromValue(t)),this.eq(t))return 0;var e=this.isNegative(),Q=t.isNegative();return e&&!Q?-1:!e&&Q?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},LongPrototype.comp=LongPrototype.compare,LongPrototype.negate=function(){return!this.unsigned&&this.eq(MIN_VALUE)?MIN_VALUE:this.not().add(ONE)},LongPrototype.neg=LongPrototype.negate,LongPrototype.add=function(t){isLong(t)||(t=fromValue(t));var e=this.high>>>16,Q=65535&this.high,B=this.low>>>16,s=65535&this.low,F=t.high>>>16,U=65535&t.high,n=t.low>>>16,c=0,o=0,g=0,l=0;return g+=(l+=s+(65535&t.low))>>>16,o+=(g+=B+n)>>>16,c+=(o+=Q+U)>>>16,c+=e+F,fromBits((g&=65535)<<16|(l&=65535),(c&=65535)<<16|(o&=65535),this.unsigned)},LongPrototype.subtract=function(t){return isLong(t)||(t=fromValue(t)),this.add(t.neg())},LongPrototype.sub=LongPrototype.subtract,LongPrototype.multiply=function(t){if(this.isZero())return ZERO;if(isLong(t)||(t=fromValue(t)),wasm)return fromBits(wasm.mul(this.low,this.high,t.low,t.high),wasm.get_high(),this.unsigned);if(t.isZero())return ZERO;if(this.eq(MIN_VALUE))return t.isOdd()?MIN_VALUE:ZERO;if(t.eq(MIN_VALUE))return this.isOdd()?MIN_VALUE:ZERO;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(TWO_PWR_24)&&t.lt(TWO_PWR_24))return fromNumber(this.toNumber()*t.toNumber(),this.unsigned);var e=this.high>>>16,Q=65535&this.high,B=this.low>>>16,s=65535&this.low,F=t.high>>>16,U=65535&t.high,n=t.low>>>16,c=65535&t.low,o=0,g=0,l=0,I=0;return l+=(I+=s*c)>>>16,g+=(l+=B*c)>>>16,l&=65535,g+=(l+=s*n)>>>16,o+=(g+=Q*c)>>>16,g&=65535,o+=(g+=B*n)>>>16,g&=65535,o+=(g+=s*U)>>>16,o+=e*c+Q*n+B*U+s*F,fromBits((l&=65535)<<16|(I&=65535),(o&=65535)<<16|(g&=65535),this.unsigned)},LongPrototype.mul=LongPrototype.multiply,LongPrototype.divide=function(t){if(isLong(t)||(t=fromValue(t)),t.isZero())throw Error("division by zero");var e,Q,B;if(wasm)return this.unsigned||-2147483648!==this.high||-1!==t.low||-1!==t.high?fromBits((this.unsigned?wasm.div_u:wasm.div_s)(this.low,this.high,t.low,t.high),wasm.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?UZERO:ZERO;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return UZERO;if(t.gt(this.shru(1)))return UONE;B=UZERO}else{if(this.eq(MIN_VALUE))return t.eq(ONE)||t.eq(NEG_ONE)?MIN_VALUE:t.eq(MIN_VALUE)?ONE:(e=this.shr(1).div(t).shl(1)).eq(ZERO)?t.isNegative()?ONE:NEG_ONE:(Q=this.sub(t.mul(e)),B=e.add(Q.div(t)));if(t.eq(MIN_VALUE))return this.unsigned?UZERO:ZERO;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();B=ZERO}for(Q=this;Q.gte(t);){e=Math.max(1,Math.floor(Q.toNumber()/t.toNumber()));for(var s=Math.ceil(Math.log(e)/Math.LN2),F=s<=48?1:pow_dbl(2,s-48),U=fromNumber(e),n=U.mul(t);n.isNegative()||n.gt(Q);)n=(U=fromNumber(e-=F,this.unsigned)).mul(t);U.isZero()&&(U=ONE),B=B.add(U),Q=Q.sub(n)}return B},LongPrototype.div=LongPrototype.divide,LongPrototype.modulo=function(t){return isLong(t)||(t=fromValue(t)),wasm?fromBits((this.unsigned?wasm.rem_u:wasm.rem_s)(this.low,this.high,t.low,t.high),wasm.get_high(),this.unsigned):this.sub(this.div(t).mul(t))},LongPrototype.mod=LongPrototype.modulo,LongPrototype.rem=LongPrototype.modulo,LongPrototype.not=function(){return fromBits(~this.low,~this.high,this.unsigned)},LongPrototype.and=function(t){return isLong(t)||(t=fromValue(t)),fromBits(this.low&t.low,this.high&t.high,this.unsigned)},LongPrototype.or=function(t){return isLong(t)||(t=fromValue(t)),fromBits(this.low|t.low,this.high|t.high,this.unsigned)},LongPrototype.xor=function(t){return isLong(t)||(t=fromValue(t)),fromBits(this.low^t.low,this.high^t.high,this.unsigned)},LongPrototype.shiftLeft=function(t){return isLong(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?fromBits(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):fromBits(0,this.low<<t-32,this.unsigned)},LongPrototype.shl=LongPrototype.shiftLeft,LongPrototype.shiftRight=function(t){return isLong(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?fromBits(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):fromBits(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},LongPrototype.shr=LongPrototype.shiftRight,LongPrototype.shiftRightUnsigned=function(t){if(isLong(t)&&(t=t.toInt()),0===(t&=63))return this;var e=this.high;return t<32?fromBits(this.low>>>t|e<<32-t,e>>>t,this.unsigned):fromBits(32===t?e:e>>>t-32,0,this.unsigned)},LongPrototype.shru=LongPrototype.shiftRightUnsigned,LongPrototype.shr_u=LongPrototype.shiftRightUnsigned,LongPrototype.toSigned=function(){return this.unsigned?fromBits(this.low,this.high,!1):this},LongPrototype.toUnsigned=function(){return this.unsigned?this:fromBits(this.low,this.high,!0)},LongPrototype.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},LongPrototype.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24,255&t,t>>>8&255,t>>>16&255,t>>>24]},LongPrototype.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,255&t,e>>>24,e>>>16&255,e>>>8&255,255&e]},Long.fromBytes=function(t,e,Q){return Q?Long.fromBytesLE(t,e):Long.fromBytesBE(t,e)},Long.fromBytesLE=function(t,e){return new Long(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)},Long.fromBytesBE=function(t,e){return new Long(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)};var traverse$2={exports:{}},traverse=traverse$2.exports=function(t){return new Traverse(t)};function Traverse(t){this.value=t}function walk(t,e,Q){var B=[],s=[],F=!0;return function t(U){var n=Q?copy(U):U,c={},o=!0,g={node:n,node_:U,path:[].concat(B),parent:s[s.length-1],parents:s,key:B.slice(-1)[0],isRoot:0===B.length,level:B.length,circular:null,update:function(t,e){g.isRoot||(g.parent.node[g.key]=t),g.node=t,e&&(o=!1)},delete:function(t){delete g.parent.node[g.key],t&&(o=!1)},remove:function(t){isArray(g.parent.node)?g.parent.node.splice(g.key,1):delete g.parent.node[g.key],t&&(o=!1)},keys:null,before:function(t){c.before=t},after:function(t){c.after=t},pre:function(t){c.pre=t},post:function(t){c.post=t},stop:function(){F=!1},block:function(){o=!1}};if(!F)return g;function l(){if("object"==typeof g.node&&null!==g.node){g.keys&&g.node_===g.node||(g.keys=objectKeys(g.node)),g.isLeaf=0==g.keys.length;for(var t=0;t<s.length;t++)if(s[t].node_===U){g.circular=s[t];break}}else g.isLeaf=!0,g.keys=null;g.notLeaf=!g.isLeaf,g.notRoot=!g.isRoot}l();var I=e.call(g,g.node);return void 0!==I&&g.update&&g.update(I),c.before&&c.before.call(g,g.node),o?("object"!=typeof g.node||null===g.node||g.circular||(s.push(g),l(),forEach(g.keys,(function(e,s){B.push(e),c.pre&&c.pre.call(g,g.node[e],e);var F=t(g.node[e]);Q&&hasOwnProperty.call(g.node,e)&&(g.node[e]=F.node),F.isLast=s==g.keys.length-1,F.isFirst=0==s,c.post&&c.post.call(g,F),B.pop()})),s.pop()),c.after&&c.after.call(g,g.node),g):g}(t).node}function copy(t){if("object"==typeof t&&null!==t){var e;if(isArray(t))e=[];else if(isDate(t))e=new Date(t.getTime?t.getTime():t);else if(isRegExp(t))e=new RegExp(t);else if(isError(t))e={message:t.message};else if(isBoolean(t))e=new Boolean(t);else if(isNumber(t))e=new Number(t);else if(isString(t))e=new String(t);else if(Object.create&&Object.getPrototypeOf)e=Object.create(Object.getPrototypeOf(t));else if(t.constructor===Object)e={};else{var Q=t.constructor&&t.constructor.prototype||t.__proto__||{},B=function(){};B.prototype=Q,e=new B}return forEach(objectKeys(t),(function(Q){e[Q]=t[Q]})),e}return t}Traverse.prototype.get=function(t){for(var e=this.value,Q=0;Q<t.length;Q++){var B=t[Q];if(!e||!hasOwnProperty.call(e,B)){e=void 0;break}e=e[B]}return e},Traverse.prototype.has=function(t){for(var e=this.value,Q=0;Q<t.length;Q++){var B=t[Q];if(!e||!hasOwnProperty.call(e,B))return!1;e=e[B]}return!0},Traverse.prototype.set=function(t,e){for(var Q=this.value,B=0;B<t.length-1;B++){var s=t[B];hasOwnProperty.call(Q,s)||(Q[s]={}),Q=Q[s]}return Q[t[B]]=e,e},Traverse.prototype.map=function(t){return walk(this.value,t,!0)},Traverse.prototype.forEach=function(t){return this.value=walk(this.value,t,!1),this.value},Traverse.prototype.reduce=function(t,e){var Q=1===arguments.length,B=Q?this.value:e;return this.forEach((function(e){this.isRoot&&Q||(B=t.call(this,B,e))})),B},Traverse.prototype.paths=function(){var t=[];return this.forEach((function(e){t.push(this.path)})),t},Traverse.prototype.nodes=function(){var t=[];return this.forEach((function(e){t.push(this.node)})),t},Traverse.prototype.clone=function(){var t=[],e=[];return function Q(B){for(var s=0;s<t.length;s++)if(t[s]===B)return e[s];if("object"==typeof B&&null!==B){var F=copy(B);return t.push(B),e.push(F),forEach(objectKeys(B),(function(t){F[t]=Q(B[t])})),t.pop(),e.pop(),F}return B}(this.value)};var objectKeys=Object.keys||function(t){var e=[];for(var Q in t)e.push(Q);return e};function toS(t){return Object.prototype.toString.call(t)}function isDate(t){return"[object Date]"===toS(t)}function isRegExp(t){return"[object RegExp]"===toS(t)}function isError(t){return"[object Error]"===toS(t)}function isBoolean(t){return"[object Boolean]"===toS(t)}function isNumber(t){return"[object Number]"===toS(t)}function isString(t){return"[object String]"===toS(t)}var isArray=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)},forEach=function(t,e){if(t.forEach)return t.forEach(e);for(var Q=0;Q<t.length;Q++)e(t[Q],Q,t)};forEach(objectKeys(Traverse.prototype),(function(t){traverse[t]=function(e){var Q=[].slice.call(arguments,1),B=new Traverse(e);return B[t].apply(B,Q)}}));var hasOwnProperty=Object.hasOwnProperty||function(t,e){return e in t},traverse$1=traverse$2.exports;function isSolidityAddressable(t){return t&&t.getSolidityAddress&&"function"==typeof t.getSolidityAddress}function extractSolidityAddressFrom(t){var e=/^(?:0x)?([0-9a-fA-F]{40})$/g.exec(t);return null!=e?e[1]:void 0}function _isNativeFunction(t){return-1!==Function.toString.call(t).indexOf("[native code]")}function _isNativeReflectConstruct$i(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}function _construct(t,e,Q){return _construct=_isNativeReflectConstruct$i()?Reflect.construct:function(t,e,Q){var B=[null];B.push.apply(B,e);var s=new(Function.bind.apply(t,B));return Q&&_setPrototypeOf(s,Q.prototype),s},_construct.apply(null,arguments)}function _wrapNativeSuper(t){var e="function"==typeof Map?new Map:void 0;return _wrapNativeSuper=function(t){if(null===t||!_isNativeFunction(t))return t;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,Q)}function Q(){return _construct(t,arguments,_getPrototypeOf(this).constructor)}return Q.prototype=Object.create(t.prototype,{constructor:{value:Q,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(Q,t)},_wrapNativeSuper(t)}function upperCaseFirstOf(t){return t.charAt(0).toUpperCase()+t.slice(1)}var ParamTypeToFunctionNameMapper=function(){function t(e){_classCallCheck(this,t),this.paramType=e}return _createClass(t,[{key:"map",value:function(t){var e=t.prefix,Q=void 0===e?"":e,B=this._geCanonicalTypeFor(this.paramType);return"".concat(Q).concat(this._getFunctionParticleFor(B))}},{key:"_geCanonicalTypeFor",value:function(t){return"int"===t.type?"int256":"int[]"===t.type?"int256[]":"uint"===t.type?"uint256":"uint[]"===t.type?"uint256[]":t.type}},{key:"_getFunctionParticleFor",value:function(t){var e=upperCaseFirstOf(t);return e.endsWith("[]")&&(e=e.replace("[]","Array")),e}}]),t}();function _createSuper$h(t){var e=_isNativeReflectConstruct$h();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$h(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}var ContractFunctionParameters=function(t){_inherits(B,ContractFunctionParameters$1);var e,Q=_createSuper$h(B);function B(){return _classCallCheck(this,B),Q.call(this)}return _createClass(B,null,[{key:"newFor",value:(e=_asyncToGenerator(regenerator.mark((function t(e,Q){var s,F,U,n,c,o,g,l;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(Array.isArray(Q)){t.next=4;break}throw new ContractFunctionParametersParser("I need an array of args in order to construct the ContractFunctionParameters instance for.");case 4:if(e.inputs.length===Q.length){t.next=6;break}throw new ContractFunctionParametersParser("The contract expects ".concat(e.inputs.length," arguments yet ").concat(Q.length," were provided."));case 6:for(F in s=new B,Q)U=e.inputs[F],n=new ParamTypeToFunctionNameMapper(U).map({prefix:"add"}),c=-1!==n.indexOf("64")||-1!==n.indexOf("256"),o=Q[F],U.type.startsWith("address")?(g=function(t){return isSolidityAddressable(t)?t.getSolidityAddress():t},o=Array.isArray(o)?o.map(g):g(o)):c&&(l=function(t){return t instanceof Hbar?t._valueInTinybar:t instanceof BigNumber$1?t:new BigNumber$1(t)},o=Array.isArray(o)?o.map(l):l(o)),s[n](o);return t.abrupt("return",s);case 9:case"end":return t.stop()}}),t)}))),function(t,Q){return e.apply(this,arguments)})}]),B}(),ContractFunctionParametersParser=function(t){_inherits(Q,_wrapNativeSuper(Error));var e=_createSuper$h(Q);function Q(t){return _classCallCheck(this,Q),e.call(this,t)}return _createClass(Q)}(),LiveEntity=function(){function t(e,Q){_classCallCheck(this,t),this.session=e,this.id=Q}return _createClass(t,[{key:"log",get:function(){return this.session.log}},{key:"equals",value:function(e){return e instanceof t?e.id.toString()===this.id.toString():this._equals(e)}},{key:"_equals",value:function(t){return!1}}]),t}();function _createSuper$g(t){var e=_isNativeReflectConstruct$g();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$g(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}var LiveAddress=function(t){_inherits(B,LiveEntity);var e,Q=_createSuper$g(B);function B(t){var e=t.session,s=t.address;return _classCallCheck(this,B),Q.call(this,e,B.getSolidityAddressMatchOrDieTryingFrom(s))}return _createClass(B,[{key:"getSolidityAddress",value:function(){return this.id}},{key:"toLiveContract",value:(e=_asyncToGenerator(regenerator.mark((function t(e){var Q;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.t0=ContractId,t.next=3,this.getSolidityAddress();case 3:return t.t1=t.sent,Q=t.t0.fromSolidityAddress.call(t.t0,t.t1),t.abrupt("return",new LiveContract({cInterface:e,id:Q,session:this.session}));case 6:case"end":return t.stop()}}),t,this)}))),function(t){return e.apply(this,arguments)})},{key:"_equals",value:function(t){return"string"==typeof t&&extractSolidityAddressFrom(t)===this.id}},{key:"getLiveEntityInfo",value:function(){throw new Error("Method does not exist for type LiveAddress")}}],[{key:"getSolidityAddressMatchOrDieTryingFrom",value:function(t){var e=extractSolidityAddressFrom(t);if(!e)throw new Error("The provided address '".concat(t,"' does not appear to be a valid Solidity address."));return e}}]),B}();function encodeToHex(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],Q=_toConsumableArray(t).map((function(t){return t.toString(16).padStart(2,"0")})).join("");return e?"0x".concat(Q):Q}function _createSuper$f(t){var e=_isNativeReflectConstruct$f();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$f(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}function ownKeys$3(t,e){var Q=Object.keys(t);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(t);e&&(B=B.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),Q.push.apply(Q,B)}return Q}function _objectSpread$3(t){for(var e=1;e<arguments.length;e++){var Q=null!=arguments[e]?arguments[e]:{};e%2?ownKeys$3(Object(Q),!0).forEach((function(e){_defineProperty(t,e,Q[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(Q)):ownKeys$3(Object(Q)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(Q,e))}))}return t}var UNHANDLED_EVENT_NAME="UnhandledEventName";function isContractQueryRequest(t){return t instanceof ContractCallQuery}function parseLogs(t,e){return e.map((function(e){var Q=encodeToHex(e.data),B=e.topics.map((function(t){return encodeToHex(t)}));try{var s=t.parseLog({data:Q,topics:B}),F=Object.keys(s.args).filter((function(t){return isNaN(Number(t))})).map((function(t){return _defineProperty({},t,s.args[t])})).reduce((function(t,e){return _objectSpread$3(_objectSpread$3({},t),e)}),{});return{name:s.name,payload:F}}catch(t){return null}})).filter((function(t){return null!==t}))}var LiveContract=function(t){_inherits(s,LiveEntity);var e,Q,B=_createSuper$f(s);function s(t){var e,Q=t.session,F=t.id,U=t.cInterface;return _classCallCheck(this,s),(e=B.call(this,Q,F)).events=new events.exports.EventEmitter,e.interface=U,Object.values(e.interface.functions).forEach((function(t){return Object.defineProperty(_assertThisInitialized(e),t.name,{enumerable:!0,value:function(){var t=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F,U,n,c,o=arguments;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:for(Q=o.length,B=new Array(Q>1?Q-1:0),s=1;s<Q;s++)B[s-1]=o[s];return t.next=3,this.createContractRequestFor({fDescription:e,args:B});case 3:return F=t.sent,U=F.request,n=F.meta,t.next=8,this.session.execute(U,TypeOfExecutionReturn.Result,n.emitReceipt);case 8:return c=t.sent,this.tryToProcessForEvents(c),t.next=12,this.tryExtractingResponse(c,e);case 12:return t.abrupt("return",t.sent);case 13:case"end":return t.stop()}}),t,this)})));return function(e){return t.apply(this,arguments)}}().bind(_assertThisInitialized(e),t),writable:!1})})),e}return _createClass(s,[{key:"getSolidityAddress",value:function(){return this.id.toSolidityAddress()}},{key:"onEvent",value:function(t,e){if(!(void 0!==Object.values(this.interface.events).find((function(e){return e.name===t})))&&UNHANDLED_EVENT_NAME!==t)throw new Error("There is no such event named '".concat(t,"' defined in this contract."));e?this.events.on(t,e):this.events.removeAllListeners(t)}},{key:"onUnhandledEvents",value:function(t){this.onEvent(UNHANDLED_EVENT_NAME,t)}},{key:"createContractRequestFor",value:(Q=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F,U,n,c;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return Q=e.fDescription,B=e.args,s=!1,F={contractId:this.id,gas:this.session.defaults.contractTransactionGas},U={emitReceipt:this.session.defaults.emitLiveContractReceipts},B&&B.length>0&&(B[0].gas instanceof Hbar&&(B[0].gas=B[0].gas.toTinybars()),(Number.isInteger(B[0].gas)||B[0].gas instanceof long)&&(F.gas=B[0].gas,s=!0)),isContractQueryRequest(n=Q.constant?new ContractCallQuery(F):new ContractExecuteTransaction(F))&&(c=new Hbar(this.session.defaults.paymentForContractQuery),n.setQueryPayment(c)),B&&B.length>0&&(isContractQueryRequest(n)?(B[0].maxQueryPayment instanceof Hbar&&(n.setMaxQueryPayment(B[0].maxQueryPayment),s=!0),B[0].paymentTransactionId instanceof TransactionId&&(n.setPaymentTransactionId(B[0].paymentTransactionId),s=!0),B[0].queryPayment instanceof Hbar&&(n.setQueryPayment(B[0].queryPayment),s=!0)):(B[0].amount&&(n.setPayableAmount(B[0].amount),s=!0),B[0].maxTransactionFee&&(n.setMaxTransactionFee(B[0].maxTransactionFee),s=!0),Array.isArray(B[0].nodeAccountIds)&&(n.setNodeAccountIds(B[0].nodeAccountIds),s=!0),B[0].transactionId instanceof TransactionId&&(n.setTransactionId(B[0].transactionId),s=!0),B[0].transactionMemo&&(n.setTransactionMemo(B[0].transactionMemo),s=!0),Number.isInteger(B[0].transactionValidDuration)&&(n.setTransactionValidDuration(B[0].transactionValidDuration),s=!0))),B&&B.length>0&&(!1!==B[0].emitReceipt&&!0!==B[0].emitReceipt||(U.emitReceipt=B[0].emitReceipt,s=!0)),s&&(B=B.slice(1)),t.t0=n,t.t1=Q.name,t.next=14,ContractFunctionParameters.newFor(Q,B);case 14:return t.t2=t.sent,t.t0.setFunction.call(t.t0,t.t1,t.t2),t.abrupt("return",{meta:U,request:n});case 17:case"end":return t.stop()}}),t,this)}))),function(t){return Q.apply(this,arguments)})},{key:"tryExtractingResponse",value:function(t,e){var Q,B=this,s=this.interface.decodeFunctionResult(e,t.asBytes()),F=Object.keys(s).filter((function(t){return isNaN(Number(t))}));if(e.outputs&&0!==e.outputs.length){if(F.length===e.outputs.length){var U=function(t){return function(t){return e.outputs.find((function(e){return e.name===t})).type.startsWith("bytes")}(t)?arrayify(s[t]):s[t]};Q=F.map((function(t){return _defineProperty({},t,U(t))})).reduce((function(t,e){return _objectSpread$3(_objectSpread$3({},t),e)}),{})}else e.outputs.length>1?(Q=_toConsumableArray(s),Q=e.outputs.map((function(t,e){return t.type.startsWith("bytes")?arrayify(Q[e]):Q[e]}))):Q=s[0];var n=function(t,e){var Q=!1;return"string"==typeof t&&void 0!==extractSolidityAddressFrom(t)?(e(new LiveAddress({session:B.session,address:t}),!0),Q=!0):BigNumber.isBigNumber(t)&&(e(new BigNumber$1(t.toString()),!1),Q=!0),Q};n(Q,(function(t){Q=t}))||traverse$1(Q).forEach((function(t){n(t,this.update)}))}return Q}},{key:"tryToProcessForEvents",value:function(t){var e=this;parseLogs(this.interface,t.logs).forEach((function(t){var Q,B=t.name,s=t.payload;if(0===e.events.listenerCount(B)){if(0===e.events.listenerCount(UNHANDLED_EVENT_NAME))return;Q=UNHANDLED_EVENT_NAME}else Q=B;try{e.events.emit(Q,s)}catch(t){}}))}},{key:"getLiveEntityInfo",value:function(){var t=(new ContractInfoQuery).setContractId(this.id);return this.session.execute(t,TypeOfExecutionReturn.Result,!1)}}],[{key:"newFollowingUpload",value:(e=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F,U,n,c,o;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(Q=e.session,B=e.contract,s=e.emitConstructorLogs,F=e.transaction,!s){t.next=9;break}return t.next=4,Q.execute(F,TypeOfExecutionReturn.Record,!0);case 4:c=t.sent,U=c.receipt.contractId,n=parseLogs(B.interface,c.contractFunctionResult.logs),t.next=14;break;case 9:return t.next=11,Q.execute(F,TypeOfExecutionReturn.Receipt,!0);case 11:o=t.sent,U=o.contractId,n=[];case 14:return t.abrupt("return",new LiveContractWithLogs({cInterface:B.interface,id:U,logs:n,session:Q}));case 15:case"end":return t.stop()}}),t)}))),function(t){return e.apply(this,arguments)})}]),s}(),LiveContractWithLogs=function(t){_inherits(Q,LiveContract);var e=_createSuper$f(Q);function Q(t){var B,s=t.session,F=t.id,U=t.cInterface,n=t.logs;return _classCallCheck(this,Q),(B=e.call(this,{session:s,id:F,cInterface:U})).liveContract=_assertThisInitialized(B),B.logs=n,B}return _createClass(Q)}();function _createSuper$e(t){var e=_isNativeReflectConstruct$e();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$e(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}var LiveJson=function(t){_inherits(Q,LiveEntity);var e=_createSuper$e(Q);function Q(t){var B,s=t.session,F=t.id,U=t.data;return _classCallCheck(this,Q),B=e.call(this,s,F),Object.keys(U).forEach((function(t){return Object.defineProperty(_assertThisInitialized(B),t,{enumerable:!0,value:U[t],writable:!1})})),B}return _createClass(Q,[{key:"getLiveEntityInfo",value:function(){var t=(new FileInfoQuery).setFileId(this.id);return this.session.execute(t,TypeOfExecutionReturn.Result,!1)}}]),Q}();function ownKeys$2(t,e){var Q=Object.keys(t);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(t);e&&(B=B.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),Q.push.apply(Q,B)}return Q}function _objectSpread$2(t){for(var e=1;e<arguments.length;e++){var Q=null!=arguments[e]?arguments[e]:{};e%2?ownKeys$2(Object(Q),!0).forEach((function(e){_defineProperty(t,e,Q[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(Q)):ownKeys$2(Object(Q)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(Q,e))}))}return t}var BasicUploadableEntity=function(){function t(e){_classCallCheck(this,t),this.nameOfUpload=e}var e,Q;return _createClass(t,[{key:"uploadTo",value:(Q=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F,U,n,c,o;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return Q=e.session,B=e.args,s=void 0===B?[]:B,t.next=3,this.getContent();case 3:return F=t.sent,t.next=6,this._getFileTransactionsFor({content:F,session:Q,args:s});case 6:return U=t.sent,n=U.areOverridesProvided,c=U.fileTransactions,t.next=11,Q.execute(c[0],TypeOfExecutionReturn.Receipt,!0);case 11:if((o=t.sent).status===Status.Success){t.next=16;break}throw new Error("There was an issue while creating the file (status ".concat(o.status,"). Aborting file upload."));case 16:if(Q.log.debug("Uploaded content to HFS resulting in file id ".concat(o.fileId)),!(c.length>1&&c[1]instanceof FileAppendTransaction)){t.next=22;break}return Q.log.debug("Appending the remaining content with a total of ".concat(c.length-1," file-append transactions.")),t.next=21,Q.execute(c[1].setFileId(o.fileId),TypeOfExecutionReturn.Result,!0);case 21:Q.log.verbose("Done appending. Content has been successfully uploaded and is available at HFS id ".concat(o.fileId));case 22:return n&&(s=s.slice(1)),t.abrupt("return",this.onFileUploaded({session:Q,receipt:o,args:s}));case 24:case"end":return t.stop()}}),t,this)}))),function(t){return Q.apply(this,arguments)})},{key:"_getFileTransactionsFor",value:(e=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F,U,n,c,o;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return Q=e.content,B=e.session,s=e.args,F=void 0===s?[]:s,U=B.network.defaults.fileChunkSize,n=[],c={},F.length>0&&0!==Object.keys(F[0]).length&&"_file"===Object.keys(F[0])[0]&&(c=F[0]._file),n.push(new FileCreateTransaction(Object.assign({},_objectSpread$2({keys:[B.publicKey]},c),{contents:Q.length>U?Q.slice(0,U):Q}))),Q.length>U&&(o=Q.slice(U),n.push(new FileAppendTransaction({contents:o,maxChunks:Math.ceil(o.length/U)}))),t.abrupt("return",{areOverridesProvided:0!==Object.keys(c).length,fileTransactions:n});case 8:case"end":return t.stop()}}),t)}))),function(t){return e.apply(this,arguments)})}]),t}();function _createSuper$d(t){var e=_isNativeReflectConstruct$d();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$d(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}var Json=function(t){_inherits(s,BasicUploadableEntity);var e,Q,B=_createSuper$d(s);function s(t){var e;return _classCallCheck(this,s),(e=B.call(this,"Json")).info=t,s._guardForInvalid(t),e}return _createClass(s,[{key:"getContent",value:(Q=_asyncToGenerator(regenerator.mark((function t(){return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",JSON.stringify(this.info));case 1:case"end":return t.stop()}}),t,this)}))),function(){return Q.apply(this,arguments)})},{key:"onFileUploaded",value:(e=_asyncToGenerator(regenerator.mark((function t(e){var Q,B;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return Q=e.session,B=e.receipt,t.abrupt("return",new LiveJson({session:Q,id:B.fileId,data:this.info}));case 2:case"end":return t.stop()}}),t,this)}))),function(t){return e.apply(this,arguments)})}],[{key:"isInfoAcceptable",value:function(t){try{return s._guardForInvalid(t),!0}catch(t){}return!1}},{key:"_guardForInvalid",value:function(t){if(null===t||"object"!==_typeof(t))throw new Error("Please provide a valid JSON object to instantiate a static Json with.");if(void 0!==Object.keys(t).find((function(t){return t.length>0&&("_"===t[0]||"id"===t)})))throw new Error("Static Jsons can only be constructed from JSON objects whos properties dont't start with '_' or has the 'id' naming.")}}]),s}();function config(){return{parsed:void 0}}function _arrayWithHoles(t){if(Array.isArray(t))return t}function _iterableToArrayLimit(t,e){var Q=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=Q){var B,s,F=[],U=!0,n=!1;try{for(Q=Q.call(t);!(U=(B=Q.next()).done)&&(F.push(B.value),!e||F.length!==e);U=!0);}catch(t){n=!0,s=t}finally{try{U||null==Q.return||Q.return()}finally{if(n)throw s}}return F}}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _slicedToArray(t,e){return _arrayWithHoles(t)||_iterableToArrayLimit(t,e)||_unsupportedIterableToArray$1(t,e)||_nonIterableRest()}function _createSuper$c(t){var e=_isNativeReflectConstruct$c();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$c(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}var EnvironmentInvalidError=function(t){_inherits(Q,_wrapNativeSuper(Error));var e=_createSuper$c(Q);function Q(t){return _classCallCheck(this,Q),e.call(this,t)}return _createClass(Q)}();function _createForOfIteratorHelper(t,e){var Q="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!Q){if(Array.isArray(t)||(Q=_unsupportedIterableToArray(t))||e&&t&&"number"==typeof t.length){Q&&(t=Q);var B=0,s=function(){};return{s:s,n:function(){return B>=t.length?{done:!0}:{done:!1,value:t[B++]}},e:function(t){throw t},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var F,U=!0,n=!1;return{s:function(){Q=Q.call(t)},n:function(){var t=Q.next();return U=t.done,t},e:function(t){n=!0,F=t},f:function(){try{U||null==Q.return||Q.return()}finally{if(n)throw F}}}}function _unsupportedIterableToArray(t,e){if(t){if("string"==typeof t)return _arrayLikeToArray(t,e);var Q=Object.prototype.toString.call(t).slice(8,-1);return"Object"===Q&&t.constructor&&(Q=t.constructor.name),"Map"===Q||"Set"===Q?Array.from(t):"Arguments"===Q||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(Q)?_arrayLikeToArray(t,e):void 0}}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var Q=0,B=new Array(e);Q<e;Q++)B[Q]=t[Q];return B}var HEDERA_CUSTOM_NET_NAME="customnet",AVAILABLE_NETWORK_NAMES={CustomNet:HEDERA_CUSTOM_NET_NAME,MainNet:"mainnet",PreviewNet:"previewnet",TestNet:"testnet"},HederaNetwork=function(){function t(e,Q,B){_classCallCheck(this,t),this.defaults=e,this.name=Q,this.nodesInfo=B,this.nodes="string"==typeof B?this.parseNetworkAddressBookFrom(B):B;var s=Object.values(AVAILABLE_NETWORK_NAMES);if(!s.includes(this.name))throw new EnvironmentInvalidError("There is no such '".concat(this.name,"' network available. In order to continue, please choose a valid name from: ").concat(s.join(", ")));try{WebClient.forName(this.name)}catch(t){if(HEDERA_CUSTOM_NET_NAME!==this.name)throw new EnvironmentInvalidError("There is no such ".concat(this.name," network available in this library. Available network names to choose from are: ").concat(s.join(", ")));if(!this.nodes||0===Object.keys(this.nodes).length)throw new EnvironmentInvalidError("Please provide a list of network nodes in order to use a ".concat(this.name," network."))}}return _createClass(t,[{key:"getClient",value:function(){return HEDERA_CUSTOM_NET_NAME===this.name?WebClient.forNetwork(this.nodes):WebClient.forName(this.name).setMaxNodesPerTransaction(1)}},{key:"parseNetworkAddressBookFrom",value:function(t){var e={};if(t){var Q,B=_createForOfIteratorHelper(t.split(/\s*,\s*/).map((function(t){if(-1===t.indexOf("#"))throw new EnvironmentInvalidError("Node definition entry '".concat(t,"' is missing the account-id separator (#)"));var e=_slicedToArray(t.split("#"),2),Q=e[0],B=e[1],s=parseInt(B);return _defineProperty({},Q,new AccountId(s))})));try{for(B.s();!(Q=B.n()).done;){var s=Q.value,F=Object.keys(s)[0];e[F]=s[F]}}catch(t){B.e(t)}finally{B.f()}}return e}}],[{key:"newFrom",value:function(e){return new t(e.defaults,e.name,e.nodes)}}]),t}();function _createSuper$b(t){var e=_isNativeReflectConstruct$b();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$b(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}var ClientProvider=function(){function t(e,Q){_classCallCheck(this,t),this.ctx=e,this.restorer=Q,this.setNetwork(e.network)}var e;return _createClass(t,[{key:"setNetwork",value:function(t){return this.network=t,this}},{key:"buildColdFor",value:function(t){return this.sanityCheck(),this._buildCold(t)}},{key:"buildRestoring",value:(e=_asyncToGenerator(regenerator.mark((function t(e){var Q,B;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.sanityCheck(),"string"!=typeof e){t.next=8;break}return B=Buffer.from(e,"base64").toString("ascii"),t.next=5,this.restorer.restore(B);case 5:Q=t.sent,t.next=9;break;case 8:Q=e;case 9:return t.abrupt("return",this._buildRestoring(Q));case 10:case"end":return t.stop()}}),t,this)}))),function(t){return e.apply(this,arguments)})},{key:"sanityCheck",value:function(){if(!this.network)throw new Error("Please first provide a HederaNetwork to the ClientProvider in order to build a new Client.")}}]),t}(),NotSupportedClientProvider=function(t){_inherits(Q,ClientProvider);var e=_createSuper$b(Q);function Q(t,B){throw _classCallCheck(this,Q),e.call(this,t,null),new Error("You're trying to create a client-provider for a not-supported client-type. Something went wrong since you most likely would not want to ever do that.")}return _createClass(Q,[{key:"_buildCold",value:function(t){return Promise.resolve()}},{key:"_buildRestoring",value:function(t){return Promise.resolve()}}]),Q}();function _createSuper$a(t){var e=_isNativeReflectConstruct$a();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$a(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}var CredentialsInvalidError=function(t){_inherits(Q,_wrapNativeSuper(Error));var e=_createSuper$a(Q);function Q(t){return _classCallCheck(this,Q),e.call(this,t)}return _createClass(Q)}();function _createSuper$9(t){var e=_isNativeReflectConstruct$9();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$9(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}var Subscription=function(){function t(e,Q,B){_classCallCheck(this,t),this.events=e,this.eventName=Q,this.clb=B,e.on(Q,B)}return _createClass(t,[{key:"unsubscribe",value:function(){this.events.off(this.eventName,this.clb)}}]),t}(),_NeverFiringSubscription=function(t){_inherits(Q,Subscription);var e=_createSuper$9(Q);function Q(){return _classCallCheck(this,Q),e.call(this,new events.exports.EventEmitter,"NeverFiringSubscription",(function(t){}))}return _createClass(Q)}(),NeverFiringSubscription=new _NeverFiringSubscription,BasicClientController=function(){function t(e){_classCallCheck(this,t),this.ctx=e,this.pubSub=new events.exports.EventEmitter}return _createClass(t,[{key:"changeAccount",value:function(e){for(var Q=arguments.length,B=new Array(Q>1?Q-1:0),s=1;s<Q;s++)B[s-1]=arguments[s];var F=this.getAccountPayload.apply(this,[e].concat(B));this.pubSub.emit(t.ACCOUNT_CHANGE_REQUESTED,F)}},{key:"changeNetwork",value:function(e){this.pubSub.emit(t.NETWORK_CHANGE_REQUESTED,e)}},{key:"onAccountChanged",value:function(e){return new Subscription(this.pubSub,t.ACCOUNT_CHANGE_REQUESTED,e)}},{key:"onNetworkChanged",value:function(e){return new Subscription(this.pubSub,t.NETWORK_CHANGE_REQUESTED,e)}}]),t}();function _createSuper$8(t){var e=_isNativeReflectConstruct$8();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$8(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}_defineProperty(BasicClientController,"NETWORK_CHANGE_REQUESTED","NETWORK_CHANGE_REQUESTED"),_defineProperty(BasicClientController,"ACCOUNT_CHANGE_REQUESTED","ACCOUNT_CHANGE_REQUESTED");var HederaClientController=function(t){_inherits(Q,BasicClientController);var e=_createSuper$8(Q);function Q(t){return _classCallCheck(this,Q),e.call(this,t)}return _createClass(Q,[{key:"getAccountPayload",value:function(t){if(0==(arguments.length<=1?0:arguments.length-1))throw new Error("The private-key must also be provided in order to switch the account.");try{var e=(arguments.length<=1?void 0:arguments[1])instanceof PrivateKey?arguments.length<=1?void 0:arguments[1]:PrivateKey.fromString(arguments.length<=1?void 0:arguments[1]);return{operatorId:t instanceof AccountId?t.toString():t,operatorKey:e.toStringDer()}}catch(t){throw new Error("The provided key is not in a valid format. Cannot change account.")}}}]),Q}(),StatedStratoClient=function(){function t(e,Q,B){_classCallCheck(this,t),this.name=e,this.log=Q,this.state=B,Q.debug("Created a new stated strato-client of type '".concat(e,"'"))}var e;return _createClass(t,[{key:"save",value:(e=_asyncToGenerator(regenerator.mark((function t(){var e,Q;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.state.save();case 2:return e=t.sent,Q=Buffer.from(e).toString("base64"),t.abrupt("return",Q);case 5:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})}]),t}();function _createSuper$7(t){var e=_isNativeReflectConstruct$7();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$7(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}var HederaClientProvider=function(t){_inherits(s,ClientProvider);var e,Q,B=_createSuper$7(s);function s(t,e){var Q;return _classCallCheck(this,s),(Q=B.call(this,t,new HederaClientStateDeserializer)).controller=e,Q}return _createClass(s,[{key:"buildOperatedBy",value:function(t,e){var Q=new HederaClientState("string"==typeof t?t:t.toString(),e.toString());return this.buildRestoring(Q)}},{key:"_buildCold",value:(Q=_asyncToGenerator(regenerator.mark((function t(e){return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",this.buildOperatedBy(e.accountId,e.privateKey));case 1:case"end":return t.stop()}}),t,this)}))),function(t){return Q.apply(this,arguments)})},{key:"_buildRestoring",value:(e=_asyncToGenerator(regenerator.mark((function t(e){var Q;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return Q=this.ctx.network.getClient(),t.abrupt("return",new HederaClient(this.ctx,this.controller,Q,e));case 2:case"end":return t.stop()}}),t,this)}))),function(t){return e.apply(this,arguments)})}]),s}(),HederaClient=function(t){_inherits(B,StatedStratoClient);var e,Q=_createSuper$7(B);function B(t,e,s,F){var U;return _classCallCheck(this,B),(U=Q.call(this,"Hedera",t.log,F)).client=s,U.changeOperator(F.operatorId,F.operatorKey),e.onAccountChanged((function(t){U.state=new HederaClientState(t.operatorId,t.operatorKey),U.changeOperator(U.state.operatorId,U.state.operatorKey)})),e.onNetworkChanged((function(t){U.client=t.getClient(),U.client.setOperator(U.state.operatorId,U.state.operatorKey)})),U}return _createClass(B,[{key:"execute",value:(e=_asyncToGenerator(regenerator.mark((function t(e){var Q;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.execute(this.client);case 2:return Q=t.sent,t.abrupt("return",Q);case 4:case"end":return t.stop()}}),t,this)}))),function(t){return e.apply(this,arguments)})},{key:"getReceipt",value:function(t){return t.getReceipt(this.client)}},{key:"changeOperator",value:function(t,e){this.client.setOperator(t,e),this.account={id:this.client.operatorAccountId,publicKey:this.client.operatorPublicKey}}}]),B}(),HederaClientState=function(){function t(e,Q){_classCallCheck(this,t),this.operatorId=e,this.operatorKey=Q}var e;return _createClass(t,[{key:"save",value:(e=_asyncToGenerator(regenerator.mark((function e(){return regenerator.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return","".concat(this.operatorId).concat(t.FIELD_SERIALIZATION_SEPARATOR).concat(this.operatorKey));case 1:case"end":return e.stop()}}),e,this)}))),function(){return e.apply(this,arguments)})}]),t}();_defineProperty(HederaClientState,"FIELD_SERIALIZATION_SEPARATOR","|");var HederaClientStateDeserializer=function(){function t(){_classCallCheck(this,t)}var e;return _createClass(t,[{key:"restore",value:(e=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return Q=e.split(HederaClientState.FIELD_SERIALIZATION_SEPARATOR),B=_slicedToArray(Q,2),s=B[0],F=B[1],t.abrupt("return",new HederaClientState(s,F));case 2:case"end":return t.stop()}}),t)}))),function(t){return e.apply(this,arguments)})}]),t}(),ImpotentClientController=function(){function t(){_classCallCheck(this,t)}return _createClass(t,[{key:"changeAccount",value:function(t){throw new Error("This ClientController cannot change the account of the underlying client.")}},{key:"changeNetwork",value:function(t){throw new Error("This ClientController cannot change the network of the underlying client.")}},{key:"onAccountChanged",value:function(t){return NeverFiringSubscription}},{key:"onNetworkChanged",value:function(t){return NeverFiringSubscription}}]),t}(),CLIENT_TYPE_CONSTRUCTOR_GUARD={},ClientType=function(){function t(e,Q){var B=arguments.length>2&&void 0!==arguments[2]?arguments[2]:ImpotentClientController,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:NotSupportedClientProvider,F=arguments.length>4?arguments[4]:void 0;if(_classCallCheck(this,t),this.name=Q,this.defaultController=B,this.providerHaving=s,this.computeColdStartOptionsFrom=F,e!==CLIENT_TYPE_CONSTRUCTOR_GUARD)throw new Error("Client types cannot be defined from outside this module!")}return _createClass(t,[{key:"equals",value:function(e){return e instanceof t&&this.name===e.name}}]),t}(),ClientTypes=function(){function t(){_classCallCheck(this,t),_defineProperty(this,"unknownClientType",new ClientType(CLIENT_TYPE_CONSTRUCTOR_GUARD,"Unknown")),this.knownClientTypes=[new ClientType(CLIENT_TYPE_CONSTRUCTOR_GUARD,"Hedera",HederaClientController,HederaClientProvider,(function(t){try{return{accountId:AccountId.fromString(t.client.hedera.operatorId),privateKey:PrivateKey.fromString(t.client.hedera.operatorKey)}}catch(t){throw new CredentialsInvalidError(t.message)}}))]}return _createClass(t,[{key:"isKnown",value:function(t){return!this.Unknown.equals(t)}},{key:"Unknown",get:function(){return this.unknownClientType}},{key:"getBy",value:function(t){var e=t.name,Q=this.knownClientTypes.filter((function(t){return t.name===e}));return 0===Q.length?this.Unknown:Q[0]}}]),t}();const LEVELS={error:0,warn:1,info:2,http:3,verbose:4,debug:5,silly:6};class StratoLogger extends EventEmitter$2{constructor(t){super(),this._level=LEVELS[t.level],this._isLoggingEnabled=t.enabled}get isSillyLoggingEnabled(){return this._isLevelEnabled(LEVELS.silly)}debug(t,...e){return this._isLevelEnabled(LEVELS.debug)&&this.emit("debug",t,...e),this}error(t,...e){return this._isLevelEnabled(LEVELS.error)&&this.emit("error",t,...e),this}info(t,...e){return this._isLevelEnabled(LEVELS.info)&&this.emit("info",t,...e),this}silly(t,...e){return this._isLevelEnabled(LEVELS.silly)&&this.emit("debug",t,...e),this}verbose(t,...e){return this._isLevelEnabled(LEVELS.verbose)&&this.emit("debug",t,...e),this}warn(t,...e){return this._isLevelEnabled(LEVELS.warn)&&this.emit("warn",t,...e),this}_isLevelEnabled(t){return this._isLoggingEnabled&&this._level>=t}}function _superPropBase(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=_getPrototypeOf(t)););return t}function _get(){return _get="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,Q){var B=_superPropBase(t,e);if(B){var s=Object.getOwnPropertyDescriptor(B,e);return s.get?s.get.call(arguments.length<3?t:Q):s.value}},_get.apply(this,arguments)}function _createSuper$6(t){var e=_isNativeReflectConstruct$6();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$6(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}var DefaultPrivateKeyClientController=function(t){_inherits(Q,HederaClientController);var e=_createSuper$6(Q);function Q(t){return _classCallCheck(this,Q),e.call(this,t)}return _createClass(Q,[{key:"getAccountPayload",value:function(t){return _get(_getPrototypeOf(Q.prototype),"getAccountPayload",this).call(this,t,this.ctx.params.client.controller.default.operatorKey)}}]),Q}(),ClientControllers=function(){function t(e){_classCallCheck(this,t),this.impotentClientController=new ImpotentClientController,this.knownControllers=[{name:"Hedera",value:new HederaClientController(e)},{name:"DefaultPrivateKey",value:new DefaultPrivateKeyClientController(e)}]}return _createClass(t,[{key:"Unknown",get:function(){return this.impotentClientController}},{key:"getBy",value:function(t){var e=t.name,Q=this.knownControllers.filter((function(t){return t.name===e}));return 0===Q.length?this.Unknown:Q[0].value}}]),t}(),_DefinedNetworkDefaul,DEFAULT_FILE_CHUNK_SIZE=1024,DefinedNetworkDefaults=(_DefinedNetworkDefaul={},_defineProperty(_DefinedNetworkDefaul,AVAILABLE_NETWORK_NAMES.CustomNet,{fileChunkSize:DEFAULT_FILE_CHUNK_SIZE}),_defineProperty(_DefinedNetworkDefaul,AVAILABLE_NETWORK_NAMES.MainNet,{fileChunkSize:DEFAULT_FILE_CHUNK_SIZE}),_defineProperty(_DefinedNetworkDefaul,AVAILABLE_NETWORK_NAMES.TestNet,{fileChunkSize:DEFAULT_FILE_CHUNK_SIZE}),_defineProperty(_DefinedNetworkDefaul,AVAILABLE_NETWORK_NAMES.PreviewNet,{fileChunkSize:DEFAULT_FILE_CHUNK_SIZE}),_DefinedNetworkDefaul),StratoContext=function(){function t(e){var Q,B,s,F,U,n,c,o,g,l,I,i,r,a,d,u;_classCallCheck(this,t);var C=config({path:e.path}).parsed,y={},S=null!==(Q=null==e?void 0:e.params)&&void 0!==Q?Q:{};C||(C={HEDERAS_NETWORK:"testnet",HEDERAS_OPERATOR_ID:"0.0.2908307",HEDERAS_OPERATOR_KEY:"302e020100300506032b657004220420261b8e33bc1c3258ce166b8577548462149b422f60f699495eef744368808dee",HEDERAS_PREVIEWNET_DEFAULT_PAYMENT_FOR_CONTRACT_QUERY:"1",HEDERAS_TESTNET_DEFAULT_PAYMENT_FOR_CONTRACT_QUERY:"1",HEDERAS_LOGGER_LEVEL:"debug",HEDERAS_LOGGER_ENABLED:"true"}),Object.keys(C).filter((function(t){return t.startsWith("HEDERAS_")})).forEach((function(t){y[t]=C[t]}));var b=null!==(B=null!==(s=null===(F=S.network)||void 0===F?void 0:F.name)&&void 0!==s?s:y.HEDERAS_NETWORK)&&void 0!==B?B:"unspecified";this.clientTypes=new ClientTypes,this.params={client:this.computeClientSpecsFrom(S,y),logger:{level:null!==(U=null!==(n=null===(c=S.logger)||void 0===c?void 0:c.level)&&void 0!==n?n:y.HEDERAS_LOGGER_LEVEL)&&void 0!==U?U:"info",enabled:"true"===(null!==(o=null!==(g=null===(l=S.logger)||void 0===l?void 0:l.enabled)&&void 0!==g?g:y.HEDERAS_LOGGER_ENABLED)&&void 0!==o?o:"false")},network:{defaults:DefinedNetworkDefaults[null!==(I=null!==(i=null===(r=S.network)||void 0===r?void 0:r.name)&&void 0!==i?i:y.HEDERAS_NETWORK)&&void 0!==I?I:"unspecified"],name:b,nodes:null!==(a=null!==(d=null===(u=S.network)||void 0===u?void 0:u.nodes)&&void 0!==d?d:y.HEDERAS_NODES)&&void 0!==a?a:""},session:{defaults:this.parseSessionDefaultsFrom(b,y)}},this.clientControllers=new ClientControllers(this),this.log=new StratoLogger(this.params.logger),this.network=HederaNetwork.newFrom(this.params.network)}var e;return _createClass(t,[{key:"getClient",value:(e=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F,U;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(s=null!==(Q=null!=e?e:this.clientControllers.getBy({name:this.params.client.controller.type}))&&void 0!==Q?Q:new this.params.client.type.defaultController(this),F=new this.params.client.type.providerHaving(this,s),U=this.params.client.type.computeColdStartOptionsFrom(this.params),!this.params.client.savedState){t.next=9;break}return t.next=6,F.buildRestoring(this.params.client.savedState);case 6:case 12:B=t.sent,t.next=16;break;case 9:if(!U){t.next=15;break}return t.next=12,F.buildColdFor(U);case 15:throw new Error("Please provide either the cold-start data or a saved-state from where to create the bounded underlying Client with.");case 16:return t.abrupt("return",{client:B,controller:s});case 17:case"end":return t.stop()}}),t,this)}))),function(t){return e.apply(this,arguments)})},{key:"computeClientSpecsFrom",value:function(t,e){var Q,B,s,F,U,n,c,o,g,l,I,i,r,a,d,u,C,y,S,b=null!==(Q=null===(B=t.client)||void 0===B||null===(s=B.controller)||void 0===s||null===(F=s.default)||void 0===F?void 0:F.operatorKey)&&void 0!==Q?Q:e.HEDERAS_CLIENT_CONTROLLER_DEFAULT_PRIVATE_KEY,m=null!==(U=null!==(n=null===(c=t.client)||void 0===c||null===(o=c.controller)||void 0===o?void 0:o.type)&&void 0!==n?n:e.HEDERAS_CLIENT_CONTROLLER)&&void 0!==U?U:"Hedera",G=this.clientTypes.getBy({name:"string"==typeof(null===(g=t.client)||void 0===g?void 0:g.type)?null===(l=t.client)||void 0===l?void 0:l.type:e.HEDERAS_CLIENT_TYPE?e.HEDERAS_CLIENT_TYPE:"Hedera"}),x=null!==(I=null!==(i=null===(r=t.client)||void 0===r?void 0:r.savedState)&&void 0!==i?i:e.HEDERAS_CLIENT_SAVED_STATE)&&void 0!==I?I:null;if(!this.clientTypes.isKnown(G))throw new Error("Only 'hedera' client type is currently supported. This is also the default value if not specified.");return{controller:{type:m,default:{operatorKey:b}},hedera:{operatorId:null!==(a=null===(d=t.client)||void 0===d||null===(u=d.hedera)||void 0===u?void 0:u.operatorId)&&void 0!==a?a:e.HEDERAS_OPERATOR_ID,operatorKey:null!==(C=null===(y=t.client)||void 0===y||null===(S=y.hedera)||void 0===S?void 0:S.operatorKey)&&void 0!==C?C:e.HEDERAS_OPERATOR_KEY},type:G,savedState:x}}},{key:"parseSessionDefaultsFrom",value:function(t,e){var Q,B,s,F,U,n=function(Q){return e["HEDERAS_".concat(t.toUpperCase(),"_DEFAULT_").concat(Q.toUpperCase())]||e["HEDERAS_DEFAULT_".concat(Q.toUpperCase())]};return{contractCreationGas:parseInt(null!==(Q=n("contract_creation_gas"))&&void 0!==Q?Q:"150000"),contractTransactionGas:parseInt(null!==(B=n("contract_transaction_gas"))&&void 0!==B?B:"169000"),emitConstructorLogs:"true"===(null!==(s=n("emit_constructor_logs"))&&void 0!==s?s:"true"),emitLiveContractReceipts:"true"===(null!==(F=n("emit_live_contracts_receipts"))&&void 0!==F?F:"false"),paymentForContractQuery:parseInt(null!==(U=n("payment_for_contract_query"))&&void 0!==U?U:"0")}}}]),t}(),TypeOfExecutionReturn;!function(t){t.Receipt="Receipt",t.Record="Record",t.Result="Result"}(TypeOfExecutionReturn||(TypeOfExecutionReturn={}));var SESSION_CONSTRUCTOR_GUARD={},TRANSACTION_ON_RECEIPT_EVENT_NAME="__TransactionOnReceiptAvailable_EventName__",ApiSession=function(){function t(e,Q){var B=Q.ctx,s=Q.client;if(_classCallCheck(this,t),e!==SESSION_CONSTRUCTOR_GUARD)throw new Error("API sessions can only be constructed through a SessionBuilder instance!");this.log=B.log,this.network=B.network,this.client=s,this.defaults=B.params.session.defaults,this.events=new events.exports.EventEmitter}var e,Q,B,s,F,U,n;return _createClass(t,[{key:"accountId",get:function(){return this.client.account.id}},{key:"publicKey",get:function(){return this.client.account.publicKey}},{key:"create",value:(n=_asyncToGenerator(regenerator.mark((function t(e){var Q;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return this.log.info("Creating a new Hedera ".concat(e.name)),t.next=3,e.createVia({session:this});case 3:return Q=t.sent,this.log.info("Successfully created ".concat(e.name," id ").concat(Q.id)),t.abrupt("return",Q);case 6:case"end":return t.stop()}}),t,this)}))),function(t){return n.apply(this,arguments)})},{key:"execute",value:(U=_asyncToGenerator(regenerator.mark((function t(e,Q){var B,s,F,U,n,c,o,g,l=arguments;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return s=l.length>2&&void 0!==l[2]&&l[2],F=e instanceof ContractCallQuery||e instanceof ContractExecuteTransaction,t.next=4,this.client.execute(e);case 4:if(o=t.sent,U=o,!(o instanceof TransactionResponse)){t.next=25;break}if(!this.canReceiptBeEmitted(s)&&Q!==TypeOfExecutionReturn.Receipt){t.next=12;break}return t.next=10,this.client.getReceipt(o);case 10:n=t.sent,this.canReceiptBeEmitted(s)&&this.events.emit(TRANSACTION_ON_RECEIPT_EVENT_NAME,{transaction:e,receipt:n});case 12:if(!(Q===TypeOfExecutionReturn.Record||F&&Q===TypeOfExecutionReturn.Result)){t.next=23;break}if(n){t.next=17;break}return t.next=16,this.client.getReceipt(o);case 16:n=t.sent;case 17:return g=(new TransactionRecordQuery).setTransactionId(o.transactionId),t.next=20,this.client.execute(g);case 20:c=t.sent,this.canReceiptBeEmitted(s)&&this.events.emit(TRANSACTION_ON_RECEIPT_EVENT_NAME,{transaction:g,receipt:c.receipt}),U=c.contractFunctionResult;case 23:t.next=25;break;case 25:return t.abrupt("return",(B={},_defineProperty(B,TypeOfExecutionReturn.Record,c),_defineProperty(B,TypeOfExecutionReturn.Receipt,n),_defineProperty(B,TypeOfExecutionReturn.Result,U),B)[Q]);case 26:case"end":return t.stop()}}),t,this)}))),function(t,e){return U.apply(this,arguments)})},{key:"getSolidityAddress",value:function(){return this.accountId.toSolidityAddress()}},{key:"getLiveContract",value:(F=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:Q=e.id,B=e.abi,s=void 0===B?[]:B,t.prev=1,F=Q instanceof ContractId?Q:ContractId.fromString(Q),t.next=8;break;case 5:throw t.prev=5,t.t0=t.catch(1),new Error("Please provide a valid Hedera contract id in order try to lock onto an already-deployed contract.");case 8:return t.abrupt("return",new LiveContract({session:this,id:F,cInterface:s instanceof Interface?s:new Interface(s)}));case 9:case"end":return t.stop()}}),t,this,[[1,5]])}))),function(t){return F.apply(this,arguments)})},{key:"getLiveJson",value:(s=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F,U;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:Q=e.id,t.prev=1,B=Q instanceof FileId?Q:FileId.fromString(Q),t.next=8;break;case 5:throw t.prev=5,t.t0=t.catch(1),new Error("Please provide a valid Hedera file id in order try to lock onto an already-deployed Json object.");case 8:return t.next=10,(new FileContentsQuery).setFileId(B);case 10:return s=t.sent,t.next=13,this.execute(s,TypeOfExecutionReturn.Result,!1);case 13:return F=t.sent,U=new TextDecoder("utf8").decode(F),t.abrupt("return",new LiveJson({session:this,id:B,data:JSON.parse(U)}));case 16:case"end":return t.stop()}}),t,this,[[1,5]])}))),function(t){return s.apply(this,arguments)})},{key:"subscribeToReceiptsWith",value:function(t){return new Subscription(this.events,TRANSACTION_ON_RECEIPT_EVENT_NAME,t)}},{key:"save",value:function(){return this.client.save()}},{key:"upload",value:(B=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F,U,n=arguments;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e instanceof BasicUploadableEntity!=0){t.next=8;break}if(!Json.isInfoAcceptable(e)){t.next=5;break}Q=new Json(e),t.next=6;break;case 5:throw new Error("Can only upload UploadableFile-s or Json-file acceptable content.");case 6:t.next=9;break;case 8:Q=e;case 9:for(this.log.info("Uploading a new ".concat(Q.nameOfUpload," to Hedera File Service (HFS).")),B=n.length,s=new Array(B>1?B-1:0),F=1;F<B;F++)s[F-1]=n[F];return t.next=13,Q.uploadTo({session:this,args:s});case 13:return U=t.sent,this.log.info("Successfully created a ".concat(Q.nameOfUpload," id ").concat(U.id,".")),t.abrupt("return",U);case 16:case"end":return t.stop()}}),t,this)}))),function(t){return B.apply(this,arguments)})},{key:"canReceiptBeEmitted",value:function(t){return t&&0!==this.events.listenerCount(TRANSACTION_ON_RECEIPT_EVENT_NAME)}}],[{key:"default",value:(Q=_asyncToGenerator(regenerator.mark((function e(){var Q,B,s,F=arguments;return regenerator.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return Q=F.length>0&&void 0!==F[0]?F[0]:{},B=F.length>1&&void 0!==F[1]?F[1]:".env",s=new StratoContext("string"==typeof Q?{params:{},path:Q}:{params:Q,path:B}),e.abrupt("return",t.buildFrom(s));case 5:case"end":return e.stop()}}),e)}))),function(){return Q.apply(this,arguments)})},{key:"buildFrom",value:(e=_asyncToGenerator(regenerator.mark((function e(Q){var B,s,F;return regenerator.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Q.getClient();case 2:return B=e.sent,s=B.client,F=B.controller,e.abrupt("return",{controller:F,session:new t(SESSION_CONSTRUCTOR_GUARD,{client:s,ctx:Q})});case 6:case"end":return e.stop()}}),e)}))),function(t){return e.apply(this,arguments)})}]),t}();function _createSuper$5(t){var e=_isNativeReflectConstruct$5();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$5(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}var CompileIssues=function(t){_inherits(Q,_wrapNativeSuper(Error));var e=_createSuper$5(Q);function Q(t){var B;return _classCallCheck(this,Q),(B=e.call(this,"There are issues with the contract code:\n".concat(Q._listOfSimpleIssueMessagesFor(t).join("\n")))).issues=t,B}return _createClass(Q,null,[{key:"tryThrowingIfErrorsIn",value:function(t){var e=t.compileResult,B=void 0===e?null:e,s=t.ignoreWarnings,F=void 0===s||s;if(null!=B&&Array.isArray(B.errors)){var U=B.errors.filter((function(t){return F&&"Warning"!==t.type||!F}));if(0!=U.length)throw new Q(U)}}},{key:"_listOfSimpleIssueMessagesFor",value:function(t){return t.map((function(t){return"[ ".concat(t.sourceLocation.start,":").concat(t.sourceLocation.end," ] ").concat(t.message)}))}}]),Q}(),WorkerClass=null;try{var WorkerThreads="undefined"!=typeof module&&"function"==typeof module.require&&module.require("worker_threads")||"function"==typeof __non_webpack_require__&&__non_webpack_require__("worker_threads")||"function"==typeof require&&require("worker_threads");WorkerClass=WorkerThreads.Worker}catch(t){}function decodeBase64$1(t,e){return Buffer.from(t,"base64").toString(e?"utf16":"utf8")}function createBase64WorkerFactory$2(t,e,Q){var B=void 0===e?null:e,s=decodeBase64$1(t,void 0!==Q&&Q),F=s.indexOf("\n",10)+1,U=s.substring(F)+(B?"//# sourceMappingURL="+B:"");return function(t){return new WorkerClass(U,Object.assign({},t,{eval:!0}))}}function decodeBase64(t,e){var Q=atob(t);if(e){for(var B=new Uint8Array(Q.length),s=0,F=Q.length;s<F;++s)B[s]=Q.charCodeAt(s);return String.fromCharCode.apply(null,new Uint16Array(B.buffer))}return Q}function createURL(t,e,Q){var B=void 0===e?null:e,s=decodeBase64(t,void 0!==Q&&Q),F=s.indexOf("\n",10)+1,U=s.substring(F)+(B?"//# sourceMappingURL="+B:""),n=new Blob([U],{type:"application/javascript"});return URL.createObjectURL(n)}function createBase64WorkerFactory$1(t,e,Q){var B;return function(s){return B=B||createURL(t,e,Q),new Worker(B,s)}}var kIsNodeJS="[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0);function isNodeJS(){return kIsNodeJS}function createBase64WorkerFactory(t,e,Q){return isNodeJS()?createBase64WorkerFactory$2(t,e,Q):createBase64WorkerFactory$1(t,e,Q)}var WorkerFactory=createBase64WorkerFactory("","data:application/json;charset=utf-8;base64,",!1),ContractsInFileStorage={"./counter.sol":"\n    // SPDX-License-Identifier: MIT\n    pragma solidity ^0.8.9;\n    \n    contract Counter {\n        uint public count;\n    \n        // Function to get the current count\n        function get() public view returns (uint) {\n            return count;\n        }\n    \n        // Function to increment count by 1\n        function inc() public {\n            count += 1;\n        }\n    \n        // Function to decrement count by 1\n        function dec() public {\n            count -= 1;\n        }\n    }","./events.sol":'\n    // SPDX-License-Identifier: MIT\n    pragma solidity ^0.8.9;\n    \n    contract Event {\n        // Event declaration\n        // Up to 3 parameters can be indexed.\n        // Indexed parameters helps you filter the logs by the indexed parameter\n        event Log(address indexed sender, string message);\n        event AnotherLog();\n    \n        function test() public {\n            emit Log(msg.sender, "Hello World!");\n            emit Log(msg.sender, "Hello EVM!");\n            emit AnotherLog();\n        }\n    }',"./hello_world.sol":'\n    // SPDX-License-Identifier: MIT\n    pragma solidity ^0.8.9;\n\n    contract HelloWorld {\n      string public greet = "Hello World!";\n    }',"./increment.sol":"\n    // SPDX-License-Identifier: MIT\n    pragma solidity ^0.8.9;\n\n    contract Incrementer {\n      uint public count;\n\n      function get() public view returns (uint) {\n        return count;\n      }\n\n      function inc() public {\n        count += 1;\n      }\n    }","./state-variables.sol":"\n    // SPDX-License-Identifier: MIT\n    pragma solidity ^0.8.9;\n    \n    contract SimpleStorage {\n        // State variable to store a number\n        uint public num;\n    \n        // You need to send a transaction to write to a state variable.\n        function set(uint _num) public {\n            num = _num;\n        }\n    \n        // You can read from a state variable without sending a transaction.\n        function get() public view returns (uint) {\n            return num;\n        }\n    }"};const VIRTUAL_SOURCE_CONTRACT_FILE_NAME="__contract__.sol";let compilerWorker=null,hasCompilerLoaded=!1;function triggerCompile(t){const e={language:"Solidity",settings:{metadata:{bytecodeHash:"ipfs"},outputSelection:{"*":{"*":["*"]}}},sources:{[VIRTUAL_SOURCE_CONTRACT_FILE_NAME]:{content:t}}};if(!compilerWorker)throw new Error("First initialize the compile web-worker.");compilerWorker.postMessage({payload:JSON.stringify(e),type:"compile"})}class SolidityCompiler{static compile({code:t,path:e}){if(!window.Worker)throw new Error("Your browser does not support WebWorkers therefore Contract compilation is not available.");if(void 0!==e&&void 0!==ContractsInFileStorage[e])t=ContractsInFileStorage[e];else if(!t||void 0!==e)throw new Error("Only direct code compilation is fully supported by the browser at this point. Path loading is limited only to the scope of the examples present in this documentation.");return compilerWorker?triggerCompile(t):compilerWorker=new WorkerFactory,new Promise(((e,Q)=>{compilerWorker.onmessage=function({data:Q}){if("compile_result"===Q.type)e(Q.payload);else{if("loaded"===Q.type||hasCompilerLoaded)return hasCompilerLoaded=!0,void triggerCompile(t);console.log("Unhandled message received from web-worker:",Q)}},compilerWorker.onerror=function(t){Q(t)}}))}}function ownKeys$1(t,e){var Q=Object.keys(t);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(t);e&&(B=B.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),Q.push.apply(Q,B)}return Q}function _objectSpread$1(t){for(var e=1;e<arguments.length;e++){var Q=null!=arguments[e]?arguments[e]:{};e%2?ownKeys$1(Object(Q),!0).forEach((function(e){_defineProperty(t,e,Q[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(Q)):ownKeys$1(Object(Q)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(Q,e))}))}return t}function _createSuper$4(t){var e=_isNativeReflectConstruct$4();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$4(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}var Contract=function(t){_inherits(n,BasicUploadableEntity);var e,Q,B,s,F,U=_createSuper$4(n);function n(t){var e,Q=t.name,B=t.abi,s=t.byteCode;if(_classCallCheck(this,n),!Q)throw new Error("Please provide a name for the Contract instance.");if(!B)throw new Error("Please provide a, valid, EthersProject-compatible, ABI definition for the Contract instance.");if(!s||!/^[0-9a-f]+$/.test(s))throw new Error("Please provide the valid formatted byte-code definition for the Contract in order to instantiate it.");return(e=U.call(this,"".concat(Q,"-Contract"))).name=Q,e.byteCode=s,e.interface=new Interface(B),e}return _createClass(n,[{key:"equals",value:function(t){return t instanceof n!=!1&&this.byteCode===t.byteCode}},{key:"serialize",value:function(){return JSON.stringify({name:this.name,byteCode:this.byteCode,abi:this.interface.format()})}},{key:"getContent",value:(F=_asyncToGenerator(regenerator.mark((function t(){return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",this.byteCode);case 1:case"end":return t.stop()}}),t,this)}))),function(){return F.apply(this,arguments)})},{key:"onFileUploaded",value:(s=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F,U,n,c,o;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return Q=e.session,B=e.receipt,s=e.args,F=void 0===s?[]:s,t.next=3,this._getContractCreateOptionsFor({session:Q,receipt:B,args:F});case 3:return U=t.sent,n=U.createContractOptions,c=U.emitConstructorLogs,o=new ContractCreateTransaction(n),t.next=9,LiveContract.newFollowingUpload({session:Q,contract:this,emitConstructorLogs:c,transaction:o});case 9:return t.abrupt("return",t.sent);case 10:case"end":return t.stop()}}),t,this)}))),function(t){return s.apply(this,arguments)})},{key:"_getContractCreateOptionsFor",value:(B=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F,U,n,c,o,g;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return Q=e.session,B=e.receipt,s=e.args,F=void 0===s?[]:s,U=B.fileId,n=this.interface.deploy,c={},o=Q.defaults.emitConstructorLogs,F.length>0&&0!==Object.keys(F[0]).length&&"_contract"===Object.keys(F[0])[0]&&(g=F[0]._contract,o=void 0!==g.emitConstructorLogs?g.emitConstructorLogs:o,delete g.emitConstructorLogs,c=g,F=F.slice(1)),t.t0=o,t.t1=Object,t.t2={},t.t3=_objectSpread$1,t.t4=Q.publicKey,t.t5=U,t.next=14,ContractFunctionParameters.newFor(n,F);case 14:return t.t6=t.sent,t.t7=Q.defaults.contractCreationGas,t.t8={adminKey:t.t4,bytecodeFileId:t.t5,constructorParameters:t.t6,gas:t.t7},t.t9=c,t.t10=(0,t.t3)(t.t8,t.t9),t.t11=t.t1.assign.call(t.t1,t.t2,t.t10),t.abrupt("return",{emitConstructorLogs:t.t0,createContractOptions:t.t11});case 21:case"end":return t.stop()}}),t,this)}))),function(t){return B.apply(this,arguments)})}],[{key:"newFrom",value:(Q=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F,U,c,o,g,l;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(Q=e.code,B=e.index,s=void 0===B?0:B,F=e.ignoreWarnings,U=void 0!==F&&F,c=e.name,o=e.path,Q||o){t.next=3;break}throw new Error("In order to continue, either provide the direct solidity code or a file path where the top-level code resides.");case 3:if(c||!(s||Number.isInteger(s)&&s<0)){t.next=5;break}throw new Error("Please provide either a non-negative index or the actual name of the contract to reference the Contract instance with.");case 5:return t.next=7,n.allFrom({code:Q,ignoreWarnings:U,path:o});case 7:if(g=t.sent,!c){t.next=15;break}if(l=g.find((function(t){return t.name===c}))){t.next=12;break}throw new Error("There is no such contract named '".concat(c,"' present in the referenced code."));case 12:return t.abrupt("return",l);case 15:if(!(s>=g.length)){t.next=17;break}throw new Error("Index out of range. Your requested contract-id ".concat(s," is not in range of the ").concat(g.length," contracts present in the given code."));case 17:return t.abrupt("return",g[s]);case 18:case"end":return t.stop()}}),t)}))),function(t){return Q.apply(this,arguments)})},{key:"allFrom",value:(e=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F,U,c,o,g,l,I,i,r;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(Q=e.code,B=e.ignoreWarnings,s=void 0!==B&&B,F=e.path,Q||F){t.next=3;break}throw new Error("Can only retrieve contracts if either the direct solidity code is provided or a file path where that top-level code resides.");case 3:return t.next=5,SolidityCompiler.compile({code:Q,path:F});case 5:for(U=t.sent,c=n._tryParsingCompileResultFrom({rawCompileResult:U,ignoreWarnings:s}),o=c.contracts[VIRTUAL_SOURCE_CONTRACT_FILE_NAME],g=[],l=0,I=Object.keys(o);l<I.length;l++)i=I[l],r=o[i],g.push(new n({name:i,abi:r.abi,byteCode:r.evm.bytecode.object}));return t.abrupt("return",g);case 11:case"end":return t.stop()}}),t)}))),function(t){return e.apply(this,arguments)})},{key:"deserialize",value:function(t){var e={};try{e=JSON.parse(t)}catch(t){throw new Error("Please provide something valid to be deserialized.")}return new n(e)}},{key:"_tryParsingCompileResultFrom",value:function(t){var e=t.rawCompileResult,Q=t.ignoreWarnings,B=JSON.parse(e);return CompileIssues.tryThrowingIfErrorsIn({compileResult:B,ignoreWarnings:Q}),B}}]),n}(),BasicCreatableEntity=_createClass((function t(e){_classCallCheck(this,t),this.name=e}));function _createSuper$3(t){var e=_isNativeReflectConstruct$3();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$3(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}var LiveAccount=function(t){_inherits(Q,LiveEntity);var e=_createSuper$3(Q);function Q(t){var B,s=t.session,F=t.id,U=t.publicKey;return _classCallCheck(this,Q),(B=e.call(this,s,F)).publicKey=U,B}return _createClass(Q,[{key:"getSolidityAddress",value:function(){return this.id.toSolidityAddress()}},{key:"getLiveEntityInfo",value:function(){var t=(new AccountInfoQuery).setAccountId(this.id);return this.session.execute(t,TypeOfExecutionReturn.Result,!1)}}]),Q}(),LiveAccountWithPrivateKey=function(t){_inherits(Q,LiveAccount);var e=_createSuper$3(Q);function Q(t){var B,s=t.session,F=t.id,U=t.publicKey,n=t.privateKey;return _classCallCheck(this,Q),(B=e.call(this,{id:F,publicKey:U,session:s})).privateKey=n,B}return _createClass(Q,[{key:"tryToSign",value:function(t){var e=this.privateKey.signTransaction(t);t.addSignature(this.publicKey,e)}}]),Q}(),KeyType;function _createSuper$2(t){var e=_isNativeReflectConstruct$2();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$2(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}!function(t){t[t.ECDSA=0]="ECDSA",t[t.ED25519=1]="ED25519",t[t.Unknown=2]="Unknown"}(KeyType||(KeyType={}));var Account=function(t){_inherits(s,BasicCreatableEntity);var e,Q,B=_createSuper$2(s);function s(){var t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{keyType:KeyType.ED25519};return _classCallCheck(this,s),(t=B.call(this,"Account")).info=e,t}return _createClass(s,[{key:"createVia",value:(Q=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F,U,n;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return Q=e.session,t.next=3,this.getKey(Q);case 3:return B=t.sent,s=Object.assign({},this.info,{key:B}),F=new AccountCreateTransaction(s),t.next=8,Q.execute(F,TypeOfExecutionReturn.Receipt,!0);case 8:return U=t.sent,n=U.accountId,t.abrupt("return",new LiveAccountWithPrivateKey({id:n,privateKey:B,publicKey:B.publicKey,session:Q}));case 11:case"end":return t.stop()}}),t,this)}))),function(t){return Q.apply(this,arguments)})},{key:"getKey",value:(e=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this._key){t.next=19;break}if(this.info.key){t.next=18;break}if(Q=this.info.keyType,B=Q===KeyType.ED25519?KeyType[KeyType.ED25519]:KeyType[KeyType.ECDSA],Q!==KeyType.ED25519){t.next=10;break}return t.next=7,PrivateKey.generateED25519Async();case 7:t.t0=t.sent,t.next=13;break;case 10:return t.next=12,PrivateKey.generateECDSAAsync();case 12:t.t0=t.sent;case 13:s=t.t0,e.log.debug("A new '".concat(B,"' key has been created: ").concat(s.toStringDer()," . Copy it since this is only time you'll see it.")),this._key=s,t.next=19;break;case 18:this._key=this.info.key;case 19:return t.abrupt("return",this._key);case 20:case"end":return t.stop()}}),t,this)}))),function(t){return e.apply(this,arguments)})}]),s}();function _createSuper$1(t){var e=_isNativeReflectConstruct$1();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct$1(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}var LiveToken=function(t){_inherits(s,LiveEntity);var e,Q,B=_createSuper$1(s);function s(t){var e=t.session,Q=t.id;return _classCallCheck(this,s),B.call(this,e,Q)}return _createClass(s,[{key:"getSolidityAddress",value:function(){return this.id.toSolidityAddress()}},{key:"assignSupplyControlTo",value:(Q=_asyncToGenerator(regenerator.mark((function t(e){var Q;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return Q=(new TokenUpdateTransaction).setTokenId(this.id).setSupplyKey(e instanceof Key?e:e.id),t.next=3,this.session.execute(Q,TypeOfExecutionReturn.Receipt,!0);case 3:case"end":return t.stop()}}),t,this)}))),function(t){return Q.apply(this,arguments)})},{key:"getLiveEntityInfo",value:(e=_asyncToGenerator(regenerator.mark((function t(){var e;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=(new TokenInfoQuery).setTokenId(this.id),t.abrupt("return",this.session.execute(e,TypeOfExecutionReturn.Result,!1));case 2:case"end":return t.stop()}}),t,this)}))),function(){return e.apply(this,arguments)})}]),s}();function ownKeys(t,e){var Q=Object.keys(t);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(t);e&&(B=B.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),Q.push.apply(Q,B)}return Q}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var Q=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(Q),!0).forEach((function(e){_defineProperty(t,e,Q[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(Q)):ownKeys(Object(Q)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(Q,e))}))}return t}function _createSuper(t){var e=_isNativeReflectConstruct();return function(){var Q,B=_getPrototypeOf(t);if(e){var s=_getPrototypeOf(this).constructor;Q=Reflect.construct(B,arguments,s)}else Q=B.apply(this,arguments);return _possibleConstructorReturn(this,Q)}}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}var TokenType=function(){function t(e){_classCallCheck(this,t),this.hTokenType=e}return _createClass(t,[{key:"equals",value:function(e){return e instanceof t?this.hTokenType._code===e.hTokenType._code:e instanceof TokenType$1&&this.hTokenType._code===e._code}}]),t}(),TokenTypes={FungibleCommon:new TokenType(TokenType$1.FungibleCommon),NonFungibleUnique:new TokenType(TokenType$1.NonFungibleUnique)},Token=function(t){_inherits(B,BasicCreatableEntity);var e,Q=_createSuper(B);function B(t){var e;return _classCallCheck(this,B),(e=Q.call(this,"Token")).info=t,e}return _createClass(B,[{key:"createVia",value:(e=_asyncToGenerator(regenerator.mark((function t(e){var Q,B,s,F,U,n,c,o,g,l,I,i,r,a,d,u,C,y,S,b,m,G,x,L,h,A;return regenerator.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return x=e.session,L=_objectSpread({adminKey:null!==(null===(Q=this.info.keys)||void 0===Q?void 0:Q.admin)?null!==(B=null===(s=this.info.keys)||void 0===s?void 0:s.admin)&&void 0!==B?B:x.publicKey:void 0,feeScheduleKey:null!==(null===(F=this.info.keys)||void 0===F?void 0:F.feeSchedule)?null!==(U=null===(n=this.info.keys)||void 0===n?void 0:n.feeSchedule)&&void 0!==U?U:x.publicKey:void 0,freezeKey:null!==(null===(c=this.info.keys)||void 0===c?void 0:c.freeze)?null!==(o=null===(g=this.info.keys)||void 0===g?void 0:g.freeze)&&void 0!==o?o:x.publicKey:void 0,kycKey:null!==(null===(l=this.info.keys)||void 0===l?void 0:l.kyc)?null!==(I=null===(i=this.info.keys)||void 0===i?void 0:i.kyc)&&void 0!==I?I:x.publicKey:void 0,pauseKey:null!==(null===(r=this.info.keys)||void 0===r?void 0:r.pause)?null!==(a=null===(d=this.info.keys)||void 0===d?void 0:d.pause)&&void 0!==a?a:x.publicKey:void 0,supplyKey:null!==(null===(u=this.info.keys)||void 0===u?void 0:u.supply)?null!==(C=null===(y=this.info.keys)||void 0===y?void 0:y.supply)&&void 0!==C?C:x.publicKey:void 0,tokenName:this.info.name,tokenSymbol:this.info.symbol,tokenType:null!==(S=this.info.type.hTokenType)&&void 0!==S?S:TokenType$1.FungibleCommon,treasuryAccountId:x.accountId,wipeKey:null!==(null===(b=this.info.keys)||void 0===b?void 0:b.wipe)?null!==(m=null===(G=this.info.keys)||void 0===G?void 0:G.wipe)&&void 0!==m?m:x.publicKey:void 0},this.info),h=new TokenCreateTransaction(L),t.next=5,x.execute(h,TypeOfExecutionReturn.Receipt,!0);case 5:return A=t.sent,t.abrupt("return",new LiveToken({id:A.tokenId,session:x}));case 7:case"end":return t.stop()}}),t,this)}))),function(t){return e.apply(this,arguments)})}]),B}();export{AVAILABLE_NETWORK_NAMES,Account,ApiSession,Contract,HEDERA_CUSTOM_NET_NAME,HederaNetwork,Json,KeyType,LiveContract,LiveContractWithLogs,LiveJson,Token,TokenTypes,TypeOfExecutionReturn};
//# sourceMappingURL=hedera-strato.js.map
